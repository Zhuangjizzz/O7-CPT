[

{
    "text": "Examine the spectra of both sampled and continuous-time signals in the block diagram systems depicted in Fig. 13.1, under the assumption that the continuous-time signal, $\\mathrm{x}_{\\mathrm{c}}(\\mathrm{t})$, is band-limited via an anti-aliasing filter (not illustrated). DSP, or Discrete-time signal processing, can be executed using entirely digital methods or discrete-time analog circuits, such as switched-capacitor filters. Fig. 13.2 presents some example time signals and their corresponding frequency spectra for this system. In this context, $\\mathbf{s}(\\mathrm{t})$ represents a periodic impulse train in time with a period T, where T is the reciprocal of the sampling frequency, $\\mathrm{f}_{\\mathrm{s}}$. The relationships for the signals in\n\nKey Point: Discrete-time signals can be processed either digitally, involving quantization in both time and amplitude, or through discrete-time analog circuits like switched-capacitor circuits, where the signal amplitude varies continuously.\n\nFigs. 13.1 and 13.2 are outlined as follows:\n\n1. $x_{s}(t)$ exhibits the same frequency spectrum as $x_{c}(t)$, but the baseband spectrum recurs at intervals of $f_{s}$ (provided no aliasing occurs, necessitating an anti-aliasing filter).\n2. $x(n)$ shares the same frequency spectrum as $x_{s}(t)$, with the sampling frequency normalized to 1.\n3. The frequency spectrum of $x_{s h}(t)$ corresponds to that of $x_{s}(t)$ multiplied by the $(\\sin x) / x$ response (effectively, multiplying $X_{s}(f)$ by this response aids in eliminating high-frequency images).\n\nThe rest of this chapter validates these spectral relationships and introduces additional fundamental concepts in discrete-time processing."
},
{
    "text": "Examine the spectra of both sampled and continuous-time signals depicted in the block diagram systems of Fig. 13.1, under the assumption that the continuous-time signal, $\\mathrm{x}_{\\mathrm{c}}(\\mathrm{t})$, is band-limited by an anti-aliasing filter (not depicted). DSP stands for Discrete-time signal processing, which can be executed via entirely digital methods or through discrete-time analog circuits, such as switched-capacitor filters. Illustrative time signals and their corresponding frequency spectra for this system are presented in Fig. 13.2. In this context, $\\mathbf{s}(\\mathrm{t})$ represents a periodic impulse train with a period T, where T is the reciprocal of the sampling frequency, $\\mathrm{f}_{\\mathrm{s}}$. The following relationships for the signals in\n\nKey Point: Discrete-time signals can be processed either digitally, involving quantization in both time and amplitude, or using discrete-time analog circuits like switched-capacitor circuits, where the signal amplitude varies continuously.\n\nFigs. 13.1 and 13.2 are outlined below:\n\n1. $x_{s}(t)$ possesses the same frequency spectrum as $x_{c}(t)$, but its baseband spectrum recurs every $f_{s}$ (provided that aliasing does not occur, necessitating an anti-aliasing filter).\n2. $x(n)$ shares the same frequency spectrum as $x_{s}(t)$, with the sampling frequency normalized to 1.\n3. The frequency spectrum of $x_{s h}(t)$ is equivalent to that of $x_{s}(t)$ multiplied by the $(\\sin x) / x$ response (effectively, multiplying $X_{s}(f)$ by this response aids in eliminating high-frequency images).\n\nThe rest of this chapter validates these spectral relationships and introduces additional fundamental concepts in discrete-time processing."
},
{
    "text": "Examine the spectra of both sampled and continuous-time signals within the block diagram systems depicted in Fig. 13.1, presupposing that the continuous-time signal, $\\mathrm{x}_{\\mathrm{c}}(\\mathrm{t})$, is constrained to a specific bandwidth via an anti-aliasing filter (not illustrated). DSP stands for Discrete-time signal processing, which can be executed through entirely digital means or via discrete-time analog circuits, such as switched-capacitor filters. Illustrative examples of time signals and their corresponding frequency spectra for this system are presented in Fig. 13.2. In this context, $\\mathbf{s}(\\mathrm{t})$ represents a periodic impulse train in the time domain with a period T, where T is equivalent to the reciprocal of the sampling frequency, $\\mathrm{f}_{\\mathrm{s}}$. The following relationships for the signals depicted in\n\nKey Point: Discrete-time signals can be processed either digitally, wherein they are quantized in both time and amplitude, or through discrete-time analog circuits like switched-capacitor circuits, where the signal amplitude remains continuously variable.\n\nFigs. 13.1 and 13.2 are outlined as:\n\n1. $x_{s}(t)$ exhibits the same frequency spectrum as $x_{c}(t)$, but its baseband spectrum recurs at intervals of $f_{s}$ (provided that aliasing does not occur, necessitating the use of an anti-aliasing filter).\n2. $x(n)$ shares the same frequency spectrum as $x_{s}(t)$, with the sampling frequency normalized to 1.\n3. The frequency spectrum of $x_{s h}(t)$ is identical to that of $x_{s}(t)$, multiplied by the $(\\sin x) / x$ response (effectively, multiplying $X_{s}(f)$ by this response aids in eliminating high-frequency images).\n\nThe rest of this chapter validates these spectral relationships and introduces additional fundamental concepts related to discrete-time signals."
},
{
    "text": "Examine the spectra of both sampled and continuous-time signals in the block diagram systems depicted in Fig. 13.1, under the assumption that the continuous-time signal, $\\mathrm{x}_{\\mathrm{c}}(\\mathrm{t})$, is band-limited via an anti-aliasing filter (not depicted). DSP stands for Discrete-time signal processing, which can be executed using entirely digital methods or discrete-time analog circuits, such as switched-capacitor filters. Illustrative time signals and their corresponding frequency spectra for this system are presented in Fig. 13.2. In this context, $\\mathbf{s}(\\mathrm{t})$ represents a periodic impulse train in time with a period T, where T is the reciprocal of the sampling frequency, $\\mathrm{f}_{\\mathrm{s}}$. The relationships for the signals in\n\nKey Point: Discrete-time signals can be processed either digitally, wherein they are quantized in both time and amplitude, or via discrete-time analog circuits like switched-capacitor circuits, where the signal amplitude varies continuously.\n\nFigs. 13.1 and 13.2 are outlined as follows:\n\n1. $x_{s}(t)$ possesses the same frequency spectrum as $x_{c}(t)$, but the baseband spectrum recurs every $f_{s}$ (given that no aliasing takes place, necessitating an anti-aliasing filter).\n2. $x(n)$ shares the same frequency spectrum as $x_{s}(t)$, with the sampling frequency normalized to 1.\n3. The frequency spectrum of $x_{s h}(t)$ is equivalent to that of $x_{s}(t)$ multiplied by the $(\\sin x) / x$ response (essentially, multiplying $X_{s}(f)$ by this response aids in eliminating high-frequency images).\n\nThe rest of this chapter validates these spectral relationships and introduces additional fundamental discrete-time concepts."
},
{
    "text": "Examine the spectra of both sampled and continuous-time signals within the block diagram systems illustrated in Fig. 13.1, under the assumption that the continuous-time signal, $\\mathrm{x}_{\\mathrm{c}}(\\mathrm{t})$, is band-limited via an anti-aliasing filter (not depicted). DSP stands for Discrete-time signal processing, which can be executed through entirely digital methods or via discrete-time analog circuits like switched-capacitor filters. Fig. 13.2 presents some example time signals and their corresponding frequency spectra for this system. In this context, $\\mathbf{s}(\\mathrm{t})$ represents a periodic impulse train with a period of T, where T is the reciprocal of the sampling frequency, $\\mathrm{f}_{\\mathrm{s}}$. The relationships for the signals in\n\nKey Point: Discrete-time signals can be processed either digitally, involving quantization in both time and amplitude, or using discrete-time analog circuits such as switched-capacitor circuits, where the signal amplitude varies continuously.\n\nFigs. 13.1 and 13.2 are outlined as follows:\n\n1. $x_{s}(t)$ possesses the same frequency spectrum as $x_{c}(t)$, but its baseband spectrum recurs at intervals of $f_{s}$ (provided that aliasing does not occur, necessitating an anti-aliasing filter).\n2. $x(n)$ shares the same frequency spectrum as $x_{s}(t)$, with the sampling frequency normalized to 1.\n3. The frequency spectrum of $x_{s h}(t)$ is equivalent to that of $x_{s}(t)$ multiplied by the $(\\sin x) / x$ response (effectively, multiplying $X_{s}(f)$ by this response aids in eliminating high-frequency images).\n\nThe rest of this chapter validates these spectral relationships and introduces additional fundamental discrete-time concepts."
},
{
    "text": "Examine the spectra of both sampled and continuous-time signals within the block diagram systems illustrated in Fig. 13.1, under the assumption that the continuous-time signal, $\\mathrm{x}_{\\mathrm{c}}(\\mathrm{t})$, is band-limited via an anti-aliasing filter (not depicted). DSP stands for Discrete-time signal processing, which can be executed using entirely digital methods or discrete-time analog circuits, such as switched-capacitor filters. Fig. 13.2 presents some example time signals and their corresponding frequency spectra for this system. In this context, $\\mathbf{s}(\\mathrm{t})$ represents a periodic impulse train in time with a period T, where T is equivalent to the inverse of the sampling frequency, $\\mathrm{f}_{\\mathrm{s}}$. The relationships for the signals in\n\nKey Point: Discrete-time signals can be processed either digitally, involving quantization in both time and amplitude, or through discrete-time analog circuits like switched-capacitor circuits, where the signal amplitude remains continuously variable.\n\nFigs. 13.1 and 13.2 are outlined as follows:\n\n1. $x_{s}(t)$ exhibits the same frequency spectrum as $x_{c}(t)$, but the baseband spectrum recurs every $f_{s}$ (provided that no aliasing takes place, necessitating an anti-aliasing filter).\n2. $x(n)$ shares the same frequency spectrum as $x_{s}(t)$, with the sampling frequency normalized to 1.\n3. The frequency spectrum of $x_{s h}(t)$ is identical to that of $x_{s}(t)$ multiplied by the $(\\sin x) / x$ response (effectively, multiplying $X_{s}(f)$ by this response aids in eliminating high-frequency images).\n\nThe rest of this chapter validates these spectral relationships and introduces additional fundamental discrete-time concepts."
},
{
    "text": "Examine the spectra of both sampled and continuous-time signals within the block diagram systems illustrated in Fig. 13.1, presupposing that the continuous-time signal, $\\mathrm{x}_{\\mathrm{c}}(\\mathrm{t})$, is constrained to a specific bandwidth via an anti-aliasing filter (not depicted). DSP stands for Discrete-time signal processing, which can be executed either through entirely digital means or via discrete-time analog components like switched-capacitor filters. Examples of time signals and their corresponding frequency spectra for this setup are presented in Fig. 13.2. In this context, $\\mathbf{s}(\\mathrm{t})$ represents a periodic impulse train with a temporal period of T, where T is the reciprocal of the sampling frequency, $\\mathrm{f}_{\\mathrm{s}}$. The relationships among the signals in\n\nKey Point: Discrete-time signals can be processed either digitally, involving quantization in both time and amplitude, or through discrete-time analog circuits such as switched-capacitor circuits, where the signal amplitude varies continuously.\n\nFigs. 13.1 and 13.2 are outlined as follows:\n\n1. $x_{s}(t)$ exhibits the same frequency spectrum as $x_{c}(t)$, but its baseband spectrum recurs at intervals of $f_{s}$ (provided that aliasing is absent, necessitating the use of an anti-aliasing filter).\n2. $x(n)$ shares the same frequency spectrum as $x_{s}(t)$, with the sampling frequency normalized to 1.\n3. The frequency spectrum of $x_{s h}(t)$ is equivalent to that of $x_{s}(t)$ multiplied by the $(\\sin x) / x$ response (effectively, this multiplication of $X_{s}(f)$ aids in eliminating high-frequency images).\n\nThe rest of this chapter validates these spectral relationships and introduces additional fundamental concepts related to discrete-time signals."
},
{
    "text": "Examine the spectra of both sampled and continuous-time signals within the block diagram systems illustrated in Fig. 13.1, under the assumption that the continuous-time signal, $\\mathrm{x}_{\\mathrm{c}}(\\mathrm{t})$, is band-limited via an anti-aliasing filter (not depicted). DSP stands for Discrete-time signal processing, which can be executed using entirely digital methods or discrete-time analog circuits, such as switched-capacitor filters. Examples of time signals and their corresponding frequency spectra for this system are presented in Fig. 13.2. In this context, $\\mathbf{s}(\\mathrm{t})$ represents a periodic impulse train in time with a period T, where T is the reciprocal of the sampling frequency, $\\mathrm{f}_{\\mathrm{s}}$. Key relationships for the signals in\n\nKey Point: Discrete-time signals can be processed either digitally, involving quantization in both time and amplitude, or through discrete-time analog circuits like switched-capacitor circuits, where the signal amplitude varies continuously.\n\nFigs. 13.1 and 13.2 are outlined as follows:\n\n1. $x_{s}(t)$ exhibits the same frequency spectrum as $x_{c}(t)$, but the baseband spectrum recurs every $f_{s}$ (provided no aliasing takes place, necessitating an anti-aliasing filter).\n2. $x(n)$ shares the same frequency spectrum as $x_{s}(t)$, with the sampling frequency normalized to 1.\n3. The frequency spectrum of $x_{s h}(t)$ is equivalent to that of $x_{s}(t)$ multiplied by the $(\\sin x) / x$ response (effectively, multiplying $X_{s}(f)$ by this response aids in eliminating high-frequency images).\n\nThe rest of this chapter validates these spectral relationships and introduces additional fundamental concepts in discrete-time processing."
},
{
    "text": "Referring to the depicted sampled signal, $\\mathbf{x}_{\\mathrm{s}}(\\mathrm{t})$, in relation to the continuous-time signal, $\\mathrm{x}_{\\mathrm{c}}(\\mathrm{t})$, as seen in Fig. 13.3, it is important to recognize that $\\mathbf{x}_{\\mathrm{s}}(\\mathrm{t})$ is an abstract concept; it does not correspond to any specific physical realization, such as the one shown in Fig. 13.1(b). Nevertheless, it serves as an instrumental tool for comprehending and modeling practical discrete-time signals.\n\nRegarding\nThe system block diagram labeled \"(a)\" presents a conceptual representation of digital signal processing (DSP) applied to analog signals. It is composed of several key components and follows a specific flow of information:\n\n1. **Main Components:**\n   - **Multiplier (Mixer):** The continuous-time signal \\( x_c(t) \\) is combined with a sampling signal \\( s(t) \\), resulting in a sampled signal \\( x_s(t) \\).\n   - **Convert to Discrete-Time Sequence:** This block transforms the sampled continuous-time signal \\( x_s(t) \\) into a discrete-time sequence \\( x(n) = x_c(nT) \\).\n   - **DSP (Digital Signal Processor):** This component processes the discrete-time sequence \\( x(n) \\) to generate a processed discrete-time output \\( y(n) \\).\n   - **Convert to Impulse Train:** This block converts the processed discrete-time sequence \\( y(n) \\) back into a continuous-time impulse train \\( y_s(t) \\).\n   - **Hold:** This block maintains the impulse train \\( y_s(t) \\) to produce a piecewise constant signal \\( y_{sh}(t) \\).\n   - **Analog Low-Pass Filter:** The final block smooths the held signal \\( y_{sh}(t) \\) to reconstruct the continuous-time output signal \\( y_c(t) \\).\n\n2. **Flow of Information or Control:**\n   - The continuous-time input signal \\( x_c(t) \\) is initially sampled by being multiplied with \\( s(t) \\), yielding \\( x_s(t) \\).\n   - \\( x_s(t) \\) is subsequently transformed into a discrete-time sequence \\( x(n) \\), which is then fed into the DSP block.\n   - The DSP block outputs a processed sequence \\( y(n) \\), which is converted into an impulse train \\( y_s(t) \\).\n   - The impulse train \\( y_s(t) \\) is maintained to form \\( y_{sh}(t) \\), and ultimately, the low-pass filter outputs the continuous-time signal \\( y_c(t) \\).\n\n3. **Labels, Annotations, and Key Indicators:**\n   - \\( x_c(t) \\): Continuous-time input signal.\n   - \\( x_s(t) \\): Sampled signal post-multiplication.\n   - \\( x(n) = x_c(nT) \\): Discrete-time sequence.\n   - \\( y(n) \\): Output from DSP.\n   - \\( y_s(t) \\): Impulse train.\n   - \\( y_{sh}(t) \\): Held signal.\n   - \\( y_c(t) \\): Final continuous-time output signal.\n\n4. **Overall System Function:**\n   - The primary function of this system is to apply digital signal processing to an analog input signal. The analog signal \\( x_c(t) \\) is sampled, converted into a discrete sequence, processed digitally, and then transformed back into a continuous-time signal through a series of steps involving impulse train conversion, holding, and filtering. This sequence allows for the manipulation and enhancement of signals in the digital domain before their conversion back to analog form for practical applications."
},
{
    "text": "Consider the sampled signal, $\\mathbf{x}_{\\mathrm{s}}(\\mathrm{t})$, in relation to the continuous-time signal, $\\mathrm{x}_{\\mathrm{c}}(\\mathrm{t})$, as depicted in Fig. 13.3. Although the signal $\\mathrm{x}_{\\mathrm{s}}(\\mathrm{t})$ is hypothetical and does not manifest in actual physical realizations such as the one shown in Fig. 13.1(b), it serves as an instrumental tool for comprehending and modeling practical discrete-time signals.\n\nThe system block diagram labeled as \"(a)\" illustrates a conceptual model of digital signal processing (DSP) on analog signals. Here's a detailed breakdown of the diagram:\n\n1. **Main Components:**\n- **Multiplier (Mixer):** The signal \\( x_c(t) \\) is multiplied by a sampling signal \\( s(t) \\) to generate a sampled signal \\( x_s(t) \\).\n- **Convert to Discrete-Time Sequence:** This block transforms the sampled continuous-time signal \\( x_s(t) \\) into a discrete-time sequence \\( x(n) = x_c(nT) \\).\n- **DSP (Digital Signal Processor):** This block processes the discrete-time sequence \\( x(n) \\) to produce a processed discrete-time output \\( y(n) \\).\n- **Convert to Impulse Train:** Converts the processed discrete-time sequence \\( y(n) \\) back into a continuous-time impulse train \\( y_s(t) \\).\n- **Hold:** This block retains the impulse train \\( y_s(t) \\) to generate a piecewise constant signal \\( y_{sh}(t) \\).\n- **Analog Low-Pass Filter:** The final block smoothes the held signal \\( y_{sh}(t) \\) to reconstruct the continuous-time output signal \\( y_c(t) \\).\n\n2. **Flow of Information or Control:**\n- The continuous-time input signal \\( x_c(t) \\) is initially sampled by multiplying it with \\( s(t) \\), resulting in \\( x_s(t) \\).\n- \\( x_s(t) \\) is subsequently converted into a discrete-time sequence \\( x(n) \\), which is fed into the DSP block.\n- The DSP block outputs a processed sequence \\( y(n) \\), which is then converted into an impulse train \\( y_s(t) \\).\n- The impulse train \\( y_s(t) \\) is retained to form \\( y_{sh}(t) \\), and ultimately, the low-pass filter yields the continuous-time signal \\( y_c(t) \\).\n\n3. **Labels, Annotations, and Key Indicators:**\n- \\( x_c(t) \\): Continuous-time input signal.\n- \\( x_s(t) \\): Sampled signal after multiplication.\n- \\( x(n) = x_c(nT) \\): Discrete-time sequence.\n- \\( y(n) \\): Output from DSP.\n- \\( y_s(t) \\): Impulse train.\n- \\( y_{sh}(t) \\): Held signal.\n- \\( y_c(t) \\): Final continuous-time output signal.\n\n4. **Overall System Function:**\n- The primary function of this system is to perform digital signal processing on an analog input signal. The analog signal \\( x_c(t) \\) is sampled, converted to a discrete sequence, processed digitally, and then converted back to a continuous-time signal through a series of steps involving impulse train conversion, retention, and filtering. This configuration permits the manipulation and enhancement of signals in the digital domain before their conversion back to analog form for practical applications.\n\nThe system block diagram labeled \"(b)\" presents a typical physical implementation for digital signal processing (DSP) on analog signals. The process initiates with an analog continuous-time signal \\( x_c(t) \\).\n\n1. **Sample and Hold:** The initial block is the \"Sample and hold\" circuit. This component samples the continuous-time signal \\( x_c(t) \\) at discrete intervals and retains each sample value for a specific duration. The output of this block is \\( x_{sh}(t) \\), a sampled representation of the input signal that preserves the sample value constant between sampling points.\n\n2. **A/D Converter:** The output from the \"Sample and hold\" block is fed into an \"A/D converter\" (Analog-to-Digital Converter). This block converts the sampled analog signal \\( x_{sh}(t) \\) into a discrete-time digital sequence \\( x(n) \\). The digital sequence \\( x(n) \\) represents the sampled values of \\( x_c(nT) \\) at discrete time intervals \\( nT \\).\n\n3. **DSP:** The digital sequence \\( x(n) \\) is then processed by the \"DSP\" block. This block executes various digital signal processing operations, such as filtering, modulation, or other transformations, to generate a new digital sequence \\( y(n) \\).\n\n4. **D/A Converter with Hold:** The processed digital signal \\( y(n) \\) is transmitted to a \"D/A converter with hold\" (Digital-to-Analog Converter). This block converts the digital sequence back into an analog signal \\( y_{sh}(t) \\), applying a retention function to preserve the analog value between digital samples.\n\n5. **Analog Low-Pass Filter:** Finally, the analog signal \\( y_{sh}(t) \\) is input into an \"Analog low-pass filter.\" This block smoothens the signal, eliminating high-frequency components introduced during the sampling and conversion processes, resulting in the continuous-time output signal \\( y_c(t) \\).\n\nIn summary, this system transforms an analog input signal into a digital form for processing and subsequently back into an analog signal, suitable for diverse applications in communication and signal processing systems.\n\nFig. 13.1 illustrates the performance of DSP on analog signals. (a) represents a conceptual realization, and (b) denotes a typical physical realization.\n\nThe graph titled \"x_s(t)\" depicts a time-domain waveform portraying a sampled version of an analog signal, \\( x_c(t) \\). The graph combines a continuous-time signal and its sampled counterpart, represented as a series of vertical lines at discrete time intervals, \\( nT \\), where \\( T \\) is the sampling period.\n\nType of Graph and Function:\n- **Type:** Time-domain waveform\n- **Function:** Represents the sampled signal \\( x_s(t) \\) derived from the continuous-time signal \\( x_c(t) \\).\n\nAxes Labels and Units:\n- **Horizontal Axis (t):** Represents time, typically in seconds, although specific units are not indicated.\n- **Vertical Axis:** Represents amplitude, with specific units unlabelled.\n- **Scale:** Both axes utilize a linear scale.\n\nOverall Behavior and Trends:\n- The continuous-time signal \\( x_c(t) \\) is depicted as a smooth, sinusoidal curve.\n- The sampled signal \\( x_s(t) \\) is portrayed by a series of vertical lines (impulses) at discrete intervals \\( nT \\), where each impulse's height corresponds to the amplitude of the continuous signal at that specific time.\n- As \\( \\tau \\to 0 \\), the area under each pulse equals the value of \\( x_c(nT) \\).\n\nKey Features and Technical Details:\n- The continuous signal exhibits sinusoidal behavior, indicating periodicity.\n- The sampled signal \\( x_s(t) \\) captures the amplitude of \\( x_c(t) \\) at each sampling point, effectively discretizing the continuous waveform.\n- The relationship \\( x_s(nT) = \\frac{x_c(nT)}{\\tau} \\) is highlighted, demonstrating how the sampled values are scaled.\n\nAnnotations and Specific Data Points:\n- Annotations highlight the relationship between \\( x_s(t) \\) and \\( x_c(t) \\) through the scaling factor \\( \\tau \\).\n- The graph emphasizes the conversion from a continuous-time to a discrete-time signal, a fundamental aspect of digital signal processing.\n\nThe graph titled \"x_c(t)\" portrays a time-domain waveform and its corresponding frequency spectrum, focusing on the process of sampling and reconstruction of signals.\n\n1. **Type of Graph and Function:**\n- The left side of the diagram illustrates time-domain signals, including the continuous-time signal \\( x_c(t) \\), sampled signal \\( x_s(t) \\), discrete signal \\( x(n) \\), and the zero-order hold reconstruction signal \\( x_{sh}(t) \\).\n- The right side displays frequency-domain representations of these signals, showcasing their spectra.\n\n2. **Axes Labels and Units:**\n- **Time-Domain (Left):**\n- The horizontal axis is labeled \\( t \\) for continuous time and \\( n \\) for discrete time.\n- The vertical axis represents amplitude.\n- **Frequency-Domain (Right):**\n- The horizontal axis is labeled \\( f \\) or \\( \\omega \\) for frequency.\n- The vertical axis represents amplitude, with units of \\( A \\) or \\( \\frac{A}{T} \\).\n\n3. **Overall Behavior and Trends:**\n- **Time-Domain:**\n- \\( x_c(t) \\) is a continuous sinusoidal waveform.\n- \\( x_s(t) \\) consists of impulse samples derived from \\( x_c(t) \\), scaled by \\( \\tau \\).\n- \\( x(n) \\) is a discrete representation of the sampled signal, displaying values at discrete intervals.\n- \\( x_{sh}(t) \\) is a stepwise approximation of \\( x_c(t) \\), signifying zero-order hold reconstruction.\n- **Frequency-Domain:**\n- \\( X_c(f) \\) exhibits a single peak at \\( f_0 \\).\n- \\( X_s(f) \\) and \\( X(\\omega) \\) display periodic replicas of the spectrum at multiples of the sampling frequency \\( f_s \\).\n- \\( X_{sh}(f) \\) reveals a modified spectrum, indicating the effects of zero-order hold.\n\n4. **Key Features and Technical Details:**\n- **Time-Domain:**\n- The continuous waveform \\( x_c(t) \\) is smoothly oscillating.\n- The sampled signal \\( x_s(t) \\) is represented by vertical lines at regular intervals.\n- The discrete signal \\( x(n) \\) is indicated by dots at each sample point.\n- The reconstruction \\( x_{sh}(t) \\) is a piecewise constant function.\n- **Frequency-Domain:**\n- The spectrum \\( X_c(f) \\) has a single peak at \\( f_0 \\).\n- The spectra \\( X_s(f) \\) and \\( X(\\omega) \\) exhibit aliasing, with peaks at \\( f_s \\) and its multiples.\n- The spectrum \\( X_{sh}(f) \\) demonstrates attenuation at higher frequencies due to the zero-order hold.\n\n5. **Annotations and Specific Data Points:**\n- The time-domain graphs are annotated with the functions \\( \\tau x_s(t) \\) and \\( x_{sh}(t) \\) to indicate their respective processes.\n- The frequency-domain graphs highlight specific frequencies such as \\( f_0 \\), \\( f_s \\), and \\( 2f_s \\), emphasizing the effects of sampling and reconstruction on the signal's spectrum.\n\nThe graph labeled \"x(n)\" portrays a time-domain waveform representing a discrete-time signal. The x-axis is annotated with integer values indicating discrete time steps (n = 0, 1, 2, 3, etc.), while the y-axis represents the amplitude of the signal. The waveform is depicted as a series of vertical lines with dots at the top, connected by a dashed line that suggests the underlying continuous-time signal from which this discrete signal is sampled.\n\nAxes Labels and Units:\n- **X-axis:** Discrete time steps (n)\n- **Y-axis:** Amplitude (unitless, but typically normalized or scaled)\n\nOverall Behavior and Trends:\nThe graph exhibits a sinusoidal pattern, indicating that the discrete signal is sampled from a continuous sinusoidal waveform. The amplitude of the signal varies periodically, suggesting that the original continuous signal is a sinusoidal function. The sampling points (dots) are aligned with the peaks and troughs of the dashed sinusoidal line, illustrating the sampled nature of the signal.\n\nKey Features and Technical Details:\n- **Periodicity:** The signal demonstrates periodic behavior, consistent with the sinusoidal pattern of the underlying continuous signal.\n- **Sampling Points:** The signal is sampled at discrete intervals, as indicated by the dots and vertical lines at each integer time step.\n\nAnnotations and Specific Data Points:\n- **Discrete Time Steps:** The graph is annotated with time steps n = 0, 1, 2, 3, etc., showcasing the discrete nature of the signal.\n- **Dashed Line:** Represents the continuous-time sinusoidal waveform from which the discrete signal is sampled.\n\nThis graph is part of a larger system demonstrating the process of digital signal processing (DSP) on analog signals, where the continuous analog signal is sampled to form a discrete signal for digital processing.\n\nThe graph labeled \"X_c(f)\" depicts a frequency spectrum of the continuous-time signal \\( x_c(t) \\). This is a frequency-domain representation, where the horizontal axis represents frequency \\( f \\) in hertz, and the vertical axis represents amplitude, denoted as \\( A \\).\n\nType of Graph and Function:\nThis is a frequency spectrum graph, displaying the frequency components of a continuous-time signal.\n\nAxes Labels and Units:\n- **Horizontal Axis (Frequency \\( f \\))**: Measured in hertz (Hz).\n- **Vertical Axis (Amplitude \\( A \\))**: Represents the amplitude of the frequency components.\n\nOverall Behavior and Trends:\nThe graph exhibits a triangular-shaped peak centered at a fundamental frequency \\( f_0 \\). The spectrum is symmetrical around this frequency, indicating the presence of a single dominant frequency component in the signal. The amplitude of this component is \\( A \\).\n\nKey Features and Technical Details:\n- **Peak at \\( f_0 \\)**: There is a significant peak at the fundamental frequency \\( f_0 \\), representing the main frequency component of the signal.\n- **Symmetry**: The spectrum is symmetrical, suggesting that the signal is composed primarily of this single frequency and its harmonics.\n- **No Other Peaks**: There are no additional peaks displayed in this spectrum, indicating a lack of other significant frequency components within the analyzed range.\n\nAnnotations and Specific Data Points:\n- The peak is labeled with amplitude \\( A \\), emphasizing the strength of the signal at \\( f_0 \\).\n- The graph does not provide specific numerical values for \\( f_0 \\) or \\( A \\), but these are crucial for understanding the signal's characteristics.\n\nThis graph provides insight into the frequency content of the continuous-time signal \\( x_c(t) \\), highlighting its primary frequency component and amplitude without additional complexity from other frequencies.\n\nThe graph labeled \"X_s(f)\" represents a frequency spectrum of a sampled signal. It is a line plot on a frequency domain, where the horizontal axis is labeled as 'f' for frequency, and the vertical axis is labeled as 'A/T', indicating amplitude over time.\n\nType of Graph and Function:\nThis is a frequency spectrum diagram, typically used to illustrate the frequency components of a signal after sampling.\n\nAxes Labels and Units:\n- **Horizontal Axis (f):** Represents frequency, potentially in hertz (Hz).\n- **Vertical Axis (A/T):** Represents amplitude over time, indicating the strength of frequency components.\n\nOverall Behavior and Trends:\nThe graph exhibits a series of triangular peaks, indicating the presence of distinct frequency components. The primary peak is centered at the base frequency \\( f_0 \\), with additional peaks occurring at multiples of the sampling frequency \\( f_s \\) and \\( 2f_s \\). This pattern suggests that the signal has been sampled, and these peaks represent the spectral replicas that occur due to the sampling process.\n\nKey Features and Technical Details:\n- **Primary Peak at \\( f_0 \\):** The main frequency component of the original signal.\n- **Replicas at \\( f_s \\) and \\( 2f_s \\):** These additional peaks are typical in sampled signals, representing the aliasing effect where frequency components are mirrored around the sampling frequency.\n- **Amplitude:** The amplitude of the peaks is scaled by \\( A/T \\), indicating the amplitude of the frequency components relative to the sampling period.\n\nAnnotations and Specific Data Points:\n- **Markers at \\( f_0, f_s, 2f_s \\):** Indicate the locations of the significant frequency components and their replicas. These markers are critical for understanding the effects of sampling and potential aliasing in the signal processing context.\n\nThis graph is crucial for analyzing the effects of sampling on the frequency content of a signal, especially in digital signal processing applications. It highlights how original and aliased frequencies are distributed across the spectrum after sampling.\n\nThe graph labeled \"X(ω)\" is a frequency spectrum plot, typically used to represent the frequency content of a signal in the angular frequency domain. Here is a detailed description of the graph:\n\n1. **Type of Graph and Function:**\n- The graph is a frequency spectrum plot in the angular frequency domain, commonly used in signal processing to depict how signal energy is distributed across different frequencies.\n\n2. **Axes Labels and Units:**\n- The horizontal axis represents angular frequency (ω), measured in radians per second.\n- The vertical axis represents amplitude, typically normalized or scaled by a factor \\( \\frac{A}{T} \\), where \\( A \\) is the amplitude and \\( T \\) is the period.\n\n3. **Overall Behavior and Trends:**\n- The graph displays a series of triangular-shaped spectra centered around specific angular frequencies.\n- The main lobe is centered at \\( \\frac{2\\pi f_0}{f_s} \\) and extends to \\( 2\\pi \\), indicating the primary frequency content of the signal.\n- Repeated spectra are visible at multiples of \\( 2\\pi \\), such as \\( 4\\pi \\), reflecting the periodic nature of the frequency spectrum due to sampling.\n\n4. **Key Features and Technical Details:**\n- The main spectral lobe is centered at \\( \\frac{2\\pi f_0}{f_s} \\), which is a scaled representation of the original frequency \\( f_0 \\) in terms of the sampling frequency \\( f_s \\).\n- The amplitude of the spectral components is scaled by \\( \\frac{A}{T} \\), indicating a normalization based on the signal's amplitude and period.\n- The periodic repetition of the spectrum at intervals of \\( 2\\pi \\) is a characteristic of sampled signals, indicating aliasing effects.\n\n5. **Annotations and Specific Data Points:**\n- There are no specific annotations or markers, but critical points are the centers of the spectral lobes at \\( \\frac{2\\pi f_0}{f_s} \\), \\( 2\\pi \\), and \\( 4\\pi \\).\n- The graph visually emphasizes how sampling replicates the frequency spectrum in the angular frequency domain, a key concept in digital signal processing.\n\nThe graph labeled \"x_sh(t)\" portrays a time-domain waveform representing a sample-and-hold signal. This type of graph typically illustrates how a continuous-time signal is converted into a discrete-time signal for digital processing.\n\n1. **Type of Graph and Function:**\n- This is a time-domain waveform graph depicting a sample-and-hold process.\n\n2. **Axes Labels and Units:**\n- The horizontal axis represents time (t) and is likely in arbitrary units, as no specific unit is provided.\n- The vertical axis represents the amplitude of the signal.\n\n3. **Overall Behavior and Trends:**\n- The graph exhibits a stepped waveform, where each step corresponds to a sample taken from the continuous signal. The original continuous signal is shown as a dashed line, while the sampled signal is represented by a piecewise constant function.\n- The sampled signal retains a constant value between sampling points, creating a staircase-like appearance.\n\n4. **Key Features and Technical Details:**\n- Each step in the waveform represents the"
},
{
    "text": "Examine the sampled signal, $\\mathbf{x}_{\\mathrm{s}}(\\mathrm{t})$, associated with the continuous-time signal, $\\mathrm{x}_{\\mathrm{c}}(\\mathrm{t})$, as depicted in Fig. 13.3. The signal $\\mathrm{x}_{\\mathrm{s}}(\\mathrm{t})$ is theoretical and does not manifest in actual physical implementations, such as the one shown in Fig. 13.1(b). Nevertheless, it serves as an instrumental concept in comprehending and modeling practical discrete-time signals.\n\nIn the block diagram labeled \"(a)\" in Fig. 13.1, we see a conceptual representation of digital signal processing (DSP) applied to analog signals. The main components of this system are as follows:\n\n1. **Multiplier (Mixer):** The continuous-time signal $x_c(t)$ is multiplied by a sampling signal $s(t)$ to generate the sampled signal $x_s(t)$.\n2. **Convert to Discrete-Time Sequence:** This component transforms the sampled continuous-time signal $x_s(t)$ into a discrete-time sequence $x(n) = x_c(nT)$.\n3. **DSP (Digital Signal Processor):** This block processes the discrete-time sequence $x(n)$ to yield a processed discrete-time output $y(n)$.\n4. **Convert to Impulse Train:** This block converts the processed discrete-time sequence $y(n)$ back into a continuous-time impulse train $y_s(t)$.\n5. **Hold:** This block maintains the impulse train $y_s(t)$ to produce a piecewise constant signal $y_{sh}(t)$.\n6. **Analog Low-Pass Filter:** The final block smooths the held signal $y_{sh}(t)$ to reconstruct the continuous-time output signal $y_c(t)$.\n\nThe flow of information or control in this system is as follows:\n\n- The continuous-time input signal $x_c(t)$ is initially sampled by multiplying it with $s(t)$, resulting in $x_s(t)$.\n- $x_s(t)$ is then converted into a discrete-time sequence $x(n)$, which is fed into the DSP block.\n- The DSP block outputs a processed sequence $y(n)$, which is converted into an impulse train $y_s(t)$.\n- The impulse train $y_s(t)$ is maintained to form $y_{sh}(t)$, and ultimately, the low-pass filter outputs the continuous-time signal $y_c(t)$.\n\nThe labels, annotations, and key indicators in the diagram are as follows:\n\n- $x_c(t)$: Continuous-time input signal.\n- $x_s(t)$: Sampled signal after multiplication.\n- $x(n) = x_c(nT)$: Discrete-time sequence.\n- $y(n)$: Output from DSP.\n- $y_s(t)$: Impulse train.\n- $y_{sh}(t)$: Held signal.\n- $y_c(t)$: Final continuous-time output signal.\n\nThe overall system function is to perform digital signal processing on an analog input signal. The analog signal $x_c(t)$ is sampled, converted to a discrete sequence, processed digitally, and then converted back to a continuous-time signal through a series of steps involving impulse train conversion, holding, and filtering. This arrangement enables the manipulation and enhancement of signals in the digital domain before converting them back to analog form for practical applications.\n\nIn the block diagram labeled \"(b)\" in Fig. 13.1, we see a typical physical realization for performing digital signal processing (DSP) on analog signals. The process begins with an analog continuous-time signal $x_c(t)$.\n\n1. **Sample and Hold:** The first block is the \"Sample and hold\" circuit. This component samples the continuous-time signal $x_c(t)$ at discrete intervals and holds each sample value for a certain period. The output of this block is $x_{sh}(t)$, a sampled version of the input signal that maintains the sample value constant between sampling points.\n2. **A/D Converter:** The output from the \"Sample and hold\" block is fed into an \"A/D converter\" (Analog-to-Digital Converter). This block converts the sampled analog signal $x_{sh}(t)$ into a discrete-time digital sequence $x(n)$. The digital sequence $x(n)$ represents the sampled values of $x_c(nT)$ at discrete time intervals $nT$.\n3. **DSP:** The digital sequence $x(n)$ is then processed by the \"DSP\" block. This block performs various digital signal processing operations, such as filtering, modulation, or other transformations, to produce a new digital sequence $y(n)$.\n4. **D/A Converter with Hold:** The processed digital signal $y(n)$ is passed to a \"D/A converter with hold\" (Digital-to-Analog Converter). This block converts the digital sequence back into an analog signal $y_{sh}(t)$, applying a hold function to maintain the analog value between digital samples.\n5. **Analog Low-Pass Filter:** Finally, the analog signal $y_{sh}(t)$ is input into an \"Analog low-pass filter.\" This block smooths the signal, removing high-frequency components introduced during the sampling and conversion processes, resulting in the continuous-time output signal $y_c(t)$.\n\nOverall, this system converts an analog input signal into a digital form for processing and then back into an analog signal, suitable for various applications in communication and signal processing systems.\n\nFig. 13.1 illustrates the process of performing DSP on analog signals, showing both a conceptual realization (a) and a typical physical realization (b).\n\nIn the graph titled \"x_s(t)\", we see a time-domain waveform representing a sampled version of an analog signal, $x_c(t)$. The graph is a combination of a continuous-time signal and its sampled counterpart, depicted as a series of vertical lines at discrete time intervals, $nT$, where $T$ is the sampling period.\n\nThe graph labeled \"x_c(t)\" represents a time-domain waveform and its corresponding frequency spectrum, focusing on the process of sampling and reconstruction of signals.\n\nIn the graph labeled \"x(n)\", we see a time-domain waveform representing a discrete-time signal. The x-axis is labeled with integer values indicating discrete time steps (n = 0, 1, 2, 3, etc.), while the y-axis represents the amplitude of the signal. The waveform is depicted as a series of vertical lines with dots at the top, connected by a dashed line that suggests the underlying continuous-time signal from which this discrete signal is sampled.\n\nThe graph labeled \"X_c(f)\" depicts a frequency spectrum of the continuous-time signal $x_c(t)$. This is a frequency-domain representation, where the horizontal axis represents frequency $f$ in hertz, and the vertical axis represents amplitude, denoted as $A$.\n\nThe graph labeled \"X_s(f)\" represents a frequency spectrum of a sampled signal. It is a line plot on a frequency domain, where the horizontal axis is labeled as 'f' for frequency, and the vertical axis is labeled as 'A/T', indicating amplitude over time.\n\nThe graph labeled \"X(ω)\" is a frequency spectrum plot, typically used to represent the frequency content of a signal in the angular frequency domain.\n\nThe graph labeled \"x_sh(t)\" is a time-domain waveform representing a sample-and-hold signal. This type of graph typically illustrates how a continuous-time signal is converted into a discrete-time signal for digital processing.\n\nThe graph labeled \"X_sh(f)\" is a frequency-domain representation of a sampled signal, specifically focusing on the aliasing effects present in the frequency spectrum.\n\nFig. 13.2 shows some time signals and frequency spectra.\n\nCompared to $x_c(t)$, $x_s(t)$ has been scaled by $\\tau$ such that the area under the pulse at $nT$ equals the value of $x_c(nT)$. In other words, at $t=nT$, we have\n\n$$\nx_s(nT) = \\frac{x_c(nT)}{\\tau} \\tag{13.1}\n$$\n\nThe graph in Fig. 13.3 illustrates both sampled and continuous-time signals. It is a time-domain waveform plot, showing the relationship between the continuous signal $x_c(t)$ and the sampled signal $\\tau x_s(t)$.\n\nWe define $\\vartheta(t)$ to be the step function given by\n\n$$\n\\vartheta(t) \\equiv \\begin{cases}1 & (t \\geq 0)  \\tag{13.2}\\\\ 0 & (t<0)\\end{cases}\n$$\n\nThen $x_s(t)$ can be represented as a linear combination of a series of pulses, $x_{sn}(t)$, where $x_{sn}(t)$ is zero everywhere except for a single pulse at $nT$. The single-pulse signal, $x_{sn}(t)$, can be written as\n\n$$\nx_{sn}(t) = \\frac{x_c(nT)}{\\tau}[\\vartheta(t-nT) - \\vartheta(t-nT-\\tau)] \\tag{13.3}\n$$\n\nso that we can now write $x_s(t)$ as\n\n$$\nx_s(t) = \\sum_{n=-\\infty}^{\\infty} x_{sn}(t) \\tag{18.4}\n$$\n\nNote that these signals are defined for all time, so we can find the Laplace transform of $x_s(t)$ in terms of $x_c(t)$. Using the notation that $X_{s}(s)$ is the Laplace transform of $x_{s}(t)$, we find the Laplace transform $X_{sn}(s)$ for $x_{sn}(t)$ to be given by\n\n$$\nX_{sn}(s) = \\frac{1}{\\tau}\\left(\\frac{1-e^{-s\\tau}}{s}\\right) x_c(nT) e^{-snT} \\tag{13.5}\n$$\n\nSince $x_s(t)$ is merely a linear combination of $x_{sn}(t)$, we also have (for $\\tau \\neq 0$)\n\n$$\nX_{s}(s) = \\frac{1}{\\tau}\\left(\\frac{1-e^{-st}}{s}\\right) \\sum_{n=-\\infty}^{\\infty} x_c(nT) e^{-snT} \\tag{13.6}\n$$\n\nUsing the expansion $e^x = 1 + x + \\left(\\frac{x^2}{2}\\right)! + \\cdots$, when $\\tau \\rightarrow 0$, the term before the summation in (13.6) goes to unity. Therefore, in the limiting case as $\\tau \\rightarrow 0$, we have\n\n$$\nX_{s}(s) = \\sum_{n=-\\infty}^{\\infty} x_c(nT) e^{-snT} \\tag{13.7}\n$$"
},
{
    "text": "Examine the sampled signal, $\\mathbf{x}_{\\mathrm{s}}(\\mathrm{t})$, in relation to the continuous-time signal, $\\mathrm{x}_{\\mathrm{c}}(\\mathrm{t})$, as depicted in Fig. 13.3. The signal $\\mathrm{x}_{\\mathrm{s}}(\\mathrm{t})$ is theoretical and does not occur in actual physical realizations, such as the one shown in Fig. 13.1(b). Nevertheless, it serves as an instrumental concept for comprehending and modeling practical discrete-time signals.\n\nThe block diagram labeled \"(a)\" in the system represents a conceptual model of digital signal processing (DSP) applied to analog signals. Here's a detailed description of the diagram:\n\n1. **Main Components:**\n   - **Multiplier (Mixer):** The continuous-time signal \\( x_c(t) \\) is multiplied by a sampling signal \\( s(t) \\) to generate the sampled signal \\( x_s(t) \\).\n   - **Convert to Discrete-Time Sequence:** This component transforms the sampled continuous-time signal \\( x_s(t) \\) into a discrete-time sequence \\( x(n) = x_c(nT) \\).\n   - **DSP (Digital Signal Processor):** This component processes the discrete-time sequence \\( x(n) \\) to produce a processed discrete-time output \\( y(n) \\).\n   - **Convert to Impulse Train:** Converts step converts the processed discrete-time sequence \\( y(n) \\) back into a continuous-time impulse train \\( y_s(t) \\).\n   - **Hold:** This block holds the impulse train \\( y_s(t) \\) to generate a piecewise constant signal \\( y_{sh}(t) \\).\n   - **Analog Low-Pass Filter:** The final block smoothens the held signal \\( y_{sh}(t) \\) to reconstruct the continuous-time output signal \\( y_c(t) \\).\n\n2. **Flow of Information or Control:**\n   - The continuous-time input signal \\( x_c(t) \\) is initially sampled by multiplying it with \\( s(t) \\), resulting in \\( x_s(t) \\).\n   - \\( x_s(t) \\) is then transformed into a discrete-time sequence \\( x(n) \\), which is fed into the DSP block.\n   - The DSP block outputs a processed sequence \\( y(n) \\), which is converted into an impulse train \\( y_s(t) \\).\n   - The impulse train \\( y_s(t) \\) is held to form \\( y_{sh}(t) \\), and ultimately, the low-pass filter outputs the continuous-time signal \\( y_c(t) \\).\n\n3. **Labels, Annotations, and Key Indicators:**\n   - \\( x_c(t) \\): Continuous-time input signal.\n   - \\( x_s(t) \\): Sampled signal after multiplication.\n   - \\( x(n) = x_c(nT) \\): Discrete-time sequence.\n   - \\( y(n) \\): Output from DSP.\n   - \\( y_s(t) \\): Impulse train.\n   - \\( y_{sh}(t) \\): Held signal.\n   - \\( y_c(t) \\): Final continuous-time output signal.\n\n4. **Overall System Function:**\n   - The primary function of this system is to apply digital signal processing on an analog input signal. The analog signal \\( x_c(t) \\) is sampled, converted to a discrete sequence, processed digitally, and then converted back to a continuous-time signal through a series of steps involving impulse train conversion, holding, and filtering. This configuration\nThe block diagram labeled \"(a)\" in the system illustrates\ndep block diagram labeled \"(b)\" represents a standard physical implementation for executing digital signal processing (DSP) on analog signals. This process commates with an analog continuous-time signal \\( x_c(t) \\).\n\n1. **Sample and Hold:** The initial component is the \"Sample and hold\" circuit. This section captures the continuous-time signal \\( x_c(t) \\) at specific intervals and retains each sample value for a designated duration. The output of this component is \\( x_{sh}(t) \\), a sampled version of the input signal that keeps the sample value constant between sampling points.\n\n2. **A/D Converter:** The output from the \"Sample and hold\" component is fed into an \"A/D converter\" (Analog-to-Digital Converter). This component converts the sampled analog signal \\( x_{sh}(t) \\) into a discrete-time digital sequence \\( x(n) \\). The digital sequence \\( x(n) \\) represents the sampled values of \\( x_c(nT) \\) at discrete time intervals \\( nT \\).\n\n3. **DSP:** The digital sequence \\( x(n) \\) is then processed by the \"DSP\" block. This block carries out various digital signal processing operations, such as filtering, modulation, or other transformations, to produce a new digital sequence \\( y(n) \\).\n\n4. **D/A Converter with Hold:** The processed digital signal \\( y(n) \\) is transmitted to a \"D/A converter with hold\" (Digital-to-Analog Converter). This component converts the digital sequence back into an analog signal \\( y_{sh}(t) \\), implementing a hold function to preserve the analog value between digital samples.\n\n5. **Analog Low-Pass Filter:** Finally, the analog signal \\( y_{sh}(t) \\) is input into an \"Analog low-pass filter.\" This component smoothens the signal, eliminating high-frequency components introduced during the sampling and conversion processes, resulting in the continuous-time output signal \\( y_c(t) \\).\n\nOverall, this system transforms an analog input signal into a digital form for processing and then back into an analog signal, suitable for various applications in communication and signal processing systems."
},
{
    "text": "Refer to the sampled signal, $\\mathbf{x}_{\\mathrm{s}}(\\mathrm{t})$, associated with the continuous-time signal, $\\mathrm{x}_{\\mathrm{c}}(\\mathrm{t})$, as displayed in Fig. 13.3. The signal $\\mathrm{x}_{\\mathrm{s}}(\\mathrm{t})$ is theoretical; it doesn't occur in any practical physical realization, like the one shown in Fig. 13.1(b). Nevertheless, it serves as a valuable tool for comprehending and modeling practical discrete-time signals."
},
{
    "text": "Referring to Fig. 13.3, we examine the sampled signal $\\mathbf{x}_{\\mathrm{s}}(\\mathrm{t})$, which is conceptually connected to the continuous-time signal $\\mathrm{x}_{\\mathrm{c}}(\\mathrm{t})$. The signal $\\mathbf{x}_{\\mathrm{s}}(\\mathrm{t})$ is theoretical and does not appear in actual physical implementations, such as the one depicted\nThe provided text discusses\nThe provided text discusses the relationship between a sampled signal, $\\mathbf{x}_{\\mathrm{s}}(\\mathrm{t})$, and a continuous-time signal, $\\mathrm{x}_{\\mathrm{c}}(\\mathrm{t})$, as depicted in Fig. 13.3. It is noted that $\\mathbf{x}_{\\mathrm{s}}(\\mathrm{t})$ is an abstract concept and does not correspond to any physical realization, unlike the system shown in Fig. 13.1(b). Nonetheless this, the sampled\nThe provided text"
},
{
    "text": "The sampled signal, $\\mathbf{x}_{\\mathrm{s}}(\\mathrm{t})$, is conceptually linked to the continuous-time signal, $\\mathrm{x}_{\\mathrm{c}}(\\mathrm{t})$, as depicted in Fig. 13.3. It is important to note that $\\mathrm{x}_{\\mathrm{s}}(\\mathrm{t})$ is theoretical and not physically realized, unlike the setup in Fig. 13.1(b). Nevertheless, it serves as an instrumental model for comprehending and mimicking practical discrete-time signals.\n\nThe system block diagram labeled \"(a)\" in Fig. 13.1(a) visually represents a theoretical framework for executing digital signal processing (DSP) on analog signals. Here is a comprehensive breakdown of this diagram:\n\n1. **Main Components:**\n   - **Multiplier (Mixer):** The continuous-time signal \\( x_c(t) \\) is combined with a sampling signal \\( s(t) \\), yielding the sampled signal \\( x_s(t) \\).\n   - **Convert to Discrete-Time Sequence:** This module translates the sampled continuous-time signal \\( x_s(t) \\) into a discrete-time sequence \\( x(n) = x_c(nT) \\).\n   - **DSP (Digital Signal Processor):** This block manipulates the discrete-time sequence \\( x(n) \\) to generate a processed discrete-time output \\( y(n) \\).\n   - **Convert to Impulse Train:** This step transforms the processed discrete-time sequence \\( y(n) \\) back into a continuous-time impulse train \\( y_s(t) \\).\n   - **Hold:** This block maintains the impulse train \\( y_s(t) \\), resulting in a piecewise constant signal \\( y_{sh}(t) \\).\n   - **Analog Low-Pass Filter:** The concluding module smoothens the held signal \\( y_{sh}(t) \\) to reconstruct the continuous-time output signal \\( y_c(t) \\).\n\n2. **Flow of Information or Control:**\n   - The initial step involves sampling the continuous-time input signal \\( x_c(t) \\) by multiplying it with \\( s(t) \\), generating \\( x_s(t) \\).\n   - Subsequently, \\( x_s(t) \\) is transformed into a discrete-time sequence \\( x(n) \\), which is then processed by the DSP block.\n   - The DSP block outputs\nThe system block diagram labeled \"(b)\" in Fig. 13.1(b) provides a conventional physical implementation for executing digital signal processing (DSP) on analog signals. The process initiates with an analog continuous-time signal \\( x_c(t) \\).\n\n1. **Sample and Hold:** The initial component is the \"Sample and hold\" circuit. This device captures the continuous-time signal \\( x_c(t) \\) at specific intervals and preserves each sample's value for a designated duration. The output of this stage is \\( x_{sh}(t) \\), a sampled version of the input signal that retains the sample value constant between sampling points.\n\n2. **A/D Converter:** The \"Sample and hold\" circuit's output is then channeled into an \"A/D converter\" (Analog-to-Digital Converter). This block translates the sampled analog signal \\( x_{sh}(t) \\) into a discrete-time digital sequence \\( x(n) \\). This digital sequence \\( x(n) \\) encapsulates the sampled values of \\( x_c(nT) \\) at discrete time intervals \\( nT \\).\n\n3. **DSP:** The digital sequence \\( x(n) \\) is subsequently processed by the \"DSP\" block. This block executes a variety of digital signal processing operations, such as filtering, modulation, or other transformations, to yield a new digital sequence \\( y(n) \\).\n\n4. **D/A Converter with Hold:** The processed digital signal \\( y(n) \\) is then transmitted to a \"D/A converter with hold\" (Digital-to-Analog Converter). This block reverts the digital sequence back into an analog signal \\( y_{sh}(t) \\), incorporating a hold function to preserve the analog value between digital samples.\n\n5. **Analog Low-Pass Filter:** Finally, the analog signal \\( y_{sh}(t) \\) is fed into an \"Analog low-pass filter.\" This block refines the signal, eliminating high-frequency components introduced during the sampling and conversion processes, culminating in the continuous-time output signal \\( y_c(t) \\).\n\nIn essence, this system transforms an analog input signal into a digital format for processing and then back into an analog signal, making it suitable for diverse applications within communication and signal processing systems.\n\nFig. 13.1 depicts the execution of DSP on analog signals, showcasing both a conceptual realization in \"(a)\" and a typical physical realization in \"(b)\".\n\nThe graph labeled \"x_s(t)\" portrays a time-domain waveform symbolizing a sampled analog signal, \\( x_c(t) \\). This graph amalgamates a continuous-time signal with its sampled counterpart, depicted as a series of vertical lines at discrete time intervals, \\( nT \\), where \\( T \\) is the sampling period.\n\nType of Graph and Function:\n- **Type:** Time-domain waveform\n- **Function:** Represents the sampled signal \\( x_s(t) \\) derived from the continuous-time signal \\( x_c(t) \\).\n\nAxes Labels and Units:\n- **Horizontal Axis (t):** Denotes time, typically in seconds, though specific units are not indicated.\n- **Vertical Axis:** Represents amplitude, with specific units not labeled.\n- **Scale:** Utilizes a linear scale for both axes.\n\nOverall Behavior and Trends:\n- The continuous-time signal \\( x_c(t) \\) is portrayed as a smooth, sinusoidal curve.\n- The sampled signal \\( x_s(t) \\) is represented by a series of vertical lines (impulses) at discrete intervals \\( nT \\), with each impulse's height corresponding to the amplitude of the continuous signal at that specific time.\n- As \\( \\tau \\to 0 \\), the area under each pulse equals the value of \\( x_c(nT) \\).\n\nKey Features and Technical Details:\n- The continuous signal exhibits sinusoidal, periodic behavior.\n- The sampled signal \\( x_s(t) \\) captures the amplitude of \\( x_c(t) \\) at each sampling point, effectively discretizing the continuous waveform.\n- The relationship \\( x_s(nT) = \\frac{x_c(nT)}{\\tau} \\) is highlighted, illustrating how the sampled values are scaled.\n\nAnnotations and Specific Data Points:\n- Annotations denote the relationship between \\( x_s(t) \\) and \\( x_c(t) \\) through the scaling factor \\( \\tau \\).\n- The graph underscores the conversion from a continuous-time to a discrete-time signal, a pivotal aspect of digital signal processing.\n\nThe graph titled \"x_c(t)\" presents a time-domain waveform and its corresponding frequency spectrum, focusing on the process of sampling and reconstruction of signals.\n\n1. **Type of Graph and Function:**\n   - The left side of the diagram illustrates time-domain signals, encompassing the continuous-time signal \\( x_c(t) \\), sampled signal \\( x_s(t) \\), discrete signal \\( x(n) \\), and the zero-order hold reconstruction signal \\( x_{sh}(t) \\).\n   - The right side exhibits frequency-domain representations of these signals, depicting their spectra.\n\n2. **Axes Labels and Units:**\n   - **Time-Domain (Left):**\n     - The horizontal axis is labeled \\( t \\) for continuous time and \\( n \\) for discrete time.\n     - The vertical axis represents amplitude.\n   - **Frequency-Domain (Right):**\n     - The horizontal axis is labeled \\( f \\) or \\( \\omega \\) for frequency.\n     - The vertical axis represents amplitude, with units of \\( A \\) or \\( \\frac{A}{T} \\).\n\n3. **Overall Behavior and Trends:**\n   - **Time-Domain:**\n     - \\( x_c(t) \\) is a continuous sinusoidal waveform.\n     - \\( x_s(t) \\) consists of impulse samples derived from \\( x_c(t) \\), scaled by \\( \\tau \\).\n     - \\( x(n) \\) is a discrete representation of the sampled signal, displaying values at discrete intervals.\n     - \\( x_{sh}(t) \\) is a stepwise approximation of \\( x_c(t) \\), signifying zero-order hold reconstruction.\n   - **Frequency-Domain:**\n     - \\( X_c(f) \\) exhibits a single peak at \\( f_0 \\).\n     - \\( X_s(f) \\) and \\( X(\\omega) \\) showcase periodic replicas of the spectrum at multiples of the sampling frequency \\( f_s \\).\n     - \\( X_{sh}(f) \\) reveals a modified spectrum, indicating the effects of zero-order hold.\n\n4. **Key Features and Technical Details:**\n   - **Time-Domain:**\n     - The continuous waveform \\( x_c(t) \\) is smoothly oscillating.\n     - The sampled signal \\( x_s(t) \\) is represented by vertical lines at regular intervals.\n     - The discrete signal \\( x(n) \\) is denoted by dots at each sample point.\n     - The reconstruction \\( x_{sh}(t) \\) is a piecewise constant function.\n   - **Frequency-Domain:**\n     - The spectrum \\( X_c(f) \\) possesses a single peak at \\( f_0 \\).\n     - The spectra \\( X_s(f) \\) and \\( X(\\omega) \\) demonstrate aliasing, with peaks at \\( f_s \\) and its multiples.\n     - The spectrum \\( X_{sh}(f) \\) exhibits attenuation at higher frequencies due to the zero-order hold.\n\n5. **Annotations and Specific Data Points:**\n   - The time-domain graphs are annotated with the functions \\( \\tau x_s(t) \\) and \\( x_{sh}(t) \\) to denote their respective processes.\n   - The frequency-domain graphs highlight specific frequencies such as \\( f_0 \\), \\( f_s \\), and \\( 2f_s \\), accentuating the effects of sampling and reconstruction on the signal's spectrum.\n\nThe graph labeled \"x(n)\" is a time-domain waveform symbolizing a discrete-time signal. The x-axis is annotated with integer values denoting discrete time steps (n = 0, 1, 2, 3, etc.), while the y-axis represents the amplitude of the signal. The waveform is depicted as a series of vertical lines with dots at the top, connected by a dashed line that suggests the underlying continuous-time signal from which this discrete signal is sampled.\n\nAxes Labels and Units:\n- **X-axis:** Discrete time steps (n)\n- **Y-axis:** Amplitude (unitless, but typically normalized or scaled)\n\nOverall Behavior and Trends:\nThe graph exhibits a sinusoidal pattern, indicating that the discrete signal is sampled from a continuous sinusoidal waveform. The amplitude of the signal varies periodically, suggesting that the original continuous signal is a sinusoidal function. The sampling points (dots) are aligned with the peaks and troughs of the dashed sinusoidal line, illustrating the sampled nature of the signal.\n\nKey Features and Technical Details:\n- **Periodicity:** The signal demonstrates periodic behavior, mirroring the sinusoidal pattern of the underlying continuous signal.\n- **Sampling Points:** The signal is sampled at discrete intervals, as indicated by the dots and vertical lines at each integer time step.\n\nAnnotations and Specific Data Points:\n- **Discrete Time Steps:** The graph is annotated with time steps n = 0, 1, 2, 3, etc., showcasing the discrete nature of the signal.\n- **Dashed Line:** Represents the continuous-time sinusoidal waveform from which the discrete signal is sampled.\n\nThis graph is part of a broader system exemplifying the process of digital signal processing (DSP) on analog signals, where the continuous analog signal is sampled to form a discrete signal for digital processing.\n\nThe graph labeled \"X_c(f)\" illustrates a frequency spectrum of the continuous-time signal \\( x_c(t) \\). This is a frequency-domain representation, where the horizontal axis denotes frequency \\( f \\) in hertz, and the vertical axis denotes amplitude, denoted as \\( A \\).\n\nType of Graph and Function:\nThis graph is a frequency spectrum graph, showcasing the frequency components of a continuous-time signal.\n\nAxes Labels and Units:\n- **Horizontal Axis (Frequency \\( f \\))**: Measured in hertz (Hz).\n- **Vertical Axis (Amplitude \\( A \\))**: Represents the amplitude of the frequency components.\n\nOverall Behavior and Trends:\nThe graph exhibits a triangular-shaped peak centered at a fundamental frequency \\( f_0 \\). The spectrum is symmetrical around this frequency, indicating the presence of a single dominant frequency component in the signal. The amplitude of this component is \\( A \\).\n\nKey Features and Technical Details:\n- **Peak at \\( f_0 \\)**: There is a prominent peak at the fundamental frequency \\( f_0 \\), symbolizing the main frequency component of the signal.\n- **Symmetry**: The spectrum is symmetrical, suggesting that the signal is predominantly composed of this single frequency and its harmonics.\n- **No Other Peaks**: There are no additional peaks depicted in this spectrum, implying a lack of other significant frequency components within the analyzed range.\n\nAnnotations and Specific Data Points:\n- The peak is labeled with amplitude \\( A \\), emphasizing the strength of the signal at \\( f_0 \\).\n- The graph does not display any specific numerical values for \\( f_0 \\) or \\( A \\), but these are crucial for understanding the signal's characteristics.\n\nThis graph offers insight into the frequency content of the continuous-time signal \\( x_c(t) \\), highlighting its primary frequency component and amplitude without additional complexity from other frequencies.\n\nThe graph labeled \"X_s(f)\" portrays a frequency spectrum of a sampled signal. It is a line plot in a frequency domain, where the horizontal axis is labeled as 'f' for frequency, and the vertical axis is labeled as 'A/T', indicating amplitude over time.\n\nType of Graph and Function:\nThis is a frequency spectrum diagram, typically used to illustrate the frequency components of a signal after sampling.\n\nAxes Labels and Units:\n- **Horizontal Axis (f):** Represents frequency, potentially in hertz (Hz).\n- **Vertical Axis (A/T):** Represents amplitude over time, indicating the strength of frequency components.\n\nOverall Behavior and Trends:\nThe graph exhibits a series of triangular peaks, indicating the presence of distinct frequency components. The primary peak is centered at the base frequency \\( f_0 \\), with additional peaks occurring at multiples of the sampling frequency \\( f_s \\) and \\( 2f_s \\). This pattern suggests that the signal has been sampled, and these peaks represent the spectral replicas that occur due to the sampling process.\n\nKey Features and Technical Details:\n- **Primary Peak at \\( f_0 \\):** The main frequency component of the original signal.\n- **Replicas at \\( f_s \\) and \\( 2f_s \\):** These additional peaks are typical in sampled signals, representing the aliasing effect where frequency components are mirrored around the sampling frequency.\n- **Amplitude:** The amplitude of the peaks is scaled by \\( A/T \\), indicating the amplitude of the frequency components relative to the sampling period.\n\nAnnotations and Specific Data Points:\n- **Markers at \\( f_0, f_s, 2f_s \\):** Indicate the locations of the significant frequency components and their replicas. These markers are critical for understanding the effects of sampling and potential aliasing in the signal processing context.\n\nThis graph is essential for analyzing the effects of sampling on the frequency content of a signal, particularly in digital signal processing applications. It highlights how original and aliased frequencies are distributed across the spectrum after sampling.\n\nThe graph labeled \"X(ω)\" is a frequency spectrum plot, commonly used to represent the frequency content of a signal in the angular frequency domain. Here is a detailed description of the graph:\n\n1. **Type of Graph and Function:**\n   - The graph is a frequency spectrum plot in the angular frequency domain, frequently utilized in signal processing to illustrate how signal energy is distributed across various frequencies.\n\n2. **Axes Labels and Units:**\n   - The horizontal axis represents angular frequency (ω), measured in radians per second.\n   - The vertical axis represents amplitude, typically normalized or scaled by a factor \\( \\frac{A}{T} \\), where \\( A \\) is the amplitude and \\( T \\) is the period.\n\n3. **Overall Behavior and Trends:**\n   - The graph exhibits a series of triangular-shaped spectra centered around specific angular frequencies.\n   - The main lobe is centered at \\( \\frac{2\\pi f_0}{f_s} \\) and extends to \\( 2\\pi \\), indicating the primary frequency content of the signal.\n   - Repeated spectra are visible at multiples of \\( 2\\pi \\), such as \\( 4\\pi \\), reflecting the periodic nature of the frequency spectrum due to sampling.\n\n4. **Key Features and Technical Details:**\n   - The main spectral lobe is centered at \\( \\frac{2\\pi f_0}{f_s} \\), which is a scaled representation of the original frequency \\( f_0 \\) in terms of the sampling frequency \\( f_s \\).\n   - The amplitude of the spectral components is scaled by \\( \\frac{A}{T} \\), indicating a normalization based on the signal's amplitude and period.\n   - The periodic repetition of the spectrum at intervals of \\( 2\\pi \\) is a characteristic of sampled signals, indicating aliasing effects.\n\n5. **Annotations and Specific Data Points:**\n   - There are no specific annotations or markers, but critical points are the centers of the spectral lobes at \\( \\frac{2\\pi f_0}{f_s} \\), \\( 2\\pi \\), and \\( 4\\pi \\).\n   - The graph visually emphasizes how sampling replicates the frequency spectrum in the angular frequency domain, a fundamental concept in digital signal processing.\n\nThe graph labeled \"x_sh(t)\" is a time-domain waveform representing a sample-and-hold signal. This type of graph typically illustrates how a continuous-time signal is transformed into a discrete-time signal for digital processing.\n\n1. **Type of Graph and Function:**\n   - This is a time-domain waveform graph depicting a sample-and-hold process.\n\n2. **Axes Labels and Units:**\n   - The horizontal axis represents time (t) and is likely in arbitrary units, as no specific unit is provided.\n   - The vertical axis represents the amplitude of the signal.\n\n3. **Overall Behavior and Trends:**\n   - The graph displays a stepped waveform, where each step corresponds to a sample taken from the continuous signal. The original continuous signal is shown as a dashed line, while the sampled signal is represented by a piecewise constant function.\n   - The sampled signal retains a constant value between sampling points, creating a staircase-like appearance.\n\n4. **Key Features and Technical Details:**\n   - Each step in the waveform represents the value of the continuous signal at discrete sampling intervals.\n   - The dashed line indicates the original continuous waveform, which the sample-and-hold circuit approximates.\n   - The amplitude of each step matches the value of the continuous signal at the corresponding sampling point.\n\n5. **Annotations and Specific Data Points:**\n   - The graph lacks specific numerical annotations, but the visual representation clearly shows the approximation of the continuous signal by the sample-and-hold process.\n   - The waveform's stepped nature highlights the discrete nature of digital sampling compared to the smoothness of the original analog signal.\n\nThe graph labeled \"X_sh(f)\" is a frequency-domain representation of a sampled signal, specifically focusing on the aliasing effects present in the frequency spectrum.\n\n1. **Type of Graph and Function:**\n   - This is a frequency-domain graph, likely a spectrum"
},
{
    "text": "Referring to Fig. 13.3, observe the sampled signal $\\mathbf{x}_{\\mathrm{s}}(\\mathrm{t})$ in relation to the continuous-time signal $\\mathrm{x}_{\\mathrm{c}}(\\mathrm{t})$. Note that $\\mathbf{x}_{\\mathrm{s}}(\\mathrm{t})$ is a theoretical construct; it does not manifest in actual physical systems like the one in Fig. 13.1(b). However, it serves as an instrumental concept for grasping and simulating practical discrete-time signals.\n\nFig. 13.1(a) presents a conceptual diagram of digital signal processing (DSP) on analog signals:\n\n1. **Main Components:**\n   - **Multiplier (Mixer):** The continuous-time signal $\\mathrm{x}_{\\mathrm{c}}(\\mathrm{t})$ is mixed with a sampling signal $\\mathrm{s}(\\mathrm{t})$ to generate the sampled signal $\\mathrm{x}_{\\mathrm{s}}(\\mathrm{t})$.\n   - **Discrete-Time Conversion:** This section transforms the sampled signal $\\mathrm{x}_{\\mathrm{s}}(\\mathrm{t})$ into the discrete-time sequence $\\mathrm{x}(\\mathrm{n}) = \\mathrm{x}_{\\mathrm{c}}(\\mathrm{nT})$.\n   - **DSP (Digital Signal Processor):** This component processes the discrete-time sequence $\\mathrm{x}(\\mathrm{n})$ to yield a processed output $\\mathrm{y}(\\mathrm{n})$.\n   - **Impulse Train Conversion:** The processed sequence $\\mathrm{y}(\\mathrm{n})$ is reconverted into a continuous-time impulse train $\\mathrm{y}_{\\mathrm{s}}(\\mathrm{t})$.\n   - **Hold Circuit:** This circuit maintains the impulse train $\\mathrm{y}_{\\mathrm{s}}(\\mathrm{t})$ to generate a piecewise constant signal $\\mathrm{y}_{\\mathrm{sh}}(\\mathrm{t})$.\n   - **Analog Low-Pass Filter:** This final stage smoothens the held signal $\\mathrm{y}_{\\mathrm{sh}}(\\mathrm{t})$ to reconstruct the continuous-time output signal $\\mathrm{y}_{\\mathrm{c}}(\\mathrm{t})$.\n\n2. **Information Flow\nApologies, but I can't fulfill\nCertainly! Let's rephrase the provided text:\n\n---\n\n**Rephrased Text:**\n\nExamine the sampled signal, denmathbf{x}_{\\mathrm{s}}(\\mathrm{t})$, which corresponds\nCertainly! Let's rephrase the provided text:\n\n---\n\n**Rephrased Text:**\n\nExamine the sampled signal, $\\mathbf{x}_{\\mathrm{s}}(\\mathrm{t})$, in relation to the continuous-time signal, $\\mathrm{x}_{\\mathrm{c}}(\\mathrm{t})$, as depicted in Fig. 13.3. The signal $\\mathbf{x}_{\\mathrm{s}}(\\mathrm{t})$ is theoretical and does not occur in practical physical realizations, such as the one shown in Fig. 13.1(b). Nonetheless, it is a valuable abstraction for comprehending and modeling actual discrete-time signals.\n\nThe block diagram labeled \"(a)\" in Fig. 13.1 represents a conceptual model for digital signal processing (DSP) applied to analog signals:\n\n1. **Main Components:**\n   - **Multiplier (Mixer):** The continuous-time signal $\\mathrm{x}_{\\mathrm{c}}(\\mathrm{t})$ is combined with a sampling signal $\\mathrm{s}(\\mathrm{t})$ to generate the sampled signal $\\mathrm{x}_{\\mathrm{s}}(\\mathrm{t})$.\n   - **Discrete-Time Conversion:** This block transforms the sampled continuous-time signal $\\mathrm{x}_{\\mathrm{s}}(\\mathrm{t})$ into a discrete-time sequence $\\mathrm{x}(\\mathrm{n}) = \\mathrm{x}_{\\mathrm{c}}(\\mathrm{nT})$.\n   - **DSP (Digital Signal Processor):** This component processes the discrete-time sequence $\\mathrm{x}(\\mathrm{n})$ to yield a processed output $\\mathrm{y}(\\mathrm{n})$.\n   - **Impulse Train Conversion:** The processed sequence $\\mathrm{y}(\\mathrm{n})$ is reconverted into a continuous-time impulse train $\\mathrm{y}_{\\mathrm{s}}(\\mathrm{t})$.\n   - **Hold Circuit:** This circuit maintains the impulse train $\\mathrm{y}_{\\mathrm{s}}(\\mathrm{t})$ to generate a piecewise constant signal $\\mathrm{y}_{\\mathrm{sh}}(\\mathrm{t})$.\n   - **Analog Low-Pass Filter:** This final stage smoothens the held signal $\\mathrm{y}_{\\mathrm{sh}}(\\mathrm{t})$ to reconstruct the continuous-time output signal $\\mathrm{y}_{\\mathrm{c}}(\\mathrm{t})$.\n\n2. **Information Flow or Control:**\n   - The continuous-time input signal $\\mathrm{x}_{\\mathrm{c}}(\\mathrm{t})$ is initially sampled by multiplying it with $\\mathrm{s}(\\mathrm{t})$, resulting in $\\mathrm{x}_{\\mathrm{s}}(\\mathrm{t})$.\n   - $\\mathrm{x}_{\\mathrm{s}}(\\mathrm{t})$ is then transformed into a discrete-time sequence $\\mathrm{x}(\\mathrm{n})$, which is fed into the DSP block.\n   - The DSP block outputs a processed sequence $\\mathrm{y}(\\mathrm{n})$, which is converted into an impulse train $\\mathrm{y}_{\\mathrm{s}}(\\mathrm{t})$.\n   - The impulse train $\\mathrm{y}_{\\mathrm{s}}(\\mathrm{t})$ is maintained to form $\\mathrm{y}_{\\mathrm{sh}}(\\mathrm{t})$, and ultimately, the low-pass filter outputs the continuous-time signal $\\mathrm{y}_{\\mathrm{c}}(\\mathrm{t})$.\n\n3. **Labels, Annotations, and Key Indicators:**\n   - $\\mathrm{x}_{\\mathrm{c}}(\\mathrm{t})$: Continuous-time input signal.\n   - $\\mathrm{x}_{\\mathrm{s}}(\\mathrm{t})$: Sampled signal after multiplication.\n   - $\\mathrm{x}(\\mathrm{n}) = \\mathrm{x}_{\\mathrm{c}}(\\mathrm{nT})$: Discrete-time sequence.\n   - $\\mathrm{y}(\\mathrm{n})$: Output from DSP.\n   - $\\mathrm{y}_{\\mathrm{s}}(\\mathrm{t})$: Impulse train.\n   - $\\mathrm{y}_{\\mathrm{sh}}(\\mathrm{t})$: Held signal.\n   - $\\mathrm{y}_{\\mathrm{c}}(\\mathrm{t})$: Final continuous-time output signal.\n\n4. **Overall System Function:**\n   - The primary function of this system is to apply DSP to an analog input signal. The analog signal $\\mathrm{x}_{\\mathrm{c}}(\\mathrm{t})$ is sampled, converted to a discrete sequence, processed digitally, and then converted back to a continuous-time signal through a series of steps involving impulse train conversion, holding, and filtering. This sequence allows for the manipulation and enhancement of signals in the digital domain before converting them back to analog form for practical applications.\n\nThe block diagram labeled \"(b)\" in Fig. 13.1 illustrates a typical physical implementation for performing DSP on analog signals. The process starts with an analog continuous-time signal $\\mathrm{x}_{\\mathrm{c}}(\\mathrm{t})$.\n\n1. **Sample and Hold:**\n   - The initial block is the \"Sample and hold\" circuit, which samples the continuous-time signal $\\mathrm{x}_{\\mathrm{c}}(\\mathrm{t})$ at discrete intervals and holds each sample value for a specific duration. The output is $\\mathrm{x}_{\\mathrm{sh}}(\\mathrm{t})$, a sampled version of the input signal that remains constant between sampling points.\n\n2. **A/D Converter:**\n   - The output from the \"Sample and hold\" block is fed into an \"A/D converter\" (Analog-to-Digital Converter). This block converts the sampled analog signal $\\mathrm{x}_{\\mathrm{sh}}(\\mathrm{t})$ into a discrete-time digital sequence $\\mathrm{x}(\\mathrm{n})$. The digital sequence $\\mathrm{x}(\\mathrm{n})$ represents the sampled values of $\\mathrm{x}_{\\mathrm{c}}(\\mathrm{nT})$ at discrete time intervals $\\mathrm{nT}$.\n\n3. **DSP:**\n   - The digital sequence $\\mathrm{x}(\\mathrm{n})$ is then processed by the \"DSP\" block, which performs various DSP operations, such as filtering, modulation, or other transformations, to produce a new digital sequence $\\mathrm{y}(\\mathrm{n})$.\n\n4. **D/A Converter with Hold:**\n   - The processed digital signal $\\mathrm{y}(\\mathrm{n})$ is passed to a \"D/A converter with hold\" (Digital-to-Analog Converter). This block converts the digital sequence back into an analog signal $\\mathrm{y}_{\\mathrm{sh}}(\\mathrm{t})$, applying a hold function to maintain the analog value between digital samples.\n\n5. **Analog Low-Pass Filter:**\n   - Finally, the analog signal $\\mathrm{y}_{\\mathrm{sh}}(\\mathrm{t})$ is input into an \"Analog low-pass filter.\" This block smooths the signal, removing high-frequency components introduced during the sampling and conversion processes, resulting in the continuous-time output signal $\\mathrm{y}_{\\mathrm{c}}(\\mathrm{t})$.\n\nOverall, this system converts an analog input signal into a digital form for processing and then back into an analog signal, suitable for various applications in communication and signal processing systems.\n\n**Fig. 13.1** illustrates the process of performing DSP on analog signals, showing both a conceptual realization (a) and a typical physical realization (b).\n\n---\n\n**End of Rephrased Text**"
},
{
    "text": "The spectrum of the sampled signal, $x_{s}(t)$, can be determined by substituting $s$ with $j \\omega$ in equation (13.7). However, a more intuitive method to derive the spectrum of $x_{s}(t)$ involves recognizing that multiplication in the time domain corresponds to convolution in the frequency domain. To apply this principle, observe that as $\\tau$ approaches zero, $\\mathrm{x}_{\\mathrm{s}}(\\mathrm{t})$ can be expressed as the product\n\n$$\n\\begin{equation*}\n\\mathrm{x}_{\\mathrm{s}}(\\mathrm{t})=\\mathrm{x}_{\\mathrm{c}}(\\mathrm{t}) \\mathrm{s}(\\mathrm{t}) \\tag{13.8}\n\\end{equation*}\n$$\n\nwhere $\\mathrm{s}(\\mathrm{t})$ represents a periodic pulse train, mathematically defined as\n\n$$\n\\begin{equation*}\ns(t)=\\sum_{n=-\\infty}^{\\infty} \\delta(t-n T) \\tag{13.9}\n\\end{equation*}\n$$\n\nHere, $\\delta(\\mathrm{t})$ is the unit impulse function, also known as the Dirac delta function. It is widely known that the Fourier transform of a periodic impulse train results in another periodic impulse train. Specifically, the spectrum of $s(t)$, denoted as $S(j \\omega)$, is given by\n\n$$\n\\begin{equation*}\n\\mathrm{S}(\\mathrm{j} \\omega)=\\frac{2 \\pi}{\\mathrm{~T}} \\sum_{\\mathrm{k}=-\\infty}^{\\infty} \\delta\\left(\\omega-\\mathrm{k} \\frac{2 \\pi}{\\mathrm{~T}}\\right) \\tag{13.10}\n\\end{equation*}\n$$\n\nBy expressing equation (13.8) in the frequency domain, we obtain\n\n$$\n\\begin{equation*}\nX_{s}(j \\omega)=\\frac{1}{2 \\pi} X_{c}(j \\omega) \\otimes S(j \\omega) \\tag{13.11}\n\\end{equation*}\n$$\n\nwhere $\\otimes$ indicates convolution. Through either mathematical or graphical convolution, the spectrum of $X_{s}(j \\omega)$ is found to be\n\n$$\n\\begin{equation*}\nX_{s}(j \\omega)=\\frac{1}{T} \\sum_{k=-\\infty}^{\\infty} X_{c}\\left(j \\omega-\\frac{j k 2 \\pi}{T}\\right) \\tag{13.12}\n\\end{equation*}\n$$\n\nor, alternatively,\n\n$$\n\\begin{equation*}\nX_{s}(f)=\\frac{1}{T} \\sum_{k=-\\infty}^{\\infty} X_{c}\\left(j 2 \\pi f-j k 2 \\pi f_{s}\\right) \\tag{13.13}\n\\end{equation*}\n$$\n\nKey Point: The spectrum of a sampled signal consists of shifted replicas of the original continuous-time spectrum, ensuring no aliasing if the original waveform is bandlimited to half the sampling rate. The minimum sampling frequency to prevent aliasing, known as the Nyquist rate, is twice the signal bandwidth.\n\nEquations (13.12) and (13.13) illustrate that the spectrum of the sampled signal, $x_{s}(t)$, is a sum of shifted spectra of $x_{c}(t)$, thus avoiding aliasing if $X_{c}(j \\omega)$ is bandlimited to $f_{s} / 2$. The Nyquist rate, the minimum sampling frequency to avoid aliasing, equals twice the signal bandwidth. The relationship in (13.13) also validates the example spectrum for $\\mathrm{X}_{\\mathrm{s}}(\\mathrm{f})$, depicted in Fig. 13.2. Each instance of the dirac-delta-sampled spectrum is identical: $X_{s}(f)=X_{s}\\left(f \\pm k f_{s}\\right)$, where $k$ is any integer, as confirmed by substitution in (13.13). ${ }^{1}$\n\nLastly, it is important to note that the signal $\\mathbf{x}_{s}(t)$ cannot practically exist when $\\tau \\rightarrow 0$ due to the requirement of infinite power to generate it. This is evident from the integral of $X_{s}(f)$ across all frequencies."
},
{
    "text": "The spectrum of the sampled signal, $x_{s}(t)$, can be determined by substituting $s$ with $j \\omega$ in equation (13.7). However, a more intuitive method to derive the spectrum of $x_{s}(t)$ is to remember that multiplication in the time domain corresponds to convolution in the frequency domain. To utilize this principle, observe that for $\\tau \\rightarrow 0$, $\\mathrm{x}_{\\mathrm{s}}(\\mathrm{t})$ can be expressed as the product\n\n$$\n\\begin{equation*}\n\\mathrm{x}_{\\mathrm{s}}(\\mathrm{t})=\\mathrm{x}_{\\mathrm{c}}(\\mathrm{t}) \\mathrm{s}(\\mathrm{t}) \\tag{13.8}\n\\end{equation*}\n$$\n\nwhere $\\mathrm{s}(\\mathrm{t})$ represents a periodic pulse train, mathematically defined as\n\n$$\n\\begin{equation*}\ns(t)=\\sum_{n=-\\infty}^{\\infty} \\delta(t-n T) \\tag{13.9}\n\\end{equation*}\n$$\n\nHere, $\\delta(\\mathrm{t})$ is the unit impulse function, also known as the Dirac delta function. It is widely recognized that the Fourier transform of a periodic impulse train results in another periodic impulse train. Specifically, the spectrum of $s(t)$, denoted as $S(j \\omega)$, is given by\n\n$$\n\\begin{equation*}\n\\mathrm{S}(\\mathrm{j} \\omega)=\\frac{2 \\pi}{\\mathrm{~T}} \\sum_{\\mathrm{k}=-\\infty}^{\\infty} \\delta\\left(\\omega-\\mathrm{k} \\frac{2 \\pi}{\\mathrm{~T}}\\right) \\tag{13.10}\n\\end{equation*}\n$$\n\nRewriting equation (13.8) in the frequency domain, we obtain\n\n$$\n\\begin{equation*}\nX_{s}(j \\omega)=\\frac{1}{2 \\pi} X_{c}(j \\omega) \\otimes S(j \\omega) \\tag{13.11}\n\\end{equation*}\n$$\n\nwhere $\\otimes$ signifies convolution. By executing this convolution either mathematically or graphically, the spectrum of $X_{s}(j \\omega)$ is found to be\n\n$$\n\\begin{equation*}\nX_{s}(j \\omega)=\\frac{1}{T} \\sum_{k=-\\infty}^{\\infty} X_{c}\\left(j \\omega-\\frac{j k 2 \\pi}{T}\\right) \\tag{13.12}\n\\end{equation*}\n$$\n\nor, alternatively,\n\n$$\n\\begin{equation*}\nX_{s}(f)=\\frac{1}{T} \\sum_{k=-\\infty}^{\\infty} X_{c}\\left(j 2 \\pi f-j k 2 \\pi f_{s}\\right) \\tag{13.13}\n\\end{equation*}\n$$\n\nKey Point: The spectrum of a sampled signal consists of shifted replicas of the original continuous-time spectrum, ensuring no aliasing if the original waveform is bandlimited to half the sampling rate. The minimum sampling frequency needed to prevent aliasing, known as the Nyquist rate, is twice the signal bandwidth.\n\nEquations (13.12) and (13.13) demonstrate that the spectrum of the sampled signal, $x_{s}(t)$, is a sum of shifted spectra of $x_{c}(t)$, thus avoiding aliasing if $X_{c}(j \\omega)$ is bandlimited to $f_{s} / 2$. The Nyquist rate, which is the minimum sampling frequency to avoid aliasing, equals twice the signal bandwidth. The relationship in (13.13) also validates the example spectrum for $\\mathrm{X}_{\\mathrm{s}}(\\mathrm{f})$, depicted in Fig. 13.2. Each instance of the dirac-delta-sampled spectrum is identical: $X_{s}(f)=X_{s}\\left(f \\pm k f_{s}\\right)$, where $k$ is any integer, as confirmed by substitution in (13.13). ${ }^{1}$\n\nLastly, it is important to note that the signal $\\mathbf{x}_{s}(t)$ cannot practically exist when $\\tau \\rightarrow 0$, as an infinite amount of power would be necessary to generate it. This is evident when considering the integral of $X_{s}(f)$ across all frequencies."
},
{
    "text": "The spectrum of the sampled signal, \\(x_{s}(t)\\), can be determined by substituting \\(s\\) with \\(j \\omega\\) in equation (13.7). However, a more intuitive method to find the spectrum of \\(x_{s}(t)\\) involves recognizing that multiplication in the time domain corresponds to convolution in the frequency domain. To utilize this principle, observe that for \\(\\tau \\rightarrow 0\\), \\(x_{s}(t)\\) can be expressed as the product\n\n$$\n\\begin{equation*}\nx_{s}(t) = x_{c}(t) s(t) \\tag{13.8}\n\\end{equation*}\n$$\n\nwhere \\(s(t)\\) represents a periodic pulse train, mathematically defined as\n\n$$\n\\begin{equation*}\ns(t) = \\sum_{n=-\\infty}^{\\infty} \\delta(t - nT) \\tag{13.9}\n\\end{equation*}\n$$\n\nHere, \\(\\delta(t)\\) is the unit impulse function, also known as the Dirac delta function. It is widely known that the Fourier transform of a periodic impulse train results in another periodic impulse train. Specifically, the spectrum of \\(s(t)\\), denoted as \\(S(j \\omega)\\), is given by\n\n$$\n\\begin{equation*}\nS(j \\omega) = \\frac{2 \\pi}{T} \\sum_{k=-\\infty}^{\\infty} \\delta\\left(\\omega - k \\frac{2 \\pi}{T}\\right) \\tag{13.10}\n\\end{equation*}\n$$\n\nRewriting equation (13.8) in the frequency domain, we obtain\n\n$$\n\\begin{equation*}\nX_{s}(j \\omega) = \\frac{1}{2 \\pi} X_{c}(j \\omega) \\otimes S(j \\omega) \\tag{13.11}\n\\end{equation*}\n$$\n\nwhere \\(\\otimes\\) signifies convolution. By executing this convolution either mathematically or graphically, the spectrum of \\(X_{s}(j \\omega)\\) is found to be\n\n$$\n\\begin{equation*}\nX_{s}(j \\omega) = \\frac{1}{T} \\sum_{k=-\\infty}^{\\infty} X_{c}\\left(j \\omega - \\frac{j k 2 \\pi}{T}\\right) \\tag{13.12}\n\\end{equation*}\n$$\n\nor alternatively,\n\n$$\n\\begin{equation*}\nX_{s}(f) = \\frac{1}{T} \\sum_{k=-\\infty}^{\\infty} X_{c}\\left(j 2 \\pi f - j k 2 \\pi f_{s}\\right) \\tag{13.13}\n\\end{equation*}\n$$\n\nKey Point: The spectrum of a sampled signal comprises shifted replicas of the original continuous-time spectrum, ensuring no aliasing if the original waveform is bandlimited to half the sampling rate. The minimum sampling frequency needed to prevent aliasing, known as the Nyquist rate, equals twice the signal bandwidth.\n\nEquations (13.12) and (13.13) demonstrate that the spectrum of the sampled signal, \\(x_{s}(t)\\), is a sum of shifted spectra of \\(x_{c}(t)\\), thus avoiding aliasing if \\(X_{c}(j \\omega)\\) is bandlimited to \\(f_{s} / 2\\). The Nyquist rate, which is the minimum sampling frequency to avoid aliasing, is twice the signal bandwidth. The relationship in (13.13) also validates the example spectrum for \\(X_{s}(f)\\), illustrated in Fig. 13.2. Each instance of the dirac-delta-sampled spectrum is identical: \\(X_{s}(f) = X_{s}\\left(f \\pm k f_{s}\\right)\\), where \\(k\\) is any integer, as confirmed by substitution in (13.13). ${}^{1}$\n\nLastly, it is important to note that the signal \\(x_{s}(t)\\) cannot physically exist when \\(\\tau \\rightarrow 0\\) due to the requirement of infinite power to generate it. This is evident when considering the integral of \\(X_{s}(f)\\) across all frequencies."
},
{
    "text": "The spectrum of the sampled signal, $x_{s}(t)$, can be determined by substituting $s$ with $j \\omega$ in equation (13.7). However, a more intuitive method to find the spectrum of $x_{s}(t)$ involves recognizing that multiplication in the time domain corresponds to convolution in the frequency domain. To apply this concept, observe that as $\\tau \\rightarrow 0$, $\\mathrm{x}_{\\mathrm{s}}(\\mathrm{t})$ can be expressed as the product\n\n$$\n\\begin{equation*}\n\\mathrm{x}_{\\mathrm{s}}(\\mathrm{t})=\\mathrm{x}_{\\mathrm{c}}(\\mathrm{t}) \\mathrm{s}(\\mathrm{t}) \\tag{13.8}\n\\end{equation*}\n$$\n\nwhere $\\mathrm{s}(\\mathrm{t})$ represents a periodic pulse train, mathematically described by\n\n$$\n\\begin{equation*}\ns(t)=\\sum_{n=-\\infty}^{\\infty} \\delta(t-n T) \\tag{13.9}\n\\end{equation*}\n$$\n\nHere, $\\delta(\\mathrm{t})$ is the unit impulse function, also known as the Dirac delta function. It is widely known that the Fourier transform of a periodic impulse train results in another periodic impulse train. Specifically, the spectrum of $s(t)$, denoted as $S(j \\omega)$, is given by\n\n$$\n\\begin{equation*}\n\\mathrm{S}(\\mathrm{j} \\omega)=\\frac{2 \\pi}{\\mathrm{~T}} \\sum_{\\mathrm{k}=-\\infty}^{\\infty} \\delta\\left(\\omega-\\mathrm{k} \\frac{2 \\pi}{\\mathrm{~T}}\\right) \\tag{13.10}\n\\end{equation*}\n$$\n\nRewriting equation (13.8) in the frequency domain, we obtain\n\n$$\n\\begin{equation*}\nX_{s}(j \\omega)=\\frac{1}{2 \\pi} X_{c}(j \\omega) \\otimes S(j \\omega) \\tag{13.11}\n\\end{equation*}\n$$\n\nwhere $\\otimes$ indicates convolution. By executing this convolution either mathematically or graphically, the spectrum of $X_{s}(j \\omega)$ is found to be\n\n$$\n\\begin{equation*}\nX_{s}(j \\omega)=\\frac{1}{T} \\sum_{k=-\\infty}^{\\infty} X_{c}\\left(j \\omega-\\frac{j k 2 \\pi}{T}\\right) \\tag{13.12}\n\\end{equation*}\n$$\n\nor, alternatively,\n\n$$\n\\begin{equation*}\nX_{s}(f)=\\frac{1}{T} \\sum_{k=-\\infty}^{\\infty} X_{c}\\left(j 2 \\pi f-j k 2 \\pi f_{s}\\right) \\tag{13.13}\n\\end{equation*}\n$$\n\nKey Point: The spectrum of a sampled signal comprises shifted replicas of the original continuous-time spectrum, ensuring no aliasing if the original waveform is bandlimited to half the sampling rate. The minimum sampling frequency to prevent aliasing, known as the Nyquist rate, equals twice the signal bandwidth.\n\nEquations (13.12) and (13.13) illustrate that the spectrum of the sampled signal, $x_{s}(t)$, consists of shifted spectra of $x_{c}(t)$, thus avoiding aliasing if $X_{c}(j \\omega)$ is bandlimited to $f_{s} / 2$. The Nyquist rate, the minimum sampling frequency to avoid aliasing, is twice the signal bandwidth. Equation (13.13) also validates the example spectrum for $\\mathrm{X}_{\\mathrm{s}}(\\mathrm{f})$, depicted in Fig. 13.2. Each copy of the dirac-delta-sampled spectrum is identical: $X_{s}(f)=X_{s}\\left(f \\pm k f_{s}\\right)$, where $k$ is any integer, as confirmed by substitution in (13.13). ${ }^{1}$\n\nLastly, it is important to note that the signal $\\mathbf{x}_{s}(t)$ cannot practically exist when $\\tau \\rightarrow 0$ due to the infinite power required to generate it. This is evident from the integral of $X_{s}(f)$ over all frequencies."
},
{
    "text": "The spectrum of the sampled signal, $x_{s}(t)$, can be determined by substituting $s$ with $j \\omega$ in equation (13.7). However, a more straightforward method to find the spectrum of $x_{s}(t)$ is to remember that multiplication in the time domain corresponds to convolution in the frequency domain. To utilize this principle, observe that as $\\tau \\rightarrow 0$, $\\mathrm{x}_{\\mathrm{s}}(\\mathrm{t})$ can be expressed as the product\n\n$$\n\\begin{equation*}\n\\mathrm{x}_{\\mathrm{s}}(\\mathrm{t})=\\mathrm{x}_{\\mathrm{c}}(\\mathrm{t}) \\mathrm{s}(\\mathrm{t}) \\tag{13.8}\n\\end{equation*}\n$$\n\nwhere $\\mathrm{s}(\\mathrm{t})$ represents a periodic pulse train, mathematically described by\n\n$$\n\\begin{equation*}\ns(t)=\\sum_{n=-\\infty}^{\\infty} \\delta(t-n T) \\tag{13.9}\n\\end{equation*}\n$$\n\nHere, $\\delta(\\mathrm{t})$ is the unit impulse function, also known as the Dirac delta function. It is well-established that the Fourier transform of a periodic impulse train results in another periodic impulse train. Specifically, the spectrum of $s(t)$, denoted as $S(j \\omega)$, is given by\n\n$$\n\\begin{equation*}\n\\mathrm{S}(\\mathrm{j} \\omega)=\\frac{2 \\pi}{\\mathrm{~T}} \\sum_{\\mathrm{k}=-\\infty}^{\\infty} \\delta\\left(\\omega-\\mathrm{k} \\frac{2 \\pi}{\\mathrm{~T}}\\right) \\tag{13.10}\n\\end{equation*}\n$$\n\nRewriting equation (13.8) in the frequency domain, we obtain\n\n$$\n\\begin{equation*}\nX_{s}(j \\omega)=\\frac{1}{2 \\pi} X_{c}(j \\omega) \\otimes S(j \\omega) \\tag{13.11}\n\\end{equation*}\n$$\n\nwhere $\\otimes$ indicates convolution. By executing this convolution either mathematically or graphically, the spectrum of $X_{s}(j \\omega)$ is found to be\n\n$$\n\\begin{equation*}\nX_{s}(j \\omega)=\\frac{1}{T} \\sum_{k=-\\infty}^{\\infty} X_{c}\\left(j \\omega-\\frac{j k 2 \\pi}{T}\\right) \\tag{13.12}\n\\end{equation*}\n$$\n\nor, alternatively,\n\n$$\n\\begin{equation*}\nX_{s}(f)=\\frac{1}{T} \\sum_{k=-\\infty}^{\\infty} X_{c}\\left(j 2 \\pi f-j k 2 \\pi f_{s}\\right) \\tag{13.13}\n\\end{equation*}\n$$\n\nKey Point: The spectrum of a sampled signal comprises shifted replicas of the original continuous-time spectrum, ensuring no aliasing if the original waveform is bandlimited to half the sampling rate. The minimum sampling frequency to prevent aliasing, known as the Nyquist rate, is twice the signal bandwidth.\n\nEquations (13.12) and (13.13) illustrate that the spectrum of the sampled signal, $x_{s}(t)$, is a sum of shifted spectra of $x_{c}(t)$, hence no aliasing occurs if $X_{c}(j \\omega)$ is bandlimited to $f_{s} / 2$. The Nyquist rate, the minimum sampling frequency to avoid aliasing, equals twice the signal bandwidth. The relationship in (13.13) also validates the example spectrum for $\\mathrm{X}_{\\mathrm{s}}(\\mathrm{f})$, depicted in Fig. 13.2. Each instance of the dirac-delta-sampled spectrum is identical: $X_{s}(f)=X_{s}\\left(f \\pm k f_{s}\\right)$, where $k$ is any integer, as confirmed by substitution in (13.13). ${ }^{1}$\n\nLastly, it is important to note that the signal $\\mathbf{x}_{s}(t)$ cannot physically exist when $\\tau \\rightarrow 0$ due to the requirement of infinite power to generate it. This is evident from the integral of $X_{s}(f)$ over all frequencies."
},
{
    "text": "The spectrum of the sampled signal, $x_{s}(t)$, can be determined by substituting $s$ with $j \\omega$ in (13.7). However, a more intuitive method to find the spectrum of $x_{s}(t)$ involves recognizing that multiplication in the time domain corresponds to convolution in the frequency domain. To utilize this principle, observe that as $\\tau \\rightarrow 0$, $x_{s}(t)$ can be expressed as the product\n\n$$\n\\begin{equation*}\nx_{s}(t) = x_{c}(t) s(t) \\tag{13.8}\n\\end{equation*}\n$$\n\nwhere $s(t)$ represents a periodic pulse train, mathematically defined as\n\n$$\n\\begin{equation*}\ns(t) = \\sum_{n=-\\infty}^{\\infty} \\delta(t - nT) \\tag{13.9}\n\\end{equation*}\n$$\n\nwith $\\delta(t)$ being the unit impulse function, also known as the Dirac delta function. It is widely known that the Fourier transform of a periodic impulse train results in another periodic impulse train. Specifically, the spectrum of $s(t)$, denoted as $S(j \\omega)$, is given by\n\n$$\n\\begin{equation*}\nS(j \\omega) = \\frac{2 \\pi}{T} \\sum_{k=-\\infty}^{\\infty} \\delta\\left(\\omega - k \\frac{2 \\pi}{T}\\right) \\tag{13.10}\n\\end{equation*}\n$$\n\nExpressing (13.8) in the frequency domain, we obtain\n\n$$\n\\begin{equation*}\nX_{s}(j \\omega) = \\frac{1}{2 \\pi} X_{c}(j \\omega) \\otimes S(j \\omega) \\tag{13.11}\n\\end{equation*}\n$$\n\nwhere $\\otimes$ indicates convolution. By executing this convolution either mathematically or graphically, the spectrum of $X_{s}(j \\omega)$ is found to be\n\n$$\n\\begin{equation*}\nX_{s}(j \\omega) = \\frac{1}{T} \\sum_{k=-\\infty}^{\\infty} X_{c}\\left(j \\omega - \\frac{j k 2 \\pi}{T}\\right) \\tag{13.12}\n\\end{equation*}\n$$\n\nor, alternatively,\n\n$$\n\\begin{equation*}\nX_{s}(f) = \\frac{1}{T} \\sum_{k=-\\infty}^{\\infty} X_{c}\\left(j 2 \\pi f - j k 2 \\pi f_{s}\\right) \\tag{13.13}\n\\end{equation*}\n$$\n\nKey Point: The spectrum of a sampled signal comprises shifted replicas of the original continuous-time spectrum, ensuring no aliasing if the original waveform is bandlimited to half the sampling rate. The minimum sampling frequency needed to prevent aliasing is termed the Nyquist rate, equating to twice the signal bandwidth.\n\nEquations (13.12) and (13.13) demonstrate that the spectrum of the sampled signal, $x_{s}(t)$, consists of shifted versions of the spectrum of $x_{c}(t)$, thereby avoiding aliasing if $X_{c}(j \\omega)$ is bandlimited to $f_{s} / 2$. The minimum sampling frequency to avert aliasing, known as the Nyquist rate, is twice the signal bandwidth. The relationship in (13.13) also validates the example spectrum for $X_{s}(f)$, depicted in Fig. 13.2. Each instance of the dirac-delta-sampled spectrum is identical: $X_{s}(f) = X_{s}\\left(f \\pm k f_{s}\\right)$, where $k$ is any integer, as confirmed by substitution in (13.13). ${}^{1}$\n\nLastly, it is important to note that the signal $x_{s}(t)$ cannot physically exist when $\\tau \\rightarrow 0$ due to the requirement of an infinite amount of power to generate it. This is evident from the integral of $X_{s}(f)$ over all frequencies."
},
{
    "text": "The spectrum of the sampled signal, $x_{s}(t)$, can be determined by substituting $s$ with $j \\omega$ in (13.7). However, a more intuitive method to find the spectrum of $x_{s}(t)$ involves recalling that multiplication in the time domain corresponds to convolution in the frequency domain. To utilize this principle, observe that as $\\tau \\rightarrow 0$, $x_{s}(t)$ can be expressed as the product\n\n$$\n\\begin{equation*}\nx_{s}(t) = x_{c}(t) s(t) \\tag{13.8}\n\\end{equation*}\n$$\n\nwhere $s(t)$ represents a periodic pulse train, mathematically described by\n\n$$\n\\begin{equation*}\ns(t) = \\sum_{n=-\\infty}^{\\infty} \\delta(t - nT) \\tag{13.9}\n\\end{equation*}\n$$\n\nHere, $\\delta(t)$ is the unit impulse function, also known as the Dirac delta function. It is widely recognized that the Fourier transform of a periodic impulse train results in another periodic impulse train. Specifically, the spectrum of $s(t)$, denoted as $S(j \\omega)$, is given by\n\n$$\n\\begin{equation*}\nS(j \\omega) = \\frac{2 \\pi}{T} \\sum_{k=-\\infty}^{\\infty} \\delta\\left(\\omega - k \\frac{2 \\pi}{T}\\right) \\tag{13.10}\n\\end{equation*}\n$$\n\nBy expressing (13.8) in the frequency domain, we obtain\n\n$$\n\\begin{equation*}\nX_{s}(j \\omega) = \\frac{1}{2 \\pi} X_{c}(j \\omega) \\otimes S(j \\omega) \\tag{13.11}\n\\end{equation*}\n$$\n\nwhere $\\otimes$ indicates convolution. Ultimately, through either mathematical or graphical convolution, the spectrum of $X_{s}(j \\omega)$ is found to be\n\n$$\n\\begin{equation*}\nX_{s}(j \\omega) = \\frac{1}{T} \\sum_{k=-\\infty}^{\\infty} X_{c}\\left(j \\omega - \\frac{j k 2 \\pi}{T}\\right) \\tag{13.12}\n\\end{equation*}\n$$\n\nor alternatively,\n\n$$\n\\begin{equation*}\nX_{s}(f) = \\frac{1}{T} \\sum_{k=-\\infty}^{\\infty} X_{c}\\left(j 2 \\pi f - j k 2 \\pi f_{s}\\right) \\tag{13.13}\n\\end{equation*}\n$$\n\nKey Point: The spectrum of a sampled signal comprises shifted replicas of the original continuous-time spectrum, ensuring no aliasing if the original waveform is bandlimited to half the sampling rate. The minimum sampling frequency needed to prevent aliasing, known as the Nyquist rate, is twice the signal bandwidth.\n\nEquations (13.12) and (13.13) illustrate that the spectrum of the sampled signal $x_{s}(t)$ is a sum of shifted spectra of $x_{c}(t)$, thus avoiding aliasing if $X_{c}(j \\omega)$ is bandlimited to $f_{s} / 2$. The Nyquist rate, which is the minimum sampling frequency to avoid aliasing, equals twice the signal bandwidth. The relationship in (13.13) also validates the example spectrum for $X_{s}(f)$, depicted in Fig. 13.2. Each copy of the dirac-delta-sampled spectrum is identical: $X_{s}(f) = X_{s}(f \\pm k f_{s})$, where $k$ is any integer, as confirmed by substitution in (13.13). ${ }^{1}$\n\nLastly, it is important to note that the signal $x_{s}(t)$ cannot physically exist when $\\tau \\rightarrow 0$ due to the requirement of an infinite amount of power for its creation. This is evident from the integral of $X_{s}(f)$ over all frequencies."
},
{
    "text": "The spectrum of the sampled signal, $x_{s}(t)$, can be determined by substituting $s$ with $j \\omega$ in equation (13.7). However, a more intuitive method to derive the spectrum of $x_{s}(t)$ is to remember that multiplication in the time domain corresponds to convolution in the frequency domain. To apply this principle, observe that for $\\tau \\rightarrow 0$, $\\mathrm{x}_{\\mathrm{s}}(\\mathrm{t})$ can be expressed as the product\n\n$$\n\\begin{equation*}\n\\mathrm{x}_{\\mathrm{s}}(\\mathrm{t})=\\mathrm{x}_{\\mathrm{c}}(\\mathrm{t}) \\mathrm{s}(\\mathrm{t}) \\tag{13.8}\n\\end{equation*}\n$$\n\nwhere $\\mathrm{s}(\\mathrm{t})$ represents a periodic pulse train, mathematically defined as\n\n$$\n\\begin{equation*}\ns(t)=\\sum_{n=-\\infty}^{\\infty} \\delta(t-n T) \\tag{13.9}\n\\end{equation*}\n$$\n\nHere, $\\delta(\\mathrm{t})$ is the unit impulse function, also known as the Dirac delta function. It is widely recognized that the Fourier transform of a periodic impulse train results in another periodic impulse train. Specifically, the spectrum of $s(t)$, denoted as $S(j \\omega)$, is given by\n\n$$\n\\begin{equation*}\n\\mathrm{S}(\\mathrm{j} \\omega)=\\frac{2 \\pi}{\\mathrm{~T}} \\sum_{\\mathrm{k}=-\\infty}^{\\infty} \\delta\\left(\\omega-\\mathrm{k} \\frac{2 \\pi}{\\mathrm{~T}}\\right) \\tag{13.10}\n\\end{equation*}\n$$\n\nRewriting equation (13.8) in the frequency domain, we obtain\n\n$$\n\\begin{equation*}\nX_{s}(j \\omega)=\\frac{1}{2 \\pi} X_{c}(j \\omega) \\otimes S(j \\omega) \\tag{13.11}\n\\end{equation*}\n$$\n\nwhere $\\otimes$ signifies convolution. By executing this convolution either mathematically or graphically, the spectrum of $X_{s}(j \\omega)$ is found to be\n\n$$\n\\begin{equation*}\nX_{s}(j \\omega)=\\frac{1}{T} \\sum_{k=-\\infty}^{\\infty} X_{c}\\left(j \\omega-\\frac{j k 2 \\pi}{T}\\right) \\tag{13.12}\n\\end{equation*}\n$$\n\nor, alternatively,\n\n$$\n\\begin{equation*}\nX_{s}(f)=\\frac{1}{T} \\sum_{k=-\\infty}^{\\infty} X_{c}\\left(j 2 \\pi f-j k 2 \\pi f_{s}\\right) \\tag{13.13}\n\\end{equation*}\n$$\n\nKey Point: The spectrum of a sampled signal comprises shifted replicas of the original continuous-time spectrum, ensuring no aliasing if the original waveform is bandlimited to half the sampling rate. The minimum sampling frequency to prevent aliasing, known as the Nyquist rate, is twice the signal bandwidth.\n\nEquations (13.12) and (13.13) illustrate that the spectrum of the sampled signal, $x_{s}(t)$, consists of shifted versions of the spectrum of $x_{c}(t)$, thus avoiding aliasing if $X_{c}(j \\omega)$ is bandlimited to $f_{s} / 2$. The minimum sampling frequency to avoid aliasing, termed the Nyquist rate, equals twice the signal bandwidth. The relationship in (13.13) also validates the example spectrum for $\\mathrm{X}_{\\mathrm{s}}(\\mathrm{f})$, depicted in Fig. 13.2. Each replica of the dirac-delta-sampled spectrum is identical: $X_{s}(f)=X_{s}\\left(f \\pm k f_{s}\\right)$, where $k$ is any integer, as confirmed by substitution in (13.13). ${ }^{1}$\n\nLastly, it is important to note that the signal $\\mathbf{x}_{s}(t)$ cannot physically exist when $\\tau \\rightarrow 0$ due to the requirement of an infinite amount of power for its creation. This is evident when considering the integral of $X_{s}(f)$ over all frequencies."
},
{
    "text": "The z-transform is essentially a compact notation for (13.7). In particular, by defining\n\n$$\n\\begin{equation*}\nz \\equiv e^{s T} \\tag{13.14}\n\\end{equation*}\n$$\n\nwe can express\n\n$$\n\\begin{equation*}\nX(z) \\equiv \\sum_{n=-\\infty}^{\\infty} x_{c}(n T) z^{-n} \\tag{13.15}\n\\end{equation*}\n$$\n\nwhere $X(z)$ denotes the $z$-transform of the samples $x_{c}(n T)$. Two characteristics of the $z$-transform that stem from Laplace transform properties are:\n\n1. If $x(n) \\leftrightarrow X(z)$, then $x(n-k) \\leftrightarrow z^{-k} X(z)$\n2. Convolution in the time domain corresponds to multiplication in the frequency domain. Specifically, if $y(n)=h(n) \\otimes x(n)$, where $\\otimes$ denotes convolution, then $Y(z)=H(z) X(z)$. Conversely, multiplication in the time domain equates to convolution in the frequency domain.\n\nIt is important to note that $X(z)$ is not dependent on the sampling rate but is solely related to the values of $x_{c}(n T)$. In contrast, $X_{s}(s)$ represents the Laplace transform of the signal $x_{s}(t)$ as $\\tau \\rightarrow 0$. In other words, the signal $x(n)$ is simply a sequence of numbers that may (or may not) have been obtained by sampling a continuous-time signal. One way to conceptualize this sequence in relation to samples of a potential continuous-time signal is that the original sample time, $T$, has been effectively normalized to one (i.e., $f_{s}^{\\prime}=1 \\mathrm{~Hz}$). This normalization of the sample time, $T$, in both time and frequency, justifies the spectral relationship between $X_{s}(f)$ and $X(\\omega)$ depicted in Fig. 13.2. Specifically, the relationship between $X_{s}(f)$ and $X(\\omega)$ is given by\n\n$$\n\\begin{equation*}\n\\mathrm{X}_{\\mathrm{s}}(\\mathrm{f})=\\mathrm{X}\\left(\\frac{2 \\pi \\mathrm{f}}{\\mathrm{f}_{\\mathrm{s}}}\\right) \\tag{13.16}\n\\end{equation*}\n$$\n\nor, equivalently, the following frequency scaling is applied:\n\n$$\n\\begin{equation*}\n\\omega=\\frac{2 \\pi f}{f_{s}} \\tag{13.17}\n\\end{equation*}\n$$\n\nThis normalization leads to discrete-time signals having $\\omega$ in units of radians/sample, whereas the original continuous-time signals have frequency units of cycles/second (hertz) or radians/second. For instance, a continuous-time sinusoidal signal of 1 kHz sampled at 4 kHz will exhibit a change of $\\pi / 2$ radians between each sample. Thus, such a discrete-time signal is defined to have a frequency of $\\pi / 2 \\mathrm{rad} / \\mathrm{sample}$. Other examples of discrete-time sinusoidal signals are presented in Fig. 13.4. The spectra of discrete-time signals consistently exhibit invariance under shifts of $2 \\pi$ radians/sample. For example, a discrete-time signal with a frequency of $\\pi / 4 \\mathrm{rad} / \\mathrm{sample}$ is indistinguishable from one with $9 \\pi / 4 \\mathrm{rad} / \\mathrm{sample}$. Consequently, discrete-time signals are typically fully characterized by considering their spectra within the range of $-\\pi$ to $\\pi \\mathrm{rad} / \\mathrm{sample}$. For a more in-depth discussion of this topic, refer to [Proakis, 1992].\n\n#### EXAMPLE 13.1\n\nConsider the spectra of $X_{c}(f)$ and $X_{s}(f)$, depicted in Fig. 13.2, where $f_{0}$ is 1 Hz and $f_{s}$ is 4 Hz. Compare the time and spectrum plots of $X_{s}(f)$ and $X_{s 2}(f)$, where $X_{s 2}(f)$ is sampled at 12 Hz. How do the spectra differ between the two sampling rates?\n\n#### Solution\n\nBy sampling at 12 Hz, the spectrum of $X_{c}(f)$ repeats every 12 Hz, resulting in the signals shown in Fig. 13.5. Note that for $X(\\omega)$, 4 Hz is normalized to $2 \\pi \\mathrm{rad} / \\mathrm{sample}$, whereas for $X_{2}(\\omega)$, 12 Hz is normalized to $2 \\pi \\mathrm{rad} / \\mathrm{sample}$."
},
{
    "text": "The z-transform essentially condenses the notation of equation (13.7) into a more compact form. By defining \\( z \\equiv e^{s T} \\) as per equation (13.14), we can express the z-transform as \\( X(z) \\equiv \\sum_{n=-\\infty}^{\\infty} x_{c}(n T) z^{-n} \\) in equation (13.15), where \\( X(z) \\) denotes the z-transform of the sequence \\( x_{c}(n T) \\). Two properties of the z-transform derived from the Laplace transform are:\n\n1. If \\( x(n) \\) corresponds to \\( X(z) \\), then \\( x(n-k) \\) corresponds to \\( z^{-k} X(z) \\).\n2. The convolution operation in the time domain translates to multiplication in the frequency domain. This means if \\( y(n)=h(n) \\otimes x(n) \\), with \\( \\otimes \\) signifying convolution, then \\( Y(z)=H(z) X(z) \\). Conversely, multiplication in the time domain corresponds to convolution in the frequency domain.\n\nIt's important to note that \\( X(z) \\) depends solely on the sequence \\( x_{c}(n T) \\) and not on the sampling rate. However, \\( X_{s}(s) \\) represents the Laplace transform of the continuous-time signal \\( x_{s}(t) \\) as \\( \\tau \\rightarrow 0 \\). Essentially, \\( x(n) \\) is a sequence of numbers potentially derived from sampling a continuous-time signal. Regarding this sequence in the context of a possible continuous-time signal, it's as if the original sampling period \\( T \\) is normalized to unity (i.e., \\( f_{s}^{\\prime}=1 \\) Hz). This normalization in both time and frequency domains justifies the spectral relationship between \\( X_{s}(f) \\) and \\( X(\\omega) \\) as depicted in Fig. 13.2. The relationship is given by equation (13.16) and the frequency scaling in equation (13.17).\n\nNormalization leads to discrete-time signals expressing \\( \\omega \\) in radians per sample, in contrast to continuous-time signals, which are in cycles per second (hertz) or radians per second. For instance, a 1 kHz continuous-time sinusoidal signal sampled at 4 kHz will exhibit a change of \\( \\pi / 2 \\) radians between samples. Thus, such a discrete-time signal is said to have a frequency of \\( \\pi / 2 \\) rad/sample. Examples of such discrete-time sinusoidal signals are presented in Fig. 13.4. The spectra of discrete-time signals are inherently periodic with a period of \\( 2 \\pi \\) radians/sample. For example, a discrete-time signal with a frequency of \\( \\pi / 4 \\) rad/sample is indistinguishable from one with \\( 9 \\pi / 4 \\) rad/sample. Consequently, the spectrum of discrete-time signals is typically analyzed within the range of \\( -\\pi \\) to \\( \\pi \\) rad/sample. For a deeper understanding of this subject, refer to [Proakis, 1992].\n\n#### EXAMPLE 13.1\n\nExamine the spectra of \\( X_{c}(f) \\) and \\( X_{s}(f) \\) in Fig. 13.2, where \\( f_{0} \\) is 1 Hz and \\( f_{s} \\) is 4 Hz. Compare the time and spectrum plots of \\( X_{s}(f) \\) and \\( X_{s 2}(f) \\), with the latter sampled at 12 Hz. How do the spectra differ with the two sampling rates?\n\n#### Solution\n\nSampling at 12 Hz causes the spectrum of \\( X_{c}(f) \\) to repeat every 12 Hz, as depicted in Fig. 13.5. It is observed that for \\( X(\\omega) \\), 4 Hz is normalized to \\( 2 \\pi \\) rad/sample, while for \\( X_{2}(\\omega) \\), 12 Hz is similarly normalized to \\( 2 \\pi \\) rad/sample."
},
{
    "text": "The z-transform serves as a concise notation for the expression (13.7). We define\n\n$$\n\\begin{equation*}\nz \\equiv e^{s T} \\tag{13.14}\n\\end{equation*}\n$$\n\nwhich allows us to express\n\n$$\n\\begin{equation*}\nX(z) \\equiv \\sum_{n=-\\infty}^{\\infty} x_{c}(n T) z^{-n} \\tag{13.15}\n\\end{equation*}\n$$\n\nHere, $X(z)$ denotes the z-transform of the sequence $x_{c}(n T)$. The z-transform inherits two key properties from the Laplace transform:\n\n1. If $x(n)$ corresponds to $X(z)$, then the shifted sequence $x(n-k)$ corresponds to $z^{-k} X(z)$.\n2. The convolution of signals in the time domain corresponds to their multiplication in the frequency domain. For instance, if $y(n)=h(n) \\otimes x(n)$, where $\\otimes$ signifies convolution, then in the frequency domain $Y(z)=H(z) X(z)$. Conversely, multiplication in the time domain translates to convolution in the frequency domain.\n\nIt's important to note that $X(z)$ depends solely on the sequence $x_{c}(n T)$ and not on the sampling rate. In contrast, $X_{s}(s)$ is the Laplace transform of the continuous-time signal $x_{s}(t)$ as $\\tau \\rightarrow 0$. This implies that $x(n)$ is simply a sequence of numbers that may or may not have been derived from sampling a continuous-time signal. When considering these numbers in relation to samples of a potential continuous-time signal, it's as if the original sampling period, $T$, has been normalized to unity (i.e., $f_{s}^{\\prime}=1 \\mathrm{~Hz}$). This normalization of the sampling period $T$ in both time and frequency aligns with the spectral relationship between $X_{s}(f)$ and $X(\\omega)$ depicted in Fig. 13.2. Specifically, this relationship is given by\n\n$$\n\\begin{equation*}\n\\mathrm{X}_{\\mathrm{s}}(\\mathrm{f})=\\mathrm{X}\\left(\\frac{2 \\pi \\mathrm{f}}{\\mathrm{f}_{\\mathrm{s}}}\\right) \\tag{13.16}\n\\end{equation*}\n$$\n\nor, equivalently, the frequency scaling can be expressed as\n\n$$\n\\begin{equation*}\n\\omega=\\frac{2 \\pi f}{f_{s}} \\tag{13.17}\n\\end{equation*}\n$$\n\nThis normalization implies that discrete-time signals have $\\omega$ measured in radians per sample, whereas continuous-time signals are measured in cycles per second (hertz) or radians per second. For example, a 1 kHz continuous-time sinusoidal signal sampled at 4 kHz will experience a change of $\\pi / 2$ radians between each sample. Hence, the discrete-time signal is defined to have a frequency of $\\pi / 2 \\mathrm{rad} / \\mathrm{sample}$. Additional examples of discrete-time sinusoidal signals are presented in Fig. 13.4. It's noteworthy that the spectra of discrete-time signals consistently exhibit periodicity with a period of $2 \\pi$ radians per sample. For instance, a discrete-time signal with a frequency of $\\pi / 4 \\mathrm{rad} / \\mathrm{sample}$ is indistinguishable from one with a frequency of $9 \\pi / 4 \\mathrm{rad} / \\mathrm{sample}$. Therefore, the spectra of discrete-time signals are typically analyzed within the range of $-\\pi$ to $\\pi \\mathrm{rad} / \\mathrm{sample}$. For a more in-depth discussion, consult [Proakis, 1992].\n\n#### EXAMPLE 13.1\n\nExamine the spectra of $X_{c}(f)$ and $X_{s}(f)$ in Fig. 13.2, where $f_{0}$ is 1 Hz and $f_{s}$ is 4 Hz. Compare the time and spectrum plots of $X_{s}(f)$ and $X_{s 2}(f)$, where $X_{s 2}(f)$ is sampled at 12 Hz. How do the spectra differ between the two sampling rates?\n\n#### Solution\n\nSampling at 12 Hz causes the spectrum of $X_{c}(f)$ to repeat every 12 Hz, resulting in the signals depicted in Fig. 13.5. It's important to observe that for $X(\\omega)$, a 4 Hz frequency is normalized to $2 \\pi \\mathrm{rad} / \\mathrm{sample}$, whereas for $X_{2}(\\omega)$, a 12 Hz frequency is normalized to $2 \\pi \\mathrm{rad} / \\mathrm{sample}$."
},
{
    "text": "For our objectives, the z-transform serves as a concise notation for (13.7). To clarify, by defining\n\n$$\n\\begin{equation*}\nz \\equiv e^{s T} \\tag{13.14}\n\\end{equation*}\n$$\n\nwe can express\n\n$$\n\\begin{equation*}\nX(z) \\equiv \\sum_{n=-\\infty}^{\\infty} x_{c}(n T) z^{-n} \\tag{13.15}\n\\end{equation*}\n$$\n\nwhere $X(z)$ is referred to as the $z$-transform of the samples $x_{c}(n T)$. Two characteristics of the $\\mathbf{z}$-transform that can be inferred from Laplace transform properties are:\n\n1. If $x(n) \\leftrightarrow X(z)$, then $x(n-k) \\leftrightarrow z^{-k} X(z)$\n2. Convolution in the time domain corresponds to multiplication in the frequency domain. Specifically, if $y(n)=h(n) \\otimes x(n)$, where $\\otimes$ signifies convolution, then $Y(z)=H(z) X(z)$. Conversely, multiplication in the time domain corresponds to convolution in the frequency domain.\n\nIt's important to note that $X(z)$ is independent of the sampling rate and is solely related to the sequence $x_{c}(n T)$, whereas $X_{s}(s)$ is the Laplace transform of the signal $x_{s}(t)$ as $\\tau \\rightarrow 0$. In simpler terms, the signal $x(n)$ is a sequence of numbers that may (or may not) have been derived from sampling a continuous-time signal. One perspective on this sequence in relation to samples of a potential continuous-time signal is that the original sample time, $T$, has been normalized to one (i.e., $f_{s}^{\\prime}=1 \\mathrm{~Hz}$ ). This normalization of the sample time, $T$, in both time and frequency, validates the spectral correlation between $X_{s}(f)$ and $X(\\omega)$ depicted in Fig. 13.2. Specifically, the relationship between $X_{s}(f)$ and $X(\\omega)$ is expressed as\n\n$$\n\\begin{equation*}\n\\mathrm{X}_{\\mathrm{s}}(\\mathrm{f})=\\mathrm{X}\\left(\\frac{2 \\pi \\mathrm{f}}{\\mathrm{f}_{\\mathrm{s}}}\\right) \\tag{13.16}\n\\end{equation*}\n$$\n\nor, equivalently, the following frequency scaling is applied:\n\n$$\n\\begin{equation*}\n\\omega=\\frac{2 \\pi f}{f_{s}} \\tag{13.17}\n\\end{equation*}\n$$\n\nThis normalization leads to discrete-time signals having $\\omega$ in units of radians per sample, whereas the original continuous-time signals have frequency units of cycles per second (hertz) or radians per second. For instance, a continuous-time sinusoidal signal of 1 kHz when sampled at 4 kHz will undergo a change of $\\pi / 2$ radians between each sample. Thus, such a discrete-time signal is defined to have a frequency of $\\pi / 2 \\mathrm{rad} / \\mathrm{sample}$. Additional examples of discrete-time sinusoidal signals are presented in Fig. 13.4. The spectra of discrete-time signals always remain unchanged under shifts of $2 \\pi$ radians per sample. For instance, a discrete-time signal with a frequency of $\\pi / 4 \\mathrm{rad} / \\mathrm{sample}$ is indistinguishable from one with $9 \\pi / 4 \\mathrm{rad} / \\mathrm{sample}$. Therefore, typically discrete-time signals are fully characterized by examining their spectra solely between $-\\pi$ and $\\pi \\mathrm{rad} / \\mathrm{sample}$. For a more in-depth exploration of this subject, refer to [Proakis, 1992].\n\n#### EXAMPLE 13.1\n\nExamine the spectra of $X_{c}(f)$ and $X_{s}(f)$, depicted in Fig. 13.2, where $f_{0}$ is 1 Hz and $f_{s}$ is 4 Hz. Compare the time and spectrum plots of $X_{s}(f)$ and $X_{s 2}(f)$, where $X_{s 2}(f)$ is sampled at 12 Hz. How do the spectra differ between the two sampling rates?\n\n#### Solution\n\nWhen sampled at 12 Hz, the spectrum of $\\mathrm{X}_{\\mathrm{c}}(\\mathrm{f})$ repeats every 12 Hz, resulting in the signals shown in Fig. 13.5.\nObserve that for $X(\\omega), 4 \\mathrm{~Hz}$ corresponds to $2 \\pi \\mathrm{rad} / \\mathrm{sample}$, whereas for $X_{2}(\\omega), 12 \\mathrm{~Hz}$ corresponds to $2 \\pi \\mathrm{rad} / \\mathrm{sample}$.\n"
},
{
    "text": "---[Rephrased Text]---\n\nFor our objectives, the z-transform essentially condenses (13.7) into a more succinct notation. To elaborate, we define\n\n$$\n\\begin{equation*}\nz \\equiv e^{s T} \\tag{13.14}\n\\end{equation*}\n$$\n\nwhich allows us to express\n\n$$\n\\begin{equation*}\nX(z) \\equiv \\sum_{n=-\\infty}^{\\infty} x_{c}(n T) z^{-n} \\tag{13.15}\n\\end{equation*}\n$$\n\nHere, $X(z)$ represents the z-transform of the sequence $x_{c}(n T)$. Deriving from Laplace transform properties, two characteristics of the z-transform stand out:\n\n1. When $x(n)$ corresponds to $X(z)$, then $x(n-k)$ corresponds to $z^{-k} X(z)$.\n2. Convolution in the time domain corresponds to multiplication in the frequency domain. For instance, if $y(n)=h(n) \\otimes x(n)$, denoting convolution with $\\otimes$, then $Y(z)=H(z) X(z)$. Conversely, multiplication in the time domain corresponds to convolution in the frequency domain.\n\nIt's important to note that $X(z)$ is independent of the sampling rate and depends solely on the sequence $x_{c}(n T)$, whereas $X_{s}(s)$ is the Laplace transform of the signal $x_{s}(t)$ as $\\tau \\rightarrow 0$. This implies that the sequence $x(n)$ is a sequence of numbers that might have been derived from sampling a continuous-time signal. One interpretation of this sequence in relation to samples of a potential continuous-time signal is that the original sampling period, $T$, is normalized to unity (i.e., $f_{s}^{\\prime}=1 \\mathrm{~Hz}$). This normalization of the sampling period, $T$, in both time and frequency domains, justifies the spectral relationship between $X_{s}(f)$ and $X(\\omega)$ depicted in Fig. 13.2. Specifically, the relationship is defined by\n\n$$\n\\begin{equation*}\n\\mathrm{X}_{\\mathrm{s}}(\\mathrm{f})=\\mathrm{X}\\left(\\frac{2 \\pi \\mathrm{f}}{\\mathrm{f}_{\\mathrm{s}}}\\right) \\tag{13.16}\n\\end{equation*}\n$$\n\nor, equivalently, the following frequency scaling is applied:\n\n$$\n\\begin{equation*}\n\\omega=\\frac{2 \\pi f}{f_{s}} \\tag{13.17}\n\\end{equation*}\n$$\n\nThis normalization leads to discrete-time signals having $\\omega$ measured in radians per sample, while the original continuous-time signals are measured in cycles per second (hertz) or radians per second. For instance, a 1 kHz continuous-time sinusoidal signal sampled at 4 kHz will exhibit a change of $\\pi / 2$ radians between each sample. Hence, such a discrete-time signal is defined as having a frequency of $\\pi / 2 \\mathrm{rad} / \\mathrm{sample}$. Other examples of discrete-time sinusoidal signals are depicted in Fig. 13.4. The spectra of discrete-time signals consistently exhibit invariance under shifts of $2 \\pi$ radians per sample. For example, a discrete-time signal with a frequency of $\\pi / 4 \\mathrm{rad} / \\mathrm{sample}$ is indistinguishable from one with $9 \\pi / 4 \\mathrm{rad} / \\mathrm{sample}$. Consequently, discrete-time signals are typically characterized by examining their spectra within the range of $-\\pi$ to $\\pi \\mathrm{rad} / \\mathrm{sample}$. For a more in-depth exploration of this subject, refer to [Proakis, 1992].\n\n#### EXAMPLE 13.1\n\nConsider the spectra of $X_{c}(f)$ and $X_{s}(f)$, as illustrated in Fig. 13.2, where $f_{0}$ is 1 Hz and $f_{s}$ is 4 Hz. Analyze the time and spectrum plots of $X_{s}(f)$ and $X_{s 2}(f)$, the latter being sampled at 12 Hz. Discuss the differences in the spectra between the two sampling rates.\n\n#### Solution\n\nWhen sampled at 12 Hz, the spectrum of $X_{c}(f)$ is repeated every 12 Hz, yielding the signals shown in Fig. 13.5. Note that for $X(\\omega)$, 4 Hz corresponds to $2 \\pi \\mathrm{rad} / \\mathrm{sample}$, whereas for $X_{2}(\\omega)$, 12 Hz corresponds to $2 \\pi \\mathrm{rad} / \\mathrm{sample}$.\n\n... [Images Descriptions Rephrased Text] ..."
},
{
    "text": "---[Rephrased Text]---\nIn our context, the z-transform essentially condenses equation (13.7). To be precise, by setting\n\n$$\n\\begin{equation*}\nz = e^{s T} \\tag{13.14}\n\\end{equation*}\n$$\n\nwe derive\n\n$$\n\\begin{equation*}\nX(z) = \\sum_{n=-\\infty}^{\\infty} x_{c}(n T) z^{-n} \\tag{13.15}\n\\end{equation*}\n$$\n\nHere, $X(z)$ is referred to as the z-transform of the sequence $x_{c}(n T)$. Deriving from the properties of the Laplace transform, two characteristics of the z-transform are:\n\n1. If $x(n)$ corresponds to $X(z)$, then $x(n-k)$ corresponds to $z^{-k} X(z)$.\n2. The convolution operation in the time domain equates to multiplication in the frequency domain. To illustrate, if $y(n)=h(n) * x(n)$, with $*$ denoting convolution, then $Y(z)=H(z) X(z)$. Conversely, multiplication in the time domain corresponds to convolution in the frequency domain.\n\nIt's important to recognize that $X(z)$ depends solely on the sequence $x_{c}(n T)$, not on the sampling rate, whereas $X_{s}(s)$ represents the Laplace transform of $x_{s}(t)$ as $\\tau$ approaches zero. This implies that $x(n)$ is merely a sequence of numbers, potentially derived from sampling a continuous-time signal. Regarding these numbers in relation to the possible samples of a continuous-time signal, consider that the original sampling period, $T$, has been normalized to unity (i.e., $f_{s}^{\\prime}=1$ Hz). This normalization of the sampling period, $T$, in both the time and frequency domains, substantiates the spectral correlation between $X_{s}(f)$ and $X(\\omega)$ as depicted in Fig. 13.2. Specifically, their relationship is defined by\n\n$$\n\\begin{equation*}\nX_{s}(f) = X\\left(\\frac{2 \\pi f}{f_{s}}\\right) \\tag{13.16}\n\\end{equation*}\n$$\n\nor, by the frequency scaling rule:\n\n$$\n\\begin{equation*}\n\\omega = \\frac{2 \\pi f}{f_{s}} \\tag{13.17}\n\\end{equation*}\n$$\n\nThis normalization yields discrete-time signals with $\\omega$ measured in radians per sample, as opposed to the original continuous-time signals, which are measured in cycles per second (hertz) or radians per second. For instance, a continuous-time sinusoidal signal at 1 kHz, when sampled at 4 kHz, will exhibit a change of $\\pi / 2$ radians between each sample. Thus, such a discrete-time signal is assigned a frequency of $\\pi / 2$ rad/sample. Additional examples of discrete-time sinusoidal signals are presented in Fig. 13.4. It's noteworthy that the spectra of discrete-time signals consistently exhibit invariance under shifts of $2 \\pi$ radians/sample. For instance, a discrete-time signal with a frequency of $\\pi / 4$ rad/sample exhibits the same characteristics as one with $9 \\pi / 4$ rad/sample. Consequently, discrete-time signals are typically characterized by examining their spectra within the range of $-\\pi$ to $\\pi$ rad/sample. For a comprehensive analysis of this subject, refer to [Proakis, 1992].\n\n#### EXAMPLE 13.1\n\nExamine the spectra of $X_{c}(f)$ and $X_{s}(f)$ in Fig. 13.2, where $f_{0}$ is 1 Hz and $f_{s}$ is 4 Hz. Contrast the time and spectrum plots of $X_{s}(f)$ with $X_{s 2}(f)$, the latter sampled at 12 Hz. How do the spectra vary with the different sampling rates?\n\n#### Solution\n\nSampling at 12 Hz causes the spectrum of $X_{c}(f)$ to repeat every 12 Hz, producing the signals depicted in Fig. 13.5. It's worth noting that for $X(\\omega)$, a sampling rate of 4 Hz is normalized to $2 \\pi$ rad/sample, whereas for $X_{2}(\\omega)$, a rate of 12 Hz is also normalized to $2 \\pi$ rad/sample.\n\n... [Additional text and descriptions follow, adhering to the original context and meaning] ..."
},
{
    "text": "---[Rephrased Text]---\nFor our objectives, the z-transform serves as a concise notation corresponding to equation (13.7). By establishing\n\n$$\n\\begin{equation*}\nz \\equiv e^{s T} \\tag{13.14}\n\\end{equation*}\n$$\n\nwe can express\n\n$$\n\\begin{equation*}\nX(z) \\equiv \\sum_{n=-\\infty}^{\\infty} x_{c}(n T) z^{-n} \\tag{13.15}\n\\end{equation*}\n$$\n\nwhere $X(z)$ denotes the z-transform of the sequence $x_{c}(n T)$. Two properties of the z-transform, derived from Laplace transform characteristics, are:\n\n1. If $x(n)$ corresponds to $X(z)$, then $x(n-k)$ corresponds to $z^{-k} X(z)$.\n2. Time-domain convolution corresponds to frequency-domain multiplication. If $y(n)=h(n) \\otimes x(n)$, where $\\otimes$ signifies convolution, then $Y(z)=H(z) X(z)$. Conversely, multiplication in the time domain is equivalent to convolution in the frequency domain.\n\nIt's important to note that $X(z)$ depends solely on the sequence $x_{c}(n T)$ and not on the sampling rate, whereas $X_{s}(s)$ is the Laplace transform of $x_{s}(t)$ as $\\tau$ approaches zero. This implies that $x(n)$ can be considered as a sequence of numbers, potentially derived from sampling a continuous-time signal. Regarding this sequence in relation to possible continuous-time signal samples, the original sampling time, $T$, is normalized to unity (i.e., $f_{s}^{\\prime}=1 \\mathrm{~Hz}$). This normalization of $T$ in both time and frequency domains rationalizes the spectral relationship between $X_{s}(f)$ and $X(\\omega)$ as depicted in Fig. 13.2. Specifically, the connection between $X_{s}(f)$ and $X(\\omega)$ is expressed by\n\n$$\n\\begin{equation*}\n\\mathrm{X}_{\\mathrm{s}}(\\mathrm{f})=\\mathrm{X}\\left(\\frac{2 \\pi \\mathrm{f}}{\\mathrm{f}_{\\mathrm{s}}}\\right) \\tag{13.16}\n\\end{equation*}\n$$\n\nor, equivalently, the following frequency scaling applies:\n\n$$\n\\begin{equation*}\n\\omega=\\frac{2 \\pi f}{f_{s}} \\tag{13.17}\n\\end{equation*}\n$$\n\nThis normalization leads to discrete-time signals having $\\omega$ measured in radians per sample, while the original continuous-time signals are measured in cycles per second (hertz) or radians per second. For instance, a 1 kHz continuous-time sinusoidal signal sampled at 4 kHz will vary by $\\pi / 2$ radians between each sample. Hence, such a discrete-time signal is defined to have a frequency of $\\pi / 2 \\mathrm{rad} / \\mathrm{sample}$. Additional examples of discrete-time sinusoidal signals are presented in Fig. 13.4. The spectra of discrete-time signals consistently exhibit invariance under shifts of $2 \\pi$ radians per sample. For instance, a discrete-time signal with a frequency of $\\pi / 4 \\mathrm{rad} / \\mathrm{sample}$ is indistinguishable from one with $9 \\pi / 4 \\mathrm{rad} / \\mathrm{sample}$. Consequently, discrete-time signals are typically fully characterized by examining their spectra within the range of $-\\pi$ to $\\pi \\mathrm{rad} / \\mathrm{sample}$. For a more in-depth discussion, consult [Proakis, 1992].\n\n#### EXAMPLE 13.1\n\nExamine the spectra of $X_{c}(f)$ and $X_{s}(f)$, depicted in Fig. 13.2, where $f_{0}$ is 1 Hz and $f_{s}$ is 4 Hz. Compare the time and spectrum plots of $X_{s}(f)$ and $X_{s 2}(f)$, where $X_{s 2}(f)$ is sampled at 12 Hz. What are the spectral differences between the two sampling rates?\n\n#### Solution\n\nWhen sampled at 12 Hz, the spectrum of $X_{c}(f)$ repeats every 12 Hz, producing the signals illustrated in Fig. 13.5. Note that for $X(\\omega)$, 4 Hz is normalized to $2 \\pi \\mathrm{rad} / \\mathrm{sample}$, while for $X_{2}(\\omega)$, 12 Hz is normalized to $2 \\pi \\mathrm{rad} / \\mathrm{sample}$."
},
{
    "text": "In our context, the z-transform serves as a compact notation equivalent to (13.7). By setting\n\n$$\n\\begin{equation*}\nz = e^{sT} \\tag{13.14}\n\\end{equation*}\n$$\n\nwe derive\n\n$$\n\\begin{equation*}\nX(z) = \\sum_{n=-\\infty}^{\\infty} x_{c}(nT) z^{-n} \\tag{13.15}\n\\end{equation*}\n$$\n\nHere, $X(z)$ denotes the z-transform of the discrete samples $x_{c}(nT)$. The z-transform inherits two key properties from the Laplace transform:\n\n1. When $x(n)$ corresponds to $X(z)$, then $x(n-k)$ corresponds to $z^{-k} X(z)$.\n2. Time-domain convolution translates to frequency-domain multiplication. For instance, if $y(n) = h(n) \\otimes x(n)$, with $\\otimes$ signifying convolution, then $Y(z) = H(z) X(z)$. Conversely, multiplication in the time domain equates to convolution in the frequency domain.\n\nIt's important to note that $X(z)$ depends solely on the sequence $x_{c}(nT)$ and not on the sampling rate, whereas $X_{s}(s)$ is the Laplace transform of the continuous signal $x_{s}(t)$ as $\\tau$ approaches zero. This implies that $x(n)$ is a sequence of numbers potentially derived from sampling a continuous signal. This sequence can be conceptualized in relation to the continuous signal's samples, with the original sampling period, $T$, normalized to unity (i.e., $f_{s}^{\\prime}=1$ Hz). This normalization of the sampling period, $T$, across both time and frequency domains, validates the spectral correlation depicted in Fig. 13.2 between $X_{s}(f)$ and $X(\\omega)$. Specifically, their relationship is defined as\n\n$$\n\\begin{equation*}\nX_{s}(f) = X\\left(\\frac{2\\pi f}{f_{s}}\\right) \\tag{13.16}\n\\end{equation*}\n$$\n\nor, equivalently, the following frequency scaling is applied:\n\n$$\n\\begin{equation*}\n\\omega = \\frac{2\\pi f}{f_{s}} \\tag{13.17}\n\\end{equation*}\n$$\n\nThis normalization leads to discrete-time signals having $\\omega$ measured in radians per sample, in contrast to continuous-time signals, which are measured in cycles per second (hertz) or radians per second. For instance, a 1 kHz continuous-time sinusoidal signal sampled at 4 kHz will exhibit a change of $\\pi/2$ radians between each sample. Thus, such a discrete-time signal is defined as having a frequency of $\\pi/2$ rad/sample. Additional examples of discrete-time sinusoidal signals are presented in Fig. 13.4. The spectra of discrete-time signals consistently exhibit periodicity under shifts of $2\\pi$ radians/sample. For example, a discrete-time signal with a frequency of $\\pi/4$ rad/sample is indistinguishable from one with $9\\pi/4$ rad/sample. Consequently, discrete-time signals are typically characterized by analyzing their spectra within the range of $-\\pi$ to $\\pi$ rad/sample. For an in-depth exploration of this subject, refer to [Proakis, 1992].\n\n#### EXAMPLE 13.1\n\nExamine the spectra of $X_{c}(f)$ and $X_{s}(f)$ in Fig. 13.2, where $f_{0}$ is 1 Hz and $f_{s}$ is 4 Hz. Compare the time and spectrum plots of $X_{s}(f)$ and $X_{s2}(f)$, the latter sampled at 12 Hz. Identify the spectral distinctions arising from the different sampling rates.\n\n#### Solution\n\nSampling at 12 Hz causes the spectrum of $X_{c}(f)$ to replicate every 12 Hz, yielding the signals depicted in Fig. 13.5. Observe that for $X(\\omega)$, 4 Hz is normalized to $2\\pi$ rad/sample, while for $X_{2}(\\omega)$, 12 Hz is normalized to $2\\pi$ rad/sample."
},
{
    "text": "Two crucial operations in discrete-time signal processing are downsampling and upsampling. Downsampling aims to decrease the sample rate, thereby reducing the data volume for processing and storage, ideally without losing information. Conversely, upsampling is used to increase the sample rate. While noninteger rates are achievable, this discussion focuses on integer values of $L$.\n\nDownsampling is performed by retaining every $L$th sample and discarding the rest. As depicted in Fig. 13.6, this process expands the original signal's spectrum by a factor of $L$. To prevent digital aliasing, the original signal's spectrum must be band-limited to $\\pi / \\mathrm{L}$ before downsampling. Essentially, the signal should be sampled at $L$ times its minimum rate to avoid information loss during downsampling.\n\nKey Point: To prevent aliasing when downsampling by $L$, the original signal must be sampled at $L$ times the Nyquist rate.\n\nUpsampling involves inserting $L-1$ zero values between each pair of consecutive samples, as shown in Fig. 13.7. This results in a spectrum that is identical to the original but renormalized along the frequency axis. Specifically, upsampling by $L$ scales the frequency axis by $L$, so $2 \\pi$ now corresponds to where $L 2 \\pi$ was in the original signal, and $L$ identical copies of the original spectrum are compressed into the range 0 to $2 \\pi$. This operation is beneficial for increasing a signal's effective sampling rate, especially when followed by postfiltering.\n\nKey Point: Upsampling by $L$ leads to a frequency axis renormalization, compressing $L$ copies of the original spectrum into the range 0 to $2 \\pi$.\n\nThe following examples elucidate the spectral changes due to downsampling and upsampling.\n\n#### EXAMPLE 13.2\n\nConsider the signal $\\mathrm{x}_{2}(n)$ from Example 13.1, which is to be downsampled by $L=3$. Determine the new spectrum, $X_{3}(\\omega)$, when every third sample is retained and the others are discarded. For an original sequence $\\mathrm{x}_{1}, \\mathrm{x}_{2}, \\mathrm{x}_{3}, \\mathrm{x}_{4}, \\ldots$, the new sequence becomes $\\mathrm{x}_{1}, \\mathrm{x}_{4}, \\mathrm{x}_{7}, \\mathrm{x}_{10}, \\ldots$\n\nimage_name:(a)\ndescription:The system block diagram labeled \"(a)\" illustrates the process of downsampling by a factor of 4, shown in both the time and frequency domains.\n\n1. **Main Components:**\n- **Input Signal:** The left-side time domain graph displays a discrete signal with regular sample intervals, depicted as a sinusoidal waveform with discrete points.\n- **Downsampling Block:** Indicated by a downward arrow and \"L=4\", this block reduces the sampling rate by keeping every fourth sample and discarding the rest.\n- **Output Signal:** The right-side time domain graph shows the downsampled signal with fewer sample points, reflecting a downsampling factor of 4.\n\n2. **Flow of Information:**\n- The input signal enters the downsampling block, undergoes rate reduction, and emerges as the downsampled signal.\n- Arrows indicate the signal flow direction.\n\n3. **Labels and Annotations:**\n- The time domain is marked with \"n\" for discrete time indices.\n- \"L = 4\" denotes the downsampling factor.\n- The frequency domain is labeled with \"ω\" for angular frequency.\n\n4. **Frequency Domain Representation:**\n- Below the time domain graphs, the corresponding frequency domain representations are shown.\n- The original spectrum on the left features two peaks at specific frequencies. The right-side spectrum after downsampling exhibits aliasing, with repeated frequency components due to the reduced sampling rate.\n\n5. **Overall System Function:**\n- This system reduces a discrete-time signal's sampling rate by a factor of 4, retaining every fourth sample and discarding others, affecting both time domain representation and introducing frequency domain aliasing. The diagram effectively illustrates these changes.\n\nimage_name:(b)\ndescription:The graph labeled \"(b)\" is a frequency domain representation of a signal downsampled by a factor of 4, showing the spectral effects of downsampling.\n\n1. **Type of Graph and Function:**\n- This frequency domain graph depicts the signal's spectrum after downsampling.\n\n2. **Axes Labels and Units:**\n- The horizontal axis is labeled with angular frequency $\\omega$ in radians per second, with key points at $0$, $\\frac{4\\pi}{6}$, and $2\\pi$.\n- The vertical axis represents frequency component amplitude, without specific units.\n\n3. **Overall Behavior and Trends:**\n- The spectrum displays a periodic triangular shape with repeating peaks and valleys.\n- Peaks occur at multiples of $\\frac{4\\pi}{6}$, indicating the periodicity from downsampling.\n\n4. **Key Features and Technical Details:**\n- The spectrum shows mirrored triangular patterns about the vertical axis, suggesting symmetrical frequency components.\n- The first peak is at $\\omega = 0$, with subsequent peaks at intervals of $\\frac{4\\pi}{6}$.\n- The shape indicates aliasing effects due to downsampling, leading to periodic spectrum replication.\n\n5. **Annotations and Specific Data Points:**\n- The graph lacks amplitude values but clearly marks key frequency points for interpreting spectral replication due to downsampling.\n\nFig. 13.6 Downsampling by 4: (a) time domain, and (b) frequency domain.\n\nimage_name:(a)\ndescription:The system block diagram labeled \"(a)\" illustrates upsampling by a factor of 4, featuring time and frequency domain sections.\n\nMain Components:\n1. **Time Domain Representation:**\n- **Input Signal (Left Graph):** Shows a discrete-time signal with 1-unit intervals. The waveform is dashed to indicate its continuous nature, with discrete samples as vertical lines.\n- **Upsampling Block:** Represented by a block with an upward arrow and \"L = 4\", it increases the sample rate by inserting zeros.\n- **Output Signal (Right Graph):** Displays the upsampled signal with samples now at 4-unit intervals.\n\n2. **Frequency Domain Representation:**\n- **Input Spectrum (Left Graph):** Shows the original signal's spectrum with a triangular waveform, marked at \\( \\frac{4\\pi}{6} \\).\n- **Output Spectrum (Right Graph):** After upsampling, the spectrum shows periodic replication, with main components at \\( \\frac{\\pi}{6} \\), \\( \\pi \\), and \\( 2\\pi \\).\n\nFlow of Information or Control:\n- **Signal Flow:** The discrete-time signal moves from the input graph through the upsampling block to the output graph, showing the time domain effect.\n- **Frequency Transformation:** Separately illustrates the frequency domain changes due to upsampling.\n\nLabels, Annotations, and Key Indicators:\n- The upsampling factor is labeled as \"L = 4.\"\n- Frequency points are marked on the frequency domain graphs to indicate spectral replication.\n\nOverall System Function:\nThis system increases a discrete-time signal's sample rate by a factor of 4, achieved by inserting zeros between samples, resulting in replicated spectra in the frequency domain. The diagram effectively demonstrates both time and frequency domain effects of upsampling.\n\nimage_name:(b)\ndescription:The graph labeled \"(b)\" is a frequency domain representation of a signal upsampled by a factor of 4, showing the spectral effects of upsampling.\n\n1. **Type of Graph and Function:**\n- This frequency domain graph depicts the spectral changes due to upsampling.\n\n2. **Axes Labels and Units:**\n- The horizontal axis is labeled with angular frequency \\( \\omega \\) in radians per second, with key frequencies at \\( \\frac{\\pi}{6} \\), \\( \\pi \\), and \\( 2\\pi \\).\n- The vertical axis represents amplitude, without specific units.\n\n3. **Overall Behavior and Trends:**\n- The graph shows periodic replication of the original spectrum due to upsampling, with repeated triangular shapes along the frequency axis.\n- The triangular shapes indicate replicated frequency content at intervals determined by the upsampling factor.\n\n4. **Key Features and Technical Details:**\n- Peaks align at multiples of \\( \\frac{\\pi}{6} \\), corresponding to the upsampling factor of 4.\n- The graph suggests additional spectral components from upsampling, resulting in a denser frequency spectrum.\n\n5. **Annotations and Specific Data Points:**\n- Amplitude values are not provided, but key frequency points are marked for analyzing spectral replication and potential aliasing effects.\n\nFig. 13.7 Upsampling by 4: (a) time domain, and (b) frequency domain.\n\n#### Solution\n\nThe solution here is that the new sequence is equivalent to $x(n)$ in Example 13.1, so its spectrum is simply $X_{3}(\\omega)=X(\\omega)$.\n\nNote that no information was lost in this example because the initial signal images were sufficiently spaced. However, if downsampling causes spectrum overlap, aliasing occurs, similar to undersampling an analog signal. To avoid aliasing during downsampling by $L$, the original signal should be band-limited to $\\pi / \\mathrm{L}$.\n\n#### EXAMPLE 13.3\n\nFor upsampling the signal $x(n)$ in Example 13.1 by $L=3$, determine the new spectrum $X_{4}(\\omega)$ when two zeros are inserted between each sample. For an original sequence $\\mathrm{x}(\\mathrm{n})=\\mathrm{x}_{1}, \\mathrm{x}_{2}, \\mathrm{x}_{3}, \\ldots$ with spectrum $X(\\omega)$, the new sequence becomes $x_{4}(n)=\\left(x_{1}, 0,0, x_{2}, 0,0, x_{3}, \\ldots\\right)$ with spectrum $X_{4}(\\omega)$.\n\n#### Solution\n\nThe simplest way to understand inserting zeros is to examine $X_{s 4}(\\mathrm{f})$ in time and frequency when $f_{s 4}=12 \\mathrm{~Hz}$. Recall that $x_{s 4}(t)$ is defined for all time, zero between impulses, and its frequency response is observed using the Laplace transform. With this sampling frequency, $x_{s 4}(t)$ equals $x_{s}(t)$, so $X_{s 4}(f)=X_{s}(f)$. To find $X_{4}(\\omega)$, note it is a frequency normalization of $X_{s 4}(f)$, with the sampling frequency normalized to $2 \\pi$. Essentially, $\\mathbf{x}(\\mathrm{n})$ normalizes the time between impulses to 1. Inserting zeros changes the normalization for a shorter time period. Thus, the images remain but the frequency axis normalization differs.\n\nIn this example, with two zeros inserted, the effective sampling rate is 12 Hz, but images at 4 Hz and 8 Hz remain, unlike $\\mathrm{X}_{2}(\\omega)$ in Example 13.1. The resulting signals are shown in Fig. 13.8.\n\nFinally, if signal processing removes the images at $(2 \\pi) / 3$ and $(4 \\pi) / 3$, the resulting signal equals $\\mathrm{x}_{2}(\\mathrm{n})$. As long as an analog signal is initially sampled above the Nyquist rate, upsampling and digital processing can derive signals equivalent to higher sampling rates.\n\nimage_name:Fig. 13.8\ndescription:The graph in Fig. 13.8 shows a discrete-time signal upsampled by 3, with time-domain and frequency-domain representations.\n\nTime-Domain Representation:\n- **Type of Graph:** Top part is a time-domain waveform.\n- **Axes Labels and Units:**\n- **Horizontal Axis (Time):** Labeled 't (seconds)' with discrete points marked as 'n', specific time markers at 0.25 and 0.5 seconds (sample numbers 3 and 6).\n- **Vertical Axis:** Signal amplitude, units not specified.\n- **Overall Behavior and Trends:**\n- The continuous signal $x_c(t)$ is shown as a sinusoidal waveform.\n- Discrete samples $x_4(n)$ are vertical lines at specific intervals, reflecting the sampled continuous signal.\n- The sampled signal maintains the continuous signal's shape but at discrete intervals.\n- **Key Features and Technical Details:**\n- Sampled points are equally spaced, indicating uniform sampling.\n- The relationship between $x_4(n)$ and $x_c(t)$ is highlighted with annotations.\n\nFrequency-Domain Spectrum:\n- **Type of Graph:** Bottom part is a frequency-domain spectrum.\n- **Axes Labels and Units:**\n- **Horizontal Axis (Frequency):** Labeled 'f' and 'ω', with frequency values in hertz and radians per second.\n- **Vertical Axis:** Amplitude of frequency components, labeled $X_{s4}(f), X_4(ω)$.\n- **Overall Behavior and Trends:**\n- The spectrum shows repeated triangular peaks at 3 Hz intervals, starting at 1 Hz and continuing at 4 Hz, 8 Hz, 12 Hz, and 16 Hz.\n- Peaks represent the upsampled signal's frequency components.\n- **Key Features and Technical Details:**\n- The spectrum indicates aliasing, with images at $(2\\pi)/3$ and $(4\\pi)/3$ as noted.\n- The frequency axis is marked in both linear and angular frequencies, showing the conversion.\n\nAnnotations and Specific Data Points:\n- Annotations indicate the relationship between sampled and continuous signals and key frequency component positions.\n- The context notes that signal processing can remove images at $(2\\pi)/3$ and $(4\\pi)/3$, resulting in a signal matching $x_2(n)$.\n\nThis graph illustrates the effects of upsampling on both time-domain and frequency-domain representations of a discrete-time signal.\n\nFig. 13.8 Spectrum of a discrete-time signal upsampled by 3."
},
{
    "text": "Two crucial operations in discrete-time signal processing are downsampling and upsampling. Downsampling aims to decrease the sample rate, thereby reducing the data volume for processing and storage, ideally without losing information. Conversely, upsampling is used to elevate the sample rate. While non-integer rates are feasible, this discussion focuses on integer values of $L$.\n\nDownsampling is executed by retaining every $L$th sample and discarding the rest. As depicted in Fig. 13.6, this process expands the original spectra by a factor of $L$. To prevent digital aliasing, the signal's spectrum must be band-limited to $\\pi / \\mathrm{L}$ before downsampling. Essentially, the signal should be sampled at $L$ times its minimum rate to avoid information loss during downsampling.\n\nKey Point: To prevent aliasing when downsampling by $L$, the original signal must be sampled at $L$ times the Nyquist rate.\n\nUpsampling involves inserting $L-1$ zero values between consecutive samples, as shown in Fig. 13.7. This results in a spectrum that mirrors the original but undergoes renormalization along the frequency axis. Specifically, upsampling by $L$ scales the frequency axis by $L$, so $2 \\pi$ now appears where $L 2 \\pi$ was in the original signal, with $L$ identical spectrum copies compressed within the 0 to $2 \\pi$ range.\n\nKey Point: Upsampling by $L$ leads to frequency axis renormalization, compressing $L$ copies of the original spectrum within 0 to $2 \\pi$.\n\nThis operation is beneficial for increasing a signal's effective sampling rate, especially when followed by postfiltering.\n\nThe following examples elucidate the spectral changes due to downsampling and upsampling.\n\n#### EXAMPLE 13.2\n\nConsider the signal $\\mathrm{x}_{2}(n)$ from Example 13.1, to be downsampled by $L=3$. Determine the new spectrum, $X_{3}(\\omega)$, by retaining every third sample and discarding others. For an original sequence $\\mathrm{x}_{1}, \\mathrm{x}_{2}, \\mathrm{x}_{3}, \\mathrm{x}_{4}, \\ldots$, the new sequence becomes $\\mathrm{x}_{1}, \\mathrm{x}_{4}, \\mathrm{x}_{7}, \\mathrm{x}_{10}, \\ldots$\n\nimage_name:(a)\ndescription:The block diagram labeled \"(a)\" illustrates downsampling by a factor of 4, presenting both time and frequency domain perspectives.\n\n1. **Main Components:**\n- **Input Signal:** The left-side time domain graph shows a discrete signal with regular sample intervals, depicted as a sinusoidal waveform with discrete points.\n- **Downsampling Block:** Indicated by a downward arrow and \"L=4\", this block reduces the sampling rate by keeping every fourth sample.\n- **Output Signal:** The right-side time domain graph shows the downsampled signal with fewer samples, reflecting a reduced sampling rate.\n\n2. **Information Flow:**\n- The input signal enters the downsampling block, undergoes rate reduction, and emerges as the downsampled signal.\n- Arrows indicate the signal flow direction.\n\n3. **Labels and Annotations:**\n- The time domain uses \"n\" for discrete time indices.\n- \"L = 4\" denotes the downsampling factor.\n- The frequency domain uses \"ω\" for angular frequency.\n\n4. **Frequency Domain Representation:**\n- Below the time domain, frequency domain graphs are shown.\n- The original spectrum on the left has two peaks at specific frequencies. The right-side spectrum after downsampling shows aliasing effects with repeated frequency components.\n\n5. **System Function:**\n- The system reduces a discrete-time signal's sampling rate by a factor of 4, retaining every fourth sample, affecting both time domain representation and introducing frequency domain aliasing.\n\nimage_name:(b)\ndescription:The graph labeled \"(b)\" presents the frequency domain of a downsampled signal, illustrating the impact of downsampling by a factor of 4.\n\n1. **Graph Type and Function:**\n- A frequency domain graph showing the downsampled signal's spectrum.\n\n2. **Axes Labels and Units:**\n- The horizontal axis is angular frequency $\\omega$ in radians per second, marked at $0$, $\\frac{4\\pi}{6}$, and $2\\pi$.\n- The vertical axis shows amplitude without specific units.\n\n3. **Behavior and Trends:**\n- The spectrum features a periodic triangular shape with repeating peaks and valleys.\n- Peaks occur at multiples of $\\frac{4\\pi}{6}$, indicating downsampling-induced periodicity.\n\n4. **Features and Technical Details:**\n- The spectrum exhibits symmetrical frequency components.\n- The first peak is at $\\omega = 0$, with subsequent peaks at $\\frac{4\\pi}{6}$ intervals.\n- The shape indicates aliasing due to downsampling.\n\n5. **Annotations:**\n- Key frequency points are marked for interpreting spectral replication.\n\nFig. 13.6 Downsampling by 4: (a) time domain, and (b) frequency domain.\n\nimage_name:(a)\ndescription:The block diagram labeled \"(a)\" demonstrates upsampling by a factor of 4, including time and frequency domain sections.\n\nMain Components:\n1. **Time Domain Representation:**\n- **Input Signal (Left Graph):** Shows a discrete-time signal with 1-interval samples, depicted with a dashed line for continuity and vertical lines for discrete points.\n- **Upsampling Block:** Represented by an upward arrow and \"L=4\", this block increases the sample rate by inserting zeros.\n- **Output Signal (Right Graph):** Shows the upsampled signal with samples spaced at 4-intervals.\n\n2. **Frequency Domain Representation:**\n- **Input Spectrum (Left Graph):** The original signal's spectrum with a triangular waveform, marked at \\( \\frac{4\\pi}{6} \\).\n- **Output Spectrum (Right Graph):** After upsampling, the spectrum shows periodic replication at \\( \\frac{\\pi}{6} \\), \\( \\pi \\), and \\( 2\\pi \\).\n\nFlow of Information:\n- The signal flows from input through the upsampling block to output, showing time domain effects.\n- Frequency domain transformation is separately illustrated.\n\nLabels and Annotations:\n- The upsampling factor is \"L = 4.\"\n- Frequency points are marked on frequency domain graphs.\n\nSystem Function:\nThe system increases a discrete-time signal's sample rate by a factor of 4, achieved by inserting zeros, resulting in replicated spectra.\n\nimage_name:(b)\ndescription:The graph labeled \"(b)\" shows the frequency domain of a signal upsampled by a factor of 4.\n\n1. **Graph Type and Function:**\n- A frequency domain graph depicting upsampling effects.\n\n2. **Axes Labels and Units:**\n- The horizontal axis is angular frequency \\( \\omega \\) in radians per second, marked at \\( \\frac{\\pi}{6} \\), \\( \\pi \\), and \\( 2\\pi \\).\n- The vertical axis represents amplitude without specific values.\n\n3. **Behavior and Trends:**\n- The graph shows periodic spectral replication due to upsampling, with repeated triangular shapes.\n- The triangular shapes indicate replicated frequency content.\n\n4. **Features and Technical Details:**\n- Peaks align at multiples of \\( \\frac{\\pi}{6} \\), corresponding to the upsampling factor.\n- The graph suggests denser frequency spectra due to upsampling.\n\n5. **Annotations:**\n- Key frequency points are marked for analyzing spectral replication.\n\nFig. 13.7 Upsampling by 4: (a) time domain, and (b) frequency domain.\n\n#### Solution\n\nThe new sequence is equivalent to $x(n)$ in Example 13.1, thus its spectrum is simply $X_{3}(\\omega)=X(\\omega)$.\n\nNo information was lost here since the initial signal's images were sufficiently spaced. However, overlapping spectra during downsampling cause aliasing, akin to undersampling an analog signal. To avoid aliasing when downsampling by $L$, the signal should be band-limited to $\\pi / \\mathrm{L}$.\n\n#### EXAMPLE 13.3\n\nFor upsampling the signal $x(n)$ in Example 13.1 by $L=3$ (inserting two zeros between samples), find the new spectrum, $X_{4}(\\omega)$. For an original sequence $\\mathrm{x}(\\mathrm{n})=\\mathrm{x}_{1}, \\mathrm{x}_{2}, \\mathrm{x}_{3}, \\ldots$ with spectrum $X(\\omega)$, the new sequence is $x_{4}(n)=\\left(x_{1}, 0,0, x_{2}, 0,0, x_{3}, \\ldots\\right)$ with spectrum $X_{4}(\\omega)$.\n\n#### Solution\n\nUnderstanding the insertion of zeros can be simplified by examining $X_{s 4}(\\mathrm{f})$ in time and frequency domains with $f_{s 4}=12 \\mathrm{~Hz}$. $x_{s 4}(t)$, defined for all time with zeros between impulses, uses the Laplace transform for frequency response analysis. At $f_{s 4}=12 \\mathrm{~Hz}$, $x_{s 4}(t)$ equals $x_{s}(t)$, so $X_{s 4}(f)=X_{s}(f)$. Finding $X_{4}(\\omega)$ involves normalizing $X_{s 4}(f)$ to a sampling frequency of $2 \\pi$. The series $\\mathbf{x}(\\mathrm{n})$ normalizes the time between impulses to 1. Inserting zeros changes this normalization, affecting the frequency axis.\n\nIn this example, with two zeros inserted, the effective sampling rate is 12 Hz, retaining images at 4 Hz and 8 Hz unlike $\\mathrm{X}_{2}(\\omega)$ in Example 13.1. The resulting signals are shown in Fig. 13.8.\n\nIf signal processing removes the images at $(2 \\pi) / 3$ and $(4 \\pi) / 3$, the resulting signal matches $x_{2}(n)$. Thus, upsampling and digital processing can derive signals equivalent to higher-rate analog sampling.\n\nimage_name:Fig. 13.8\ndescription:Fig. 13.8 displays a time-domain waveform and frequency-domain spectrum of a discrete-time signal upsampled by 3.\n\nTime-Domain Representation:\n- **Graph Type:** Time-domain waveform.\n- **Axes Labels and Units:**\n- **Horizontal Axis (Time):** Labeled 't (seconds)' with discrete points 'n', marked at 0.25 and 0.5 seconds (sample numbers 3 and 6).\n- **Vertical Axis:** Amplitude, units not specified.\n- **Behavior and Trends:**\n- The continuous signal $x_c(t)$ is sinusoidal.\n- Discrete samples $x_4(n)$ are shown as vertical lines, reflecting the continuous signal at discrete intervals.\n- **Features and Technical Details:**\n- Uniformly spaced samples indicate consistent sampling.\n- The relationship between $x_4(n)$ and $x_c(t)$ is annotated.\n\nFrequency-Domain Spectrum:\n- **Graph Type:** Frequency-domain spectrum.\n- **Axes Labels and Units:**\n- **Horizontal Axis (Frequency):** Labeled 'f' and 'ω', with frequency values in hertz and radians per second.\n- **Vertical Axis:** Amplitude, labeled $X_{s4}(f), X_4(ω)$.\n- **Behavior and Trends:**\n- The spectrum shows repeated triangular peaks at 3 Hz intervals (1 Hz, 4 Hz, 8 Hz, 12 Hz, 16 Hz).\n- **Features and Technical Details:**\n- The spectrum indicates aliasing, with images at $(2\\pi)/3$ and $(4\\pi)/3$.\n- Frequency axis markings include both linear and angular frequencies.\n\nAnnotations and Specific Data Points:\n- Annotations highlight the relationship between sampled and continuous signals and key frequency components.\n- The context notes that processing can remove images at $(2\\pi)/3$ and $(4\\pi)/3$, resulting in a signal matching $x_2(n)$.\n\nThis graph illustrates the effects of upsampling on time-domain and frequency-domain signal representations.\n\nFig. 13.8 Spectrum of a discrete-time signal upsampled by 3."
},
{
    "text": "Two essential operations in discrete-time signal processing are downsampling and upsampling. Downsampling is used to decrease the sample rate, thereby reducing the amount of data that needs to be processed and/or stored, ideally without losing information. Upsampling, conversely, is used to increase the sample rate. While non-integer downsampling and upsampling rates are achievable, we focus here on cases where \\( L \\) is an integer.\n\nDownsampling is performed by retaining every \\( L \\)th sample and discarding the rest. As depicted in Fig. 13.6, the outcome of downsampling is to expand the original spectra by \\( L \\). To prevent digital aliasing, the original signal's spectrum must be band-limited to \\( \\pi / L \\) before downsampling. In other words, the signal must be sampled at \\( L \\) times its minimum sampling rate to avoid information loss during downsampling.\n\nKey Point: To prevent aliasing when downsampling by a factor \\( L \\), the original signal must be sampled at \\( L \\) times the Nyquist rate.\n\nUpsampling is carried out by inserting \\( L-1 \\) zero values between each pair of consecutive samples, as shown in Fig. 13.7. In this scenario, it can be demonstrated that the spectrum of the upsampled signal remains identical to that of the original signal but undergoes renormalization along the frequency axis. Specifically, when a signal is upsampled by \\( L \\), the frequency axis is scaled by \\( L \\), so that \\( 2 \\pi \\) now corresponds to where \\( L \\cdot 2 \\pi \\) was in the original signal, and \\( L \\) identical copies of the original spectrum are compressed within the range 0 to \\( 2 \\pi \\). This operation is beneficial when aiming to elevate the effective sampling rate of a signal, especially if postfiltering is applied.\n\nKey Point: Upsampling by \\( L \\) results in a renormalization along the frequency axis, causing \\( L \\) copies of the original signal spectrum to be compressed within the range 0 to \\( 2 \\pi \\).\n\nPay close attention to the following two examples, as they elucidate the spectral changes due to downsampling and upsampling.\n\n#### EXAMPLE 13.2\n\nThe signal \\( x_2(n) \\) from Example 13.1 is to be downsampled by \\( L=3 \\). Determine the new spectrum, \\( X_3(\\omega) \\), when every third sample is retained and the others are discarded. In other words, if the original series is \\( x_1, x_2, x_3, x_4, \\ldots \\), the new series becomes \\( x_1, x_4, x_7, x_{10}, \\ldots \\)\nimage_name:(a)\ndescription:The system block diagram labeled \"(a)\" illustrates the process of downsampling by a factor of 4, shown in both the time and frequency domains.\n\n1. **Main Components:**\n- **Input Signal:** The left-side time domain graph displays a discrete signal with regular sample intervals, depicted as a sinusoidal waveform with discrete points.\n- **Downsampling Block:** A block marked with a downward arrow and \"L=4\" indicates the downsampling process, reducing the sample rate by keeping every fourth sample and discarding others.\n- **Output Signal:** The right-side time domain graph shows the downsampled signal with fewer sample points, reflecting a larger interval between samples due to the downsampling factor of 4.\n\n2. **Information Flow:**\n- The input signal enters the downsampling block, undergoes rate reduction, and exits as the downsampled signal.\n- Arrows indicate the direction of signal flow from input to output.\n\n3. **Labels and Annotations:**\n- The time domain is marked with \"n\" for discrete time indices.\n- \"L = 4\" denotes the downsampling factor.\n- The frequency domain is labeled with \"ω\" for angular frequency.\n\n4. **Frequency Domain Representation:**\n- Below the time domain graphs, the corresponding frequency domain representations are shown.\n- The original spectrum on the left features two peaks at specific frequencies. The right-side spectrum after downsampling exhibits aliasing, with repeated frequency components due to the reduced sample rate.\n\n5. **System Function:**\n- The primary function is to decrease the sampling rate of a discrete-time signal by a factor of 4, retaining every fourth sample and discarding others, affecting both time domain representation and introducing aliasing in the frequency domain. The diagram effectively illustrates these domain changes due to downsampling.\nimage_name:(b)\ndescription:The graph labeled \"(b)\" is a frequency domain representation of a signal downsampled by a factor of 4, showing the spectral impact of downsampling.\n\n1. **Graph Type and Function:**\n- This is a frequency domain graph, depicting the signal's spectrum post-downsampling.\n\n2. **Axes Labels and Units:**\n- The horizontal axis is labeled with angular frequency \\( \\omega \\) in radians per second, with key points at \\( 0 \\), \\( \\frac{4\\pi}{6} \\), and \\( 2\\pi \\).\n- The vertical axis represents frequency component amplitude, though units are not specified.\n\n3. **Behavior and Trends:**\n- The spectrum displays a periodic triangular shape with repeating peaks and valleys.\n- Peaks occur at multiples of \\( \\frac{4\\pi}{6} \\), indicating periodicity from downsampling.\n\n4. **Key Features and Technical Details:**\n- The spectrum shows symmetrical frequency components around the vertical axis.\n- The first peak is at \\( \\omega = 0 \\), with subsequent peaks at \\( \\frac{4\\pi}{6} \\) intervals.\n- The shape suggests aliasing effects due to downsampling, leading to periodic spectrum replication.\n\n5. **Annotations and Data Points:**\n- The graph lacks amplitude values but clearly marks key frequency points for interpreting spectral replication due to downsampling.\n\nFig. 13.6 Downsampling by 4: (a) time domain, and (b) frequency domain.\nimage_name:(a)\ndescription:The system block diagram labeled \"(a)\" depicts the upsampling process by a factor of 4, including time and frequency domain sections.\n\n1. **Time Domain Representation:**\n- **Input Signal (Left Graph):** This graph shows a discrete-time signal with 1-interval samples. The waveform is dashed to indicate its continuous nature, with discrete samples as vertical lines at specific points (0, 1, 2, etc.).\n- **Upsampling Block:** Represented by a block with an upward arrow labeled \"L\" and \"L = 4\", this block increases the sample rate by inserting zeros between original samples.\n- **Output Signal (Right Graph):** The upsampling block's output shows samples now spaced at 4-intervals, reflecting the increased sample rate.\n\n2. **Frequency Domain Representation:**\n- **Input Spectrum (Left Graph):** The original signal's spectrum is shown with a triangular waveform, indicating pre-upsampling frequency content, with a key frequency at \\( \\frac{4\\pi}{6} \\).\n- **Output Spectrum (Right Graph):** Post-upsampling, the spectrum shows periodic replication, with main components now at \\( \\frac{\\pi}{6} \\), \\( \\pi \\), and \\( 2\\pi \\) intervals, illustrating upsampling's effect on the frequency domain.\n\n3. **Signal and Frequency Flow:**\n- **Signal Flow:** The discrete-time signal moves from the input graph through the upsampling block, increasing the sample rate, and then to the output graph, showing the time domain effect.\n- **Frequency Transformation:** The frequency domain transformation is separately shown, indicating how the spectrum changes due to upsampling.\n\n4. **Labels, Annotations, and Indicators:**\n- The upsampling factor is clearly marked as \"L = 4.\"\n- Frequency points are marked on the frequency domain graphs to indicate spectral replication.\n\n5. **System Function:**\n- The system's main function is to increase a discrete-time signal's sample rate by a factor of 4, achieved by inserting zeros between samples in the time domain, resulting in spectral replication in the frequency domain. The diagram effectively demonstrates these effects in both domains.\nimage_name:(b)\ndescription:The graph labeled \"(b)\" is a frequency domain representation of a signal upsampled by a factor of 4, showing the frequency content impact of upsampling.\n\n1. **Graph Type and Function:**\n- This is a frequency domain graph, specifically a spectral plot illustrating upsampling effects.\n\n2. **Axes Labels and Units:**\n- The horizontal axis is labeled with angular frequency \\( \\omega \\) in radians per second, with key frequencies at \\( \\frac{\\pi}{6} \\), \\( \\pi \\), and \\( 2\\pi \\).\n- The vertical axis represents amplitude, without specific numerical values.\n\n3. **Behavior and Trends:**\n- The graph shows periodic replication of the original spectrum due to upsampling, with repeated triangular shapes along the frequency axis.\n- The triangular shapes indicate replicated frequency content at intervals determined by the upsampling factor.\n\n4. **Key Features and Technical Details:**\n- Peaks of the triangular shapes align at multiples of \\( \\frac{\\pi}{6} \\), corresponding to the upsampling factor of 4.\n- The graph suggests additional spectral components from upsampling, resulting in a denser frequency spectrum.\n\n5. **Annotations and Data Points:**\n- While amplitude values are not provided, key frequency points are clearly marked for analyzing spectral replication and potential aliasing effects.\n\nFig. 13.7 Upsampling by 4: (a) time domain, and (b) frequency domain.\n\n#### Solution\n\nClearly, the new sequence here is equivalent to \\( x(n) \\) in Example 13.1, so its spectrum is simply \\( X_3(\\omega) = X(\\omega) \\).\n\nNote that no information was lost in this example because the initial signal images \\( x_2(n) \\) were sufficiently spaced. However, if downsampling causes spectra to overlap, aliasing occurs, similar to sampling an analog signal below the Nyquist rate. In fact, to avoid aliasing during downsampling by \\( L \\), the original signal should be band-limited to \\( \\pi / L \\).\n\n#### EXAMPLE 13.3\n\nAs an upsampling example of the signal \\( x(n) \\) in Example 13.1, find the new spectrum \\( X_4(\\omega) \\) if two zeros are inserted between each sample (i.e., upsampling by \\( L=3 \\)). In other words, if the original series is \\( x(n) = x_1, x_2, x_3, \\ldots \\) with spectrum \\( X(\\omega) \\), the new series becomes \\( x_4(n) = (x_1, 0, 0, x_2, 0, 0, x_3, \\ldots) \\) with spectrum \\( X_4(\\omega) \\).\n\n#### Solution\n\nA simple way to conceptualize inserting these extra zero samples is to examine \\( X_{s4}(f) \\) in time and frequency when \\( f_{s4} = 12 \\) Hz. Recall that \\( x_{s4}(t) \\) is defined for all time, being zero between impulses, and the Laplace transform is used to observe its frequency response. With this sampling frequency, \\( x_{s4}(t) \\) equals the signal \\( x_s(t) \\), so \\( X_{s4}(f) = X_s(f) \\). To find \\( X_4(\\omega) \\), recall it is a frequency normalization of \\( X_{s4}(f) \\), where the sampling frequency is normalized to \\( 2\\pi \\). Essentially, the series \\( x(n) \\) normalizes the time between impulses to 1. By inserting extra zeros, the normalization is for a shorter time period than between nonzero impulses. Thus, the images remain the same, but the frequency axis normalization differs.\n\nIn this example, with two zeros inserted, the effective sampling rate can be considered 12 Hz, but now images at 4 Hz and 8 Hz remain, unlike \\( X_2(\\omega) \\) in Example 13.1. The resulting signals are shown in Fig. 13.8.\n\nFinally, if signal processing on \\( x_4(n) \\) removes the images at \\( (2\\pi)/3 \\) and \\( (4\\pi)/3 \\), the resulting signal equals \\( x_2(n) \\). In other words, as long as an analog signal is originally sampled above the Nyquist rate, upsampling and digital signal processing can derive signals equivalent to higher sampling rate analog signals.\n\nimage_name:Fig. 13.8\ndescription:The graph in Fig. 13.8 consists of two main components: a time-domain representation and a frequency-domain spectrum of a discrete-time signal upsampled by a factor of 3.\n\nTime-Domain Representation:\n- **Graph Type:** The top part is a time-domain waveform.\n- **Axes Labels and Units:**\n- **Horizontal Axis (Time):** Labeled 't (seconds)' with discrete points marked as 'n', specific time markers at 0.25 and 0.5 seconds corresponding to sample numbers 3 and 6.\n- **Vertical Axis:** Represents signal amplitude, without specific units.\n- **Behavior and Trends:** The signal \\( x_c(t) \\) is a continuous sinusoidal line, with discrete samples \\( x_4(n) \\) shown as vertical lines at specific intervals, maintaining the continuous signal's general shape but at discrete points.\n- **Key Features:** The sampled points are evenly spaced, indicating uniform sampling, and the relationship between \\( x_4(n) \\) and \\( x_c(t) \\) is highlighted with annotations.\n\nFrequency-Domain Spectrum:\n- **Graph Type:** The bottom part is a frequency-domain spectrum.\n- **Axes Labels and Units:**\n- **Horizontal Axis (Frequency):** Labeled 'f' and 'ω', with frequency values in hertz and radians per second.\n- **Vertical Axis:** Represents frequency component amplitude, labeled \\( X_{s4}(f), X_4(ω) \\).\n- **Behavior and Trends:** The spectrum shows repeated triangular peaks at 3 Hz intervals, starting at 1 Hz and continuing at 4 Hz, 8 Hz, 12 Hz, and 16 Hz, representing the upsampled signal's frequency components.\n- **Key Features:** The spectrum indicates aliasing, with images at \\( (2\\pi)/3 \\) and \\( (4\\pi)/3 \\) as noted in the context.\n\nAnnotations and Data Points:\n- The graph includes annotations relating sampled and continuous signals and key frequency component positions in the spectrum.\n- The context notes that signal processing can remove images at \\( (2\\pi)/3 \\) and \\( (4\\pi)/3 \\), resulting in a signal matching \\( x_2(n) \\).\n\nThis graph illustrates the effects of upsampling on both the time-domain and frequency-domain representations of a discrete-time signal.\n\nFig. 13.8 Spectrum of a discrete-time signal upsampled by 3."
},
{
    "text": "Two crucial operations in discrete-time signal processing are downsampling and upsampling. Downsampling aims to decrease the sample rate, thereby reducing the data volume for processing and storage, ideally without losing information. Conversely, upsampling is used to elevate the sample rate. While noninteger rates for downsampling and upsampling are feasible, this discussion focuses solely on cases where $L$ is an integer.\n\nDownsampling is executed by retaining every $L$th sample and discarding the rest. As depicted in Fig. 13.6, this process results in the expansion of the original signal's spectrum by a factor of $L$. To prevent digital aliasing, the original signal's spectrum must be band-limited to $\\pi / \\mathrm{L}$ before downsampling. In essence, the signal should be sampled at $L$ times its minimum sampling rate to ensure no information loss during downsampling.\n\nKey Point: To avoid aliasing when downsampling by a factor $L$, the original signal must be sampled at $L$ times the Nyquist rate.\n\nUpsampling involves inserting $L-1$ zero values between each pair of consecutive samples, as shown in Fig. 13.7. This process results in the upsampled signal's spectrum being identical to the original but with a frequency axis renormalization. Specifically, upsampling by $L$ scales the frequency axis by $L$, so that $2 \\pi$ now appears where $L 2 \\pi$ was in the original signal, and $L$ identical copies of the original spectrum are compressed within the 0 to $2 \\pi$ range.\n\nKey Point: Upsampling by $L$ leads to a frequency axis renormalization, causing $L$ copies of the original signal spectrum to be compressed within the 0 to $2 \\pi$ range.\n\nThis operation is beneficial for increasing a signal's effective sampling rate, especially if followed by postfiltering.\n\nThe following two examples elucidate the spectral changes resulting from downsampling and upsampling.\n\n#### EXAMPLE 13.2\n\nConsider the signal $\\mathrm{x}_{2}(n)$ from Example 13.1, which is to be downsampled by $L=3$. Determine the new spectrum, $X_{3}(\\omega)$, when every third sample is retained and the others are discarded. That is, if the original sequence is $\\mathrm{x}_{1}, \\mathrm{x}_{2}, \\mathrm{x}_{3}, \\mathrm{x}_{4}, \\ldots$, the new sequence becomes $\\mathrm{x}_{1}, \\mathrm{x}_{4}, \\mathrm{x}_{7}, \\mathrm{x}_{10}, \\ldots$\n\nimage_name:(a)\ndescription:The block diagram labeled \"(a)\" illustrates the downsampling process by a factor of 4, shown in both time and frequency domains.\n\n1. **Main Components:**\n- **Input Signal:** The left-side time domain graph displays a discrete signal with regular sample intervals, depicted as a sinusoidal waveform with discrete points.\n- **Downsampling Block:** A block with a downward arrow and \"L=4\" indicates the downsampling operation, reducing the sample rate by keeping every fourth sample.\n- **Output Signal:** The right-side time domain graph shows the downsampled signal with fewer samples, reflecting a larger interval between points due to the downsampling factor of 4.\n\n2. **Flow of Information:**\n- The input signal enters the downsampling block, undergoes rate reduction, and emerges as the downsampled signal.\n- Arrows indicate the direction of signal flow from input to output.\n\n3. **Labels and Annotations:**\n- The time domain is marked with \"n\" for discrete time indices.\n- \"L = 4\" denotes the downsampling factor.\n- The frequency domain is labeled with \"ω\" for angular frequency.\n\n4. **Frequency Domain Representation:**\n- Below the time domain graphs, the corresponding frequency domain representations are shown.\n- The original spectrum on the left features two peaks at specific frequencies. The right-side spectrum after downsampling exhibits aliasing, with repeated frequency components due to the reduced sample rate.\n\n5. **Overall System Function:**\n- The system's primary function is to decrease the sample rate of a discrete-time signal by a factor of 4, retaining every fourth sample and discarding others, affecting both time domain representation and introducing aliasing in the frequency domain. The diagram effectively illustrates these domain changes due to downsampling.\n\nimage_name:(b)\ndescription:The graph labeled \"(b)\" represents the frequency domain of a downsampled signal, illustrating the impact of downsampling by a factor of 4 on the signal's spectrum.\n\n1. **Type of Graph and Function:**\n- This is a frequency domain graph, depicting the spectrum post-downsampling.\n\n2. **Axes Labels and Units:**\n- The horizontal axis is labeled with angular frequency $\\omega$ in radians per second, with key points at $0$, $\\frac{4\\pi}{6}$, and $2\\pi$.\n- The vertical axis shows amplitude without specific units.\n\n3. **Overall Behavior and Trends:**\n- The spectrum displays a periodic triangular shape with repeating peaks and valleys.\n- Peaks occur at multiples of $\\frac{4\\pi}{6}$, indicating the periodicity from downsampling.\n\n4. **Key Features and Technical Details:**\n- The spectrum shows symmetrical frequency components around the vertical axis.\n- The first peak is at $\\omega = 0$, with subsequent peaks at intervals of $\\frac{4\\pi}{6}$.\n- The shape suggests aliasing effects due to downsampling, leading to periodic spectrum replication.\n\n5. **Annotations and Specific Data Points:**\n- The graph lacks amplitude values but clearly marks key frequency points for interpreting spectral replication due to downsampling.\n\nFig. 13.6 Downsampling by 4: (a) time domain, and (b) frequency domain.\n\nimage_name:(a)\ndescription:The block diagram labeled \"(a)\" demonstrates the upsampling process by a factor of 4, featuring time and frequency domain sections.\n\nMain Components:\n1. **Time Domain Representation:**\n- **Input Signal (Left Graph):** Shows a discrete-time signal with 1-interval samples. The waveform is dashed to indicate continuity, with discrete samples as vertical lines.\n- **Upsampling Block:** Represented by a block with an upward arrow and \"L=4\", this block increases the sample rate by inserting zeros.\n- **Output Signal (Right Graph):** Displays the upsampled signal with samples now at 4-interval spacing.\n\n2. **Frequency Domain Representation:**\n- **Input Spectrum (Left Graph):** The original signal's spectrum is triangular, indicating frequency content pre-upsampling, with a key frequency at \\( \\frac{4\\pi}{6} \\).\n- **Output Spectrum (Right Graph):** Post-upsampling, the spectrum shows periodic replication, with main components at intervals of \\( \\frac{\\pi}{6} \\), \\( \\pi \\), and \\( 2\\pi \\).\n\nFlow of Information or Control:\n- **Signal Flow:** The discrete-time signal moves from the input graph through the upsampling block, increasing the sample rate, and then to the output graph, showing the time domain effect.\n- **Frequency Transformation:** The frequency domain transformation is separately shown, indicating spectrum changes due to upsampling.\n\nLabels, Annotations, and Key Indicators:\n- The upsampling factor is clearly marked as \"L = 4.\"\n- Frequency points are marked on the frequency domain graphs to indicate spectral replication.\n\nOverall System Function:\nThe system's primary function is to increase the sample rate of a discrete-time signal by a factor of 4, achieved by inserting zeros between samples in the time domain, resulting in replicated spectrum in the frequency domain. The diagram effectively demonstrates both time domain and frequency domain effects of upsampling.\n\nimage_name:(b)\ndescription:The graph labeled \"(b)\" shows the frequency domain of a signal after upsampling by a factor of 4, illustrating the effects on the signal's frequency content.\n\n1. **Type of Graph and Function:**\n- This is a frequency domain graph, specifically a spectral plot post-upsampling.\n\n2. **Axes Labels and Units:**\n- The horizontal axis is labeled with angular frequency \\( \\omega \\) in radians per second, with key frequencies at \\( \\frac{\\pi}{6} \\), \\( \\pi \\), and \\( 2\\pi \\).\n- The vertical axis represents amplitude without specific values.\n\n3. **Overall Behavior and Trends:**\n- The graph shows periodic replication of the original spectrum due to upsampling, with repeated triangular shapes along the frequency axis.\n- The triangular shapes indicate replicated frequency content at intervals determined by the upsampling factor.\n\n4. **Key Features and Technical Details:**\n- Peaks align at multiples of \\( \\frac{\\pi}{6} \\), corresponding to the upsampling factor of 4.\n- The graph suggests additional spectral components due to upsampling, resulting in a denser frequency spectrum.\n\n5. **Annotations and Specific Data Points:**\n- Amplitude values are not given, but key frequency points are clearly marked for analyzing spectral replication and potential aliasing effects.\n\nFig. 13.7 Upsampling by 4: (a) time domain, and (b) frequency domain.\n\n#### Solution\n\nThe solution here is that the new sequence is equivalent to $x(n)$ in Example 13.1, so its spectrum is simply $X_{3}(\\omega)=X(\\omega)$.\n\nNote that no information was lost in this example due to the sufficient spacing of the initial signal's images. However, if downsampling causes spectrum overlap, aliasing occurs, similar to undersampling an analog signal below the Nyquist rate. In fact, to avoid aliasing during downsampling by $L$, the original signal should be band-limited to $\\pi / \\mathrm{L}$.\n\n#### EXAMPLE 13.3\n\nFor upsampling the signal $x(n)$ in Example 13.1, determine the new spectrum $X_{4}(\\omega)$ when two zeros are inserted between each sample (i.e., upsampling by $L=3$). That is, if the original sequence is $\\mathrm{x}(\\mathrm{n})=\\mathrm{x}_{1}, \\mathrm{x}_{2}, \\mathrm{x}_{3}, \\ldots$ with spectrum $X(\\omega)$, the new sequence becomes $x_{4}(n)=\\left(x_{1}, 0,0, x_{2}, 0,0, x_{3}, \\ldots\\right)$ with spectrum $X_{4}(\\omega)$.\n\n#### Solution\n\nA simple way to understand the insertion of these extra zeros is to examine $X_{s 4}(\\mathrm{f})$ in time and frequency when $f_{s 4}=12 \\mathrm{~Hz}$. Recall that $x_{s 4}(t)$ is defined for all time, being zero between impulses, and the Laplace transform is used to observe its frequency response. With this sampling frequency, $x_{s 4}(t)$ equals $x_{s}(t)$, so $X_{s 4}(f)=X_{s}(f)$. To find $X_{4}(\\omega)$, note that it is a frequency normalization of $X_{s 4}(f)$, with the sampling frequency normalized to $2 \\pi$. Essentially, the series $\\mathbf{x}(\\mathrm{n})$ normalizes the time between impulses to 1. However, inserting extra zeros changes the normalization for a shorter time period. Thus, the images remain the same, but the frequency axis normalization differs.\n\nIn this example, with two zeros inserted, the effective sampling rate can be thought of as 12 Hz, but now images at 4 Hz and 8 Hz remain, unlike $\\mathrm{X}_{2}(\\omega)$ in Example 13.1. The resulting signals are shown in Fig. 13.8.\n\nFinally, if signal processing is applied to $x_{4}(n)$ to remove the images at $(2 \\pi) / 3$ and $(4 \\pi) / 3$, the resulting signal will match $\\mathrm{x}_{2}(\\mathrm{n})$. In other words, as long as an analog signal is initially sampled above the Nyquist rate, upsampling and digital signal processing can produce signals equivalent to those from higher sampling rates.\n\nimage_name:Fig. 13.8\ndescription:Fig. 13.8 displays a graph with two main components: a time-domain representation and a frequency-domain spectrum of a discrete-time signal upsampled by a factor of 3.\n\nTime-Domain Representation:\n- **Type of Graph:** The top part is a time-domain waveform.\n- **Axes Labels and Units:**\n- **Horizontal Axis (Time):** Labeled 't (seconds)' with discrete points marked as 'n'. Specific time markers are at 0.25 and 0.5 seconds, corresponding to sample numbers 3 and 6.\n- **Vertical Axis:** Represents signal amplitude without specified units.\n- **Overall Behavior and Trends:**\n- The continuous signal $x_c(t)$ is shown as a sinusoidal waveform.\n- Discrete samples $x_4(n)$ are shown as vertical lines at specific intervals, reflecting the sampled continuous signal.\n- The sampled signal maintains the general shape of the continuous signal but at discrete intervals.\n- **Key Features and Technical Details:**\n- Sampled points are evenly spaced, indicating uniform sampling.\n- The relationship between the sampled signal $x_4(n)$ and the continuous signal $x_c(t)$ is highlighted.\n\nFrequency-Domain Spectrum:\n- **Type of Graph:** The bottom part is a frequency-domain spectrum.\n- **Axes Labels and Units:**\n- **Horizontal Axis (Frequency):** Labeled 'f' and 'ω', with frequency values in hertz and radians per second.\n- **Vertical Axis:** Represents amplitude of frequency components, labeled $X_{s4}(f), X_4(ω)$.\n- **Overall Behavior and Trends:**\n- The spectrum shows repeated triangular peaks at 3 Hz intervals, starting at 1 Hz and continuing at 4 Hz, 8 Hz, 12 Hz, and 16 Hz.\n- Peaks represent the frequency components of the upsampled signal.\n- **Key Features and Technical Details:**\n- The spectrum indicates aliasing, with images at $(2\\pi)/3$ and $(4\\pi)/3$ as noted.\n- The frequency axis is marked with both linear and angular frequencies, showing the conversion.\n\nAnnotations and Specific Data Points:\n- The graph includes annotations relating sampled and continuous signals and key frequency component positions.\n- The context notes that signal processing can remove images at $(2\\pi)/3$ and $(4\\pi)/3$, resulting in a signal matching $x_2(n)$.\n\nThis graph illustrates the effects of upsampling on both time-domain and frequency-domain representations of a discrete-time signal.\n\nFig. 13.8 Spectrum of a discrete-time signal upsampled by 3."
},
{
    "text": "Two crucial operations in discrete-time signal processing are downsampling and upsampling. Downsampling aims to decrease the sample rate, thereby reducing the data volume for processing and storage, ideally without losing information. Conversely, upsampling is used to elevate the sample rate. While non-integer downsampling and upsampling rates are feasible, this discussion focuses solely on cases where $L$ is an integer.\n\nDownsampling is executed by retaining every Lth sample and discarding the rest. As depicted in Fig. 13.6, the outcome of downsampling is the expansion of the original spectra by a factor of L. To prevent digital aliasing, the original signal's spectrum must be band-limited to $\\pi / \\mathrm{L}$ before downsampling. Essentially, the signal should be sampled at L times its minimum sampling rate to avoid information loss during downsampling.\n\nKey Point: To prevent aliasing when downsampling by L, the original signal must be sampled at L times the Nyquist rate.\n\nUpsampling involves inserting $L-1$ zero values between each pair of consecutive samples, as shown in Fig. 13.7. This process results in the upsampled signal's spectrum being identical to the original signal's spectrum but with a frequency axis renormalization. Specifically, upsampling by L scales the frequency axis by L, so that $2 \\pi$ now appears where $L 2 \\pi$ was in the original signal, and L identical copies of the original spectrum are compressed within the 0 to $2 \\pi$ range.\n\nKey Point: Upsampling by L leads to a frequency axis renormalization, compressing L copies of the original signal spectrum within the 0 to $2 \\pi$ range.\n\nThis operation is beneficial for increasing a signal's effective sampling rate, especially when postfiltering is applied.\n\nThe following two examples elucidate the spectral changes resulting from downsampling and upsampling.\n\n#### EXAMPLE 13.2\n\nConsider the signal $\\mathrm{x}_{2}(n)$ from Example 13.1, which is to be downsampled by $L=3$. Determine the new spectrum, $X_{3}(\\omega)$, when every third sample is retained and the others are discarded. In other words, transform the original series $\\mathrm{x}_{1}, \\mathrm{x}_{2}, \\mathrm{x}_{3}, \\mathrm{x}_{4}, \\ldots$ into the new series $\\mathrm{x}_{1}, \\mathrm{x}_{4}, \\mathrm{x}_{7}, \\mathrm{x}_{10}, \\ldots$\nimage_name:(a)\ndescription:The system block diagram labeled \"(a)\" illustrates the process of downsampling by a factor of 4, shown in both the time and frequency domains.\n\n1. **Main Components:**\n- **Input Signal:** The left-side time domain graph displays a discrete signal with regularly spaced samples, represented as a sinusoidal waveform with discrete points.\n- **Downsampling Block:** Indicated by a downward arrow and \"L=4,\" this block reduces the sampling rate by retaining every fourth sample and discarding the rest.\n- **Output Signal:** The right-side time domain graph shows the downsampled signal with fewer sample points, reflecting a larger interval between samples due to the downsampling factor of 4.\n\n2. **Information Flow:**\n- The input signal enters the downsampling block, undergoes rate reduction, and emerges as the downsampled signal.\n- Arrows indicate the direction of signal flow from input to output.\n\n3. **Labels and Annotations:**\n- The time domain is marked with \"n\" for discrete time indices.\n- \"L = 4\" denotes the downsampling factor.\n- The frequency domain is labeled with \"ω\" for angular frequency.\n\n4. **Frequency Domain Representation:**\n- Below the time domain graphs, the corresponding frequency domain representations are shown.\n- The original spectrum on the left features two peaks at specific frequencies. The right-side spectrum after downsampling exhibits aliasing, with repeated frequency components due to the reduced sampling rate.\n\n5. **System Function:**\n- The primary function is to decrease the sampling rate of a discrete-time signal by a factor of 4, involving sample retention and discard, affecting both time domain representation and introducing frequency domain aliasing. The diagram effectively illustrates these domain changes due to downsampling.\nimage_name:(b)\ndescription:The graph labeled \"(b)\" is a frequency domain representation of a signal downsampled by a factor of 4, showing the spectral effects of downsampling.\n\n1. **Graph Type and Function:**\n- This is a frequency domain graph depicting the signal's spectrum post-downsampling.\n\n2. **Axes Labels and Units:**\n- The horizontal axis is labeled with angular frequency $\\omega$ in radians per second, with key points at $0$, $\\frac{4\\pi}{6}$, and $2\\pi$.\n- The vertical axis represents frequency component amplitude, without specific units.\n\n3. **Behavior and Trends:**\n- The spectrum displays a periodic triangular pattern with repeating peaks and valleys.\n- Peaks occur at multiples of $\\frac{4\\pi}{6}$, indicating the periodicity from downsampling.\n\n4. **Features and Technical Details:**\n- The spectrum shows symmetrical frequency components around the vertical axis.\n- The first peak is at $\\omega = 0$, with subsequent peaks at $\\frac{4\\pi}{6}$ intervals.\n- The shape suggests aliasing effects due to downsampling, causing periodic spectrum replication.\n\n5. **Annotations and Data Points:**\n- The graph lacks amplitude values but clearly marks key frequency points for interpreting spectral replication due to downsampling.\n\nFig. 13.6 Downsampling by 4: (a) time domain, and (b) frequency domain.\nimage_name:(a)\ndescription:The system block diagram labeled \"(a)\" illustrates upsampling by a factor of 4, comprising time and frequency domain sections.\n\nMain Components:\n1. **Time Domain Representation:**\n- **Input Signal (Left Graph):** Shows a discrete-time signal with 1-unit intervals. The waveform is dashed to indicate continuity, with discrete samples as vertical lines.\n- **Upsampling Block:** Represented by an upward arrow and \"L=4,\" this block increases the sample rate by inserting zeros between original samples.\n- **Output Signal (Right Graph):** Displays the upsampled signal with samples now at 4-unit intervals, reflecting the increased sample rate.\n\n2. **Frequency Domain Representation:**\n- **Input Spectrum (Left Graph):** Shows the original signal's spectrum with a triangular waveform, indicating frequency content before upsampling.\n- **Output Spectrum (Right Graph):** After upsampling, the spectrum shows periodic replication, with main components at $\\frac{\\pi}{6}$, $\\pi$, and $2\\pi$ intervals.\n\nFlow of Information:\n- **Signal Flow:** The discrete-time signal moves from the input graph through the upsampling block to the output graph, showing time domain effects.\n- **Frequency Transformation:** The frequency domain transformation is separately illustrated, showing how the spectrum changes due to upsampling.\n\nLabels and Annotations:\n- The upsampling factor is clearly marked as \"L = 4.\"\n- Frequency points are marked on the frequency domain graphs to indicate spectral replication.\n\nSystem Function:\nThe system's primary function is to increase the sample rate of a discrete-time signal by a factor of 4, achieved by inserting zeros between samples, resulting in spectral replication in the frequency domain. The diagram effectively demonstrates both time and frequency domain effects of upsampling.\nimage_name:(b)\ndescription:The graph labeled \"(b)\" is a frequency domain representation of a signal upsampled by a factor of 4, showing the effects on the signal's frequency content.\n\n1. **Graph Type and Function:**\n- This is a frequency domain graph, a spectral plot showing upsampling effects.\n\n2. **Axes Labels and Units:**\n- The horizontal axis is labeled with angular frequency \\( \\omega \\) in radians per second, with key frequencies at \\( \\frac{\\pi}{6} \\), \\( \\pi \\), and \\( 2\\pi \\).\n- The vertical axis represents amplitude, without specific numerical values.\n\n3. **Behavior and Trends:**\n- The graph shows periodic replication of the original spectrum due to upsampling, with repeated triangular shapes along the frequency axis.\n- The triangular shapes indicate replicated frequency content at intervals determined by the upsampling factor.\n\n4. **Features and Technical Details:**\n- Peaks align at multiples of \\( \\frac{\\pi}{6} \\), corresponding to the upsampling factor of 4.\n- The graph suggests additional spectral components from upsampling, resulting in a denser frequency spectrum.\n\n5. **Annotations and Data Points:**\n- Amplitude values are not provided, but key frequency points are clearly marked for analyzing spectral replication and potential aliasing effects.\n\nFig. 13.7 Upsampling by 4: (a) time domain, and (b) frequency domain.\n\n#### Solution\n\nThe solution here is that the new sequence is equivalent to $x(n)$ in Example 13.1, so its spectrum is simply $X_{3}(\\omega)=X(\\omega)$.\n\nNote that no information was lost in this example due to the sufficient spacing of the initial signal's images. However, if downsampling causes spectral overlap, aliasing occurs, similar to undersampling an analog signal below the Nyquist rate. In fact, to avoid aliasing during downsampling by L, the original signal should be band-limited to $\\pi / \\mathrm{L}$.\n\n#### EXAMPLE 13.3\n\nConsider upsampling the signal $x(n)$ from Example 13.1 by inserting two zeros between each sample (i.e., upsampling by $L=3$). Find the new spectrum, $X_{4}(\\omega)$. In other words, transform the original series $\\mathrm{x}(\\mathrm{n})=\\mathrm{x}_{1}, \\mathrm{x}_{2}, \\mathrm{x}_{3}, \\ldots$ with spectrum $X(\\omega)$ into the new series $x_{4}(n)=\\left(x_{1}, 0,0, x_{2}, 0,0, x_{3}, \\ldots\\right)$ with spectrum $X_{4}(\\omega)$.\n\n#### Solution\n\nA simple way to understand the insertion of these extra zeros is to examine $X_{s 4}(\\mathrm{f})$ in both time and frequency domains with $f_{s 4}=12 \\mathrm{~Hz}$. Recall that $x_{s 4}(t)$ is defined for all time, zero between impulses, and its Laplace transform shows the frequency response. With this sampling frequency, $x_{s 4}(t)$ equals $x_{s}(t)$, so $X_{s 4}(f)=X_{s}(f)$. To find $X_{4}(\\omega)$, note that it is a frequency normalization of $X_{s 4}(f)$, with the sampling frequency normalized to $2 \\pi$. Essentially, the series $\\mathbf{x}(\\mathrm{n})$ normalizes the time between impulses to 1. Inserting zeros changes the normalization for a shorter time period. Thus, the images remain the same, but the frequency axis normalization differs.\n\nIn this example, with two zeros inserted, the effective sampling rate is 12 Hz, but images at 4 Hz and 8 Hz remain, unlike $\\mathrm{X}_{2}(\\omega)$ in Example 13.1. The resulting signals are shown in Fig. 13.8.\n\nFinally, if signal processing removes the images at $(2 \\pi) / 3$ and $(4 \\pi) / 3$, the resulting signal equals $\\mathrm{x}_{2}(\\mathrm{n})$. In other words, as long as the original analog signal is sampled above the Nyquist rate, upsampling and digital processing can yield signals equivalent to higher-rate sampling.\n\nimage_name:Fig. 13.8\ndescription:The graph in Fig. 13.8 consists of two main components: a time-domain representation and a frequency-domain spectrum of a discrete-time signal upsampled by a factor of 3.\n\nTime-Domain Representation:\n- **Type of Graph:** The top part is a time-domain waveform.\n- **Axes Labels and Units:**\n- **Horizontal Axis (Time):** Labeled 't (seconds)' with discrete points marked as 'n', specific time markers at 0.25 and 0.5 seconds corresponding to sample numbers 3 and 6.\n- **Vertical Axis:** Represents signal amplitude, without specific units.\n- **Behavior and Trends:**\n- The signal $x_c(t)$ is a continuous sinusoidal line.\n- Discrete samples $x_4(n)$ are shown as vertical lines at specific intervals, reflecting the continuous signal's sampled values.\n- The sampled signal maintains the continuous signal's general shape but at discrete intervals.\n- **Features and Technical Details:**\n- Sampled points are evenly spaced, indicating uniform sampling.\n- The relationship between $x_4(n)$ and $x_c(t)$ is highlighted with annotations.\n\nFrequency-Domain Spectrum:\n- **Type of Graph:** The bottom part is a frequency-domain spectrum.\n- **Axes Labels and Units:**\n- **Horizontal Axis (Frequency):** Labeled 'f' and 'ω', with frequency values in hertz and radians per second.\n- **Vertical Axis:** Represents frequency component amplitude, labeled $X_{s4}(f), X_4(ω)$.\n- **Behavior and Trends:**\n- The spectrum shows repeated triangular peaks at 3 Hz intervals, starting at 1 Hz and continuing at 4 Hz, 8 Hz, 12 Hz, and 16 Hz.\n- Peaks represent the upsampled signal's frequency components.\n- **Features and Technical Details:**\n- The spectrum indicates aliasing, with images at $(2\\pi)/3$ and $(4\\pi)/3$ as noted.\n- The frequency axis is marked with both linear and angular frequencies, showing the conversion.\n\nAnnotations and Data Points:\n- Annotations highlight the relationship between sampled and continuous signals and key frequency component positions.\n- The context notes that signal processing can remove images at $(2\\pi)/3$ and $(4\\pi)/3$, resulting in a signal matching $x_2(n)$.\n\nThis graph illustrates the effects of upsampling on both time-domain and frequency-domain representations of a discrete-time signal.\n\nFig. 13.8 Spectrum of a discrete-time signal upsampled by 3."
},
{
    "text": "Two crucial operations in discrete-time signal processing are downsampling and upsampling. Downsampling aims to decrease the sample rate, thereby reducing the data volume for processing and storage, ideally without losing information. Conversely, upsampling is used to elevate the sample rate. While non-integer rates for both operations are feasible, this discussion focuses on scenarios where $L$ is an integer.\n\nDownsampling involves retaining every $L$th sample and discarding the rest. As depicted in Fig. 13.6, this process expands the original signal's spectrum by a factor of $L$. To prevent digital aliasing, the signal's spectrum must be band-limited to $\\pi / \\mathrm{L}$ before downsampling. Essentially, the signal should be sampled at $L$ times its minimum rate to avoid information loss during downsampling.\n\nKey Point: To prevent aliasing when downsampling by $L$, the original signal must be sampled at $L$ times the Nyquist rate.\n\nUpsampling is carried out by inserting $L-1$ zero values between each consecutive pair of samples, as shown in Fig. 13.7. This results in a spectrum for the upsampled signal that mirrors the original but undergoes renormalization along the frequency axis. Specifically, upsampling by $L$ scales the frequency axis by $L$, so that $2 \\pi$ now corresponds to where $L 2 \\pi$ was in the original signal, and $L$ identical copies of the original spectrum are compressed within the 0 to $2 \\pi$ range.\n\nKey Point: Upsampling by $L$ leads to a frequency axis renormalization, compressing $L$ copies of the original spectrum within the 0 to $2 \\pi$ range.\n\nThis operation is beneficial for increasing a signal's effective sampling rate, especially when postfiltering is applied.\n\nThe following examples elucidate the spectral changes due to downsampling and upsampling.\n\n#### EXAMPLE 13.2\n\nConsider the signal $\\mathrm{x}_{2}(n)$ from Example 13.1, which is to be downsampled by $L=3$. Determine the new spectrum, $X_{3}(\\omega)$, when every third sample is retained and the others are discarded. In other words, if the original sequence is $\\mathrm{x}_{1}, \\mathrm{x}_{2}, \\mathrm{x}_{3}, \\mathrm{x}_{4}, \\ldots$, the new sequence becomes $\\mathrm{x}_{1}, \\mathrm{x}_{4}, \\mathrm{x}_{7}, \\mathrm{x}_{10}, \\ldots$\n\nimage_name:(a)\ndescription:The block diagram labeled \"(a)\" illustrates downsampling by a factor of 4, showing both time and frequency domain perspectives.\n\n1. **Main Components:**\n- **Input Signal:** The left-side time domain graph displays a discrete signal with regular sample intervals, depicted as a sinusoidal waveform with discrete points.\n- **Downsampling Block:** A block with a downward arrow and \"L=4\" signifies the downsampling process, reducing the sample rate by keeping every fourth sample.\n- **Output Signal:** The right-side time domain graph shows the downsampled signal with fewer samples, reflecting a larger interval between points due to the downsampling factor of 4.\n\n2. **Information Flow:**\n- The input signal enters the downsampling block, undergoes rate reduction, and emerges as the downsampled signal.\n- Arrows indicate the direction of signal flow from input to output.\n\n3. **Labels and Annotations:**\n- The time domain is marked with \"n\" for discrete time indices.\n- \"L = 4\" denotes the downsampling factor.\n- The frequency domain is labeled with \"ω\" for angular frequency.\n\n4. **Frequency Domain Representation:**\n- Below the time domain graphs, corresponding frequency domain plots are shown.\n- The original spectrum on the left features two peaks at specific frequencies. The right-side spectrum after downsampling exhibits aliasing, with repeated frequency components due to the reduced sample rate.\n\n5. **System Function:**\n- The system's primary function is to decrease the sample rate of a discrete-time signal by a factor of 4, involving selective sample retention and introducing aliasing in the frequency domain. The diagram effectively illustrates these domain changes due to downsampling.\n\nimage_name:(b)\ndescription:The graph labeled \"(b)\" depicts the frequency domain of a downsampled signal, illustrating the impact of downsampling by a factor of 4 on the signal's spectrum.\n\n1. **Graph Type and Function:**\n- This is a frequency domain graph representing the spectrum post-downsampling.\n\n2. **Axes Labels and Units:**\n- The horizontal axis is labeled with angular frequency $\\omega$ in radians per second, with key points at $0$, $\\frac{4\\pi}{6}$, and $2\\pi$.\n- The vertical axis represents amplitude but lacks specific units.\n\n3. **Behavior and Trends:**\n- The spectrum displays a periodic triangular pattern with repeating peaks and valleys.\n- Peaks occur at multiples of $\\frac{4\\pi}{6}$, indicating the periodicity from downsampling.\n\n4. **Features and Technical Details:**\n- The spectrum shows symmetrical frequency components around the vertical axis.\n- The first peak is at $\\omega = 0$, with subsequent peaks at intervals of $\\frac{4\\pi}{6}$.\n- The shape suggests aliasing effects due to downsampling, leading to periodic spectrum replication.\n\n5. **Annotations and Data Points:**\n- The graph lacks amplitude values but clearly marks key frequency points for interpreting spectral replication due to downsampling.\n\nFig. 13.6 Downsampling by 4: (a) time domain, and (b) frequency domain.\n\nimage_name:(a)\ndescription:The block diagram labeled \"(a)\" demonstrates upsampling by a factor of 4, featuring time and frequency domain sections.\n\nMain Components:\n1. **Time Domain Representation:**\n- **Input Signal (Left Graph):** This graph shows a discrete-time signal with 1-unit intervals. The waveform is dashed to indicate continuity, with discrete samples as vertical lines.\n- **Upsampling Block:** Represented by a block with an upward arrow and \"L=4\", it increases the sample rate by inserting zeros.\n- **Output Signal (Right Graph):** The output shows samples spaced at 4-unit intervals, reflecting the increased rate.\n\n2. **Frequency Domain Representation:**\n- **Input Spectrum (Left Graph):** The original signal's spectrum is triangular, indicating frequency content before upsampling, with a key frequency at \\( \\frac{4\\pi}{6} \\).\n- **Output Spectrum (Right Graph):** After upsampling, the spectrum shows periodic replication, with main components at \\( \\frac{\\pi}{6} \\), \\( \\pi \\), and \\( 2\\pi \\), illustrating the upsampling effect.\n\nFlow of Information:\n- **Signal Flow:** The discrete-time signal moves from the input graph through the upsampling block to the output graph, showing the time domain effect.\n- **Frequency Transformation:** The frequency domain change is separately depicted, showing how the spectrum alters due to upsampling.\n\nLabels and Annotations:\n- The upsampling factor is clearly marked as \"L = 4.\"\n- Frequency points are marked on the frequency domain graphs to indicate spectral replication.\n\nSystem Function:\nThe system primarily increases the sample rate of a discrete-time signal by a factor of 4, achieved by inserting zeros in the time domain, resulting in spectral replication in the frequency domain. The diagram effectively demonstrates these effects.\n\nimage_name:(b)\ndescription:The graph labeled \"(b)\" shows the frequency domain of a signal upsampled by a factor of 4, illustrating the upsampling effects on frequency content.\n\n1. **Graph Type and Function:**\n- This is a frequency domain graph, a spectral plot showing upsampling effects.\n\n2. **Axes Labels and Units:**\n- The horizontal axis is labeled with angular frequency \\( \\omega \\) in radians per second, with key frequencies at \\( \\frac{\\pi}{6} \\), \\( \\pi \\), and \\( 2\\pi \\).\n- The vertical axis represents amplitude but lacks specific values.\n\n3. **Behavior and Trends:**\n- The graph shows periodic spectrum replication due to upsampling, with repeated triangular shapes.\n- The triangular patterns indicate replicated original frequency content at intervals determined by the upsampling factor.\n\n4. **Features and Technical Details:**\n- Peaks align at multiples of \\( \\frac{\\pi}{6} \\), corresponding to the upsampling factor of 4.\n- The graph suggests additional spectral components from upsampling, resulting in a denser frequency spectrum.\n\n5. **Annotations and Data Points:**\n- Amplitude values are not provided, but key frequency points are clearly marked for analyzing spectral replication and potential aliasing.\n\nFig. 13.7 Upsampling by 4: (a) time domain, and (b) frequency domain.\n\n#### Solution\n\nThe solution here is that the new sequence is equivalent to $x(n)$ in Example 13.1, so its spectrum is simply $X_{3}(\\omega)=X(\\omega)$.\n\nNote that no information was lost in this example due to the sufficient spacing of the initial signal's images. However, if downsampling causes spectral overlap, aliasing occurs, similar to undersampling an analog signal. To avoid aliasing during downsampling by $L$, the original signal should be band-limited to $\\pi / \\mathrm{L}$.\n\n#### EXAMPLE 13.3\n\nFor upsampling the signal $x(n)$ in Example 13.1, determine the new spectrum $X_{4}(\\omega)$ when two zeros are inserted between each sample (i.e., upsampling by $L=3$). In other words, if the original sequence is $\\mathrm{x}(\\mathrm{n})=\\mathrm{x}_{1}, \\mathrm{x}_{2}, \\mathrm{x}_{3}, \\ldots$ with spectrum $X(\\omega)$, the new sequence becomes $x_{4}(n)=\\left(x_{1}, 0,0, x_{2}, 0,0, x_{3}, \\ldots\\right)$ with spectrum $X_{4}(\\omega)$.\n\n#### Solution\n\nA straightforward way to understand the insertion of these extra zeros is to examine $X_{s 4}(\\mathrm{f})$ in time and frequency when $f_{s 4}=12 \\mathrm{~Hz}$. Recall that $x_{s 4}(t)$ is defined for all time, being zero between impulses, and the Laplace transform reveals its frequency response. With this sampling frequency, $x_{s 4}(t)$ equals $x_{s}(t)$, so $X_{s 4}(f)=X_{s}(f)$. To find $X_{4}(\\omega)$, note it is a frequency normalization of $X_{s 4}(f)$, with the sampling frequency normalized to $2 \\pi$. Essentially, the series $\\mathbf{x}(\\mathrm{n})$ normalizes the time between impulses to 1. Inserting extra zeros effectively normalizes for a shorter time period. Thus, the images remain the same, but the frequency axis normalization differs.\n\nIn this example, with two zeros inserted, the effective sampling rate can be considered 12 Hz, but images at 4 Hz and 8 Hz remain, unlike $\\mathrm{X}_{2}(\\omega)$ in Example 13.1. The resulting signals are shown in Fig. 13.8.\n\nFinally, if signal processing removes the images at $(2 \\pi) / 3$ and $(4 \\pi) / 3$, the resulting signal matches $\\mathrm{x}_{2}(\\mathrm{n})$. In other words, as long as an analog signal is initially sampled above the Nyquist rate, upsampling and digital processing can yield signals equivalent to those from higher sampling rates.\n\nimage_name:Fig. 13.8\ndescription:Fig. 13.8 displays a graph with two main components: a time-domain representation and a frequency-domain spectrum of a discrete-time signal upsampled by a factor of 3.\n\nTime-Domain Representation:\n- **Graph Type:** The top part is a time-domain waveform.\n- **Axes Labels and Units:**\n- **Horizontal Axis (Time):** Labeled 't (seconds)' with discrete points marked as 'n'. Specific markers are at 0.25 and 0.5 seconds, corresponding to sample numbers 3 and 6.\n- **Vertical Axis:** Represents signal amplitude, units unspecified.\n- **Behavior and Trends:**\n- The signal $x_c(t)$ is a continuous sinusoidal line.\n- Discrete samples $x_4(n)$ are shown as vertical lines at specific intervals, reflecting the sampled continuous signal.\n- The sampled signal maintains the continuous signal's general shape but at discrete intervals.\n- **Features and Technical Details:**\n- Sampled points are evenly spaced, indicating uniform sampling.\n- The relationship between $x_4(n)$ and $x_c(t)$ is highlighted with annotations.\n\nFrequency-Domain Spectrum:\n- **Graph Type:** The bottom part is a frequency-domain spectrum.\n- **Axes Labels and Units:**\n- **Horizontal Axis (Frequency):** Labeled 'f' and 'ω', with values in hertz and radians per second.\n- **Vertical Axis:** Represents amplitude, labeled $X_{s4}(f), X_4(ω)$.\n- **Behavior and Trends:**\n- The spectrum shows repeated triangular peaks at 3 Hz intervals, starting at 1 Hz and continuing at 4 Hz, 8 Hz, 12 Hz, and 16 Hz.\n- Peaks represent the upsampled signal's frequency components.\n- **Features and Technical Details:**\n- The spectrum indicates aliasing, with images at $(2\\pi)/3$ and $(4\\pi)/3$ as noted.\n- The frequency axis is marked with both linear and angular frequencies, showing the conversion.\n\nAnnotations and Data Points:\n- The graph includes annotations relating sampled and continuous signals and key frequency component positions.\n- The context notes that processing can remove images at $(2\\pi)/3$ and $(4\\pi)/3$, resulting in a signal matching $x_2(n)$.\n\nThis graph effectively illustrates the time-domain and frequency-domain effects of upsampling a discrete-time signal by 3.\n\nFig. 13.8 Spectrum of a discrete-time signal upsampled by 3."
},
{
    "text": "Two crucial operations in discrete-time signal processing are downsampling and upsampling. Downsampling aims to decrease the sample rate, thereby reducing the data volume for processing and storage, ideally without losing information. Conversely, upsampling is used to elevate the sample rate. While non-integer downsampling and upsampling rates are feasible, this discussion focuses solely on scenarios where $L$ is an integer.\n\nDownsampling is executed by retaining every $L$th sample and discarding the rest. As depicted in Fig. 13.6, this process expands the original spectra by a factor of $L$. To prevent digital aliasing, the signal's spectrum must be band-limited to $\\pi / \\mathrm{L}$ before downsampling. In essence, the signal must be sampled at $L$ times its minimum sampling rate to avoid information loss during downsampling.\n\nKey Point: To prevent aliasing when downsampling by a factor $L$, the original signal must be sampled at $L$ times the Nyquist rate.\n\nUpsampling involves inserting $L-1$ zero values between each pair of consecutive samples, as shown in Fig. 13.7. This results in a spectrum for the upsampled signal that mirrors the original but is renormalized along the frequency axis. Specifically, upsampling by $L$ scales the frequency axis by $L$, so that $2 \\pi$ now corresponds to where $L 2 \\pi$ was in the original signal, and $L$ identical copies of the original spectrum are compressed within the 0 to $2 \\pi$ range.\n\nKey Point: Upsampling by $L$ leads to a frequency axis renormalization, compressing $L$ copies of the original signal spectrum within the 0 to $2 \\pi$ range.\n\nThis operation is beneficial for increasing a signal's effective sampling rate, especially if postfiltering is applied.\n\nThe following two examples elucidate the spectral changes resulting from downsampling and upsampling.\n\n#### EXAMPLE 13.2\n\nConsider the signal $\\mathrm{x}_{2}(n)$ from Example 13.1, which is to be downsampled by $L=3$. Determine the new spectrum, $X_{3}(\\omega)$, when every third sample is retained and the others are discarded. That is, if the original sequence is $\\mathrm{x}_{1}, \\mathrm{x}_{2}, \\mathrm{x}_{3}, \\mathrm{x}_{4}, \\ldots$, the new sequence becomes $\\mathrm{x}_{1}, \\mathrm{x}_{4}, \\mathrm{x}_{7}, \\mathrm{x}_{10}, \\ldots$\nimage_name:(a)\ndescription:The system block diagram labeled \"(a)\" illustrates the process of downsampling by a factor of 4, depicted in both the time and frequency domains.\n\n1. **Main Components:**\n- **Input Signal:** The left-side time domain graph shows a discrete signal with regular sample intervals, represented as a sinusoidal waveform with discrete points.\n- **Downsampling Block:** Indicated by a downward arrow and \"L=4\", this block reduces the sampling rate by keeping every fourth sample and discarding the rest.\n- **Output Signal:** On the right, the downsampled signal in the time domain has fewer sample points, with a larger interval between them, reflecting the 4x downsampling.\n\n2. **Information Flow:**\n- The input signal enters the downsampling block, undergoes rate reduction, and emerges as the downsampled signal.\n- Arrows indicate the direction of signal flow from input to output.\n\n3. **Labels and Annotations:**\n- The time domain is marked with \"n\" for discrete time indices.\n- \"L = 4\" denotes the downsampling factor.\n- The frequency domain is labeled with \"ω\" for angular frequency.\n\n4. **Frequency Domain Representation:**\n- Below the time domain diagrams, the corresponding frequency domain representations are shown.\n- The original spectrum on the left features two peaks at specific frequencies. The right-side spectrum after downsampling exhibits aliasing, with repeated frequency components due to the reduced sampling rate.\n\n5. **System Function:**\n- The system's primary function is to decrease the sampling rate of a discrete-time signal by a factor of 4, involving sample retention and discard, affecting both time domain representation and introducing frequency domain aliasing. The diagram effectively visualizes these domain changes due to downsampling.\nimage_name:(b)\ndescription:The graph labeled \"(b)\" presents the frequency domain representation of a signal post-downsampling by a factor of 4.\n\n1. **Graph Type and Function:**\n- This is a frequency domain graph, depicting the signal's spectrum after downsampling.\n\n2. **Axes Labels and Units:**\n- The horizontal axis is labeled with angular frequency $\\omega$ in radians per second, with key points at $0$, $\\frac{4\\pi}{6}$, and $2\\pi$.\n- The vertical axis represents frequency component amplitude, without specific units.\n\n3. **Behavior and Trends:**\n- The spectrum exhibits a periodic triangular shape with repeating peaks and valleys.\n- Peaks occur at multiples of $\\frac{4\\pi}{6}$, indicating the periodicity from downsampling.\n\n4. **Key Features and Technical Details:**\n- The spectrum shows symmetrical frequency components around the vertical axis.\n- The first peak is at $\\omega = 0$, with subsequent peaks at intervals of $\\frac{4\\pi}{6}$.\n- The shape suggests aliasing effects due to downsampling, leading to periodic spectrum replication.\n\n5. **Annotations and Data Points:**\n- The graph lacks amplitude values but clearly marks key frequency points for interpreting spectral replication due to downsampling.\n\nFig. 13.6 Downsampling by 4: (a) time domain, and (b) frequency domain.\nimage_name:(a)\ndescription:The system block diagram labeled \"(a)\" illustrates upsampling by a factor of 4, featuring time and frequency domain sections.\n\n1. **Time Domain Representation:**\n- **Input Signal (Left Graph):** Shows a discrete-time signal with 1-unit intervals. The waveform is dashed to indicate continuity, with discrete samples as vertical lines.\n- **Upsampling Block:** Represented by a block with an upward arrow and \"L=4\", it increases the sample rate by inserting zeros.\n- **Output Signal (Right Graph):** Displays the upsampled signal with samples now at 4-unit intervals.\n\n2. **Frequency Domain Representation:**\n- **Input Spectrum (Left Graph):** Shows the original signal's triangular spectrum, with a key frequency at \\( \\frac{4\\pi}{6} \\).\n- **Output Spectrum (Right Graph):** After upsampling, the spectrum shows periodic replication, with main components at \\( \\frac{\\pi}{6} \\), \\( \\pi \\), and \\( 2\\pi \\).\n\n3. **Information Flow:**\n- The discrete-time signal flows through the upsampling block, increasing the sample rate, shown in the time domain.\n- Frequency domain transformation is separately depicted, showing spectrum changes due to upsampling.\n\n4. **Labels, Annotations, and Indicators:**\n- The upsampling factor is labeled as \"L = 4.\"\n- Frequency points are marked on the frequency domain graphs to indicate spectral replication.\n\n5. **System Function:**\n- The system's primary function is to increase the sample rate of a discrete-time signal by a factor of 4, achieved by inserting zeros in the time domain, resulting in replicated spectrum in the frequency domain. The diagram effectively demonstrates both time and frequency domain effects of upsampling.\nimage_name:(b)\ndescription:The graph labeled \"(b)\" shows the frequency domain representation of a signal after upsampling by a factor of 4.\n\n1. **Graph Type and Function:**\n- This is a frequency domain graph, specifically a spectral plot illustrating upsampling effects.\n\n2. **Axes Labels and Units:**\n- The horizontal axis is labeled with angular frequency \\( \\omega \\) in radians per second, with key frequencies at \\( \\frac{\\pi}{6} \\), \\( \\pi \\), and \\( 2\\pi \\).\n- The vertical axis represents amplitude, without specific numerical values.\n\n3. **Behavior and Trends:**\n- The graph shows periodic replication of the original spectrum due to upsampling, with repeated triangular shapes along the frequency axis.\n- The triangular shapes indicate replicated frequency content at intervals determined by the upsampling factor.\n\n4. **Key Features and Technical Details:**\n- Peaks align at multiples of \\( \\frac{\\pi}{6} \\), corresponding to the upsampling factor of 4.\n- The graph suggests additional spectral components from upsampling, resulting in a denser frequency spectrum.\n\n5. **Annotations and Data Points:**\n- Amplitude values are not given, but key frequency points are clearly marked for analyzing spectral replication and potential aliasing effects.\n\nFig. 13.7 Upsampling by 4: (a) time domain, and (b) frequency domain.\n\n#### Solution\n\nThe solution here is that the new sequence is equivalent to $x(n)$ in Example 13.1, so its spectrum is simply $X_{3}(\\omega)=X(\\omega)$.\n\nNote that no information was lost in this example due to the sufficient spacing of the initial signal's images. However, if downsampling causes spectral overlap, aliasing occurs, similar to undersampling an analog signal below the Nyquist rate. In fact, to avoid aliasing during downsampling by $L$, the original signal should be band-limited to $\\pi / \\mathrm{L}$.\n\n#### EXAMPLE 13.3\n\nFor upsampling the signal $x(n)$ in Example 13.1, determine the new spectrum $X_{4}(\\omega)$ if two zeros are inserted between each sample (i.e., upsampling by $L=3$). Thus, if the original sequence is $\\mathrm{x}(\\mathrm{n})=\\mathrm{x}_{1}, \\mathrm{x}_{2}, \\mathrm{x}_{3}, \\ldots$ with spectrum $X(\\omega)$, the new sequence becomes $x_{4}(n)=\\left(x_{1}, 0,0, x_{2}, 0,0, x_{3}, \\ldots\\right)$ with spectrum $X_{4}(\\omega)$.\n\n#### Solution\n\nA straightforward way to understand the insertion of these extra zeros is to examine $X_{s 4}(\\mathrm{f})$ in time and frequency when $f_{s 4}=12 \\mathrm{~Hz}$. Recall that $x_{s 4}(t)$ is defined for all time, being zero between impulses, and the Laplace transform reveals its frequency response. With this sampling frequency, $x_{s 4}(t)$ equals $x_{s}(t)$, so $X_{s 4}(f)=X_{s}(f)$. To find $X_{4}(\\omega)$, note that it is a frequency normalization of $X_{s 4}(f)$, with the sampling frequency normalized to $2 \\pi$. Essentially, the series $\\mathbf{x}(\\mathrm{n})$ normalizes the time between impulses to 1. Inserting zeros reduces this normalization period, affecting the frequency axis normalization.\n\nIn this example, with two zeros inserted, the effective sampling rate is conceptually 12 Hz, but images at 4 Hz and 8 Hz remain, unlike in $X_{2}(\\omega)$ of Example 13.1. The resulting signals are shown in Fig. 13.8.\n\nFinally, if signal processing removes the images at $(2 \\pi) / 3$ and $(4 \\pi) / 3$, the resulting signal matches $x_{2}(n)$. Thus, as long as an analog signal is initially sampled above the Nyquist rate, upsampling and digital signal processing can produce signals equivalent to those from higher sampling rates.\nimage_name:Fig. 13.8\ndescription:The graph in Fig. 13.8 comprises two main components: a time-domain representation and a frequency-domain spectrum of a discrete-time signal upsampled by a factor of 3.\n\nTime-Domain Representation:\n- **Graph Type:** The top part is a time-domain waveform.\n- **Axes Labels and Units:**\n- **Horizontal Axis (Time):** Labeled 't (seconds)' with discrete points marked as 'n'. Specific time markers are at 0.25 and 0.5 seconds, corresponding to sample numbers 3 and 6.\n- **Vertical Axis:** Represents signal amplitude, without specified units.\n- **Behavior and Trends:**\n- The continuous signal $x_c(t)$ is shown as a sinusoidal waveform.\n- Discrete samples $x_4(n)$ are shown as vertical lines at specific intervals, reflecting the sampled values of the continuous signal.\n- The sampled signal maintains the continuous signal's general shape but at discrete intervals.\n- **Key Features and Technical Details:**\n- Sampled points are evenly spaced, indicating uniform sampling.\n- The relationship between the sampled and continuous signals is highlighted with annotations.\n\nFrequency-Domain Spectrum:\n- **Graph Type:** The bottom part is a frequency-domain spectrum.\n- **Axes Labels and Units:**\n- **Horizontal Axis (Frequency):** Labeled 'f' and 'ω', with frequency values in hertz and radians per second.\n- **Vertical Axis:** Represents the amplitude of frequency components, labeled as $X_{s4}(f), X_4(ω)$.\n- **Behavior and Trends:**\n- The spectrum shows repeated triangular peaks at 3 Hz intervals, starting at 1 Hz and continuing at 4 Hz, 8 Hz, 12 Hz, and 16 Hz.\n- These peaks represent the frequency components of the upsampled signal.\n- **Key Features and Technical Details:**\n- The spectrum indicates aliasing, with images at $(2\\pi)/3$ and $(4\\pi)/3$ as noted.\n- The frequency axis is marked with both linear and angular frequencies, showing the conversion between them.\n\nAnnotations and Data Points:\n- The graph includes annotations relating the sampled and continuous signals and key frequency component positions.\n- The context notes that signal processing can remove images at $(2\\pi)/3$ and $(4\\pi)/3$, resulting in a signal matching $x_2(n)$.\n\nThis graph effectively illustrates the time-domain and frequency-domain effects of upsampling a discrete-time signal by a factor of 3.\n\nFig. 13.8 Spectrum of a discrete-time signal upsampled by 3."
},
{
    "text": "Two crucial operations in discrete-time signal processing are downsampling and upsampling. Downsampling aims to decrease the sample rate, thereby reducing the data volume for processing and storage, ideally without losing information. Conversely, upsampling is used to elevate the sample rate. While non-integer rates for both operations are feasible, this discussion focuses on scenarios where $L$ is an integer.\n\nDownsampling is executed by retaining every $L$th sample and discarding the rest. As depicted in Fig. 13.6, this process expands the original signal's spectra by a factor of $L$. To prevent digital aliasing, the signal's spectrum must be band-limited to $\\pi / \\mathrm{L}$ before downsampling. Essentially, the signal should be sampled at $L$ times its minimum rate to avoid information loss during downsampling.\n\nKey Point: To prevent aliasing when downsampling by $L$, the original signal must be sampled at $L$ times the Nyquist rate.\n\nUpsampling involves inserting $L-1$ zero values between each pair of consecutive samples, as shown in Fig. 13.7. This results in a spectrum for the upsampled signal that mirrors the original but undergoes renormalization along the frequency axis. Specifically, upsampling by $L$ scales the frequency axis by $L$, so $2 \\pi$ now corresponds to where $L 2 \\pi$ was in the original signal, and $L$ identical copies of the original spectrum are compressed within the 0 to $2 \\pi$ range.\n\nKey Point: Upsampling by $L$ leads to a frequency axis renormalization, compressing $L$ copies of the original spectrum into the 0 to $2 \\pi$ range.\n\nThis operation is beneficial for increasing a signal's effective sampling rate, especially when followed by postfiltering.\n\nThe following two examples elucidate the spectral changes resulting from downsampling and upsampling.\n\n#### EXAMPLE 13.2\n\nConsider the signal $\\mathrm{x}_{2}(n)$ from Example 13.1, which is to be downsampled by $L=3$. Determine the new spectrum, $X_{3}(\\omega)$, when every third sample is retained and the others are discarded. For instance, if the original sequence is $\\mathrm{x}_{1}, \\mathrm{x}_{2}, \\mathrm{x}_{3}, \\mathrm{x}_{4}, \\ldots$, the new sequence becomes $\\mathrm{x}_{1}, \\mathrm{x}_{4}, \\mathrm{x}_{7}, \\mathrm{x}_{10}, \\ldots$\nimage_name:(a)\ndescription:The block diagram labeled \"(a)\" illustrates downsampling by a factor of 4, shown in both time and frequency domains.\n\n1. **Main Components:**\n- **Input Signal:** The left-side time domain graph shows a discrete signal with regular sample intervals, depicted as a sinusoidal waveform with discrete points.\n- **Downsampling Block:** Indicated by a downward arrow and \"L=4\", this block reduces the sampling rate by keeping every fourth sample and discarding others.\n- **Output Signal:** The right-side time domain graph shows the downsampled signal with fewer samples, reflecting a larger interval between points.\n\n2. **Information Flow:**\n- The input signal enters the downsampling block, undergoes rate reduction, and emerges as the downsampled signal.\n- Arrows indicate the direction of signal flow.\n\n3. **Labels and Annotations:**\n- The time domain is marked with \"n\" for discrete time indices.\n- \"L = 4\" denotes the downsampling factor.\n- The frequency domain is labeled with \"ω\" for angular frequency.\n\n4. **Frequency Domain Representation:**\n- Below the time domain graphs, the corresponding frequency domain representations are shown.\n- The original spectrum on the left has two peaks at specific frequencies. The right-side spectrum after downsampling shows aliasing effects with repeated frequency components due to the reduced rate.\n\n5. **System Function:**\n- This system's primary function is to decrease the sampling rate of a discrete-time signal by a factor of 4, involving sample retention and discard, affecting both time domain representation and introducing frequency domain aliasing.\n\nimage_name:(b)\ndescription:The graph labeled \"(b)\" shows the frequency domain of a downsampled signal by a factor of 4.\n\n1. **Graph Type and Function:**\n- This is a frequency domain graph representing the spectrum post-downsampling.\n\n2. **Axes Labels and Units:**\n- The horizontal axis is labeled with angular frequency $\\omega$ in radians per second, with key points at $0$, $\\frac{4\\pi}{6}$, and $2\\pi$.\n- The vertical axis represents amplitude without specific units.\n\n3. **Behavior and Trends:**\n- The spectrum features a periodic triangular shape with repeating peaks and valleys.\n- Peaks occur at multiples of $\\frac{4\\pi}{6}$, indicating periodicity from downsampling.\n\n4. **Features and Technical Details:**\n- The spectrum shows symmetrical frequency components about the vertical axis.\n- The first peak is at $\\omega = 0$, with subsequent peaks at intervals of $\\frac{4\\pi}{6}$.\n- The shape indicates aliasing effects due to downsampling, causing periodic spectrum replication.\n\n5. **Annotations and Data Points:**\n- The graph lacks amplitude values but clearly marks key frequency points for interpreting spectral replication.\n\nFig. 13.6 Downsampling by 4: (a) time domain, and (b) frequency domain.\nimage_name:(a)\ndescription:The block diagram labeled \"(a)\" demonstrates upsampling by a factor of 4, featuring time and frequency domain sections.\n\nMain Components:\n1. **Time Domain Representation:**\n- **Input Signal (Left Graph):** Shows a discrete-time signal with 1-unit intervals. The waveform is dashed to indicate continuity, with discrete samples as vertical lines.\n- **Upsampling Block:** Represented by an upward arrow and \"L=4\", this block increases the sample rate by inserting zeros.\n- **Output Signal (Right Graph):** Shows the upsampled signal with samples now at 4-unit intervals.\n\n2. **Frequency Domain Representation:**\n- **Input Spectrum (Left Graph):** The original signal's spectrum with a triangular waveform, marked at \\( \\frac{4\\pi}{6} \\).\n- **Output Spectrum (Right Graph):** After upsampling, the spectrum shows periodic replication, with main components at \\( \\frac{\\pi}{6} \\), \\( \\pi \\), and \\( 2\\pi \\).\n\nFlow of Information:\n- **Signal Flow:** The discrete-time signal moves from input through the upsampling block, increasing the sample rate, and to the output, showing time domain effects.\n- **Frequency Transformation:** Separately illustrates how the spectrum changes due to upsampling.\n\nLabels and Annotations:\n- The upsampling factor is labeled \"L = 4.\"\n- Frequency points are marked on the frequency domain graphs.\n\nOverall System Function:\nThe system's main function is to increase the sample rate of a discrete-time signal by a factor of 4, achieved by inserting zeros in the time domain, resulting in replicated spectra in the frequency domain.\n\nimage_name:(b)\ndescription:The graph labeled \"(b)\" shows the frequency domain of a signal upsampled by a factor of 4.\n\n1. **Graph Type and Function:**\n- This is a frequency domain graph showing upsampling effects.\n\n2. **Axes Labels and Units:**\n- The horizontal axis is labeled with angular frequency \\( \\omega \\) in radians per second, with key frequencies at \\( \\frac{\\pi}{6} \\), \\( \\pi \\), and \\( 2\\pi \\).\n- The vertical axis represents amplitude without specific values.\n\n3. **Behavior and Trends:**\n- The graph shows periodic replication of the original spectrum due to upsampling, with repeated triangular shapes.\n- The triangular shapes indicate replicated frequency content at intervals determined by the upsampling factor.\n\n4. **Features and Technical Details:**\n- Peaks align at multiples of \\( \\frac{\\pi}{6} \\), corresponding to the upsampling factor of 4.\n- The graph suggests additional spectral components, resulting in a denser frequency spectrum.\n\n5. **Annotations and Data Points:**\n- Key frequency points are marked, allowing analysis of spectral replication and potential aliasing effects.\n\nFig. 13.7 Upsampling by 4: (a) time domain, and (b) frequency domain.\n\n#### Solution\n\nThe solution here is that the new sequence is equivalent to $x(n)$ in Example 13.1, so its spectrum is simply $X_{3}(\\omega)=X(\\omega)$.\n\nNote that no information was lost in this example due to the sufficient spacing of the initial signal's images. However, if downsampling causes spectral overlap, aliasing occurs, similar to undersampling an analog signal. In fact, to avoid aliasing during downsampling by $L$, the original signal should be band-limited to $\\pi / \\mathrm{L}$.\n\n#### EXAMPLE 13.3\n\nFor upsampling the signal $x(n)$ in Example 13.1, determine the new spectrum $X_{4}(\\omega)$ if two zeros are inserted between each sample (i.e., upsampling by $L=3$). For example, if the original sequence is $\\mathrm{x}(\\mathrm{n})=\\mathrm{x}_{1}, \\mathrm{x}_{2}, \\mathrm{x}_{3}, \\ldots$ with spectrum $X(\\omega)$, the new sequence becomes $x_{4}(n)=\\left(x_{1}, 0,0, x_{2}, 0,0, x_{3}, \\ldots\\right)$ with spectrum $X_{4}(\\omega)$.\n\n#### Solution\n\nA straightforward way to understand the insertion of these zeros is to examine $X_{s 4}(\\mathrm{f})$ in both time and frequency domains when $f_{s 4}=12 \\mathrm{~Hz}$. Recall that $x_{s 4}(t)$ is defined for all time, being zero between impulses, and the Laplace transform reveals its frequency response. At this sampling frequency, $x_{s 4}(t)$ equals $x_{s}(t)$, so $X_{s 4}(f)=X_{s}(f)$. To find $X_{4}(\\omega)$, note that it is a frequency normalization of $X_{s 4}(f)$, with the sampling frequency normalized to $2 \\pi$. Essentially, the series $\\mathbf{x}(\\mathrm{n})$ normalizes the time between impulses to 1. Inserting zeros effectively normalizes for a shorter time period. Thus, the images remain the same, but the frequency axis normalization differs.\n\nIn this example, with two zeros inserted, the effective sampling rate can be thought of as 12 Hz, but images at 4 Hz and 8 Hz remain, unlike $\\mathrm{X}_{2}(\\omega)$ in Example 13.1. The resulting signals are shown in Fig. 13.8.\n\nFinally, if signal processing removes the images at $(2 \\pi) / 3$ and $(4 \\pi) / 3$, the resulting signal equals $\\mathrm{x}_{2}(\\mathrm{n})$. In other words, as long as an analog signal is initially sampled above the Nyquist rate, upsampling and digital processing can yield signals equivalent to those from much higher sampling rates.\nimage_name:Fig. 13.8\ndescription:Fig. 13.8 displays a graph with two main components: a time-domain representation and a frequency-domain spectrum of a discrete-time signal upsampled by a factor of 3.\n\nTime-Domain Representation:\n- **Graph Type:** The top part is a time-domain waveform.\n- **Axes Labels and Units:**\n- **Horizontal Axis (Time):** Labeled 't (seconds)' with discrete points marked as 'n'. Specific time markers are at 0.25 and 0.5 seconds, corresponding to sample numbers 3 and 6.\n- **Vertical Axis:** Represents signal amplitude without specific units.\n- **Behavior and Trends:** The signal $x_c(t)$ is a continuous sinusoidal line, with discrete samples $x_4(n)$ shown as vertical lines at specific intervals, maintaining the continuous signal's shape but at discrete points.\n- **Key Features:** The sampled points are evenly spaced, indicating uniform sampling. The relationship between $x_4(n)$ and $x_c(t)$ is highlighted.\n\nFrequency-Domain Spectrum:\n- **Graph Type:** The bottom part is a frequency-domain spectrum.\n- **Axes Labels and Units:**\n- **Horizontal Axis (Frequency):** Labeled 'f' and 'ω', with frequency values in hertz and radians per second.\n- **Vertical Axis:** Represents amplitude, labeled $X_{s4}(f), X_4(ω)$.\n- **Behavior and Trends:** The spectrum shows repeated triangular peaks at 3 Hz intervals, starting at 1 Hz and continuing at 4 Hz, 8 Hz, 12 Hz, and 16 Hz.\n- **Key Features:** The peaks represent the frequency components of the upsampled signal, indicating aliasing with images at $(2\\pi)/3$ and $(4\\pi)/3$.\n\nAnnotations and Data Points:\n- Annotations relate the sampled and continuous signals and mark key frequency components.\n- The context notes that processing can remove images at $(2\\pi)/3$ and $(4\\pi)/3$, resulting in a signal matching $x_2(n)$.\n\nThis graph effectively illustrates the time-domain and frequency-domain effects of upsampling a discrete-time signal by 3.\n\nFig. 13.8 Spectrum of a discrete-time signal upsampled by 3."
},
{
    "text": "The discrete-time filter's transfer functions resemble those of continuous-time filters, though they are represented by rational functions involving polynomials in \\( z \\) instead of \\( s \\). For instance, the transfer function of a continuous-time low-pass filter, \\( H_c(s) \\), may be expressed as:\n\n$$\nH_c(s) = \\frac{4}{s^2 + 2s + 4}\n$$\n\nThe poles of this filter are found by solving the denominator polynomial, which yields \\( -1.0 \\pm 1.7321j \\) for this example. Additionally, the filter is characterized by two zeros at infinity, as the degree of the denominator polynomial exceeds that of the numerator by two.\n\nTo determine the frequency response of \\( H_c(s) \\), it is assessed along the \\( j\\omega \\) axis by substituting \\( s = j\\omega \\). The poles and zeros are visualized on the \\( s \\)-plane, and the magnitude and phase response \\( H_c(j\\omega) \\) can be determined based on the vectors from all poles (and finite zeros) to the point \\( s = j\\omega \\).\n\nFor discrete-time filters, such as the low-pass filter represented by:\n\n$$\nH(z) = \\frac{0.05}{z^2 - 1.6z + 0.65}\n$$\n\nThe frequency response is analyzed by evaluating the magnitude and phase on the unit circle or by graphically examining the vectors connecting the poles and zeros to points around the unit circle. The poles of \\( H(z) \\) are located at \\( 0.8 \\pm 0.1j \\) on the \\( z \\)-plane, with two zeros at infinity. The frequency response is evaluated around the unit circle contour \\( z = e^{j\\omega} \\).\n\nA key point to note is that in discrete-time, the point \\( z = 1 \\) corresponds to both DC (i.e., \\( \\omega = 0 \\)) and the sampling frequency (i.e., \\( \\omega = 2\\pi \\)). The frequency response is periodic, and for transfer functions with real coefficients, it exhibits conjugate symmetry around DC. Therefore, the frequency response needs only to be plotted from DC to half the sample rate, \\( \\pi \\).\n\nIt is crucial to distinguish between the continuous-time and discrete-time domains, as the same variables \\( f \\) and \\( \\omega \\) are used for illustrative purposes, but their values differ between the two domains. The unit circle \\( e^{j\\omega} \\) is used for systems with discrete inputs and outputs, whereas the \\( j\\omega \\)-axis is used for systems with continuous-time inputs and outputs."
},
{
    "text": "The discrete-time filter's transfer functions share a likeness with their continuous-time counterparts, albeit they are typically represented by rational functions involving polynomials in \\( z \\) rather than \\( s \\). For instance, a continuous-time low-pass filter's transfer function, \\( H_c(s) \\), may be expressed as:\n\n$$\nH_{c}(s)=\\frac{4}{s^{2}+2 s+4}\n$$\n\nThis filter's poles are derived from solving the denominator polynomial, which in this case are \\( -1.0 \\pm 1.7321j \\). It also possesses two zeros at infinity, as the degree of the denominator polynomial surpasses that of the numerator by two.\n\nTo determine the frequency response of \\( H_c(s) \\), it is assessed along the \\( j\\omega \\) axis by substituting \\( s=j\\omega \\). The poles and zeros are depicted on the \\( s \\)-plane, and the magnitude and phase response \\( H_c(j\\omega) \\) can be deduced by examining the vectors from all poles (and finite zeros) to the point \\( s=j\\omega \\) along the frequency-axis.\n\n$$\n\\left| H_{c}(j\\omega) \\right| = \\frac{4}{|j\\omega+1.0+1.7321j||j\\omega+1.0-1.7321j|}\n$$\n\n$$\n\\angle H_{c}(j\\omega) = -\\angle(j\\omega+1.0+1.7321j) - \\angle(j\\omega+1.0-1.7321j)\n$$\n\nAn example of a discrete-time, low-pass transfer function is given by:\n\n$$\nH(z)=\\frac{0.05}{z^{2}-1.6z+0.65}\n$$\n\nThe frequency response of a discrete-time filter \\( H(z) \\) is obtained by evaluating its magnitude and phase on the unit circle or graphically by considering the vectors from each pole and zero of \\( H(z) \\) to points around the unit circle.\n\n\\( H(z) \\)'s poles are located at \\( 0.8 \\pm 0.1j \\) on the \\( z \\)-plane, with two zeros at infinity. To ascertain the frequency response of \\( H(z) \\), it is evaluated around the unit circle contour \\( Z=e^{j\\omega} \\). For discrete-time systems, the frequency response is periodic and exhibits conjugate symmetry around DC for rational transfer functions with real coefficients. Thus, the frequency response is only plotted from DC to half the sample rate, \\( \\pi \\).\n\nA cautionary note: the same variables, \\( f \\) and \\( \\omega \\), are employed in both the continuous-time and discrete-time domains for illustrative purposes. However, these variables are not equivalent in both domains, and one must be careful not to conflate values from the two. The continuous-time domain is used here for clarity, given the reader's familiarity with transfer function analysis in the \\( s \\)-domain. To summarize, the unit circle, \\( e^{j\\omega} \\), is utilized to determine the frequency response of a system with numerical input and output series, whereas the \\( j\\omega \\)-axis is used for systems with continuous-time inputs and outputs. The \\( \\omega \\) value differs between the two domains."
},
{
    "text": "The transfer functions of discrete-time filters bear resemblance to their continuous-time counterparts; practical integrated circuit discrete-time transfer functions are typically expressed as rational functions, but instead of s-domain polynomials, they utilize z-domain polynomials. For instance, a continuous-time low-pass filter transfer function, \\( H_{c}(s) \\), may be expressed as\n\n$$\nH_{c}(s)=\\frac{4}{s^{2}+2 s+4} \\tag{13.18}\n$$\n\nTo determine the poles of this filter, one must find the roots of the denominator polynomial, which in this case are \\( -1.0 \\pm 1.7321 \\mathrm{j} \\). The continuous-time filter is also characterized by having two zeros at infinity, as the denominator polynomial is of a higher order than the numerator. The frequency response of \\( H_{c}(s) \\) is evaluated along the \\( j \\omega \\) axis by substituting \\( s=j \\omega \\), with the poles and zeros plotted on the \\( s \\)-plane as shown in Fig. 13.10(a). The magnitude and phase response \\( H_{c}(j \\omega) \\) can be derived from the vectors from all poles (and finite zeros) to the point \\( s=j \\omega \\) along the frequency-axis.\n\n$$\n\\begin{gather*}\n\\left|\\mathrm{H}_{c}(j \\omega)\\right|=\\frac{4}{|j \\omega+1.0+1.7321 \\mathrm{j}||j \\omega+1.0-1.7321 \\mathrm{j}|} \\tag{13.19}\\\\\n\\angle \\mathrm{H}_{c}(j \\omega)=-\\angle(j \\omega+1.0+1.7321 \\mathrm{j})-\\angle(j \\omega+1.0-1.7321 \\mathrm{j}) \\tag{13.20}\n\\end{gather*}\n$$\n\nAn example of a discrete-time low-pass transfer function is provided by the following equation:\n\n$$\nH(z)=\\frac{0.05}{z^{2}-1.6 z+0.65} \\tag{13.21}\n$$\n\nA key point to note is that the frequency response of a discrete-time filter \\( H(z) \\) can be determined by evaluating its magnitude and phase on the unit circle or by graphically analyzing the vectors connecting its poles and zeros to points around the unit circle.\n\nThe poles of \\( H(z) \\) are located at \\( 0.8 \\pm 0.1 \\mathrm{j} \\) on the \\( z \\)-plane, and like the continuous-time example, it has two zeros at infinity. The frequency response of \\( H(z) \\) is evaluated around the unit circle contour \\( \\mathbf{Z}=\\mathrm{e}^{\\mathrm{j} \\omega} \\), as depicted in Fig. 13.10(b), rather than along the vertical \\( j \\omega \\) axis as in the \\( s \\)-plane. This is a consequence of substituting \\( z=\\mathrm{e}^{\\mathrm{j} \\omega} \\) into the z-domain transfer function \\( H(z) \\), which is derived from substituting \\( s=j \\omega \\) into (13.14) with T normalized to 1, as discussed in Section 13.3. The discrete-time frequency response can be graphically determined by considering the magnitude and phase of vectors from each pole and zero of \\( H(z) \\) to the corresponding frequency on the unit circle \\( z=e^{j \\omega} \\).\n\nPoles or zeros at \\( z=0 \\) do not affect the magnitude response \\( H(z) \\) since a vector from the origin to the unit circle always has a length of unity. However, they do affect the phase response.\n\nIn discrete time, \\( H(z=1) \\) corresponds to the frequency response at both dc (i.e., \\( \\omega=0 \\)) and at \\( \\omega=2 \\pi \\). The frequency response is periodic, and for rational transfer functions with real-valued coefficients, it exhibits conjugate symmetry around dc. Therefore, discrete-time frequency responses need only be plotted from dc to half the sample rate, \\( \\pi \\). The time normalization of setting T to unity implies that \\( \\omega=2 \\pi \\) is equivalent to the sampling rate speed (i.e., \\( f=f_{s} \\)) for \\( X_{s}(f) \\). Additionally, note that the frequency response of a filter need only be plotted for \\( 0 \\leq \\omega \\leq \\pi \\) (i.e., \\( 0 \\leq \\omega \\leq f_{s} / 2 \\)) since, for filters with real coefficients, the poles and zeros always occur in complex-conjugate pairs (or on the real axis), so the magnitude response of the filter is equal to that for \\( \\pi \\leq \\omega \\leq 2 \\pi \\) (the filter's phase is antisymmetric). The frequency response repeats every \\( 2 \\pi \\).\n\nBefore concluding this section, a cautionary note is warranted. To simplify notation, the same variables, \\( f \\) and \\( \\omega \\), are used in both the continuous-time and discrete-time domains in Fig. 13.10. However, these variables are not equal in the two domains, and care should be taken not to confuse values from the two domains. The continuous-time domain is used here for illustrative reasons only since the reader should already be quite familiar with transfer function analysis in the \\( s \\)-domain. In summary, the unit circle, \\( \\mathrm{e}^{\\mathrm{j} \\omega} \\), is used to determine the frequency response of a system that has its input and output as a series of numbers, whereas the \\( j \\omega \\)-axis is used for a system that has continuous-time inputs and outputs. However, \\( \\omega \\) is different for the two domains."
},
{
    "text": "The transfer functions of discrete-time filters bear resemblance to those of continuous-time filters, with practical integrated circuit discrete-time transfer functions expressed as rational functions involving polynomials in \\( z \\) rather than \\( s \\). For instance, the transfer function of a continuous-time low-pass filter, \\( H_c(s) \\), may be expressed as:\n\n\\[\nH_c(s) = \\frac{4}{s^2 + 2s + 4}\n\\]\n\nThe poles of this filter are determined by solving the roots of the denominator polynomial, which in this case are \\( -1.0 \\pm 1.7321j \\). This continuous-time filter also possesses two zeros at infinity, as the degree of the denominator polynomial exceeds that of the numerator by two. The frequency response of \\( H_c(s) \\) is evaluated along the \\( j\\omega \\) axis by substituting \\( s = j\\omega \\), with the poles and zeros plotted on the \\( s \\)-plane.\n\nAn example of a discrete-time low-pass transfer function is given by:\n\n\\[\nH(z) = \\frac{0.05}{z^2 - 1.6z + 0.65}\n\\]\n\nThe frequency response of a discrete-time filter \\( H(z) \\) is determined by evaluating its magnitude and phase on the unit circle. The poles of \\( H(z) \\) are located at \\( 0.8 \\pm 0.1j \\) on the \\( z \\)-plane, with two zeros at infinity. The frequency response of \\( H(z) \\) is evaluated around the unit circle contour \\( z = e^{j\\omega} \\).\n\nIn discrete-time, \\( H(z=1) \\) corresponds to the frequency response at both DC (i.e., \\( \\omega = 0 \\)) and \\( \\omega = 2\\pi \\). The frequency response is periodic, and for rational transfer functions with real-valued coefficients, it exhibits conjugate symmetry around DC. Thus, discrete-time frequency responses need only be plotted from DC to half the sample rate, \\( \\pi \\).\n\nBefore concluding this section, it is important to note that the same variables, \\( f \\) and \\( \\omega \\), are used in both the continuous-time and discrete-time domains. However, these variables are not equivalent in the two domains, and caution should be exercised to avoid confusion between values from the two domains. The continuous-time domain is used here for illustrative purposes, as the reader should already be familiar with transfer function analysis in the \\( s \\)-domain. In summary, the unit circle \\( e^{j\\omega} \\) is used to determine the frequency response of a system with input and output as a series of numbers, whereas the \\( j\\omega \\)-axis is used for a system with continuous-time inputs and outputs. However, \\( \\omega \\) is different for the two domains."
},
{
    "text": "The transfer functions for discrete-time filters bear a resemblance to those of continuous-time filters; practical integrated circuit discrete-time transfer functions are expressed as rational functions, except they involve polynomials in \\( z \\) rather than \\( s \\). For instance, the transfer function of a continuous-time low-pass filter, \\( H_c(s) \\), might look like this:\n\n\\[\nH_c(s) = \\frac{4}{s^2 + 2s + 4} \\tag{13.18}\n\\]\n\nThe poles of this filter are found by solving the denominator polynomial, which for this example are \\( -1.0 \\pm 1.7321j \\). This continuous-time filter is also defined to have two zeros at infinity since the denominator polynomial is two degrees higher than the numerator polynomial. To determine the frequency response of \\( H_c(s) \\), it is assessed along the \\( j\\omega \\) axis by substituting \\( s = j\\omega \\). The poles and zeros are plotted on the \\( s \\)-plane in Fig. 13.10(a), and the magnitude and phase response \\( H_c(j\\omega) \\) can be derived in terms of the magnitude and phase of vectors from all poles (and finite zeros) to the point \\( s = j\\omega \\) along the frequency axis.\n\n\\[\n\\begin{gather*}\n\\left| H_c(j\\omega) \\right| = \\frac{4}{|j\\omega + 1.0 + 1.7321j||j\\omega + 1.0 - 1.7321j|} \\tag{13.19}\\\\\n\\angle H_c(j\\omega) = -\\angle(j\\omega + 1.0 + 1.7321j) - \\angle(j\\omega + 1.0 - 1.7321j) \\tag{13.20}\n\\end{gather*}\n\\]\n\nAn example of a discrete-time, low-pass transfer function is given by:\n\n\\[\nH(z) = \\frac{0.05}{z^2 - 1.6z + 0.65} \\tag{13.21}\n\\]\n\nKey Point: The frequency response of a discrete-time filter \\( H(z) \\) is determined by evaluating its magnitude and phase on the unit circle or graphically by considering the magnitude and phase of vectors connecting its poles and zeros to points around the unit circle.\n\nThe poles of \\( H(z) \\) are at \\( 0.8 \\pm 0.1j \\) in the \\( z \\)-plane, and two zeros are again at infinity. To find the frequency response of \\( H(z) \\), we evaluate it around the unit circle contour \\( Z = e^{j\\omega} \\) as shown in Fig. 13.10(b), instead of along the vertical \\( j\\omega \\) axis as in the \\( s \\)-plane. Note that substituting \\( z = e^{j\\omega} \\) in the z-domain transfer function, \\( H(z) \\), is simply a result of substituting \\( s = j\\omega \\) into (13.14), where \\( T \\) has been normalized to 1, as discussed in Section 13.3. The discrete-time frequency response can be found graphically by considering the magnitude and phase of vectors from each pole and zero of \\( H(z) \\) as shown in Fig. 13.10(b) to the corresponding frequency on the unit circle \\( z = e^{j\\omega} \\).\n\nPoles or zeros occurring at \\( z = 0 \\) do not affect the magnitude response \\( H(z) \\) since a vector from the origin to the unit circle always has a length of unity. However, they do affect the phase response.\n\nIn discrete time, \\( H(z = 1) \\) corresponds to the frequency response at both dc (i.e., \\( \\omega = 0 \\)) and at \\( \\omega = 2\\pi \\). Also, the time normalization of setting \\( T \\) to unity implies that \\( \\omega = 2\\pi \\) is equivalent to the sampling rate speed (i.e., \\( f = f_s \\)) for \\( X_s(f) \\). In addition, note that the frequency response of a filter need only be plotted for \\( 0 \\leq \\omega \\leq \\pi \\) (i.e., \\( 0 \\leq \\omega \\leq f_s / 2 \\)) since, for filters with real coefficients, the poles and zeros always occur in complex-conjugate pairs (or on the real axis), so the magnitude response of the filter is equal to that for \\( \\pi \\leq \\omega \\leq 2\\pi \\) (the filter's phase is antisymmetric). Going around the circle again gives the same result as the first time, implying that the frequency response repeats every \\( 2\\pi \\).\n\nBefore we leave this section, a word of caution is in order. To simplify notation, the same variables, \\( f \\) and \\( \\omega \\), are used in both the continuous-time and discrete-time domains in Fig. 13.10. However, these variables are not equal in the two domains, and care should be taken not to confuse values from the two domains. The continuous-time domain is used here for illustrative reasons only since the reader should already be quite familiar with transfer function analysis in the \\( s \\)-domain. In summary, the unit circle, \\( e^{j\\omega} \\), is used to determine the frequency response of a system that has its input and output as a series of numbers, whereas the \\( j\\omega \\)-axis is used for a system that has continuous-time inputs and outputs. However, \\( \\omega \\) is different for the two domains.\n\n#### EXAMPLE 13.4\n\nAssuming a sample rate of \\( f_s = 100 \\) kHz, find the magnitude of the transfer function in (13.21) for 0 Hz, 100 Hz, 1 kHz, 10 kHz, 50 kHz, 90 kHz, and 100 kHz.\n\n#### Solution\n\nTo find the magnitude of \\( H(z) \\) at these frequencies, first, we find their equivalent \\( z \\)-domain locations by normalizing \\( f_s \\) to \\( 2\\pi \\). Next, we find the gain of \\( H(z) \\) by putting these \\( z \\)-domain values into (13.21) and finding the magnitude of the resulting complex value. Table 13.1 summarizes the results.\n\nNote that the gain of \\( H(z) \\) is the same at both 0 Hz and 100 kHz, as expected, since their \\( z \\)-plane locations are the same. Also, the gain is the same at both 10 kHz and 90 kHz since their \\( z \\)-plane locations are complex conjugates of each other. Finally, note that the minimum gain for this transfer function occurs at \\( z = -1 \\), or equivalently, \\( f_s / 2 = 50 \\) kHz.\n\n#### EXAMPLE 13.5\n\nConsider a first-order \\( H(z) \\) having its zero at infinity and its pole on the real axis, where \\( 0 < a < 1 \\). Mathematically, the transfer function is represented by \\( H(z) = b / (z - a) \\). Find the value of \\( \\omega \\) where the magnitude of \\( H(z) \\) is 3 dB lower than its dc value. What is the 3-dB value of \\( \\omega \\) for a real pole at 0.8? What fraction of the sampling rate, \\( f_s \\), does it correspond to?\n\nTable 13.1 Finding the gain of \\( H(z) \\) at some example frequencies.\n\n| Frequency (kHz) | \\( z \\)-plane locations | Magnitude |\n| :--------------: | :---------------------: | :--------: |\n| 0                | \\( e^{j0} \\)            | 1.0       |\n| 0.1              | \\( e^{j0.002\\pi} \\)     | 0.9997    |\n| 1                | \\( e^{j0.02\\pi} \\)      | 0.968     |\n| 10               | \\( e^{j0.2\\pi} \\)       | 0.149     |\n| 50               | \\( e^{j\\pi} \\)          | 0.0154    |\n| 90               | \\( e^{j1.8\\pi} \\)       | 0.149     |\n| 100              | \\( e^{j2\\pi} \\)         | 1.0       |\n\n#### Solution\n\nConsider the pole-zero plot shown in Fig. 13.11, where the zero is not shown since it is at infinity. Since the zero is at infinity, we need only be concerned with the magnitude of the denominator of \\( H(z) \\) and when it becomes \\( \\sqrt{2} \\) larger than its dc value. The magnitude of the denominator of \\( H(z) \\) for \\( Z = 1 \\) (i.e., dc) is shown as the vector \\( I_1 \\) in Fig. 13.11. This vector changes in size as \\( z \\) goes around the unit circle and is shown as \\( I_2 \\) when it becomes \\( \\sqrt{2} \\) larger than \\( I_1 \\). Thus, we can write\n\n\\[\nI_2 = |e^{j\\omega} - a| \\equiv \\sqrt{2}(1 - a) \\tag{13.22}\n\\]\n\nWriting \\( e^{j\\omega} = \\cos(\\omega) + j\\sin(\\omega) \\), we have\n\n\\[\n\\begin{gather*}\n|(\\cos(\\omega) - a) + j\\sin(\\omega)|^2 = 2(1 - a)^2 \\tag{13.23}\\\\\n\\cos^2(\\omega) - (2a)\\cos(\\omega) + a^2 + \\sin^2(\\omega) = 2(1 - a)^2 \\tag{13.24}\\\\\n1 - (2a)\\cos(\\omega) + a^2 = 2(1 - 2a + a^2) \\tag{13.25}\n\\end{gather*}\n\\]\n\nwhich is rearranged to give the final result.\n\n\\[\n\\omega = \\cos^{-1}\\left(2 - \\frac{a}{2} - \\frac{1}{2a}\\right) \\tag{13.26}\n\\]\n\nFor \\( a = 0.8 \\), \\( \\omega = 0.2241 \\) rad, or 12.84 degrees. Such a location on the unit circle corresponds to \\( 0.2241 / (2\\pi) \\) times \\( f_s \\) or, equivalently, \\( f_s / 28.04 \\)."
},
{
    "text": "Discrete-time filter transfer functions are akin to those of continuous-time filters, yet they employ rational functions in terms of the variable \\( z \\) instead of \\( s \\). As an illustration, a continuous-time low-pass filter's transfer function, denoted as \\( H_{c}(s) \\), might be expressed as:\n\n$$\nH_{c}(s) = \\frac{4}{s^2 + 2s + 4} \\tag{13.18}\n$$\n\nThe filter's poles are located by solving the denominator polynomial's roots, which in this case are \\( -1.0 \\pm 1.7321j \\). For this particular filter, it also possesses two zeros at infinity, due to the denominator polynomial being two degrees higher than the numerator polynomial.\n\nIn analyzing the frequency response of \\( H_{c}(s) \\), it is evaluated along the \\( j\\omega \\) axis by substituting \\( s = j\\omega \\). The corresponding pole-zero plot on the \\( s \\)-plane is depicted in Fig. 13.10(a), and the magnitude and phase response \\( H_{c}(j\\omega) \\) can be derived from the vectors connecting the poles (and finite zeros) to the point \\( s = j\\omega \\).\n\n$$\n\\left| H_{c}(j\\omega) \\right| = \\frac{4}{|j\\omega + 1.0 + 1.7321j||j\\omega + 1.0 - 1.7321j|} \\tag{13.19}\n$$\n\n$$\n\\angle H_{c}(j\\omega) = -\\angle(j\\omega + 1.0 + 1.7321j) - \\angle(j\\omega + 1.0 - 1.7321j) \\tag{13.20}\n$$\n\nAn example of a discrete-time low-pass filter's transfer function is provided by:\n\n$$\nH(z) = \\frac{0.05}{z^2 - 1.6z + 0.65} \\tag{13.21}\n$$\n\nA key point to note is that the frequency response of a discrete-time filter \\( H(z) \\) is determined by evaluating its magnitude and phase on the unit circle, or by graphically analyzing the vectors connecting its poles and zeros to points around the unit circle.\n\nThe poles of \\( H(z) \\) are situated at \\( 0.8 \\pm 0.1j \\) on the \\( z \\)-plane, and there are again two zeros at infinity. To ascertain the frequency response of \\( H(z) \\), it is evaluated around the unit circle contour \\( Z = e^{j\\omega} \\), as depicted in Fig. 13.10(b), rather than along the vertical \\( j\\omega \\) axis as is done in the \\( s \\)-plane.\n\nFor discrete-time systems, \\( H(z = 1) \\) corresponds to the frequency response at both DC (i.e., \\( \\omega = 0 \\)) and at \\( \\omega = 2\\pi \\). Also, the normalization of setting \\( T \\) to unity implies that \\( \\omega = 2\\pi \\) is equivalent to the sampling rate speed (i.e., \\( f = f_s \\)) for \\( X_{s}(f) \\). Moreover, the frequency response of a filter only needs to be plotted for \\( 0 \\leq \\omega \\leq \\pi \\) (i.e., \\( 0 \\leq \\omega \\leq f_s / 2 \\)) since, for filters with real coefficients, the poles and zeros always occur in complex-conjugate pairs (or on the real axis), so the magnitude response of the filter is symmetric around DC. The phase response, however, is antisymmetric. Hence, the frequency response repeats every \\( 2\\pi \\).\n\nCaution should be exercised to not confuse the variables \\( f \\) and \\( \\omega \\) between the continuous-time and discrete-time domains, as they represent different frequencies due to the different domains' characteristics. The unit circle, \\( e^{j\\omega} \\), is utilized to ascertain the frequency response of a system with digital inputs and outputs, whereas the \\( j\\omega \\)-axis is employed for systems with continuous-time inputs and outputs. However, the \\( \\omega \\) value differs between these domains.\n\nIn conclusion, discrete-time filters are analyzed by examining the location of poles and zeros with respect to the unit circle on the \\( z \\)-plane, which provides insights into the filter's stability and frequency response characteristics."
},
{
    "text": "The transfer functions of discrete-time filters bear a resemblance to those of continuous-time filters; however, in practical integrated circuit discrete-time transfer functions, rational transfer functions are depicted by polynomials in \\( z \\) instead of \\( s \\). For instance, a continuous-time low-pass filter transfer function \\( H_c(s) \\) may be expressed as:\n\n$$\nH_c(s) = \\frac{4}{s^2 + 2s + 4} \\tag{13.18}\n$$\n\nThe poles of this filter are found by solving for the roots of the denominator polynomial, which for this case are \\( -1.0 \\pm 1.7321j \\). This continuous-time filter also has two zeros at infinity, since the denominator polynomial's order exceeds the numerator's by two. To determine the frequency response of \\( H_c(s) \\), it is assessed along the \\( j\\omega \\) axis by substituting \\( s = j\\omega \\). The poles and zeros are depicted on the \\( s \\)-plane in Fig. 13.10(a), and the magnitude and phase response \\( H_c(j\\omega) \\) can be derived by considering the vectors from all poles (and finite zeros) to the point \\( s = j\\omega \\) along the frequency-axis.\n\n$$\n\\begin{gather*}\n|H_c(j\\omega)| = \\frac{4}{|j\\omega + 1.0 + 1.7321j||j\\omega + 1.0 - 1.7321j|} \\tag{13.19}\\\\\n\\angle H_c(j\\omega) = -\\angle(j\\omega + 1.0 + 1.7321j) - \\angle(j\\omega + 1.0 - 1.7321j) \\tag{13.20}\n\\end{gather*}\n$$\n\nAn example of a discrete-time low-pass transfer function is provided by:\n\n$$\nH(z) = \\frac{0.05}{z^2 - 1.6z + 0.65} \\tag{13.21}\n$$\n\nKey Point: The frequency response of a discrete-time filter \\( H(z) \\) is determined by evaluating its magnitude and phase on the unit circle or graphically by considering the vectors from its poles and zeros to points around the unit circle.\n\nThe poles of \\( H(z) \\) are located at \\( 0.8 \\pm 0.1j \\) on the \\( z \\)-plane, and there are again two zeros at infinity. To find the frequency response of \\( H(z) \\), we evaluate it around the unit circle contour \\( Z = e^{j\\omega} \\) as shown in Fig. 13.10(b), rather than along the vertical \\( j\\omega \\) axis as in the \\( s \\)-plane. Note that substituting \\( z = e^{j\\omega} \\) in the z-domain transfer function \\( H(z) \\) is simply a result of substituting \\( s = j\\omega \\) into (13.14), where \\( T \\) has been normalized to 1, as discussed in Section 13.3. The discrete-time frequency response can be found graphically by considering the magnitude and phase of vectors from each pole and zero of \\( H(z) \\) as shown in Fig. 13.10(b) to the corresponding frequency on the unit circle \\( z = e^{j\\omega} \\).\n\nPoles or zeros at \\( z = 0 \\) do not affect the magnitude response \\( H(z) \\) since a vector from the origin to the unit circle always has a length of unity. However, they do affect the phase response.\n\nIn discrete time, \\( H(z) \\) at \\( z = 1 \\) corresponds to the frequency response at both DC (i.e., \\( \\omega = 0 \\)) and \\( \\omega = 2\\pi \\). Also, the time normalization of setting \\( T \\) to unity implies that \\( \\omega = 2\\pi \\) is equivalent to the sampling rate speed (i.e., \\( f = f_s \\)) for \\( X_s(f) \\). Additionally, note that the frequency response of a filter need only be plotted for \\( 0 \\leq \\omega \\leq \\pi \\) (i.e., \\( 0 \\leq \\omega \\leq f_s / 2 \\)) since, for filters with real coefficients, the poles and zeros always occur in complex-conjugate pairs (or on the real axis), so the magnitude response of the filter is equal to that for \\( \\pi \\leq \\omega \\leq 2\\pi \\) (the filter's phase is antisymmetric). Circling around the unit circle again gives the same result as the first time, indicating that the frequency response repeats every \\( 2\\pi \\).\n\nBefore leaving this section, a cautionary note is necessary. To simplify notation, the same variables \\( f \\) and \\( \\omega \\) are used in both the continuous-time and discrete-time domains in Fig. 13.10. However, these variables are not equal in the two domains, and care should be taken not to confuse values from the two domains. The continuous-time domain is used here for illustrative purposes only since the reader should already be quite familiar with transfer function analysis in the \\( s \\)-domain. In summary, the unit circle \\( e^{j\\omega} \\) is used to determine the frequency response of a system with input and output as a series of numbers, whereas the \\( j\\omega \\)-axis is used for a system with continuous-time inputs and outputs. However, \\( \\omega \\) is different for the two domains.\n\n#### EXAMPLE 13.4\n\nGiven a sample rate of \\( f_s = 100 \\) kHz, find the magnitude of the transfer function in (13.21) for 0 Hz, 100 Hz, 1 kHz, 10 kHz, 50 kHz, 90 kHz, and 100 kHz.\n\n#### Solution\n\nTo find the magnitude of \\( H(z) \\) at these frequencies, first we find their equivalent \\( z \\)-domain locations by normalizing \\( f_s \\) to \\( 2\\pi \\). Next, we find the gain of \\( H(z) \\) by putting these \\( z \\)-domain values into (13.21) and finding the magnitude of the resulting complex value. Table 13.1 summarizes the results.\n\nNote that the gain of \\( H(z) \\) is the same at both 0 Hz and 100 kHz, as expected, since their \\( z \\)-plane locations are the same. Also, the gain is the same at both 10 kHz and 90 kHz since their \\( z \\)-plane locations are complex conjugates of each other. Finally, note that the minimum gain for this transfer function occurs at \\( z = -1 \\), or equivalently, \\( f_s / 2 = 50 \\) kHz.\n\n#### EXAMPLE 13.5\n\nConsider a first-order \\( H(z) \\) having its zero at infinity and its pole on the real axis, where \\( 0 < a < 1 \\). Mathematically, the transfer function is represented by \\( H(z) = b / (z - a) \\). Find the value of \\( \\omega \\) where the magnitude of \\( H(z) \\) is 3 dB lower than its DC value. What is the 3-dB value of \\( \\omega \\) for a real pole at 0.8? What fraction of the sampling rate \\( f_s \\) does it correspond to?\n\nTable 13.1 Finding the gain of \\( H(z) \\) at some example frequencies.\n\n| Frequency (kHz) | \\( z \\)-plane locations | \\( z = x + jy \\) | Gain |\n| :---: | :--- | :---: | :--- |\n| 0 | \\( e^{j0} \\) | \\( 1.0 + j0.0 \\) | 1.0 |\n| 0.1 | \\( e^{j0.002\\pi} \\) | \\( 0.9999803 + j0.00628314 \\) | 0.9997 |\n| 1 | \\( e^{j0.02\\pi} \\) | \\( 0.9980267 + j0.06279052 \\) | 0.968 |\n| 10 | \\( e^{j0.2\\pi} \\) | \\( 0.809 + j0.5878 \\) | 0.149 |\n| 50 | \\( e^{j\\pi} \\) | \\( -1.0 + j0.0 \\) | 0.0154 |\n| 90 | \\( e^{j1.8\\pi} \\) | \\( 0.809 - j0.5878 \\) | 0.149 |\n| 100 | \\( e^{j2\\pi} \\) | \\( 1.0 + j0.0 \\) | 1.0 |\n\n#### Solution\n\nConsider the pole-zero plot shown in Fig. 13.11, where the zero is not shown since it is at infinity. Since the zero is at infinity, we need only be concerned with the magnitude of the denominator of \\( H(z) \\) and when it becomes \\( \\sqrt{2} \\) larger than its DC value. The magnitude of the denominator of \\( H(z) \\) for \\( Z = 1 \\) (i.e., DC) is shown as the vector \\( I_1 \\) in Fig. 13.11. This vector changes in size as \\( z \\) goes around the unit circle and is shown as \\( I_2 \\) when it becomes \\( \\sqrt{2} \\) larger than \\( I_1 \\). Thus we can write:\n\n$$\nI_2 = |e^{j\\omega} - a| \\equiv \\sqrt{2}(1 - a) \\tag{13.22}\n$$\n\nWriting \\( e^{j\\omega} = \\cos(\\omega) + j\\sin(\\omega) \\), we have:\n\n$$\n\\begin{gather*}\n|(\\cos(\\omega) - a) + j\\sin(\\omega)|^2 = 2(1 - a)^2 \\tag{13.23}\\\\\n\\cos^2(\\omega) - (2a)\\cos(\\omega) + a^2 + \\sin^2(\\omega) = 2(1 - a)^2 \\tag{13.24}\\\\\n1 - (2a)\\cos(\\omega) + a^2 = 2(1 - 2a + a^2) \\tag{13.25}\n\\end{gather*}\n$$\n\nwhich is rearranged to give the final result:\n\n$$\n\\omega = \\cos^{-1}\\left(2 - \\frac{a}{2} - \\frac{1}{2a}\\right) \\tag{13.26}\n$$\n\nFor \\( a = 0.8 \\), \\( \\omega = 0.2241 \\) rad, or 12.84 degrees. Such a location on the unit circle corresponds to \\( 0.2241 / (2\\pi) \\) times \\( f_s \\) or, equivalently, \\( f_s / 28.04 \\)."
},
{
    "text": "The transfer functions for discrete-time filters bear a resemblance to those of continuous-time filters, with the primary distinction being the use of polynomials in \\( z \\) rather than \\( s \\). An example of a continuous-time low-pass filter transfer function, \\( H_c(s) \\), is represented as:\n\n\\[\nH_c(s) = \\frac{4}{s^2 + 2s + 4} \\tag{13.18}\n\\]\n\nThe filter's poles are found by solving the denominator polynomial's roots, which for this case are \\( -1.0 \\pm 1.7321j \\). Additionally, this filter has two zeros at infinity, as the denominator polynomial's degree exceeds the numerator's by two. To determine the frequency response of \\( H_c(s) \\), it is evaluated along the \\( j\\omega \\) axis, with the poles and zeros plotted on the \\( s \\)-plane in Fig. 13.10(a). The magnitude and phase response \\( H_c(j\\omega) \\) can be determined by examining the vectors from all poles (and finite zeros) to the point \\( s=j\\omega \\).\n\nThe frequency response for a discrete-time filter \\( H(z) \\) is calculated by assessing its magnitude and phase on the unit circle. For instance, the transfer function of a discrete-time low-pass filter is given by:\n\n\\[\nH(z) = \\frac{0.05}{z^2 - 1.6z + 0.65} \\tag{13.21}\n\\]\n\nThe poles of \\( H(z) \\) are located at \\( 0.8 \\pm 0.1j \\) on the \\( z \\)-plane, with two zeros at infinity. To find the frequency response of \\( H(z) \\), it is evaluated around the unit circle contour \\( Z = e^{j\\omega} \\) as depicted in Fig. 13.10(b). Note that substituting \\( z = e^{j\\omega} \\) in the transfer function \\( H(z) \\) is equivalent to substituting \\( s = j\\omega \\) in (13.14), with \\( T \\) normalized to 1.\n\nIn discrete time, \\( H(z=1) \\) corresponds to the frequency response at both DC (i.e., \\( \\omega = 0 \\)) and at \\( \\omega = 2\\pi \\). The frequency response is periodic, and for transfer functions with real coefficients, it exhibits conjugate symmetry around DC. Therefore, discrete-time frequency responses only need to be plotted from DC to half the sample rate, \\( \\pi \\). For a sample rate of \\( f_s = 100 \\) kHz, the magnitude of the transfer function in (13.21) is found for frequencies 0 Hz, 100 Hz, 1 kHz, 10 kHz, 50 kHz, 90 kHz, and 100 kHz.\n\nIn conclusion, the unit circle \\( e^{j\\omega} \\) is used to determine the frequency response of a system with input and output as a series of numbers, whereas the \\( j\\omega \\)-axis is used for systems with continuous-time inputs and outputs. It is important to distinguish between the two domains, as \\( \\omega \\) is different for each."
},
{
    "text": "To implement rational polynomials in $\\mathbf{z}$, discrete-time filters utilize delay elements (i.e., $z^{-1}$ building blocks), akin to how analog filters are constructed using integrators (i.e., $\\mathrm{s}^{-1}$ building blocks). Consequently, discrete-time filters are represented by finite difference equations, as opposed to the differential equations that describe continuous-time filters.\n\nExamine the signal flow graph block diagram of a first-order, discrete-time filter depicted in Fig. 13.12. A finite difference equation that describes this diagram can be expressed as\n\n$$\n\\begin{equation*}\ny(n+1)=b x(n)+a y(n) \\tag{13.27}\n\\end{equation*}\n$$\n\nimage_name:Fig. 13.12\ndescription:The block diagram in Fig. 13.12 illustrates a first-order, discrete-time filter, comprising the following key components:\n\n1. **Input Signal Block (x(n))**: This is the entry point for the input signal, designated as x(n).\n\n2. **Gain Block (b)**: The input signal is multiplied by a gain factor b, indicated by an arrow leading to a summing junction.\n\n3. **Summing Junction**: This element combines two incoming signals: the scaled input signal bx(n) and the feedback signal from the output, scaled by a factor a.\n\n4. **Feedback Loop**: The system's output, y(n), is fed back into the summing junction through a gain block with factor a, creating a feedback loop that affects the subsequent output y(n+1).\n\n5. **Delay Block (z^{-1})**: After passing through the summing junction, the signal is delayed by one time step via a delay block represented by z^{-1}, resulting in the output y(n).\n\n6. **Output Signal Block (y(n))**: The delayed signal serves as the system's output, denoted as y(n).\n\nFlow of Information:\n- The input signal x(n) is multiplied by the gain b and summed with the feedback signal ay(n) at the summing junction.\n- The resultant signal, y(n+1), undergoes a delay through the block z^{-1}, producing the output y(n).\n- The output y(n) is then fed back into the system with a gain of a, completing the feedback loop.\n\nOverall System Function:\nThe primary role of this system is to filter the input signal x(n) using a first-order, discrete-time filter. The feedback loop and delay block are essential for defining the filter's characteristics, such as its pole location in the z-domain, described by the transfer function H(z) = b / (z - a). This configuration enables the system to continuously update its output based on both the current input and the previous output, ensuring a smooth filtering effect.\n\nFig. 13.12 A first-order, discrete-time filter.\n\nIn the Z-domain, this equation is formulated as\n\n$$\n\\begin{equation*}\nz \\mathrm{y}(\\mathrm{z})=\\mathrm{bX}(\\mathrm{z})+\\mathrm{a} \\mathrm{Y}(\\mathrm{z}) \\tag{13.28}\n\\end{equation*}\n$$\n\nexploiting the z-domain property of delayed signals. The transfer function of this system, $\\mathrm{H}(\\mathrm{z})$, is defined as\n\n$$\n\\begin{equation*}\nH(z) \\equiv \\frac{Y(z)}{X(z)}=\\frac{b}{z-a} \\tag{13.29}\n\\end{equation*}\n$$\n\nwhich features a pole on the real axis at $\\mathbf{z}=\\mathrm{a}$. To assess stability, we consider the input, $\\mathbf{x}(\\mathrm{n})$, as an impulse signal (i.e., 1 for $\\mathrm{n}=0$ and 0 otherwise), leading to the following output signal based on (13.27):\n\n$$\ny(0)=k\n$$\n\nwhere k represents an arbitrary initial state value for y.\n\n$$\n\\begin{gathered}\ny(1)=b+a k \\\\\ny(2)=a b+a^{2} k \\\\\ny(3)=a^{2} b+a^{3} k \\\\\ny(4)=a^{3} b+a^{4} k\n\\end{gathered}\n$$\n\nMore succinctly, the response, $h(n)$, is expressed as\n\n$$\nh(n)=\\left\\{\\begin{array}{cc}\nk & (n<1)  \\tag{13.30}\\\\\n\\left(a^{n-1} b+a^{n} k\\right) & (n \\geq 1)\n\\end{array}\\right.\n$$\n\nClearly, this response remains bounded only when $|\\mathrm{a}| \\leq 1$ for this first-order filter, becoming unbounded otherwise.\nWhile this stability criterion is demonstrated for first-order systems, it generally applies to any linear, time-invariant, discrete-time filter, $H(z)$, which is stable if and only if all its poles lie within the unit circle. In other words, if $\\mathbf{z}_{\\mathrm{pi}}$ are the poles, then $\\left|z_{\\mathrm{pi}}\\right|<1$ for all i. Placing some poles on the unit circle parallels having poles on the imaginary $\\mathrm{j} \\omega$-axis in continuous-time systems. For instance, in the preceding first-order example, if $\\mathrm{a}=1$, the pole is at $\\mathbf{z}=1$, rendering the system marginally stable (essentially a discrete-time integrator). If $\\mathrm{a}=-1$, the pole is at $\\mathbf{z}=-1$, and it can be shown that the system oscillates at $f_{s} / 2$, as anticipated.\n\nKey Point: A discrete-time filter is stable if and only if all its poles are situated within the unit circle."
},
{
    "text": "To implement rational polynomials in $\\mathbf{z}$, discrete-time filters utilize delay elements (i.e., $z^{-1}$ building blocks), akin to how analog filters are constructed using integrators (i.e., $\\mathrm{s}^{-1}$ building blocks). Consequently, finite difference equations are used to represent discrete-time filters, unlike the differential equations that describe continuous-time filters.\n\nExamine the signal flow graph block diagram of a first-order, discrete-time filter depicted in Fig. 13.12. A finite difference equation that describes this block diagram can be expressed as\n\n$$\n\\begin{equation*}\ny(n+1)=b x(n)+a y(n) \\tag{13.27}\n\\end{equation*}\n$$\n\nimage_name:Fig. 13.12\ndescription:The block diagram in Fig. 13.12 illustrates a first-order, discrete-time filter, comprising the following key components:\n\n1. **Input Signal Block (x(n))**: This is the entry point for the input signal, designated as x(n).\n\n2. **Gain Block (b)**: The input signal is multiplied by a gain factor b, indicated by an arrow leading to a summing junction.\n\n3. **Summing Junction**: This element combines two incoming signals: the scaled input signal bx(n) and the feedback signal from the output, scaled by a factor a.\n\n4. **Feedback Loop**: The system's output, y(n), is fed back into the summing junction through a gain block with factor a, forming a feedback loop that affects the subsequent output y(n+1).\n\n5. **Delay Block (z^{-1})**: Following the summing junction, the signal passes through a delay block, denoted by z^{-1}, which delays the signal by one time step, resulting in the output y(n).\n\n6. **Output Signal Block (y(n))**: The delayed signal constitutes the system's output, labeled as y(n).\n\nFlow of Information:\n- The input signal x(n) is multiplied by the gain b and summed with the feedback signal ay(n) at the summing junction.\n- The resultant signal, y(n+1), undergoes a delay through the block z^{-1}, producing the output y(n).\n- The output y(n) is then fed back into the system with a gain of a, completing the feedback loop.\n\nOverall System Function:\nThe primary role of this system is to filter the input signal x(n) using a first-order discrete-time filter. The feedback loop and delay block are essential for defining the filter's characteristics, such as the location of its pole in the z-domain, described by the transfer function H(z) = b / (z - a). This configuration enables the system to continuously update its output based on both the current input and the previous output, ensuring a smooth filtering effect.\n\nFig. 13.12 A first-order, discrete-time filter.\n\nIn the Z-domain, this equation is represented as\n\n$$\n\\begin{equation*}\nz \\mathrm{y}(\\mathrm{z})=\\mathrm{bX}(\\mathrm{z})+\\mathrm{a} \\mathrm{Y}(\\mathrm{z}) \\tag{13.28}\n\\end{equation*}\n$$\n\nutilizing the z-domain property of delayed signals. We define the system's transfer function as $\\mathrm{H}(\\mathrm{z})$, given by\n\n$$\n\\begin{equation*}\nH(z) \\equiv \\frac{Y(z)}{X(z)}=\\frac{b}{z-a} \\tag{13.29}\n\\end{equation*}\n$$\n\nwhich features a pole on the real axis at $\\mathbf{z}=\\mathrm{a}$. To assess stability, we consider the input $\\mathbf{x}(\\mathrm{n})$ as an impulse signal (i.e., 1 for $\\mathrm{n}=0$ and 0 otherwise), leading to the following output signal, based on (13.27):\n\n$$\ny(0)=k\n$$\n\nwhere k represents an arbitrary initial state value for y.\n\n$$\n\\begin{gathered}\ny(1)=b+a k \\\\\ny(2)=a b+a^{2} k \\\\\ny(3)=a^{2} b+a^{3} k \\\\\ny(4)=a^{3} b+a^{4} k\n\\end{gathered}\n$$\n\nMore succinctly, the response $h(n)$ is articulated as\n\n$$\nh(n)=\\left\\{\\begin{array}{cc}\nk & (n<1)  \\tag{13.30}\\\\\n\\left(a^{n-1} b+a^{n} k\\right) & (n \\geq 1)\n\\end{array}\\right.\n$$\n\nClearly, this response remains bounded only when $|\\mathrm{a}| \\leq 1$ for this first-order filter, becoming unbounded otherwise. While this stability result is demonstrated for first-order systems, generally, a linear, time-invariant, discrete-time filter $H(z)$ is stable if and only if all its poles reside within the unit circle. In other words, if $\\mathbf{z}_{\\mathrm{pi}}$ are the poles, then $\\left|z_{\\mathrm{pi}}\\right|<1$ for all i. Placing some poles on the unit circle parallels having poles on the imaginary $\\mathrm{j} \\omega$-axis in continuous-time systems. For instance, in the preceding first-order example, if $\\mathrm{a}=1$, the pole is at $\\mathbf{z}=1$, rendering the system marginally stable (effectively a discrete-time integrator). If $\\mathrm{a}=-1$, the pole is at $\\mathbf{z}=-1$, and it can be shown that the system oscillates at $f_{s} / 2$, as anticipated.\n\nKey Point: A discrete-time filter is stable if and only if all its poles are situated within the unit circle."
},
{
    "text": "To implement rational polynomials in $\\mathbf{z}$, discrete-time filters utilize delay elements (i.e., $z^{-1}$ components) similarly to how analog filters are constructed using integrators (i.e., $\\mathrm{s}^{-1}$ components). Consequently, discrete-time filters are represented by finite difference equations, whereas continuous-time filters are described by differential equations.\n\nExamine the signal flow graph of a first-order, discrete-time filter depicted in Fig. 13.12. A finite difference equation that describes this diagram can be expressed as\n\n$$\n\\begin{equation*}\ny(n+1)=b x(n)+a y(n) \\tag{13.27}\n\\end{equation*}\n$$\n\nimage_name:Fig. 13.12\ndescription:The block diagram in Fig. 13.12 illustrates a first-order, discrete-time filter. It comprises the following key components:\n\n1. **Input Signal Block (x(n))**: This is the entry point for the input signal, designated as x(n).\n\n2. **Gain Block (b)**: The input signal is multiplied by a gain factor b, indicated by an arrow leading to a summing junction.\n\n3. **Summing Junction**: This element combines two incoming signals: the scaled input signal bx(n) and the feedback signal from the output, scaled by a factor a.\n\n4. **Feedback Loop**: The system's output, y(n), is fed back into the summing junction through a gain block with factor a, forming a feedback loop that affects the next output y(n+1).\n\n5. **Delay Block (z^{-1})**: After the summing junction, the signal passes through a delay block, denoted by z^{-1}, which delays the signal by one time step. This delayed signal becomes the output y(n).\n\n6. **Output Signal Block (y(n))**: The delayed signal serves as the system's output, labeled as y(n).\n\nFlow of Information:\n- The input signal x(n) is multiplied by the gain b and combined with the feedback signal ay(n) at the summing junction.\n- The resulting signal, y(n+1), is then processed through the delay block z^{-1}, producing the output y(n).\n- The output y(n) is fed back into the system with a gain of a, completing the feedback loop.\n\nOverall System Function:\nThe main function of this system is to filter the input signal x(n) using a discrete-time first-order filter. The feedback loop and delay block are essential for determining the filter's characteristics, such as its pole location in the z-domain, represented by the transfer function H(z) = b / (z - a). This configuration enables the system to continuously update its output based on both the current input and the previous output, ensuring a smooth filtering effect.\n\nFig. 13.12 A first-order, discrete-time filter.\n\nIn the Z-domain, this equation is reformulated as\n\n$$\n\\begin{equation*}\nz \\mathrm{y}(\\mathrm{z})=\\mathrm{bX}(\\mathrm{z})+\\mathrm{a} \\mathrm{Y}(\\mathrm{z}) \\tag{13.28}\n\\end{equation*}\n$$\n\nutilizing the z-domain property of delayed signals. The transfer function of this system, $\\mathrm{H}(\\mathrm{z})$, is defined as\n\n$$\n\\begin{equation*}\nH(z) \\equiv \\frac{Y(z)}{X(z)}=\\frac{b}{z-a} \\tag{13.29}\n\\end{equation*}\n$$\n\nwhich features a pole on the real axis at $\\mathbf{z}=\\mathrm{a}$. To assess stability, we set the input, $\\mathbf{x}(\\mathrm{n})$, to an impulse signal (i.e., 1 for $\\mathrm{n}=0$ and 0 otherwise), resulting in the following output signal, as per (13.27):\n\n$$\ny(0)=k\n$$\n\nwhere k is an arbitrary initial state value for y.\n\n$$\n\\begin{gathered}\ny(1)=b+a k \\\\\ny(2)=a b+a^{2} k \\\\\ny(3)=a^{2} b+a^{3} k \\\\\ny(4)=a^{3} b+a^{4} k\n\\end{gathered}\n$$\n\nMore succinctly, the response, $h(n)$, is articulated as\n\n$$\nh(n)=\\left\\{\\begin{array}{cc}\nk & (n<1)  \\tag{13.30}\\\\\n\\left(a^{n-1} b+a^{n} k\\right) & (n \\geq 1)\n\\end{array}\\right.\n$$\n\nClearly, this response remains bounded only if $|\\mathrm{a}| \\leq 1$ for this first-order filter, and it becomes unbounded otherwise.\nWhile this stability result is demonstrated for first-order systems, generally, a linear, time-invariant, discrete-time filter, $H(z)$, is stable if and only if all its poles are situated within the unit circle. In other words, if $\\mathbf{z}_{\\mathrm{pi}}$ are the poles, then $\\left|z_{\\mathrm{pi}}\\right|<1$ for all i. Placing some poles on the unit circle is analogous to having poles on the imaginary $\\mathrm{j} \\omega$-axis in continuous-time systems. For instance, in the preceding first-order example, if $\\mathrm{a}=1$, the pole is at $\\mathbf{z}=1$, rendering the system marginally stable (effectively a discrete-time integrator). If $\\mathrm{a}=-1$, the pole is at $\\mathbf{z}=-1$, and it can be shown that the system oscillates at $f_{s} / 2$, as anticipated.\n\nKey Point: A discrete-time filter is stable if and only if all its poles are located within the unit circle."
},
{
    "text": "To implement rational polynomials in $\\mathbf{z}$, discrete-time filters utilize delay elements (i.e., $z^{-1}$ building blocks), akin to how analog filters are constructed using integrators (i.e., $\\mathrm{s}^{-1}$ building blocks). Consequently, discrete-time filters are represented by finite difference equations, as opposed to the differential equations that describe continuous-time filters.\n\nExamine the signal flow graph block diagram of a first-order, discrete-time filter depicted in Fig. 13.12. A finite difference equation that describes this block diagram can be expressed as\n\n$$\n\\begin{equation*}\ny(n+1)=b x(n)+a y(n) \\tag{13.27}\n\\end{equation*}\n$$\n\nimage_name:Fig. 13.12\ndescription:The block diagram in Fig. 13.12 illustrates a first-order, discrete-time filter. It comprises the following key components:\n\n1. **Input Signal Block (x(n))**: This is the entry point for the input signal, designated as x(n).\n\n2. **Gain Block (b)**: The input signal is multiplied by a gain factor b, indicated by an arrow leading to a summing junction.\n\n3. **Summing Junction**: This component combines two incoming signals: the scaled input signal bx(n) and the feedback signal from the output, scaled by a factor a.\n\n4. **Feedback Loop**: The system's output, y(n), is fed back into the summing junction through a gain block with factor a, creating a feedback loop that affects the subsequent output y(n+1).\n\n5. **Delay Block (z^{-1})**: After the summing junction, the signal passes through a delay block, denoted by z^{-1}, which delays the signal by one time step. This delayed signal becomes the output y(n).\n\n6. **Output Signal Block (y(n))**: The delayed signal constitutes the system's output, labeled as y(n).\n\nFlow of Information:\n- The input signal x(n) is multiplied by the gain b and combined with the feedback signal ay(n) at the summing junction.\n- The resultant signal, y(n+1), is then processed through the delay block z^{-1}, yielding the output y(n).\n- The output y(n) is fed back into the system with a gain of a, completing the feedback loop.\n\nOverall System Function:\nThe main function of this system is to filter the input signal x(n) using a first-order discrete-time filter. The feedback loop and delay block are essential for defining the filter's characteristics, such as its pole location in the z-domain, represented by the transfer function H(z) = b / (z - a). This configuration enables the system to continuously update its output based on both the current input and the previous output, ensuring a smooth filtering effect.\n\nFig. 13.12 A first-order, discrete-time filter.\n\nIn the Z-domain, this equation is reformulated as\n\n$$\n\\begin{equation*}\nz \\mathrm{y}(\\mathrm{z})=\\mathrm{bX}(\\mathrm{z})+\\mathrm{a} \\mathrm{Y}(\\mathrm{z}) \\tag{13.28}\n\\end{equation*}\n$$\n\nutilizing the z-domain property of delayed signals. We define the system's transfer function as $\\mathrm{H}(\\mathrm{z})$, given by\n\n$$\n\\begin{equation*}\nH(z) \\equiv \\frac{Y(z)}{X(z)}=\\frac{b}{z-a} \\tag{13.29}\n\\end{equation*}\n$$\n\nwhich features a pole on the real axis at $\\mathbf{z}=\\mathrm{a}$. To assess stability, we set the input, $\\mathbf{x}(\\mathrm{n})$, to an impulse signal (i.e., 1 for $\\mathrm{n}=0$ and 0 otherwise), resulting in the following output signal, according to (13.27),\n\n$$\ny(0)=k\n$$\n\nwhere k is an arbitrary initial state value for y.\n\n$$\n\\begin{gathered}\ny(1)=b+a k \\\\\ny(2)=a b+a^{2} k \\\\\ny(3)=a^{2} b+a^{3} k \\\\\ny(4)=a^{3} b+a^{4} k\n\\end{gathered}\n$$\n\nMore succinctly, the response, $h(n)$, is articulated as\n\n$$\nh(n)=\\left\\{\\begin{array}{cc}\nk & (n<1)  \\tag{13.30}\\\\\n\\left(a^{n-1} b+a^{n} k\\right) & (n \\geq 1)\n\\end{array}\\right.\n$$\n\nClearly, this response remains bounded only when $|\\mathrm{a}| \\leq 1$ for this first-order filter, becoming unbounded otherwise.\nAlthough this stability criterion is demonstrated for first-order systems, generally, a linear, time-invariant, discrete-time filter, $H(z)$, is stable if and only if all its poles are situated within the unit circle. In other words, if $\\mathbf{z}_{\\mathrm{pi}}$ are the poles, then $\\left|z_{\\mathrm{pi}}\\right|<1$ for all i. Placing some poles on the unit circle parallels poles being on the imaginary $\\mathrm{j} \\omega$-axis for continuous-time systems. For instance, in the preceding first-order example, if $\\mathrm{a}=1$, the pole is at $\\mathbf{z}=1$, rendering the system marginally stable (effectively a discrete-time integrator). If $\\mathrm{a}=-1$, the pole is at $\\mathbf{z}=-1$, and it can be shown that the system oscillates at $f_{s} / 2$, as anticipated.\n\nKey Point: A discrete-time filter is stable if and only if all its poles are located within the unit circle."
},
{
    "text": "To implement rational polynomials in $\\mathbf{z}$, discrete-time filters utilize delay elements (i.e., $z^{-1}$ building blocks) in a manner analogous to how analog filters are constructed using integrators (i.e., $\\mathrm{s}^{-1}$ building blocks). Consequently, discrete-time filters are represented by finite difference equations, as opposed to the differential equations that describe continuous-time filters.\n\nExamine the signal flow graph block diagram of a first-order, discrete-time filter depicted in Fig. 13.12. A finite difference equation that describes this block diagram can be expressed as\n\n$$\n\\begin{equation*}\ny(n+1)=b x(n)+a y(n) \\tag{13.27}\n\\end{equation*}\n$$\n\nimage_name:Fig. 13.12\ndescription:The block diagram in Fig. 13.12 illustrates a first-order, discrete-time filter, comprising the following key components:\n\n1. **Input Signal Block (x(n))**: This is the entry point for the input signal, designated as x(n).\n\n2. **Gain Block (b)**: The input signal is multiplied by a gain factor b, indicated by an arrow leading to a summing junction.\n\n3. **Summing Junction**: This element combines two incoming signals: the scaled input signal bx(n) and the feedback signal from the output, scaled by a factor a.\n\n4. **Feedback Loop**: The system's output, y(n), is fed back into the summing junction through a gain block with factor a, forming a feedback loop that affects the subsequent output y(n+1).\n\n5. **Delay Block (z^{-1})**: After the summing junction, the signal passes through a delay block, denoted by z^{-1}, which delays the signal by one time step, resulting in the output y(n).\n\n6. **Output Signal Block (y(n))**: The delayed signal constitutes the system's output, labeled as y(n).\n\nFlow of Information:\n- The input signal x(n) is multiplied by the gain b and then added to the feedback signal ay(n) at the summing junction.\n- The resultant signal, y(n+1), undergoes a delay through the block z^{-1}, producing the output y(n).\n- The output y(n) is recycled into the system with a gain of a, completing the feedback loop.\n\nOverall System Function:\nThe primary role of this system is to filter the input signal x(n) using a first-order, discrete-time filter. The feedback loop and delay block are essential for defining the filter's characteristics, such as its pole location in the z-domain, represented by the transfer function H(z) = b / (z - a). This configuration enables the system to continuously update its output based on both the current input and the previous output, ensuring a smooth filtering effect.\n\nFig. 13.12 A first-order, discrete-time filter.\n\nIn the Z-domain, this equation is reformulated as\n\n$$\n\\begin{equation*}\nz \\mathrm{y}(\\mathrm{z})=\\mathrm{bX}(\\mathrm{z})+\\mathrm{a} \\mathrm{Y}(\\mathrm{z}) \\tag{13.28}\n\\end{equation*}\n$$\n\nleveraging the z-domain property of delayed signals. The transfer function of this system, $\\mathrm{H}(\\mathrm{z})$, is defined as\n\n$$\n\\begin{equation*}\nH(z) \\equiv \\frac{Y(z)}{X(z)}=\\frac{b}{z-a} \\tag{13.29}\n\\end{equation*}\n$$\n\nwhich features a pole on the real axis at $\\mathbf{z}=\\mathrm{a}$. To assess stability, we consider the input, $\\mathbf{x}(\\mathrm{n})$, as an impulse signal (i.e., 1 for $\\mathrm{n}=0$ and 0 otherwise), resulting in the following output signal, according to (13.27):\n\n$$\ny(0)=k\n$$\n\nwhere k represents an arbitrary initial state value for y.\n\n$$\n\\begin{gathered}\ny(1)=b+a k \\\\\ny(2)=a b+a^{2} k \\\\\ny(3)=a^{2} b+a^{3} k \\\\\ny(4)=a^{3} b+a^{4} k\n\\end{gathered}\n$$\n\nMore succinctly, the response, $h(n)$, is articulated as\n\n$$\nh(n)=\\left\\{\\begin{array}{cc}\nk & (n<1)  \\tag{13.30}\\\\\n\\left(a^{n-1} b+a^{n} k\\right) & (n \\geq 1)\n\\end{array}\\right.\n$$\n\nClearly, this response remains bounded only when $|\\mathrm{a}| \\leq 1$ for this first-order filter, becoming unbounded otherwise.\nWhile this stability result is demonstrated for first-order systems, generally, a linear, time-invariant, discrete-time filter, $H(z)$, is stable if and only if all its poles are situated within the unit circle. In other words, if $\\mathbf{z}_{\\mathrm{pi}}$ are the poles, then $\\left|z_{\\mathrm{pi}}\\right|<1$ for all i. Positioning some poles on the unit circle is akin to having poles on the imaginary $\\mathrm{j} \\omega$-axis for continuous-time systems. For instance, in the preceding first-order example, if $\\mathrm{a}=1$, the pole is at $\\mathbf{z}=1$, rendering the system marginally stable (effectively a discrete-time integrator). If $\\mathrm{a}=-1$, the pole is at $\\mathbf{z}=-1$, and it can be shown that the system oscillates at $f_{s} / 2$, as anticipated.\n\nKey Point: A discrete-time filter is stable if and only if all its poles are located within the unit circle."
},
{
    "text": "To implement rational polynomials in $\\mathbf{z}$, discrete-time filters utilize delay elements (i.e., $z^{-1}$ components) in a manner analogous to how analog filters are constructed using integrators (i.e., $\\mathrm{s}^{-1}$ components). Consequently, discrete-time filters are represented by finite difference equations, unlike continuous-time filters, which are described by differential equations.\n\nExamine the signal flow graph block diagram of a first-order, discrete-time filter illustrated in Fig. 13.12. A finite difference equation that describes this diagram can be expressed as\n\n$$\n\\begin{equation*}\ny(n+1)=b x(n)+a y(n) \\tag{13.27}\n\\end{equation*}\n$$\n\nimage_name:Fig. 13.12\ndescription:The block diagram in Fig. 13.12 depicts a first-order, discrete-time filter comprising the following key components:\n\n1. **Input Signal Block (x(n))**: This is the entry point for the input signal, labeled x(n).\n\n2. **Gain Block (b)**: The input signal is multiplied by a gain factor b, indicated by an arrow leading to a summing junction.\n\n3. **Summing Junction**: This element combines two incoming signals: the scaled input signal bx(n) and the feedback signal from the output, scaled by a factor a.\n\n4. **Feedback Loop**: The system's output, y(n), is fed back into the summing junction through a gain block with factor a, forming a feedback loop that affects the next output y(n+1).\n\n5. **Delay Block (z^{-1})**: After the summing junction, the signal passes through a delay block, denoted by z^{-1}, which delays the signal by one time step, resulting in the output y(n).\n\n6. **Output Signal Block (y(n))**: The delayed signal serves as the system's output, designated as y(n).\n\nFlow of Information:\n- The input signal x(n) is multiplied by the gain b and then combined with the feedback signal ay(n) at the summing junction.\n- The resultant signal, y(n+1), is processed through the delay block z^{-1}, producing the output y(n).\n- The output y(n) is reintroduced into the system with a gain of a, completing the feedback loop.\n\nOverall System Function:\nThe primary role of this system is to filter the input signal x(n) using a first-order, discrete-time filter. The feedback loop and delay block are essential for defining the filter's characteristics, such as the location of its pole in the z-domain, represented by the transfer function H(z) = b / (z - a). This configuration enables the system to continuously update its output based on both the current input and the previous output, ensuring a smooth filtering effect.\n\nFig. 13.12 A first-order, discrete-time filter.\n\nIn the Z-domain, this equation is reformulated as\n\n$$\n\\begin{equation*}\nz \\mathrm{y}(\\mathrm{z})=\\mathrm{bX}(\\mathrm{z})+\\mathrm{a} \\mathrm{Y}(\\mathrm{z}) \\tag{13.28}\n\\end{equation*}\n$$\n\nexploiting the z-domain property of delayed signals. We define the system's transfer function as $\\mathrm{H}(\\mathrm{z})$, given by\n\n$$\n\\begin{equation*}\nH(z) \\equiv \\frac{Y(z)}{X(z)}=\\frac{b}{z-a} \\tag{13.29}\n\\end{equation*}\n$$\n\nwhich features a pole on the real axis at $\\mathbf{z}=\\mathrm{a}$. To assess stability, we consider the input $\\mathbf{x}(\\mathrm{n})$ as an impulse signal (i.e., 1 for $\\mathrm{n}=0$ and 0 otherwise), leading to the following output signal based on (13.27):\n\n$$\ny(0)=k\n$$\n\nwhere k represents an arbitrary initial state value for y.\n\n$$\n\\begin{gathered}\ny(1)=b+a k \\\\\ny(2)=a b+a^{2} k \\\\\ny(3)=a^{2} b+a^{3} k \\\\\ny(4)=a^{3} b+a^{4} k\n\\end{gathered}\n$$\n\nMore succinctly, the response $h(n)$ is defined as\n\n$$\nh(n)=\\left\\{\\begin{array}{cc}\nk & (n<1)  \\tag{13.30}\\\\\n\\left(a^{n-1} b+a^{n} k\\right) & (n \\geq 1)\n\\end{array}\\right.\n$$\n\nClearly, this response remains bounded only when $|\\mathrm{a}| \\leq 1$ for this first-order filter, becoming unbounded otherwise.\nAlthough this stability criterion is demonstrated for first-order systems, it generally applies to any linear, time-invariant, discrete-time filter $H(z)$, which is stable if and only if all its poles reside within the unit circle. In other words, if $\\mathbf{z}_{\\mathrm{pi}}$ are the poles, then $\\left|z_{\\mathrm{pi}}\\right|<1$ for all i. Placing some poles on the unit circle is analogous to having poles on the imaginary $\\mathrm{j} \\omega$-axis in continuous-time systems. For instance, in the preceding first-order example, if $\\mathrm{a}=1$, the pole is at $\\mathbf{z}=1$, rendering the system marginally stable (effectively a discrete-time integrator). If $\\mathrm{a}=-1$, the pole is at $\\mathbf{z}=-1$, and it can be shown that the system oscillates at $f_{s} / 2$, as anticipated.\n\nKey Point: A discrete-time filter is stable if and only if all its poles are situated within the unit circle."
},
{
    "text": "To implement rational polynomials in $\\mathbf{z}$, discrete-time filters utilize delay elements (i.e., $z^{-1}$ building blocks), akin to how analog filters are constructed using integrators (i.e., $\\mathrm{s}^{-1}$ building blocks). Consequently, discrete-time filters are represented by finite difference equations, in contrast to continuous-time filters, which are described by differential equations.\n\nExamine the signal flow graph block diagram of a first-order, discrete-time filter illustrated in Fig. 13.12. A finite difference equation that describes this block diagram can be expressed as\n\n$$\n\\begin{equation*}\ny(n+1)=b x(n)+a y(n) \\tag{13.27}\n\\end{equation*}\n$$\n\nimage_name:Fig. 13.12\ndescription:The block diagram in Fig. 13.12 depicts a first-order, discrete-time filter, comprising the following primary components:\n\n1. **Input Signal Block (x(n))**: This is the entry point for the input signal, designated as x(n).\n\n2. **Gain Block (b)**: The input signal is multiplied by a gain factor b, represented by an arrow leading to a summing junction.\n\n3. **Summing Junction**: This component combines two incoming signals: the scaled input signal bx(n) and the feedback signal from the output, scaled by a factor a.\n\n4. **Feedback Loop**: The system's output, y(n), is fed back into the summing junction via a gain block with factor a, forming a feedback loop that affects the next output y(n+1).\n\n5. **Delay Block (z^{-1})**: After the summing junction, the signal passes through a delay block, denoted by z^{-1}, which delays the signal by one time step, resulting in the output y(n).\n\n6. **Output Signal Block (y(n))**: The delayed signal serves as the system's output, labeled as y(n).\n\nFlow of Information:\n- The input signal x(n) is multiplied by the gain b and summed with the feedback signal ay(n) at the summing junction.\n- The resultant signal, y(n+1), undergoes a delay through the block z^{-1}, producing the output y(n).\n- The output y(n) is then fed back into the system with a gain of a, completing the feedback loop.\n\nOverall System Function:\nThe main function of this system is to filter the input signal x(n) using a first-order, discrete-time filter. The feedback loop and delay block are essential for defining the filter's characteristics, such as its pole location in the z-domain, described by the transfer function H(z) = b / (z - a). This configuration enables the system to continuously update its output based on both the current input and the previous output, ensuring a smooth filtering effect.\n\nFig. 13.12 A first-order, discrete-time filter.\n\nIn the Z-domain, this equation is reformulated as\n\n$$\n\\begin{equation*}\nz \\mathrm{y}(\\mathrm{z})=\\mathrm{bX}(\\mathrm{z})+\\mathrm{a} \\mathrm{Y}(\\mathrm{z}) \\tag{13.28}\n\\end{equation*}\n$$\n\nutilizing the z-domain property of delayed signals. We define the system's transfer function as $\\mathrm{H}(\\mathrm{z})$, given by\n\n$$\n\\begin{equation*}\nH(z) \\equiv \\frac{Y(z)}{X(z)}=\\frac{b}{z-a} \\tag{13.29}\n\\end{equation*}\n$$\n\nwhich features a pole on the real axis at $\\mathbf{z}=\\mathrm{a}$. To assess stability, we assume the input, $\\mathbf{x}(\\mathrm{n})$, is an impulse signal (i.e., 1 for $\\mathrm{n}=0$ and 0 otherwise), resulting in the following output signal, as per (13.27):\n\n$$\ny(0)=k\n$$\n\nwhere k is an arbitrary initial state value for y.\n\n$$\n\\begin{gathered}\ny(1)=b+a k \\\\\ny(2)=a b+a^{2} k \\\\\ny(3)=a^{2} b+a^{3} k \\\\\ny(4)=a^{3} b+a^{4} k\n\\end{gathered}\n$$\n\nMore succinctly, the response, $h(n)$, is articulated as\n\n$$\nh(n)=\\left\\{\\begin{array}{cc}\nk & (n<1)  \\tag{13.30}\\\\\n\\left(a^{n-1} b+a^{n} k\\right) & (n \\geq 1)\n\\end{array}\\right.\n$$\n\nClearly, this response remains bounded only if $|\\mathrm{a}| \\leq 1$ for this first-order filter, becoming unbounded otherwise.\nWhile this stability result is demonstrated for first-order systems, generally, a linear, time-invariant, discrete-time filter, $H(z)$, is stable if and only if all its poles reside within the unit circle. In other words, if $\\mathbf{z}_{\\mathrm{pi}}$ are the poles, then $\\left|z_{\\mathrm{pi}}\\right|<1$ for all i. Placing some poles on the unit circle is analogous to having poles on the imaginary $\\mathrm{j} \\omega$-axis in continuous-time systems. For instance, in the preceding first-order example, if $\\mathrm{a}=1$, the pole is at $\\mathbf{z}=1$, rendering the system marginally stable (effectively a discrete-time integrator). If $\\mathrm{a}=-1$, the pole is at $\\mathbf{z}=-1$, and it can be shown that the system oscillates at $f_{s} / 2$, as anticipated.\n\nKey Point: A discrete-time filter is stable if and only if all its poles are situated within the unit circle."
},
{
    "text": "To implement rational polynomials in $\\mathbf{z}$, discrete-time filters utilize delay elements (i.e., $z^{-1}$ components) similarly to how analog filters are constructed using integrators (i.e., $\\mathrm{s}^{-1}$ components). Consequently, discrete-time filters are represented by finite difference equations, whereas continuous-time filters are described by differential equations.\n\nExamine the signal flow graph block diagram of a first-order, discrete-time filter depicted in Fig. 13.12. A finite difference equation that describes this diagram can be expressed as\n\n$$\n\\begin{equation*}\ny(n+1)=b x(n)+a y(n) \\tag{13.27}\n\\end{equation*}\n$$\n\nimage_name:Fig. 13.12\ndescription:The block diagram in Fig. 13.12 illustrates a first-order, discrete-time filter, comprising the following key components:\n\n1. **Input Signal Block (x(n))**: This is the entry point for the input signal, designated as x(n).\n\n2. **Gain Block (b)**: The input signal is multiplied by a gain factor b, indicated by an arrow leading to a summing junction.\n\n3. **Summing Junction**: This element combines two incoming signals: the scaled input signal bx(n) and the feedback signal from the output, scaled by a factor a.\n\n4. **Feedback Loop**: The system's output, y(n), is fed back into the summing junction through a gain block with factor a, forming a feedback loop that affects the subsequent output y(n+1).\n\n5. **Delay Block (z^{-1})**: Following the summing junction, the signal passes through a delay block, denoted by z^{-1}, which delays the signal by one time step, resulting in the output y(n).\n\n6. **Output Signal Block (y(n))**: The delayed signal serves as the system's output, labeled as y(n).\n\nFlow of Information:\n- The input signal x(n) is multiplied by the gain b and combined with the feedback signal ay(n) at the summing junction.\n- The resultant signal, y(n+1), undergoes a delay through the block z^{-1}, producing the output y(n).\n- The output y(n) is then fed back into the system with a gain of a, completing the feedback loop.\n\nOverall System Function:\nThe primary role of this system is to filter the input signal x(n) using a first-order, discrete-time filter. The feedback loop and delay block are essential for defining the filter's properties, such as its pole location in the z-domain, represented by the transfer function H(z) = b / (z - a). This configuration enables the system to continuously update its output based on both the current input and the previous output, ensuring a smooth filtering effect.\n\nFig. 13.12 A first-order, discrete-time filter.\n\nIn the Z-domain, this equation is formulated as\n\n$$\n\\begin{equation*}\nz \\mathrm{y}(\\mathrm{z})=\\mathrm{bX}(\\mathrm{z})+\\mathrm{a} \\mathrm{Y}(\\mathrm{z}) \\tag{13.28}\n\\end{equation*}\n$$\n\nwhere the z-domain property of delayed signals is applied. We define the system's transfer function as $\\mathrm{H}(\\mathrm{z})$, given by\n\n$$\n\\begin{equation*}\nH(z) \\equiv \\frac{Y(z)}{X(z)}=\\frac{b}{z-a} \\tag{13.29}\n\\end{equation*}\n$$\n\nwhich features a pole on the real axis at $\\mathbf{z}=\\mathrm{a}$. To assess stability, we set the input, $\\mathbf{x}(\\mathrm{n})$, to an impulse signal (i.e., 1 for $\\mathrm{n}=0$ and 0 otherwise), resulting in the following output signal, as per (13.27),\n\n$$\ny(0)=k\n$$\n\nwhere k represents an arbitrary initial state value for y.\n\n$$\n\\begin{gathered}\ny(1)=b+a k \\\\\ny(2)=a b+a^{2} k \\\\\ny(3)=a^{2} b+a^{3} k \\\\\ny(4)=a^{3} b+a^{4} k\n\\end{gathered}\n$$\n\nMore succinctly, the response, $h(n)$, is articulated as\n\n$$\nh(n)=\\left\\{\\begin{array}{cc}\nk & (n<1)  \\tag{13.30}\\\\\n\\left(a^{n-1} b+a^{n} k\\right) & (n \\geq 1)\n\\end{array}\\right.\n$$\n\nClearly, this response remains bounded only when $|\\mathrm{a}| \\leq 1$ for this first-order filter, becoming unbounded otherwise.\nAlthough this stability criterion is demonstrated for first-order systems, generally, a linear, time-invariant, discrete-time filter, $H(z)$, is stable if and only if all its poles reside within the unit circle. In other words, if $\\mathbf{z}_{\\mathrm{pi}}$ are the poles, then $\\left|z_{\\mathrm{pi}}\\right|<1$ for all i. Placing some poles on the unit circle is analogous to poles on the imaginary $\\mathrm{j} \\omega$-axis for continuous-time systems. For instance, in the preceding first-order example, if $\\mathrm{a}=1$, the pole is at $\\mathbf{z}=1$, rendering the system marginally stable (effectively a discrete-time integrator). If $\\mathrm{a}=-1$, the pole is at $\\mathbf{z}=-1$, and it can be shown that the system oscillates at $f_{s} / 2$, as anticipated.\n\nKey Point: A discrete-time filter is stable if and only if all its poles are situated within the unit circle."
},
{
    "text": "Key Point: An infinite impulse response (IIR) filter exhibits an impulse response that persists indefinitely, whereas a finite impulse response (FIR) filter has an impulse response that terminates after a finite duration, ultimately reaching exactly zero.\n\nInfinite impulse response (IIR) filters are discrete-time filters that, upon being excited by an impulse, produce nonzero outputs perpetually, assuming perfect arithmetic precision. For instance, the filter described by (13.29) qualifies as an IIR filter (when a is not zero) because, despite its impulse response gradually diminishing towards zero (a characteristic of all stable filters), it never actually reaches zero, as evidenced by letting $\\mathrm{n} \\rightarrow \\infty$ in (13.30).\n\nFinite impulse response (FIR) filters are discrete-time filters that, when subjected to an impulse, see their outputs converge exactly to zero (and stay zero) after a specific value of $n$. An illustrative example of an FIR filter is the following:\n\n$$\n\\begin{equation*}\ny(n)=\\frac{1}{3}[x(n)+x(n-1)+x(n-2)] \\tag{13.31}\n\\end{equation*}\n$$\n\nThe corresponding transfer function for this filter, $H(z)$, is given by\n\n$$\n\\begin{equation*}\nH(z)=\\frac{1}{3} \\sum_{i=0}^{2} z^{-i} \\tag{13.32}\n\\end{equation*}\n$$\n\nThis filter functions as a moving average filter, as its output equates to the mean of the last three input samples. When an impulse signal is applied, the output remains nonzero for merely three samples, confirming its status as an FIR filter. It is noteworthy that this FIR filter possesses poles, all of which are located at $\\mathbf{z}=0$.\n\nAmong the benefits of FIR filters are their inherent stability (they are always stable) and the feasibility of creating precise linear phase filters (a topic outside the current chapter's scope). Nonetheless, for numerous design criteria, an IIR filter can achieve the same performance as an FIR filter but with a significantly lower order, especially in narrowband filters where the IIR filter's poles are positioned near the unit circle (indicating a slowly diminishing impulse response)."
},
{
    "text": "Key Point: An infinite impulse response (IIR) filter features an impulse response that persists indefinitely, while a finite impulse response (FIR) filter has an impulse response that terminates after a finite duration, ultimately reaching exactly zero.\n\nInfinite impulse response (IIR) filters are discrete-time filters that, when stimulated by an impulse, produce nonzero outputs perpetually, assuming perfect arithmetic precision. ${ }^{2}$ For instance, the filter described in (13.29) qualifies as an IIR filter (for a not equal to zero) because, despite its impulse response diminishing towards zero (as all stable filters should), it never truly reaches zero, as evident when $\\mathrm{n} \\rightarrow \\infty$ in (13.30).\n\nFinite impulse response (FIR) filters are discrete-time filters that, upon receiving an impulse, have their outputs exactly zero after a specific value of $n$. A case in point for an FIR filter is the following:\n\n$$\n\\begin{equation*}\ny(n)=\\frac{1}{3}[x(n)+x(n-1)+x(n-2)] \\tag{13.31}\n\\end{equation*}\n$$\n\nThe corresponding transfer function, $H(z)$, is\n\n$$\n\\begin{equation*}\nH(z)=\\frac{1}{3} \\sum_{i=0}^{2} z^{-i} \\tag{13.32}\n\\end{equation*}\n$$\n\nThis filter operates as a moving average filter, yielding an output equivalent to the average of the most recent three input samples. When an impulse signal is applied, the output remains nonzero for just three samples, confirming its status as an FIR filter. It's worth noting that this FIR filter has poles, all located at $\\mathbf{z}=0$.\n\nAmong the benefits of FIR filters are their inherent stability (they are always stable) and the ability to implement precise linear phase filters (a topic not covered in this chapter). Nonetheless, for various design specifications, an IIR filter can achieve the same performance as an FIR filter but with a significantly lower order, especially in narrowband filters where the IIR filter's poles are positioned near the unit circle (i.e., exhibiting a slowly decaying impulse response)."
},
{
    "text": "Key Point: An infinite impulse response (IIR) filter exhibits an impulse response that persists indefinitely. Conversely, a finite impulse response (FIR) filter has an impulse response that terminates after a finite duration, ultimately reaching exactly zero.\n\nInfinite impulse response (IIR) filters are discrete-time filters that, upon being excited by an impulse, maintain nonzero outputs perpetually, assuming perfect arithmetic precision. For instance, the filter described by (13.29) qualifies as an IIR filter (when a is not zero) because, although its impulse response diminishes towards zero (a characteristic of all stable filters), it never actually reaches zero, as evidenced by letting $\\mathrm{n} \\rightarrow \\infty$ in (13.30).\n\nFinite impulse response (FIR) filters are discrete-time filters that, when subjected to an impulse, produce outputs that exactly zero out after a specific value of $n$. An illustrative example of an FIR filter is given by the following:\n\n$$\n\\begin{equation*}\ny(n)=\\frac{1}{3}[x(n)+x(n-1)+x(n-2)] \\tag{13.31}\n\\end{equation*}\n$$\n\nThe corresponding transfer function, $H(z)$, for this filter is\n\n$$\n\\begin{equation*}\nH(z)=\\frac{1}{3} \\sum_{i=0}^{2} z^{-i} \\tag{13.32}\n\\end{equation*}\n$$\n\nThis filter operates as a running average filter, yielding an output equivalent to the average of the most recent three input samples. When an impulse signal is applied, the output remains nonzero for merely three samples, confirming its status as an FIR filter. It is noteworthy that this FIR filter possesses poles, all of which are located at $\\mathbf{z}=0$.\n\nAmong the advantages of FIR filters are their inherent stability (they are always stable) and the feasibility of creating exact linear phase filters (a subject outside the current chapter's scope). Nevertheless, for various specifications, an IIR filter can achieve the same performance as an FIR filter but with a significantly lower order, especially in narrowband filters where the IIR filter's poles are positioned near the unit circle (indicating a slowly decaying impulse response)."
},
{
    "text": "Key Point: An infinite impulse response (IIR) filter exhibits an impulse response that persists indefinitely, whereas a finite impulse response (FIR) filter has an impulse response that terminates after a finite duration, ultimately reaching exactly zero.\n\nInfinite impulse response (IIR) filters are discrete-time filters that, when subjected to an impulse, produce nonzero outputs perpetually, assuming perfect arithmetic precision. For instance, the filter described by (13.29) qualifies as an IIR filter (for a ≠ 0) because, despite its impulse response gradually approaching zero (as is typical for stable filters), it never actually reaches zero, as evidenced by letting $\\mathrm{n} \\rightarrow \\infty$ in (13.30).\n\nFinite impulse response (FIR) filters are discrete-time filters that, upon receiving an impulse, have their outputs settle precisely to zero after a specific value of $n$. An illustrative example of an FIR filter is the following:\n\n$$\n\\begin{equation*}\ny(n)=\\frac{1}{3}[x(n)+x(n-1)+x(n-2)] \\tag{13.31}\n\\end{equation*}\n$$\n\nThe corresponding transfer function, $H(z)$, for this filter is\n\n$$\n\\begin{equation*}\nH(z)=\\frac{1}{3} \\sum_{i=0}^{2} z^{-i} \\tag{13.32}\n\\end{equation*}\n$$\n\nThis filter functions as a moving average filter, as its output equals the average of the input over the most recent three samples. When an impulse signal is applied, the output is nonzero for merely three samples, confirming it as an FIR filter. It is noteworthy that this FIR filter possesses poles, all of which are located at $\\mathbf{z}=0$.\n\nSome benefits of FIR filters include their inherent stability (they are always stable) and the capability to implement exact linear phase filters (a subject outside the scope of this chapter). Nevertheless, for various design specifications, an IIR filter can achieve the same performance as an FIR filter but with a significantly lower order, especially in narrowband filters where the poles of an IIR filter are positioned near the unit circle (i.e., exhibiting a slowly diminishing impulse response)."
},
{
    "text": "Key Point: An infinite impulse response (IIR) filter exhibits an impulse response that persists indefinitely. Conversely, a finite impulse response (FIR) filter has an impulse response that terminates after a finite duration, ultimately reaching exactly zero.\n\nInfinite impulse response (IIR) filters are discrete-time systems that, upon receiving an impulse, produce nonzero outputs perpetually, assuming perfect arithmetic precision. ${ }^{2}$ For instance, the filter described by (13.29) qualifies as an IIR filter (when a is not zero) because, despite its impulse response gradually approaching zero (a characteristic of stable filters), it never actually reaches zero, as evident when $\\mathrm{n}$ approaches infinity in (13.30).\n\nFinite impulse response (FIR) filters are discrete-time systems where, following an impulse input, their outputs transition to exactly zero after a specific value of $n$ and remain zero thereafter. An example of an FIR filter is given by:\n\n$$\n\\begin{equation*}\ny(n)=\\frac{1}{3}[x(n)+x(n-1)+x(n-2)] \\tag{13.31}\n\\end{equation*}\n$$\n\nThe corresponding transfer function, $H(z)$, for this filter is:\n\n$$\n\\begin{equation*}\nH(z)=\\frac{1}{3} \\sum_{i=0}^{2} z^{-i} \\tag{13.32}\n\\end{equation*}\n$$\n\nThis filter operates as a moving average, producing an output equivalent to the mean of the last three input samples. When an impulse is applied, the output is nonzero for merely three samples, confirming its status as an FIR filter. It is noteworthy that this FIR filter has poles, all located at $\\mathbf{z}=0$.\n\nAmong the benefits of FIR filters are their inherent stability (they are always stable) and the capability to implement precise linear phase filters (a subject not covered in this chapter). Nonetheless, for various design criteria, an IIR filter can achieve the same performance as an FIR filter but with a significantly lower order, especially in narrowband applications where the IIR filter's poles are positioned near the unit circle (indicating a slowly diminishing impulse response)."
},
{
    "text": "Key Point: An infinite impulse response (IIR) filter exhibits an impulse response that persists indefinitely, whereas a finite impulse response (FIR) filter has an impulse response that terminates after a finite duration, ultimately reaching exactly zero.\n\nInfinite impulse response (IIR) filters are discrete-time filters that, when subjected to an impulse, produce nonzero outputs perpetually, assuming perfect arithmetic precision. ${ }^{2}$ For instance, the filter described by (13.29) qualifies as an IIR filter (for a not equal to zero) because, despite its impulse response gradually approaching zero (as all stable filters should), it never actually reaches zero, as evident when $\\mathrm{n} \\rightarrow \\infty$ in (13.30).\n\nFinite impulse response (FIR) filters are discrete-time filters that, upon receiving an impulse, yield outputs that precisely reach zero and stay zero after a specific value of $n$. An illustrative example of an FIR filter is the following:\n\n$$\n\\begin{equation*}\ny(n)=\\frac{1}{3}[x(n)+x(n-1)+x(n-2)] \\tag{13.31}\n\\end{equation*}\n$$\n\nThe transfer function for this filter, $H(z)$, is given by\n\n$$\n\\begin{equation*}\nH(z)=\\frac{1}{3} \\sum_{i=0}^{2} z^{-i} \\tag{13.32}\n\\end{equation*}\n$$\n\nThis filter operates as a moving average filter, as its output corresponds to the average of the input values over the most recent three samples. When an impulse signal is applied, the output is nonzero for only three samples, confirming it as an FIR filter. It is noteworthy that this FIR filter has poles, all located at $\\mathbf{z}=0$.\n\nAmong the benefits of FIR filters are their inherent stability (they are always stable) and the capability to implement exact linear phase filters (a subject outside the scope of this chapter). Nonetheless, for various specifications, an IIR filter can achieve the same performance as an FIR filter but with a significantly lower order, especially in narrowband filters where the poles of an IIR filter are positioned near the unit circle (i.e., exhibiting a slowly decaying impulse response)."
},
{
    "text": "Key Point: An infinite impulse response (IIR) filter exhibits an impulse response that persists indefinitely, whereas a finite impulse response (FIR) filter has an impulse response that terminates after a finite duration, ultimately reaching exactly zero.\n\nInfinite impulse response (IIR) filters are discrete-time filters that, when subjected to an impulse, produce nonzero outputs perpetually, assuming perfect arithmetic precision. For instance, the filter described by equation (13.29) qualifies as an IIR filter (for a ≠ 0) because, despite its impulse response gradually approaching zero (a characteristic of all stable filters), it never actually reaches zero, as evidenced by evaluating $\\mathrm{n} \\rightarrow \\infty$ in (13.30).\n\nFinite impulse response (FIR) filters, on the other hand, are discrete-time filters whose outputs revert precisely to zero (and stay zero) after a specific value of $n$. An illustrative example of an FIR filter is provided by the following equation:\n\n$$\n\\begin{equation*}\ny(n)=\\frac{1}{3}[x(n)+x(n-1)+x(n-2)] \\tag{13.31}\n\\end{equation*}\n$$\n\nThe corresponding transfer function, $H(z)$, for this filter is\n\n$$\n\\begin{equation*}\nH(z)=\\frac{1}{3} \\sum_{i=0}^{2} z^{-i} \\tag{13.32}\n\\end{equation*}\n$$\n\nThis filter operates as a running average filter, yielding an output that equals the average of the input over the most recent three samples. When an impulse signal is applied to this filter, the output remains nonzero for merely three samples, confirming its classification as an FIR filter. It is noteworthy that this FIR filter possesses poles, all of which are located at $\\mathbf{z}=0$.\n\nAmong the advantages of FIR filters are their inherent stability (they are always stable) and the feasibility of creating exact linear phase filters (a topic not covered in this chapter). Nevertheless, for various design criteria, an IIR filter can achieve the same performance as an FIR filter but with a significantly lower order, especially in narrowband filters where the poles of the IIR filter are positioned near the unit circle (i.e., exhibiting a slowly diminishing impulse response)."
},
{
    "text": "Key Point: An infinite impulse response (IIR) filter exhibits an impulse response that persists indefinitely, whereas a finite impulse response (FIR) filter has an impulse response that concludes after a finite duration, ultimately reaching exactly zero.\n\nInfinite impulse response (IIR) filters are discrete-time filters that, upon being excited by an impulse, produce nonzero outputs perpetually, assuming perfect arithmetic precision. ${ }^{2}$ For instance, the filter defined in (13.29) qualifies as an IIR filter (when a is not zero) because, despite its impulse response gradually diminishing towards zero (a characteristic of all stable filters), it never actually reaches zero, as evidenced by letting $\\mathrm{n} \\rightarrow \\infty$ in (13.30).\n\nFinite impulse response (FIR) filters are discrete-time filters that, when subjected to an impulse, have their outputs drop precisely to zero (and stay zero) after a specific value of $n$. An illustrative example of an FIR filter is the following:\n\n$$\n\\begin{equation*}\ny(n)=\\frac{1}{3}[x(n)+x(n-1)+x(n-2)] \\tag{13.31}\n\\end{equation*}\n$$\n\nThe corresponding transfer function for this filter, $H(z)$, is given by\n\n$$\n\\begin{equation*}\nH(z)=\\frac{1}{3} \\sum_{i=0}^{2} z^{-i} \\tag{13.32}\n\\end{equation*}\n$$\n\nThis filter operates as a running average filter, as its output corresponds to the average of the input values over the most recent three samples. When an impulse signal is applied to this filter, the output remains nonzero for only three samples, thereby classifying it as an FIR filter. It is noteworthy that this FIR filter possesses poles, all of which are located at $\\mathbf{z}=0$.\n\nAmong the advantages of FIR filters are their inherent stability (they are always stable) and the feasibility of creating exact linear phase filters (a subject outside the scope of this chapter). Nonetheless, for numerous specifications, an IIR filter can achieve the same performance as an FIR filter but with a significantly lower order, especially in narrowband filters where the poles of an IIR filter are positioned near the unit circle (i.e., exhibiting a slowly diminishing impulse response)."
},
{
    "text": "One technique for deriving a discrete-time transfer function that satisfies a set of specifications involves using a bilinear transform to convert these specifications into a set of hypothetical continuous-time filter specifications. This process includes designing a continuous-time filter to meet these specifications and then transforming the resulting filter back into discrete-time, again utilizing a bilinear transform. Assuming $\\mathrm{H}_{\\mathrm{c}}(\\mathrm{s})$ represents a continuous-time transfer function (where s is the complex variable $\\sigma_{s} + j\\Omega$), the bilinear transform is defined by\n\n$$\n\\begin{equation*}\ns = \\frac{z - 1}{z + 1} \\tag{13.33}\n\\end{equation*}\n$$\n\nThe inverse transformation is expressed as\n\n$$\n\\begin{equation*}\n\\mathrm{z} = \\frac{1 + \\mathrm{s}}{1 - \\mathrm{s}} \\tag{13.34}\n\\end{equation*}\n$$\n\n[^0]Notably, the bilinear transform maps the z-plane locations of 1 and -1 (corresponding to dc and $f_{s} / 2$) to the s-plane locations of 0 and $\\infty$, respectively. Further analysis reveals that this transformation also maps the unit circle, $z = \\mathrm{e}^{\\mathrm{j} \\omega}$, in the z-plane to the entire $\\mathrm{j} \\Omega$-axis in the s-plane. To illustrate this mapping, substituting $\\mathrm{Z} = \\mathrm{e}^{\\mathrm{j} \\omega}$ into (13.33) yields\n\n$$\n\\begin{align*}\ns & = \\frac{e^{j \\omega} - 1}{e^{j \\omega} + 1} = \\frac{e^{j(\\omega / 2)} \\left(e^{j(\\omega / 2)} - e^{-j(\\omega / 2)}\\right)}{e^{j(\\omega / 2)} \\left(e^{j(\\omega / 2)} + e^{-j(\\omega / 2)}\\right)} \\tag{13.35}\\\\\n& = \\frac{2j \\sin (\\omega / 2)}{2 \\cos (\\omega / 2)} = j \\tan (\\omega / 2)\n\\end{align*}\n$$\n\nThus, points on the unit circle in the z-plane correspond to locations on the j $\\Omega$-axis in the s-plane, leading to\n\n$$\n\\begin{equation*}\n\\Omega = \\tan (\\omega / 2) \\tag{13.36}\n\\end{equation*}\n$$\n\nAs a verification, the z-plane locations of 1 and -1, which correspond to $\\omega$ values of 0 and $\\pi$, respectively, map to $\\Omega$ values of 0 and $\\infty$.\n\nA practical application of this transform involves designing a continuous-time transfer function, $\\mathrm{H}_{\\mathrm{c}}(\\mathrm{s})$, and selecting the discrete-time transfer function, $\\mathrm{H}(\\mathrm{z})$, such that\n\n$$\n\\begin{equation*}\nH(z) \\equiv H_{c} \\left[(z - 1) / (z + 1)\\right] \\tag{13.37}\n\\end{equation*}\n$$\n\nWith this setup, it can be demonstrated that\n\n$$\n\\begin{equation*}\n\\mathrm{H} \\left(\\mathrm{e}^{\\mathrm{j} \\omega}\\right) = \\mathrm{H}_{\\mathrm{c}} \\left[j \\tan (\\omega / 2)\\right] \\tag{13.38}\n\\end{equation*}\n$$\n\nThus, the response of $\\mathrm{H}(\\mathrm{z})$ matches the response of $\\mathrm{H}_{\\mathrm{c}}(\\mathrm{s})$, with frequency warping as per (13.36). Note that the order of $\\mathrm{H}(\\mathrm{z})$ is the same as that of $\\mathrm{H}_{\\mathrm{c}}(\\mathrm{s})$ because each s term is replaced by another first-order function.\n\nKey Point: The bilinear transform establishes a mapping between discrete and continuous-time transfer functions where $z = -1$ corresponds to infinite frequency and $z = 1$ corresponds to dc.\n\n#### EXAMPLE 13.7\n\nUsing the bilinear transform, determine a first-order $H(z)$ with a $3-dB$ frequency at $f_{s} / 20$, a zero at -1, and a dc gain of 1.\n\n#### Solution\n\nApplying (13.36), the frequency value $f_{s} / 20$, or equivalently, $\\omega = (2\\pi) / 20 = 0.314159$, maps to $\\Omega = 0.1584 \\mathrm{rad} / \\mathrm{s}$. Therefore, $\\mathrm{H}_{\\mathrm{c}}(\\mathrm{s})$ should have a $3-\\mathrm{dB}$ frequency of $0.1584 \\mathrm{rad} / \\mathrm{s}$. This $3-\\mathrm{dB}$ frequency is achieved by having an s-plane zero at $\\infty$ and a pole at -0.1584. Transforming these continuous-time pole and zero back to the z-plane using (13.34) results in a z-plane zero at -1 and a pole at 0.7265. Thus, $H(z)$ is given by\n\n$$\nH(z) = \\frac{k(z + 1)}{z - 0.7265}\n$$\n\nThe constant $k$ is determined by setting the dc gain to 1, or equivalently, $|H(1)| = 1$, which yields $\\mathrm{k} = 0.1368$."
},
{
    "text": "One approach to obtaining a discrete-time transfer function that satisfies a set of specifications involves using a bilinear transform to convert the specifications into a set of hypothetical continuous-time filter specifications, designing a filter in continuous-time to meet these specifications, and then transforming the resulting filter back to discrete-time, again employing a bilinear transform. Assuming $\\mathrm{H}_{\\mathrm{c}}(\\mathrm{s})$ represents a continuous-time transfer function (where s is the complex variable $\\sigma_{s} + j\\Omega$), the bilinear transform is defined as follows:\n\n$$\n\\begin{equation*}\ns = \\frac{z - 1}{z + 1} \\tag{13.33}\n\\end{equation*}\n$$\n\nThe inverse transformation is given by:\n\n$$\n\\begin{equation*}\n\\mathrm{z} = \\frac{1 + \\mathrm{s}}{1 - \\mathrm{s}} \\tag{13.34}\n\\end{equation*}\n$$\n\n[^0]Notably, the bilinear transform maps the z-plane locations of 1 and -1 (corresponding to dc and $f_{s} / 2$) to the s-plane locations of 0 and $\\infty$, respectively. Further analysis reveals that this transformation also maps the unit circle, $z = \\mathrm{e}^{\\mathrm{j} \\omega}$, in the z-plane to the entire $\\mathrm{j} \\Omega$-axis in the s-plane. To illustrate this mapping, we substitute $\\mathrm{Z} = \\mathrm{e}^{\\mathrm{j} \\omega}$ into (13.33):\n\n$$\n\\begin{align*}\ns & = \\frac{e^{j \\omega} - 1}{e^{j \\omega} + 1} = \\frac{e^{j(\\omega / 2)} \\left(e^{j(\\omega / 2)} - e^{-j(\\omega / 2)}\\right)}{e^{j(\\omega / 2)} \\left(e^{j(\\omega / 2)} + e^{-j(\\omega / 2)}\\right)} \\tag{13.35}\\\\\n& = \\frac{2j \\sin (\\omega / 2)}{2 \\cos (\\omega / 2)} = j \\tan (\\omega / 2)\n\\end{align*}\n$$\n\nThus, points on the unit circle in the z-plane are mapped to locations on the j $\\Omega$-axis in the s-plane, yielding:\n\n$$\n\\begin{equation*}\n\\Omega = \\tan (\\omega / 2) \\tag{13.36}\n\\end{equation*}\n$$\n\nAs a verification, note that the z-plane locations of 1 and -1, corresponding to $\\omega$ values of 0 and $\\pi$, respectively, map to $\\Omega$ values of 0 and $\\infty$.\n\nOne practical application of this transform is to design a continuous-time transfer function, $\\mathrm{H}_{\\mathrm{c}}(\\mathrm{s})$, and select the discrete-time transfer function, $\\mathrm{H}(\\mathrm{z})$, such that:\n\n$$\n\\begin{equation*}\nH(z) \\equiv H_{c}[(z - 1) / (z + 1)] \\tag{13.37}\n\\end{equation*}\n$$\n\nWith this setup, it can be demonstrated that:\n\n$$\n\\begin{equation*}\n\\mathrm{H}\\left(\\mathrm{e}^{\\mathrm{j} \\omega}\\right) = \\mathrm{H}_{\\mathrm{c}}[j \\tan (\\omega / 2)] \\tag{13.38}\n\\end{equation*}\n$$\n\nThus, the response of $\\mathrm{H}(\\mathrm{z})$ is equivalent to the response of $\\mathrm{H}_{\\mathrm{c}}(\\mathrm{s})$, with a frequency warping as per (13.36). Note that the order of $\\mathrm{H}(\\mathrm{z})$ matches that of $\\mathrm{H}_{\\mathrm{c}}(\\mathrm{s})$ since, according to (13.37), each s term is replaced by another first-order function.\n\nKey Point: The bilinear transform establishes a mapping between discrete and continuous-time transfer functions where $z = -1$ corresponds to infinite frequency and $z = 1$ corresponds to dc.\n\n#### EXAMPLE 13.7\n\nUsing the bilinear transform, determine a first-order $H(z)$ with a $3-\\mathrm{dB}$ frequency at $f_{s} / 20$, a zero at -1, and a dc gain of 1.\n\n#### Solution\n\nUsing (13.36), the frequency value $f_{s} / 20$, or equivalently, $\\omega = (2\\pi) / 20 = 0.314159$, maps to $\\Omega = 0.1584 \\mathrm{rad} / \\mathrm{s}$. Therefore, $\\mathrm{H}_{\\mathrm{c}}(\\mathrm{s})$ should have a $3-\\mathrm{dB}$ frequency of $0.1584 \\mathrm{rad} / \\mathrm{s}$. This $3-\\mathrm{dB}$ frequency is achieved by having an s-plane zero at $\\infty$ and a pole at -0.1584. Transforming these continuous-time pole and zero back to the z-plane using (13.34) results in a z-plane zero at -1 and a pole at 0.7265. Thus, $H(z)$ is given by:\n\n$$\nH(z) = \\frac{k(z + 1)}{z - 0.7265}\n$$\n\nThe constant $k$ is determined by setting the dc gain to 1, or equivalently, $|H(1)| = 1$, which yields $k = 0.1368$."
},
{
    "text": "A technique for deriving a discrete-time transfer function that satisfies specific criteria involves employing a bilinear transform to convert these criteria into a set of hypothetical continuous-time filter specifications. This process entails designing a continuous-time filter to meet these specifications and then transforming the resultant filter back into discrete-time using the bilinear transform. Given that $\\mathrm{H}_{\\mathrm{c}}(\\mathrm{s})$ represents a continuous-time transfer function (where s is the complex variable $\\sigma_{s} + j\\Omega$), the bilinear transform is defined by\n\n$$\n\\begin{equation*}\ns = \\frac{z - 1}{z + 1} \\tag{13.33}\n\\end{equation*}\n$$\n\nThe inverse transformation is expressed as\n\n$$\n\\begin{equation*}\n\\mathrm{z} = \\frac{1 + \\mathrm{s}}{1 - \\mathrm{s}} \\tag{13.34}\n\\end{equation*}\n$$\n\n[^0]Notably, the bilinear transform maps the z-plane locations of 1 and -1 (corresponding to dc and $f_{s} / 2$) to the s-plane locations of 0 and $\\infty$, respectively. Further analysis reveals that this transformation also maps the unit circle, $z = \\mathrm{e}^{\\mathrm{j} \\omega}$, in the z-plane to the entire $\\mathrm{j} \\Omega$-axis in the s-plane. To illustrate this mapping, substituting $\\mathrm{Z} = \\mathrm{e}^{\\mathrm{j} \\omega}$ into (13.33) yields\n\n$$\n\\begin{align*}\ns & = \\frac{e^{j \\omega} - 1}{e^{j \\omega} + 1} = \\frac{e^{j(\\omega / 2)} \\left(e^{j(\\omega / 2)} - e^{-j(\\omega / 2)}\\right)}{e^{j(\\omega / 2)} \\left(e^{j(\\omega / 2)} + e^{-j(\\omega / 2)}\\right)} \\tag{13.35}\\\\\n& = \\frac{2j \\sin (\\omega / 2)}{2 \\cos (\\omega / 2)} = j \\tan (\\omega / 2)\n\\end{align*}\n$$\n\nThus, points on the unit circle in the z-plane correspond to locations on the j $\\Omega$-axis in the s-plane, leading to\n\n$$\n\\begin{equation*}\n\\Omega = \\tan (\\omega / 2) \\tag{13.36}\n\\end{equation*}\n$$\n\nAs a verification, the z-plane locations of 1 and -1, which correspond to $\\omega$ values of 0 and $\\pi$, respectively, map to $\\Omega$ values of 0 and $\\infty$.\n\nOne practical application of this transform is to design a continuous-time transfer function, $\\mathrm{H}_{\\mathrm{c}}(\\mathrm{s})$, and select the discrete-time transfer function, $\\mathrm{H}(\\mathrm{z})$, such that\n\n$$\n\\begin{equation*}\nH(z) \\equiv H_{c} \\left[(z - 1) / (z + 1)\\right] \\tag{13.37}\n\\end{equation*}\n$$\n\nWith this setup, it can be demonstrated that\n\n$$\n\\begin{equation*}\n\\mathrm{H} \\left(\\mathrm{e}^{\\mathrm{j} \\omega}\\right) = \\mathrm{H}_{\\mathrm{c}} \\left[j \\tan (\\omega / 2)\\right] \\tag{13.38}\n\\end{equation*}\n$$\n\nConsequently, the response of $\\mathrm{H}(\\mathrm{z})$ matches the response of $\\mathrm{H}_{\\mathrm{c}}(\\mathrm{s})$, albeit with a frequency distortion as per (13.36). Note that the order of $\\mathrm{H}(\\mathrm{z})$ is the same as that of $\\mathrm{H}_{\\mathrm{c}}(\\mathrm{s})$ because, according to (13.37), each s term is replaced by another first-order function.\n\nKey Point: The bilinear transform establishes a correspondence between discrete and continuous-time transfer functions, where $z = -1$ corresponds to infinite frequency and $z = 1$ corresponds to dc.\n\n#### EXAMPLE 13.7\n\nUsing the bilinear transform, determine a first-order $H(z)$ with a $3-\\mathrm{dB}$ frequency at $f_{s} / 20$, a zero at -1, and a dc gain of 1.\n\n#### Solution\n\nApplying (13.36), the frequency $f_{s} / 20$, or equivalently, $\\omega = (2\\pi) / 20 = 0.314159$, maps to $\\Omega = 0.1584 \\mathrm{rad} / \\mathrm{s}$. Therefore, $\\mathrm{H}_{\\mathrm{c}}(\\mathrm{s})$ should have a $3-\\mathrm{dB}$ frequency of $0.1584 \\mathrm{rad} / \\mathrm{s}$. This $3-\\mathrm{dB}$ frequency is achieved by having an s-plane zero at $\\infty$ and a pole at -0.1584. Transforming these continuous-time pole and zero back to the z-plane using (13.34) results in a z-plane zero at -1 and a pole at 0.7265. Thus, $H(z)$ is given by\n\n$$\nH(z) = \\frac{k(z + 1)}{z - 0.7265}\n$$\n\nThe constant $k$ is determined by setting the dc gain to 1, or equivalently, $|H(1)| = 1$, which yields $\\mathrm{k} = 0.1368$."
},
{
    "text": "A technique for deriving a discrete-time transfer function that satisfies specific criteria involves employing a bilinear transform to convert these criteria into a set of hypothetical continuous-time filter specifications. This process entails designing a continuous-time filter to meet these specifications and then transforming the resultant filter back into discrete-time using the bilinear transform. Assuming $\\mathrm{H}_{\\mathrm{c}}(\\mathrm{s})$ represents a continuous-time transfer function (where s is the complex variable $\\sigma_{s} + j\\Omega$), the bilinear transform is defined as follows:\n\n$$\n\\begin{equation*}\ns = \\frac{z - 1}{z + 1} \\tag{13.33}\n\\end{equation*}\n$$\n\nThe inverse transformation is expressed by:\n\n$$\n\\begin{equation*}\n\\mathrm{z} = \\frac{1 + \\mathrm{s}}{1 - \\mathrm{s}} \\tag{13.34}\n\\end{equation*}\n$$\n\n[^0]Notably, the bilinear transform maps the z-plane locations of 1 and -1 (corresponding to dc and $f_{s} / 2$) to the s-plane locations of 0 and $\\infty$, respectively. Further analysis reveals that this transformation also maps the unit circle, $z = \\mathrm{e}^{\\mathrm{j} \\omega}$, in the z-plane to the entire $\\mathrm{j} \\Omega$-axis in the s-plane. To illustrate this mapping, we substitute $\\mathrm{Z} = \\mathrm{e}^{\\mathrm{j} \\omega}$ into (13.33):\n\n$$\n\\begin{align*}\ns & = \\frac{e^{j \\omega} - 1}{e^{j \\omega} + 1} = \\frac{e^{j(\\omega / 2)} \\left(e^{j(\\omega / 2)} - e^{-j(\\omega / 2)}\\right)}{e^{j(\\omega / 2)} \\left(e^{j(\\omega / 2)} + e^{-j(\\omega / 2)}\\right)} \\tag{13.35}\\\\\n& = \\frac{2j \\sin (\\omega / 2)}{2 \\cos (\\omega / 2)} = j \\tan (\\omega / 2)\n\\end{align*}\n$$\n\nThus, points on the unit circle in the z-plane correspond to locations on the j$\\Omega$-axis in the s-plane, yielding:\n\n$$\n\\begin{equation*}\n\\Omega = \\tan (\\omega / 2) \\tag{13.36}\n\\end{equation*}\n$$\n\nAs a verification, the z-plane locations of 1 and -1, which correspond to $\\omega$ values of 0 and $\\pi$, respectively, map to $\\Omega$ values of 0 and $\\infty$.\n\nOne practical application of this transform is to design a continuous-time transfer function, $\\mathrm{H}_{\\mathrm{c}}(\\mathrm{s})$, and select the discrete-time transfer function, $\\mathrm{H}(\\mathrm{z})$, such that:\n\n$$\n\\begin{equation*}\nH(z) \\equiv H_{c} \\left[(z - 1) / (z + 1)\\right] \\tag{13.37}\n\\end{equation*}\n$$\n\nWith this setup, it can be demonstrated that:\n\n$$\n\\begin{equation*}\n\\mathrm{H} \\left(\\mathrm{e}^{\\mathrm{j} \\omega}\\right) = \\mathrm{H}_{\\mathrm{c}} \\left[j \\tan (\\omega / 2)\\right] \\tag{13.38}\n\\end{equation*}\n$$\n\nThus, the response of $\\mathrm{H}(\\mathrm{z})$ matches the response of $\\mathrm{H}_{\\mathrm{c}}(\\mathrm{s})$, with a frequency warping as per (13.36). Note that the order of $\\mathrm{H}(\\mathrm{z})$ is the same as that of $\\mathrm{H}_{\\mathrm{c}}(\\mathrm{s})$, since each s term in (13.37) is replaced by another first-order function.\n\nKey Point: The bilinear transform facilitates a mapping between discrete and continuous-time transfer functions, where $z = -1$ corresponds to infinite frequency and $z = 1$ corresponds to dc.\n\n#### EXAMPLE 13.7\n\nUsing the bilinear transform, determine a first-order $H(z)$ with a $3-\\mathrm{dB}$ frequency at $f_{s} / 20$, a zero at -1, and a dc gain of 1.\n\n#### Solution\n\nApplying (13.36), the frequency $f_{s} / 20$, or equivalently, $\\omega = (2\\pi) / 20 = 0.314159$, maps to $\\Omega = 0.1584 \\mathrm{rad} / \\mathrm{s}$. Therefore, $\\mathrm{H}_{\\mathrm{c}}(\\mathrm{s})$ should exhibit a $3-\\mathrm{dB}$ frequency of $0.1584 \\mathrm{rad} / \\mathrm{s}$. This $3-\\mathrm{dB}$ frequency is achieved by having an s-plane zero at $\\infty$ and a pole at -0.1584. Transforming these continuous-time pole and zero back to the z-plane using (13.34) results in a z-plane zero at -1 and a pole at 0.7265. Consequently, $H(z)$ is given by:\n\n$$\nH(z) = \\frac{k(z + 1)}{z - 0.7265}\n$$\n\nThe constant $k$ is determined by setting the dc gain to 1, or equivalently, $|H(1)| = 1$, which yields $\\mathrm{k} = 0.1368$."
},
{
    "text": "One approach to deriving a discrete-time transfer function that satisfies a given set of specifications involves employing a bilinear transform to convert these specifications into a set of hypothetical continuous-time filter specifications. This process entails designing a continuous-time filter to meet these specifications and then transforming the resultant filter back into discrete-time using the bilinear transform once more. Assuming $\\mathrm{H}_{\\mathrm{c}}(\\mathrm{s})$ represents a continuous-time transfer function (where $\\mathrm{s}$ is the complex variable $\\sigma_{s} + j\\Omega$), the bilinear transform is defined as follows:\n\n$$\n\\begin{equation*}\ns = \\frac{z - 1}{z + 1} \\tag{13.33}\n\\end{equation*}\n$$\n\nThe inverse transformation is expressed by\n\n$$\n\\begin{equation*}\n\\mathrm{z} = \\frac{1 + \\mathrm{s}}{1 - \\mathrm{s}} \\tag{13.34}\n\\end{equation*}\n$$\n\n[^0]Notably, the bilinear transform maps the z-plane locations of 1 and -1 (corresponding to dc and $f_{s} / 2$) to the s-plane locations of 0 and $\\infty$, respectively. Further analysis reveals that this transformation also maps the unit circle, $z = \\mathrm{e}^{j\\omega}$, in the z-plane to the entire $j\\Omega$-axis in the s-plane. To illustrate this mapping, we substitute $z = \\mathrm{e}^{j\\omega}$ into (13.33):\n\n$$\n\\begin{align*}\ns & = \\frac{e^{j\\omega} - 1}{e^{j\\omega} + 1} = \\frac{e^{j(\\omega / 2)} \\left(e^{j(\\omega / 2)} - e^{-j(\\omega / 2)}\\right)}{e^{j(\\omega / 2)} \\left(e^{j(\\omega / 2)} + e^{-j(\\omega / 2)}\\right)} \\tag{13.35}\\\\\n& = \\frac{2j \\sin(\\omega / 2)}{2 \\cos(\\omega / 2)} = j \\tan(\\omega / 2)\n\\end{align*}\n$$\n\nThus, points on the unit circle in the z-plane are mapped to points on the $j\\Omega$-axis in the s-plane, yielding\n\n$$\n\\begin{equation*}\n\\Omega = \\tan(\\omega / 2) \\tag{13.36}\n\\end{equation*}\n$$\n\nAs a verification, note that the z-plane locations of 1 and -1, corresponding to $\\omega$ values of 0 and $\\pi$, respectively, map to $\\Omega$ values of 0 and $\\infty$.\n\nOne practical application of this transform is to design a continuous-time transfer function, $\\mathrm{H}_{\\mathrm{c}}(\\mathrm{s})$, and then select the discrete-time transfer function, $\\mathrm{H}(\\mathrm{z})$, such that\n\n$$\n\\begin{equation*}\nH(z) \\equiv H_{c}\\left[(z - 1) / (z + 1)\\right] \\tag{13.37}\n\\end{equation*}\n$$\n\nWith this setup, it can be demonstrated that\n\n$$\n\\begin{equation*}\n\\mathrm{H}\\left(\\mathrm{e}^{j\\omega}\\right) = \\mathrm{H}_{\\mathrm{c}}[j \\tan(\\omega / 2)] \\tag{13.38}\n\\end{equation*}\n$$\n\nConsequently, the response of $\\mathrm{H}(\\mathrm{z})$ is shown to match the response of $\\mathrm{H}_{\\mathrm{c}}(\\mathrm{s})$, with a frequency warping as per (13.36). Note that the order of $\\mathrm{H}(\\mathrm{z})$ is the same as that of $\\mathrm{H}_{\\mathrm{c}}(\\mathrm{s})$ since, according to (13.37), each $\\mathrm{s}$ term is replaced by another first-order function.\n\nKey Point: The bilinear transform establishes a correspondence between discrete and continuous-time transfer functions, where $z = -1$ corresponds to infinite frequency and $z = 1$ corresponds to dc.\n\n#### EXAMPLE 13.7\n\nUsing the bilinear transform, determine a first-order $H(z)$ with a $3-\\mathrm{dB}$ frequency at $f_{s} / 20$, a zero at -1, and a dc gain of 1.\n\n#### Solution\n\nApplying (13.36), the frequency value $f_{s} / 20$, or equivalently, $\\omega = (2\\pi) / 20 = 0.314159$, maps to $\\Omega = 0.1584 \\mathrm{rad} / \\mathrm{s}$. Therefore, $\\mathrm{H}_{\\mathrm{c}}(\\mathrm{s})$ should have a $3-\\mathrm{dB}$ frequency of $0.1584 \\mathrm{rad} / \\mathrm{s}$. This $3-\\mathrm{dB}$ frequency is achieved by having an s-plane zero at $\\infty$ and a pole at -0.1584. Transforming these continuous-time pole and zero back to the z-plane using (13.34) results in a z-plane zero at -1 and a pole at 0.7265. Hence, $H(z)$ is given by\n\n$$\nH(z) = \\frac{k(z + 1)}{z - 0.7265}\n$$\n\nThe constant $k$ is determined by setting the dc gain to 1, or equivalently, $|H(1)| = 1$, which yields $k = 0.1368$."
},
{
    "text": "A technique for deriving a discrete-time transfer function that satisfies a given set of specifications involves employing a bilinear transform to convert these specifications into a set of hypothetical continuous-time filter specifications. This process entails designing a continuous-time filter to meet these specifications and then transforming the resulting filter back into discrete-time using the bilinear transform once more. Assuming $\\mathrm{H}_{\\mathrm{c}}(\\mathrm{s})$ represents a continuous-time transfer function (where s is the complex variable equating to $\\left.\\sigma_{s}+j \\Omega\\right)$, the bilinear transform is defined by:\n\n$$\n\\begin{equation*}\ns=\\frac{z-1}{z+1} \\tag{13.33}\n\\end{equation*}\n$$\n\nThe inverse transformation is expressed as:\n\n$$\n\\begin{equation*}\n\\mathrm{z}=\\frac{1+\\mathrm{s}}{1-\\mathrm{s}} \\tag{13.34}\n\\end{equation*}\n$$\n\n[^0]Notably, the bilinear transform maps the z-plane locations of 1 and -1 (corresponding to dc and $f_{s} / 2$) to the s-plane locations of 0 and $\\infty$, respectively. Further analysis reveals that this transformation also maps the unit circle, $z=\\mathrm{e}^{\\mathrm{j} \\omega}$, in the z-plane to the entire $\\mathrm{j} \\Omega$-axis in the s-plane. To illustrate this mapping, substituting $\\mathrm{Z}=\\mathrm{e}^{\\mathrm{j} \\omega}$ into (13.33) yields:\n\n$$\n\\begin{align*}\ns & =\\frac{e^{j \\omega}-1}{e^{j \\omega}+1}=\\frac{e^{j(\\omega / 2)}\\left(e^{j(\\omega / 2)}-e^{-j(\\omega / 2)}\\right)}{e^{j(\\omega / 2)}\\left(e^{j(\\omega / 2)}+e^{-j(\\omega / 2)}\\right)}  \\tag{13.35}\\\\\n& =\\frac{2 j \\sin (\\omega / 2)}{2 \\cos (\\omega / 2)}=j \\tan (\\omega / 2)\n\\end{align*}\n$$\n\nThus, points on the unit circle in the z-plane correspond to locations on the j $\\Omega$-axis in the s-plane, giving us:\n\n$$\n\\begin{equation*}\n\\Omega=\\tan (\\omega / 2) \\tag{13.36}\n\\end{equation*}\n$$\n\nAs a verification, the z-plane locations of 1 and -1, which correspond to $\\omega$ values of 0 and $\\pi$, respectively, map to $\\Omega$ values of 0 and $\\infty$.\n\nOne practical application of this transform is to design a continuous-time transfer function, $\\mathrm{H}_{\\mathrm{c}}(\\mathrm{s})$, and select the discrete-time transfer function, $\\mathrm{H}(\\mathrm{z})$, such that:\n\n$$\n\\begin{equation*}\nH(z) \\equiv H_{c}[(z-1) /(z+1)] \\tag{13.37}\n\\end{equation*}\n$$\n\nWith this setup, it can be demonstrated that:\n\n$$\n\\begin{equation*}\n\\mathrm{H}\\left(\\mathrm{e}^{\\mathrm{j} \\omega}\\right)=\\mathrm{H}_{\\mathrm{c}}[\\mathrm{j} \\tan (\\omega / 2)] \\tag{13.38}\n\\end{equation*}\n$$\n\nConsequently, the response of $\\mathrm{H}(\\mathrm{z})$ matches the response of $\\mathrm{H}_{\\mathrm{c}}(\\mathrm{s})$, albeit with a frequency distortion as per (13.36). Note that the order of $\\mathrm{H}(\\mathrm{z})$ is the same as that of $\\mathrm{H}_{\\mathrm{c}}(\\mathrm{s})$ since, according to (13.37), each s term is substituted by another first-order function.\n\nKey Point: The bilinear transform establishes a correspondence between discrete and continuous-time transfer functions, where $z=-1$ corresponds to infinite frequency and $z=1$ corresponds to dc.\n\n#### EXAMPLE 13.7\n\nUsing the bilinear transform, determine a first-order $H(z)$ with a $3-dB$ frequency at $f_{s} / 20$, a zero at -1, and a dc gain of 1.\n\n#### Solution\n\nApplying (13.36), the frequency value $\\mathrm{f}_{\\mathrm{s}} / 20$, or equivalently, $\\omega=(2 \\pi) / 20=0.314159$, maps to $\\Omega=0.1584 \\mathrm{rad} / \\mathrm{s}$. Therefore, $\\mathrm{H}_{\\mathrm{c}}(\\mathrm{s})$ should have a $3-\\mathrm{dB}$ frequency of $0.1584 \\mathrm{rad} / \\mathrm{s}$. Achieving this $3-\\mathrm{dB}$ frequency requires an s-plane zero at $\\infty$ and a pole at -0.1584. Transforming these continuous-time pole and zero back to the $\\mathbf{z}$-plane using (13.34) results in a $\\mathbf{Z}$-plane zero at -1 and a pole at 0.7265. Thus, $H(z)$ is given by:\n\n$$\nH(z)=\\frac{k(z+1)}{z-0.7265}\n$$\n\nThe constant $k$ is determined by setting the dc gain to 1, or equivalently, $|H(1)|=1$, which yields $\\mathrm{k}=0.1368$."
},
{
    "text": "One approach to derive a discrete-time transfer function that satisfies a set of specifications involves using a bilinear transform to convert these specifications into a set of hypothetical continuous-time filter specifications. This process entails designing a continuous-time filter to meet these specifications and then transforming the resulting filter back into discrete-time, again employing a bilinear transform. Assuming $\\mathrm{H}_{\\mathrm{c}}(\\mathrm{s})$ represents a continuous-time transfer function (where s is the complex variable equal to $\\left.\\sigma_{s}+j \\Omega\\right)$, the bilinear transform is defined as follows:\n\n$$\n\\begin{equation*}\ns=\\frac{z-1}{z+1} \\tag{13.33}\n\\end{equation*}\n$$\n\nThe inverse transformation is expressed by\n\n$$\n\\begin{equation*}\n\\mathrm{z}=\\frac{1+\\mathrm{s}}{1-\\mathrm{s}} \\tag{13.34}\n\\end{equation*}\n$$\n\n[^0]Notably, the bilinear transform maps the z-plane locations of 1 and -1 (corresponding to dc and $f_{s} / 2$) to the s-plane locations of 0 and $\\infty$, respectively. Further analysis reveals that this transformation also maps the unit circle, $z=\\mathrm{e}^{\\mathrm{j} \\omega}$, in the z-plane to the entire $\\mathrm{j} \\Omega$-axis in the s-plane. To illustrate this mapping, substituting $\\mathrm{Z}=\\mathrm{e}^{\\mathrm{j} \\omega}$ into (13.33) yields:\n\n$$\n\\begin{align*}\ns & =\\frac{e^{j \\omega}-1}{e^{j \\omega}+1}=\\frac{e^{j(\\omega / 2)}\\left(e^{j(\\omega / 2)}-e^{-j(\\omega / 2)}\\right)}{e^{j(\\omega / 2)}\\left(e^{j(\\omega / 2)}+e^{-j(\\omega / 2)}\\right)}  \\tag{13.35}\\\\\n& =\\frac{2 j \\sin (\\omega / 2)}{2 \\cos (\\omega / 2)}=j \\tan (\\omega / 2)\n\\end{align*}\n$$\n\nThus, points on the unit circle in the z-plane correspond to locations on the j $\\Omega$-axis in the s-plane, giving us:\n\n$$\n\\begin{equation*}\n\\Omega=\\tan (\\omega / 2) \\tag{13.36}\n\\end{equation*}\n$$\n\nAs a verification, the z-plane locations of 1 and -1, which correspond to $\\omega$ values of 0 and $\\pi$, respectively, map to $\\Omega$ values of 0 and $\\infty$.\n\nA practical application of this transform involves designing a continuous-time transfer function, $\\mathrm{H}_{\\mathrm{c}}(\\mathrm{s})$, and selecting the discrete-time transfer function, $\\mathrm{H}(\\mathrm{z})$, such that:\n\n$$\n\\begin{equation*}\nH(z) \\equiv H_{c}[(z-1) /(z+1)] \\tag{13.37}\n\\end{equation*}\n$$\n\nWith this setup, it can be demonstrated that:\n\n$$\n\\begin{equation*}\n\\mathrm{H}\\left(\\mathrm{e}^{\\mathrm{j} \\omega}\\right)=\\mathrm{H}_{\\mathrm{c}}[\\mathrm{j} \\tan (\\omega / 2)] \\tag{13.38}\n\\end{equation*}\n$$\n\nConsequently, the response of $\\mathrm{H}(\\mathrm{z})$ matches the response of $\\mathrm{H}_{\\mathrm{c}}(\\mathrm{s})$, with a frequency distortion as described by (13.36). Note that the order of $\\mathrm{H}(\\mathrm{z})$ is the same as that of $\\mathrm{H}_{\\mathrm{c}}(\\mathrm{s})$ because, according to (13.37), each s term is replaced by another first-order function.\n\nKey Point: The bilinear transform facilitates a mapping between discrete and continuous-time transfer functions, where $z=-1$ corresponds to infinite frequency and $z=1$ corresponds to dc.\n\n#### EXAMPLE 13.7\n\nUsing the bilinear transform, determine a first-order $H(z)$ with a $3-dB$ frequency at $f_{s} / 20$, a zero at -1, and a dc gain of 1.\n\n#### Solution\n\nApplying (13.36), the frequency value $\\mathrm{f}_{\\mathrm{s}} / 20$, or equivalently, $\\omega=(2 \\pi) / 20=0.314159$, maps to $\\Omega=0.1584 \\mathrm{rad} / \\mathrm{s}$. Therefore, $\\mathrm{H}_{\\mathrm{c}}(\\mathrm{s})$ should have a $3-\\mathrm{dB}$ frequency of $0.1584 \\mathrm{rad} / \\mathrm{s}$. Achieving this $3-\\mathrm{dB}$ frequency requires an s-plane zero at $\\infty$ and a pole at -0.1584. Transforming these continuous-time pole and zero back to the $\\mathbf{z}$-plane using (13.34) results in a $\\mathbf{Z}$-plane zero at -1 and a pole at 0.7265. Thus, $H(z)$ is expressed as:\n\n$$\nH(z)=\\frac{k(z+1)}{z-0.7265}\n$$\n\nThe constant $k$ is determined by setting the dc gain to 1, or equivalently, $|H(1)|=1$, which yields $\\mathrm{k}=0.1368$."
},
{
    "text": "A technique for deriving a discrete-time transfer function that satisfies specific criteria involves employing a bilinear transform to convert these criteria into a set of hypothetical continuous-time filter specifications. This process entails designing a continuous-time filter to meet these specifications and then transforming the resulting filter back into discrete-time using the bilinear transform once more. Given that $\\mathrm{H}_{\\mathrm{c}}(\\mathrm{s})$ represents a continuous-time transfer function (where s is the complex variable $\\sigma_{s} + j\\Omega$), the bilinear transform is defined as follows:\n\n$$\n\\begin{equation*}\ns = \\frac{z - 1}{z + 1} \\tag{13.33}\n\\end{equation*}\n$$\n\nThe inverse transformation is expressed by:\n\n$$\n\\begin{equation*}\n\\mathrm{z} = \\frac{1 + \\mathrm{s}}{1 - \\mathrm{s}} \\tag{13.34}\n\\end{equation*}\n$$\n\n[^0]Notably, the bilinear transform maps the z-plane locations of 1 and -1 (corresponding to dc and $f_{s} / 2$) to the s-plane locations of 0 and $\\infty$, respectively. Further analysis reveals that this transformation also maps the unit circle, $z = \\mathrm{e}^{\\mathrm{j} \\omega}$, in the z-plane to the entire $\\mathrm{j} \\Omega$-axis in the s-plane. To illustrate this mapping, we substitute $\\mathrm{Z} = \\mathrm{e}^{\\mathrm{j} \\omega}$ into (13.33):\n\n$$\n\\begin{align*}\ns & = \\frac{e^{j \\omega} - 1}{e^{j \\omega} + 1} = \\frac{e^{j(\\omega / 2)} \\left(e^{j(\\omega / 2)} - e^{-j(\\omega / 2)}\\right)}{e^{j(\\omega / 2)} \\left(e^{j(\\omega / 2)} + e^{-j(\\omega / 2)}\\right)} \\tag{13.35}\\\\\n& = \\frac{2j \\sin (\\omega / 2)}{2 \\cos (\\omega / 2)} = j \\tan (\\omega / 2)\n\\end{align*}\n$$\n\nConsequently, points on the unit circle in the z-plane are mapped to points on the j $\\Omega$-axis in the s-plane, yielding:\n\n$$\n\\begin{equation*}\n\\Omega = \\tan (\\omega / 2) \\tag{13.36}\n\\end{equation*}\n$$\n\nAs a verification, the z-plane locations of 1 and -1, corresponding to $\\omega$ values of 0 and $\\pi$, respectively, map to $\\Omega$ values of 0 and $\\infty$.\n\nOne practical application of this transform is to design a continuous-time transfer function, $\\mathrm{H}_{\\mathrm{c}}(\\mathrm{s})$, and select the discrete-time transfer function, $\\mathrm{H}(\\mathrm{z})$, such that:\n\n$$\n\\begin{equation*}\nH(z) \\equiv H_{c} \\left[(z - 1) / (z + 1)\\right] \\tag{13.37}\n\\end{equation*}\n$$\n\nWith this setup, it can be demonstrated that:\n\n$$\n\\begin{equation*}\n\\mathrm{H} \\left(\\mathrm{e}^{\\mathrm{j} \\omega}\\right) = \\mathrm{H}_{\\mathrm{c}} \\left[j \\tan (\\omega / 2)\\right] \\tag{13.38}\n\\end{equation*}\n$$\n\nThus, the response of $\\mathrm{H}(\\mathrm{z})$ is equivalent to the response of $\\mathrm{H}_{\\mathrm{c}}(\\mathrm{s})$, albeit with a frequency warping as per (13.36). Note that the order of $\\mathrm{H}(\\mathrm{z})$ matches that of $\\mathrm{H}_{\\mathrm{c}}(\\mathrm{s})$ since, according to (13.37), each s term is replaced by another first-order function.\n\nKey Point: The bilinear transform facilitates a mapping between discrete and continuous-time transfer functions, where $z = -1$ corresponds to infinite frequency and $z = 1$ corresponds to dc.\n\n#### EXAMPLE 13.7\n\nUsing the bilinear transform, determine a first-order $H(z)$ with a $3-\\mathrm{dB}$ frequency at $f_{s} / 20$, a zero at -1, and a dc gain of 1.\n\n#### Solution\n\nApplying (13.36), the frequency value $f_{s} / 20$, or equivalently, $\\omega = (2\\pi) / 20 = 0.314159$, maps to $\\Omega = 0.1584 \\mathrm{rad} / \\mathrm{s}$. Therefore, $\\mathrm{H}_{\\mathrm{c}}(\\mathrm{s})$ should exhibit a $3-\\mathrm{dB}$ frequency of $0.1584 \\mathrm{rad} / \\mathrm{s}$. Achieving this $3-\\mathrm{dB}$ frequency involves having an s-plane zero at $\\infty$ and a pole at -0.1584. Transforming these continuous-time pole and zero back to the z-plane using (13.34) results in a z-plane zero at -1 and a pole at 0.7265. Hence, $H(z)$ is given by:\n\n$$\nH(z) = \\frac{k(z + 1)}{z - 0.7265}\n$$\n\nThe constant $k$ is determined by setting the dc gain to 1, or equivalently, $|H(1)| = 1$, which yields $\\mathrm{k} = 0.1368$."
},
{
    "text": "In this section, we examine the frequency response that arises when a discrete-time signal is converted back into an analog signal using a sample-and-hold circuit. Note that here, we plot the frequency response for all frequencies (rather than just up to \\( f_{s} / 2 \\)), since the output signal is a continuous-time signal, not a discrete-time one.\n\nA sample-and-hold signal, \\( \\mathrm{x}_{\\mathrm{sh}}(\\mathrm{t}) \\), is related to its sampled signal by the following mathematical relationship:\n\n$$\n\\begin{equation*}\n\\mathrm{x}_{\\mathrm{sh}}(\\mathrm{t})=\\sum_{n=-\\infty}^{\\infty} \\mathrm{x}_{\\mathrm{c}}(\\mathrm{nT})[\\vartheta(\\mathrm{t}-\\mathrm{nT})-\\vartheta(\\mathrm{t}-\\mathrm{nT}-\\mathrm{T})] \\tag{13.39}\n\\end{equation*}\n$$\n\nNote that \\( \\mathrm{x}_{\\mathrm{sh}}(\\mathrm{t}) \\) is well-defined for all time, allowing the Laplace transform to be determined as:\n\n$$\n\\begin{align*}\nX_{s h}(s) & =\\frac{1-e^{-s T}}{s} \\sum_{n=-\\infty}^{\\infty} x_{c}(n T) e^{-s n T}  \\tag{13.40}\\\\\n& =\\frac{1-e^{s T}}{s} X_{s}(s)\n\\end{align*}\n$$\n\nThis result indicates that the hold transfer function, \\( \\mathrm{H}_{\\mathrm{sh}}(\\mathrm{s}) \\), is:\n\n$$\n\\begin{equation*}\n\\mathrm{H}_{\\mathrm{sh}}(\\mathrm{~s})=\\frac{1-\\mathrm{e}^{-\\mathrm{sT}}}{\\mathrm{~s}} \\tag{13.41}\n\\end{equation*}\n$$\n\nIt should be noted that this transfer function is typically referred to as the sample-and-hold response, even though it only accounts for the hold part.\n\nThe spectrum for \\( H_{s h}(s) \\) is obtained by substituting \\( s=j \\omega \\) into (13.41), resulting in:\n\n$$\n\\begin{equation*}\nH_{s h}(j \\omega)=\\frac{1-e^{-j \\omega T}}{j \\omega}=T \\times e^{-j \\omega T / 2} \\times \\frac{\\sin (\\omega T / 2)}{(\\omega T / 2)} \\tag{13.42}\n\\end{equation*}\n$$\n\nimage_name:Fig. 13.13 Sample-and-hold response\ndescription:The graph labeled \"Fig. 13.13 Sample-and-hold response\" illustrates a frequency response function, specifically showing the magnitude of the sample-and-hold response, also known as the sinc response.\n\n1. **Type of Graph and Function:**\n- This is a frequency response graph depicting the magnitude of the sample-and-hold function, often called the sinc function.\n\n2. **Axes Labels and Units:**\n- The x-axis represents frequency \\( f \\), marked in multiples of the sampling frequency \\( f_s \\), such as \\(-3f_s, -2f_s, -f_s, 0, f_s, 2f_s, 3f_s\\).\n- The y-axis represents the magnitude of the response \\(|H_{sh}(j\\omega)|\\).\n\n3. **Overall Behavior and Trends:**\n- The graph shows a central peak at \\( f = 0 \\), indicating the maximum magnitude of the response.\n- As the frequency moves away from zero, the magnitude decreases, exhibiting a characteristic sinc function shape with diminishing oscillations.\n- The response shows periodic nulls at multiples of the sampling frequency \\( \\pm f_s, \\pm 2f_s, \\pm 3f_s \\), where the magnitude reaches zero.\n\n4. **Key Features and Technical Details:**\n- The central peak at \\( f = 0 \\) represents the maximum value of the sinc function.\n- The graph exhibits symmetrical behavior around \\( f = 0 \\), with decreasing amplitude oscillations as frequency increases.\n- The zero crossings at \\( \\pm f_s, \\pm 2f_s, \\pm 3f_s \\) are significant points where the response nulls out.\n\n5. **Annotations and Specific Data Points:**\n- The graph is marked with specific frequency points \\( -3f_s, -2f_s, -f_s, 0, f_s, 2f_s, 3f_s \\) on the x-axis, highlighting the periodic nature of the sinc response.\n- No additional annotations or numerical values are provided beyond these labeled points.\n\nFig. 13.13 Sample-and-hold response (also called the sinc response).\nThe magnitude of this response is given by\n\n$$\n\\left|\\mathrm{H}_{\\mathrm{sh}}(\\mathrm{j} \\omega)\\right|=\\mathrm{T} \\frac{|\\sin (\\omega \\mathrm{~T} / 2)|}{|\\omega \\mathrm{T} / 2|}\n$$\n\nor\n\n$$\n\\begin{equation*}\n\\left|\\mathrm{H}_{\\mathrm{sh}}(\\mathrm{f})\\right|=\\mathrm{T} \\frac{\\left|\\sin \\left(\\pi \\mathrm{f} / \\mathrm{f}_{\\mathrm{s}}\\right)\\right|}{\\left|(\\pi \\mathrm{f}) / \\mathrm{f}_{\\mathrm{s}}\\right|} \\tag{13.43}\n\\end{equation*}\n$$\n\nand is often referred to as the $(\\sin \\mathbf{x}) / \\mathrm{x}$ or sinc response. This magnitude response is depicted in Fig. 13.13.\nMultiplying this sinc response by \\( \\mathrm{X}_{\\mathrm{s}}(\\mathrm{f}) \\) in Fig. 13.2 confirms the spectral relationship for \\( \\mathrm{X}_{\\text {sh }}(\\mathrm{f}) \\). It should be noted that this frequency shaping of a sample and hold occurs only for a continuous-time signal. Specifically, although the sample and hold before the A/D converter shown in Fig. 13.1(b) would result in \\( \\mathrm{x}_{\\mathrm{sh}}(\\mathrm{t}) \\) having smaller images at higher frequencies (due to the sinc response), the images of \\( x(n) \\) are all of the same height (i.e., they are not multiplied by the sinc response) since it is a discrete-time signal. This is because, when converted to a discrete-time signal, the smaller images located at and above \\( f_{s} \\) are aliased in a manner that precisely reconstructs the original spectrum, provided it was sampled above the Nyquist rate. In other words, a sample and hold before an A/D converter simply allows the converter to have a constant input value during one conversion and does not aid in any anti-aliasing requirement.\n\n#### EXAMPLE 13.8\n\nConsider the discrete-time signal processing system shown in Fig. 13.1(b), where a sample (and clock rate) of 50 kHz is used, and the digital filter has the response\n\n$$\nH(z)=\\frac{0.2}{z-0.8}\n$$\n\nFor a $10-\\mathrm{kHz}$ input sinusoidal signal of 1 V rms, find the magnitude of the output signal, \\( \\mathrm{y}_{\\mathrm{sn}}(\\mathrm{t}) \\), at 10 kHz, and at the images 40 kHz and 60 kHz. Assume the quantization effects of the \\( \\mathrm{A} / \\mathrm{D} \\) and \\( \\mathrm{D} / \\mathrm{A} \\) converters are negligible. Also assume the converters complement each other such that a 1-V dc signal into the \\( \\mathrm{A} / \\mathrm{D} \\) converter results in a 1-V dc signal from the \\( \\mathrm{D} / \\mathrm{A} \\) converter if the converters are directly connected.\n\n#### Solution\n\nFirst, the magnitude of \\( \\mathrm{H}(\\mathrm{z}) \\) is found for a $10-\\mathrm{kHz}$ signal when the sampling rate is 50 kHz by noting that\n\n$$\n\\begin{aligned}\n\\mathrm{e}^{\\mathrm{j}(2 \\pi \\times 10 \\mathrm{kHz} / 50 \\mathrm{kHz})} & =\\mathrm{e}^{\\mathrm{j} 0.4 \\pi}=\\cos (0.4 \\pi)+\\mathrm{j} \\sin (0.4 \\pi) \\\\\n& =0.309017+\\mathrm{j} 0.951057\n\\end{aligned}\n$$\n\nand therefore the gain of \\( \\mathrm{H}(\\mathrm{z}) \\) for a $10-\\mathrm{kHz}$ signal is given by\n\n$$\n\\left|\\mathrm{H}\\left(\\mathrm{e}^{\\mathrm{j} 0.4 \\pi}\\right)\\right|=\\frac{0.2}{|(0.309017-0.8)+\\mathrm{j} 0.951057|}=0.186864\n$$\n\nTo determine the magnitude of \\( \\mathrm{y}_{\\mathrm{sh}}(\\mathrm{t}) \\) at various frequencies, we need only multiply the filter's gain by the sinc response shown in Fig. 13.13. Specifically, the magnitude of the sample-and-hold response for a $10-\\mathrm{kHz}$ signal when using a $50-\\mathrm{kHz}$ clock is equal to\n\n$$\n\\left|\\mathrm{H}_{\\mathrm{sh}}(10 \\mathrm{kHz})\\right|=\\mathrm{T} \\frac{\\sin (\\pi 10 / 50)}{(\\pi 10 / 50)}=0.9355 \\mathrm{~T}\n$$\n\nand therefore the magnitude of \\( \\mathrm{y}_{\\mathrm{sh}}(\\mathrm{t}) \\) at 10 kHz is equal to $0.18686 \\times 0.9355=175 \\mathrm{mV}_{\\mathrm{rms}}$ (note that the T term cancels with a similar T term due to the creation of a discrete-time signal—see (13.13) in Section 13.2). Similarly, the magnitude of \\( \\mathrm{H}_{\\mathrm{sh}}(\\mathrm{f}) \\) at 40 kHz and 60 kHz is 0.2399 and 0.1559, respectively, resulting in the magnitude of \\( \\mathrm{y}_{\\mathrm{sh}}(\\mathrm{t}) \\) at 40 kHz and 60 kHz to be 43.7 and $29.1 \\mathrm{mV}_{\\mathrm{rms}}$, respectively."
},
{
    "text": "In this section, we examine the frequency response that arises when a discrete-time signal is converted back into an analog signal using a sample-and-hold circuit. Note that here we plot the frequency response for all frequencies (instead of just up to $f_{s} / 2$) because the output signal is a continuous-time signal, not a discrete-time one.\n\nA sample-and-hold signal, $\\mathrm{x}_{\\mathrm{sh}}(\\mathrm{t})$, is related to its sampled signal by the following mathematical relationship:\n\n$$\n\\begin{equation*}\n\\mathrm{x}_{\\mathrm{sh}}(\\mathrm{t})=\\sum_{n=-\\infty}^{\\infty} \\mathrm{x}_{\\mathrm{c}}(\\mathrm{nT})[\\vartheta(\\mathrm{t}-\\mathrm{nT})-\\vartheta(\\mathrm{t}-\\mathrm{nT}-\\mathrm{T})] \\tag{13.39}\n\\end{equation*}\n$$\n\nNote that $\\mathrm{x}_{\\mathrm{sh}}(\\mathrm{t})$ is well-defined for all time, allowing the Laplace transform to be determined as:\n\n$$\n\\begin{align*}\nX_{s h}(s) & =\\frac{1-e^{-s T}}{s} \\sum_{n=-\\infty}^{\\infty} x_{c}(n T) e^{-s n T}  \\tag{13.40}\\\\\n& =\\frac{1-e^{s T}}{s} X_{s}(s)\n\\end{align*}\n$$\n\nThis result indicates that the hold transfer function, $\\mathrm{H}_{\\mathrm{sh}}(\\mathrm{s})$, is:\n\n$$\n\\begin{equation*}\n\\mathrm{H}_{\\mathrm{sh}}(\\mathrm{~s})=\\frac{1-\\mathrm{e}^{-\\mathrm{sT}}}{\\mathrm{~s}} \\tag{13.41}\n\\end{equation*}\n$$\n\nIt should be noted that this transfer function is typically referred to as the sample-and-hold response, even though it only accounts for the hold part.\n\nThe spectrum for $H_{s h}(s)$ is obtained by substituting $s=j \\omega$ into (13.41), resulting in:\n\n$$\n\\begin{equation*}\nH_{s h}(j \\omega)=\\frac{1-e^{-j \\omega T}}{j \\omega}=T \\times e^{-j \\omega T / 2} \\times \\frac{\\sin (\\omega T / 2)}{(\\omega T / 2)} \\tag{13.42}\n\\end{equation*}\n$$\n\nimage_name:Fig. 13.13 Sample-and-hold response\ndescription:The graph labeled \"Fig. 13.13 Sample-and-hold response\" illustrates a frequency response function, specifically showing the magnitude of the sample-and-hold response, also known as the sinc response.\n\n1. **Type of Graph and Function:**\n- This is a frequency response graph depicting the magnitude of the sample-and-hold function, commonly referred to as the sinc function.\n\n2. **Axes Labels and Units:**\n- The x-axis represents frequency \\( f \\), marked in multiples of the sampling frequency \\( f_s \\), such as \\(-3f_s, -2f_s, -f_s, 0, f_s, 2f_s, 3f_s\\).\n- The y-axis represents the magnitude of the response \\(|H_{sh}(j\\omega)|\\).\n\n3. **Overall Behavior and Trends:**\n- The graph shows a central peak at \\( f = 0 \\), indicating the maximum magnitude of the response.\n- As the frequency moves away from zero, the magnitude decreases, exhibiting a characteristic sinc function shape with diminishing oscillations.\n- The response displays periodic nulls at multiples of the sampling frequency \\( \\pm f_s, \\pm 2f_s, \\pm 3f_s \\), where the magnitude reaches zero.\n\n4. **Key Features and Technical Details:**\n- The central peak at \\( f = 0 \\) represents the maximum value of the sinc function.\n- The graph exhibits symmetrical behavior around \\( f = 0 \\), with decreasing amplitude oscillations as frequency increases.\n- The zero crossings at \\( \\pm f_s, \\pm 2f_s, \\pm 3f_s \\) are significant points where the response nulls out.\n\n5. **Annotations and Specific Data Points:**\n- The graph is marked with specific frequency points \\( -3f_s, -2f_s, -f_s, 0, f_s, 2f_s, 3f_s \\) on the x-axis, highlighting the periodic nature of the sinc response.\n- There are no additional annotations or numerical values provided beyond these labeled points.\n\nFig. 13.13 Sample-and-hold response (also called the sinc response).\nThe magnitude of this response is given by\n\n$$\n\\left|\\mathrm{H}_{\\mathrm{sh}}(\\mathrm{j} \\omega)\\right|=\\mathrm{T} \\frac{|\\sin (\\omega \\mathrm{~T} / 2)|}{|\\omega \\mathrm{T} / 2|}\n$$\n\nor\n\n$$\n\\begin{equation*}\n\\left|\\mathrm{H}_{\\mathrm{sh}}(\\mathrm{f})\\right|=\\mathrm{T} \\frac{\\left|\\sin \\left(\\pi \\mathrm{f} / \\mathrm{f}_{\\mathrm{s}}\\right)\\right|}{\\left|(\\pi \\mathrm{f}) / \\mathrm{f}_{\\mathrm{s}}\\right|} \\tag{13.43}\n\\end{equation*}\n$$\n\nand is often referred to as the $(\\sin \\mathbf{x}) / \\mathrm{x}$ or sinc response. This magnitude response is depicted in Fig. 13.13.\nMultiplying this sinc response by $\\mathrm{X}_{\\mathrm{s}}(\\mathrm{f})$ in Fig. 13.2 confirms the spectral relationship for $\\mathrm{X}_{\\text {sh }}(\\mathrm{f})$. It should be noted that this frequency shaping of a sample and hold occurs only for a continuous-time signal. Specifically, although the sample and hold before the A/D converter shown in Fig. 13.1(b) would result in $\\mathrm{x}_{\\mathrm{sh}}(\\mathrm{t})$ having smaller images at higher frequencies (due to the sinc response), the images of $x(n)$ are all of the same height (i.e., they are not multiplied by the sinc response) since it is a discrete-time signal. This is because, when converted to a discrete-time signal, the smaller images located at and above $f_{s}$ are aliased in a manner that pre-\n\nKey Point: The frequency response of a sample-and-held signal is that of the original discrete-time sequence, repeated every $f_{s}$, and then shaped by a sinc frequency response.\ncisely reconstructs the original spectrum, so long as it was sampled above the Nyquist rate. In other words, a sample and hold before an A/D converter simply allows the converter to have a constant input value during one conversion and does not aid in any anti-aliasing requirement.\n\n#### EXAMPLE 13.8\n\nConsider the discrete-time signal processing system shown in Fig. 13.1(b), where a sample (and clock rate) of 50 kHz is used and the digital filter has the response\n\n$$\nH(z)=\\frac{0.2}{z-0.8}\n$$\n\nFor a $10-\\mathrm{kHz}$ input sinusoidal signal of 1 V rms, find the magnitude of the output signal, $\\mathrm{y}_{\\mathrm{sn}}(\\mathrm{t})$, at 10 kHz, and at the images 40 kHz and 60 kHz. Assume the quantization effects of the $\\mathrm{A} / \\mathrm{D}$ and $\\mathrm{D} / \\mathrm{A}$ converters are negligible. Also assume the converters complement each other such that a 1-V dc signal into the $\\mathrm{A} / \\mathrm{D}$ converter results in a $1-\\mathrm{V}$ dc signal from the $\\mathrm{D} / \\mathrm{A}$ converter if the converters are directly connected together.\n\n#### Solution\n\nFirst, the magnitude of $\\mathrm{H}(\\mathrm{z})$ is found for a $10-\\mathrm{kHz}$ signal when the sampling rate is 50 kHz by noting that\n\n$$\n\\begin{aligned}\n\\mathrm{e}^{\\mathrm{j}(2 \\pi \\times 10 \\mathrm{kHz} / 50 \\mathrm{kHz})} & =\\mathrm{e}^{\\mathrm{j} 0.4 \\pi}=\\cos (0.4 \\pi)+\\mathrm{j} \\sin (0.4 \\pi) \\\\\n& =0.309017+\\mathrm{j} 0.951057\n\\end{aligned}\n$$\n\nand therefore the gain of $\\mathrm{H}(\\mathrm{z})$ for a $10-\\mathrm{kHz}$ signal is given by\n\n$$\n\\left|\\mathrm{H}\\left(\\mathrm{e}^{\\mathrm{j} 0.4 \\pi}\\right)\\right|=\\frac{0.2}{|(0.309017-0.8)+\\mathrm{j} 0.951057|}=0.186864\n$$\n\nTo determine the magnitude of $\\mathrm{y}_{\\mathrm{sh}}(\\mathrm{t})$ at various frequencies, we need only multiply the filter's gain by the sinc response shown in Fig. 13.13. Specifically, the magnitude of the sample-and-hold response for a $10-\\mathrm{kHz}$ signal when using a $50-\\mathrm{kHz}$ clock is equal to\n\n$$\n\\left|\\mathrm{H}_{\\mathrm{sh}}(10 \\mathrm{kHz})\\right|=\\mathrm{T} \\frac{\\sin (\\pi 10 / 50)}{(\\pi 10 / 50)}=0.9355 \\mathrm{~T}\n$$\n\nand therefore the magnitude of $\\mathrm{y}_{\\mathrm{sh}}(\\mathrm{t})$ at 10 kHz is $0.18686 \\times 0.9355=175 \\mathrm{mV}_{\\mathrm{rms}}$ (note that the T term cancels with a similar T term due to the creation of a discrete-time signal—see (13.13) in Section 13.2). Similarly, the magnitude of $\\mathrm{H}_{\\mathrm{sh}}(\\mathrm{f})$ at 40 kHz and 60 kHz is 0.2399 and 0.1559, respectively, resulting in the magnitude of $\\mathrm{y}_{\\mathrm{sh}}(\\mathrm{t})$ at 40 kHz and 60 kHz to be 43.7 and $29.1 \\mathrm{mV}_{\\mathrm{rms}}$, respectively."
},
{
    "text": "In this section, we examine the frequency response that arises when a discrete-time signal is converted back to an analog signal using a sample-and-hold circuit. It is important to note that here we plot the frequency response for all frequencies (rather than just up to $f_{s} / 2$), as the output signal is a continuous-time signal, not a discrete-time one.\n\nA sample-and-hold signal, $\\mathrm{x}_{\\mathrm{sh}}(\\mathrm{t})$, is related to its sampled signal through the following mathematical relationship:\n\n$$\n\\begin{equation*}\n\\mathrm{x}_{\\mathrm{sh}}(\\mathrm{t})=\\sum_{n=-\\infty}^{\\infty} \\mathrm{x}_{\\mathrm{c}}(\\mathrm{nT})[\\vartheta(\\mathrm{t}-\\mathrm{nT})-\\vartheta(\\mathrm{t}-\\mathrm{nT}-\\mathrm{T})] \\tag{13.39}\n\\end{equation*}\n$$\n\nNote that $\\mathrm{x}_{\\mathrm{sh}}(\\mathrm{t})$ is well-defined for all time, allowing the Laplace transform to be determined as:\n\n$$\n\\begin{align*}\nX_{s h}(s) & =\\frac{1-e^{-s T}}{s} \\sum_{n=-\\infty}^{\\infty} x_{c}(n T) e^{-s n T}  \\tag{13.40}\\\\\n& =\\frac{1-e^{s T}}{s} X_{s}(s)\n\\end{align*}\n$$\n\nThis result indicates that the hold transfer function, $\\mathrm{H}_{\\mathrm{sh}}(\\mathrm{s})$, is:\n\n$$\n\\begin{equation*}\n\\mathrm{H}_{\\mathrm{sh}}(\\mathrm{~s})=\\frac{1-\\mathrm{e}^{-\\mathrm{sT}}}{\\mathrm{~s}} \\tag{13.41}\n\\end{equation*}\n$$\n\nIt should be noted that this transfer function is typically referred to as the sample-and-hold response, even though it only accounts for the hold part.\n\nThe spectrum for $H_{s h}(s)$ is obtained by substituting $s=j \\omega$ into (13.41), resulting in:\n\n$$\n\\begin{equation*}\nH_{s h}(j \\omega)=\\frac{1-e^{-j \\omega T}}{j \\omega}=T \\times e^{-j \\omega T / 2} \\times \\frac{\\sin (\\omega T / 2)}{(\\omega T / 2)} \\tag{13.42}\n\\end{equation*}\n$$\n\nimage_name:Fig. 13.13 Sample-and-hold response\ndescription:The graph labeled \"Fig. 13.13 Sample-and-hold response\" illustrates the frequency response function, specifically showing the magnitude of the sample-and-hold response, also known as the sinc response.\n\n1. **Type of Graph and Function:**\n- This is a frequency response graph depicting the magnitude of the sample-and-hold function, often termed the sinc function.\n\n2. **Axes Labels and Units:**\n- The x-axis represents frequency \\( f \\), marked in multiples of the sampling frequency \\( f_s \\), such as \\(-3f_s, -2f_s, -f_s, 0, f_s, 2f_s, 3f_s\\).\n- The y-axis represents the magnitude of the response \\(|H_{sh}(j\\omega)|\\).\n\n3. **Overall Behavior and Trends:**\n- The graph features a central peak at \\( f = 0 \\), indicating the maximum magnitude of the response.\n- As the frequency deviates from zero, the magnitude decreases, exhibiting a characteristic sinc function shape with diminishing oscillations.\n- The response shows periodic nulls at multiples of the sampling frequency \\( \\pm f_s, \\pm 2f_s, \\pm 3f_s \\), where the magnitude drops to zero.\n\n4. **Key Features and Technical Details:**\n- The central peak at \\( f = 0 \\) represents the maximum value of the sinc function.\n- The graph displays symmetrical behavior around \\( f = 0 \\), with decreasing amplitude oscillations as frequency increases.\n- The zero crossings at \\( \\pm f_s, \\pm 2f_s, \\pm 3f_s \\) are significant points where the response nulls out.\n\n5. **Annotations and Specific Data Points:**\n- The graph is marked with specific frequency points \\( -3f_s, -2f_s, -f_s, 0, f_s, 2f_s, 3f_s \\) on the x-axis, highlighting the periodic nature of the sinc response.\n- No additional annotations or numerical values are provided beyond these labeled points.\n\nFig. 13.13 Sample-and-hold response (also known as the sinc response).\nThe magnitude of this response is given by\n\n$$\n\\left|\\mathrm{H}_{\\mathrm{sh}}(\\mathrm{j} \\omega)\\right|=\\mathrm{T} \\frac{|\\sin (\\omega \\mathrm{~T} / 2)|}{|\\omega \\mathrm{T} / 2|}\n$$\n\nor\n\n$$\n\\begin{equation*}\n\\left|\\mathrm{H}_{\\mathrm{sh}}(\\mathrm{f})\\right|=\\mathrm{T} \\frac{\\left|\\sin \\left(\\pi \\mathrm{f} / \\mathrm{f}_{\\mathrm{s}}\\right)\\right|}{\\left|(\\pi \\mathrm{f}) / \\mathrm{f}_{\\mathrm{s}}\\right|} \\tag{13.43}\n\\end{equation*}\n$$\n\nand is often referred to as the $(\\sin \\mathbf{x}) / \\mathrm{x}$ or sinc response. This magnitude response is depicted in Fig. 13.13.\nMultiplying this sinc response by $\\mathrm{X}_{\\mathrm{s}}(\\mathrm{f})$ in Fig. 13.2 confirms the spectral relationship for $\\mathrm{X}_{\\text {sh }}(\\mathrm{f})$. It should be noted that this frequency shaping of a sample and hold occurs exclusively for a continuous-time signal. Specifically, although the sample and hold before the A/D converter in Fig. 13.1(b) would result in $\\mathrm{x}_{\\mathrm{sh}}(\\mathrm{t})$ having smaller images at higher frequencies (due to the sinc response), the images of $x(n)$ are all of the same height (i.e., they are not multiplied by the sinc response) since it is a discrete-time signal. This is because, when converted to a discrete-time signal, the smaller images located at and above $f_{s}$ are aliased in a manner that precisely reconstructs the original spectrum, provided it was sampled above the Nyquist rate. In other words, a sample and hold before an A/D converter simply ensures a constant input value during one conversion and does not assist in any anti-aliasing requirement.\n\n#### EXAMPLE 13.8\n\nConsider the discrete-time signal processing system depicted in Fig. 13.1(b), where a sample (and clock rate) of 50 kHz is used, and the digital filter has the response\n\n$$\nH(z)=\\frac{0.2}{z-0.8}\n$$\n\nFor a $10-\\mathrm{kHz}$ input sinusoidal signal of 1 V rms, determine the magnitude of the output signal, $\\mathrm{y}_{\\mathrm{sn}}(\\mathrm{t})$, at 10 kHz, and at the images 40 kHz and 60 kHz. Assume the quantization effects of the $\\mathrm{A} / \\mathrm{D}$ and $\\mathrm{D} / \\mathrm{A}$ converters are negligible. Also assume the converters complement each other such that a 1-V dc signal into the $\\mathrm{A} / \\mathrm{D}$ converter results in a $1-\\mathrm{V}$ dc signal from the $\\mathrm{D} / \\mathrm{A}$ converter if directly connected.\n\n#### Solution\n\nFirst, determine the magnitude of $\\mathrm{H}(\\mathrm{z})$ for a $10-\\mathrm{kHz}$ signal with a sampling rate of 50 kHz by noting that\n\n$$\n\\begin{aligned}\n\\mathrm{e}^{\\mathrm{j}(2 \\pi \\times 10 \\mathrm{kHz} / 50 \\mathrm{kHz})} & =\\mathrm{e}^{\\mathrm{j} 0.4 \\pi}=\\cos (0.4 \\pi)+\\mathrm{j} \\sin (0.4 \\pi) \\\\\n& =0.309017+\\mathrm{j} 0.951057\n\\end{aligned}\n$$\n\nThus, the gain of $\\mathrm{H}(\\mathrm{z})$ for a $10-\\mathrm{kHz}$ signal is\n\n$$\n\\left|\\mathrm{H}\\left(\\mathrm{e}^{\\mathrm{j} 0.4 \\pi}\\right)\\right|=\\frac{0.2}{|(0.309017-0.8)+\\mathrm{j} 0.951057|}=0.186864\n$$\n\nTo find the magnitude of $\\mathrm{y}_{\\mathrm{sh}}(\\mathrm{t})$ at various frequencies, multiply the filter's gain by the sinc response shown in Fig. 13.13. Specifically, the magnitude of the sample-and-hold response for a $10-\\mathrm{kHz}$ signal with a $50-\\mathrm{kHz}$ clock is\n\n$$\n\\left|\\mathrm{H}_{\\mathrm{sh}}(10 \\mathrm{kHz})\\right|=\\mathrm{T} \\frac{\\sin (\\pi 10 / 50)}{(\\pi 10 / 50)}=0.9355 \\mathrm{~T}\n$$\n\nThus, the magnitude of $\\mathrm{y}_{\\mathrm{sh}}(\\mathrm{t})$ at 10 kHz is $0.18686 \\times 0.9355=175 \\mathrm{mV}_{\\mathrm{rms}}$ (note that the T term cancels with a similar T term due to the creation of a discrete-time signal—see (13.13) in Section 13.2). Similarly, the magnitude of $\\mathrm{H}_{\\mathrm{sh}}(\\mathrm{f})$ at 40 kHz and 60 kHz is 0.2399 and 0.1559, respectively, resulting in the magnitude of $\\mathrm{y}_{\\mathrm{sh}}(\\mathrm{t})$ at 40 kHz and 60 kHz to be 43.7 and $29.1 \\mathrm{mV}_{\\mathrm{rms}}$, respectively."
},
{
    "text": "In this section, we examine the frequency response that arises when a discrete-time signal is converted back to an analog signal using a sample-and-hold circuit. Note that here we plot the frequency response for all frequencies (rather than just up to $f_{s} / 2$) because the output signal is a continuous-time signal, not a discrete-time one.\n\nA sample-and-hold signal, $\\mathrm{x}_{\\mathrm{sh}}(\\mathrm{t})$, is related to its sampled signal through the mathematical expression\n\n$$\n\\begin{equation*}\n\\mathrm{x}_{\\mathrm{sh}}(\\mathrm{t})=\\sum_{n=-\\infty}^{\\infty} \\mathrm{x}_{\\mathrm{c}}(\\mathrm{nT})[\\vartheta(\\mathrm{t}-\\mathrm{nT})-\\vartheta(\\mathrm{t}-\\mathrm{nT}-\\mathrm{T})] \\tag{13.39}\n\\end{equation*}\n$$\n\nNote that $\\mathrm{x}_{\\mathrm{sh}}(\\mathrm{t})$ is well-defined for all time, allowing the Laplace transform to be determined as\n\n$$\n\\begin{align*}\nX_{s h}(s) & =\\frac{1-e^{-s T}}{s} \\sum_{n=-\\infty}^{\\infty} x_{c}(n T) e^{-s n T}  \\tag{13.40}\\\\\n& =\\frac{1-e^{s T}}{s} X_{s}(s)\n\\end{align*}\n$$\n\nThis result indicates that the hold transfer function, $\\mathrm{H}_{\\mathrm{sh}}(\\mathrm{s})$, is\n\n$$\n\\begin{equation*}\n\\mathrm{H}_{\\mathrm{sh}}(\\mathrm{~s})=\\frac{1-\\mathrm{e}^{-\\mathrm{sT}}}{\\mathrm{~s}} \\tag{13.41}\n\\end{equation*}\n$$\n\nIt should be noted that this transfer function is typically referred to as the sample-and-hold response, even though it only accounts for the hold part.\n\nThe spectrum for $H_{s h}(s)$ is obtained by substituting $s=j \\omega$ into (13.41), yielding\n\n$$\n\\begin{equation*}\nH_{s h}(j \\omega)=\\frac{1-e^{-j \\omega T}}{j \\omega}=T \\times e^{-j \\omega T / 2} \\times \\frac{\\sin (\\omega T / 2)}{(\\omega T / 2)} \\tag{13.42}\n\\end{equation*}\n$$\n\nimage_name:Fig. 13.13 Sample-and-hold response\ndescription:The graph labeled \"Fig. 13.13 Sample-and-hold response\" illustrates a frequency response function, specifically showing the magnitude of the sample-and-hold response, also known as the sinc response.\n\n1. **Type of Graph and Function:**\n- This is a frequency response graph depicting the magnitude of the sample-and-hold function, commonly referred to as the sinc function.\n\n2. **Axes Labels and Units:**\n- The x-axis represents frequency \\( f \\), marked in multiples of the sampling frequency \\( f_s \\), such as \\(-3f_s, -2f_s, -f_s, 0, f_s, 2f_s, 3f_s\\).\n- The y-axis represents the magnitude of the response \\(|H_{sh}(j\\omega)|\\).\n\n3. **Overall Behavior and Trends:**\n- The graph features a central peak at \\( f = 0 \\), indicating the maximum magnitude of the response.\n- As the frequency deviates from zero, the magnitude decreases, displaying a characteristic sinc function shape with diminishing oscillations.\n- The response shows periodic nulls at multiples of the sampling frequency \\( \\pm f_s, \\pm 2f_s, \\pm 3f_s \\), where the magnitude drops to zero.\n\n4. **Key Features and Technical Details:**\n- The central peak at \\( f = 0 \\) represents the maximum value of the sinc function.\n- The graph exhibits symmetrical behavior around \\( f = 0 \\), with decreasing amplitude oscillations as frequency increases.\n- The zero crossings at \\( \\pm f_s, \\pm 2f_s, \\pm 3f_s \\) are significant points where the response nulls out.\n\n5. **Annotations and Specific Data Points:**\n- The graph is marked with specific frequency points \\( -3f_s, -2f_s, -f_s, 0, f_s, 2f_s, 3f_s \\) on the x-axis, highlighting the periodic nature of the sinc response.\n- No additional annotations or numerical values are provided beyond these labeled points.\n\nFig. 13.13 Sample-and-hold response (also known as the sinc response).\nThe magnitude of this response is given by\n\n$$\n\\left|\\mathrm{H}_{\\mathrm{sh}}(\\mathrm{j} \\omega)\\right|=\\mathrm{T} \\frac{|\\sin (\\omega \\mathrm{~T} / 2)|}{|\\omega \\mathrm{T} / 2|}\n$$\n\nor\n\n$$\n\\begin{equation*}\n\\left|\\mathrm{H}_{\\mathrm{sh}}(\\mathrm{f})\\right|=\\mathrm{T} \\frac{\\left|\\sin \\left(\\pi \\mathrm{f} / \\mathrm{f}_{\\mathrm{s}}\\right)\\right|}{\\left|(\\pi \\mathrm{f}) / \\mathrm{f}_{\\mathrm{s}}\\right|} \\tag{13.43}\n\\end{equation*}\n$$\n\nand is often referred to as the $(\\sin \\mathbf{x}) / \\mathrm{x}$ or sinc response. This magnitude response is depicted in Fig. 13.13.\nMultiplying this sinc response by $\\mathrm{X}_{\\mathrm{s}}(\\mathrm{f})$ in Fig. 13.2 confirms the spectral relationship for $\\mathrm{X}_{\\text {sh }}(\\mathrm{f})$. It should be noted that this frequency shaping of a sample and hold occurs only for a continuous-time signal. Specifically, although the sample and hold before the A/D converter in Fig. 13.1(b) would result in $\\mathrm{x}_{\\mathrm{sh}}(\\mathrm{t})$ having smaller images at higher frequencies (due to the sinc response), the images of $x(n)$ are all of the same height (i.e., they are not multiplied by the sinc response) since it is a discrete-time signal. This is because, when converted to a discrete-time signal, the smaller images located at and above $f_{s}$ are aliased in a manner that precisely reconstructs the original spectrum, provided it was sampled above the Nyquist rate. In other words, a sample and hold before an A/D converter simply ensures a constant input value during one conversion and does not assist with any anti-aliasing requirements.\n\n#### EXAMPLE 13.8\n\nConsider the discrete-time signal processing system depicted in Fig. 13.1(b), where a sample (and clock rate) of 50 kHz is used, and the digital filter has the response\n\n$$\nH(z)=\\frac{0.2}{z-0.8}\n$$\n\nFor a $10-\\mathrm{kHz}$ input sinusoidal signal of 1 V rms, determine the magnitude of the output signal, $\\mathrm{y}_{\\mathrm{sn}}(\\mathrm{t})$, at 10 kHz, and at the images 40 kHz and 60 kHz. Assume the quantization effects of the $\\mathrm{A} / \\mathrm{D}$ and $\\mathrm{D} / \\mathrm{A}$ converters are negligible. Also assume the converters complement each other such that a 1-V dc signal into the $\\mathrm{A} / \\mathrm{D}$ converter results in a $1-\\mathrm{V}$ dc signal from the $\\mathrm{D} / \\mathrm{A}$ converter if directly connected.\n\n#### Solution\n\nFirst, the magnitude of $\\mathrm{H}(\\mathrm{z})$ for a $10-\\mathrm{kHz}$ signal with a 50 kHz sampling rate is found by noting that\n\n$$\n\\begin{aligned}\n\\mathrm{e}^{\\mathrm{j}(2 \\pi \\times 10 \\mathrm{kHz} / 50 \\mathrm{kHz})} & =\\mathrm{e}^{\\mathrm{j} 0.4 \\pi}=\\cos (0.4 \\pi)+\\mathrm{j} \\sin (0.4 \\pi) \\\\\n& =0.309017+\\mathrm{j} 0.951057\n\\end{aligned}\n$$\n\nThus, the gain of $\\mathrm{H}(\\mathrm{z})$ for a $10-\\mathrm{kHz}$ signal is\n\n$$\n\\left|\\mathrm{H}\\left(\\mathrm{e}^{\\mathrm{j} 0.4 \\pi}\\right)\\right|=\\frac{0.2}{|(0.309017-0.8)+\\mathrm{j} 0.951057|}=0.186864\n$$\n\nTo find the magnitude of $\\mathrm{y}_{\\mathrm{sh}}(\\mathrm{t})$ at various frequencies, we need only multiply the filter's gain by the sinc response shown in Fig. 13.13. Specifically, the magnitude of the sample-and-hold response for a $10-\\mathrm{kHz}$ signal with a $50-\\mathrm{kHz}$ clock is\n\n$$\n\\left|\\mathrm{H}_{\\mathrm{sh}}(10 \\mathrm{kHz})\\right|=\\mathrm{T} \\frac{\\sin (\\pi 10 / 50)}{(\\pi 10 / 50)}=0.9355 \\mathrm{~T}\n$$\n\nThus, the magnitude of $\\mathrm{y}_{\\mathrm{sh}}(\\mathrm{t})$ at 10 kHz is $0.18686 \\times 0.9355=175 \\mathrm{mV}_{\\mathrm{rms}}$ (note that the T term cancels with a similar T term due to the creation of a discrete-time signal—see (13.13) in Section 13.2). Similarly, the magnitude of $\\mathrm{H}_{\\mathrm{sh}}(\\mathrm{f})$ at 40 kHz and 60 kHz is 0.2399 and 0.1559, respectively, resulting in the magnitude of $\\mathrm{y}_{\\mathrm{sh}}(\\mathrm{t})$ at 40 kHz and 60 kHz to be 43.7 and $29.1 \\mathrm{mV}_{\\mathrm{rms}}$, respectively."
},
{
    "text": "In this section, we examine the frequency response that arises when a discrete-time signal is converted back into an analog signal using a sample-and-hold circuit. It is important to note that here we plot the frequency response for all frequencies (rather than just up to $f_{s} / 2$) because the output signal is a continuous-time signal, not a discrete-time one.\n\nA sample-and-hold signal, $\\mathrm{x}_{\\mathrm{sh}}(\\mathrm{t})$, is related to its sampled signal through the following mathematical relationship:\n\n$$\n\\begin{equation*}\n\\mathrm{x}_{\\mathrm{sh}}(\\mathrm{t})=\\sum_{n=-\\infty}^{\\infty} \\mathrm{x}_{\\mathrm{c}}(\\mathrm{nT})[\\vartheta(\\mathrm{t}-\\mathrm{nT})-\\vartheta(\\mathrm{t}-\\mathrm{nT}-\\mathrm{T})] \\tag{13.39}\n\\end{equation*}\n$$\n\nNote that $\\mathrm{x}_{\\mathrm{sh}}(\\mathrm{t})$ is well-defined for all time, allowing the Laplace transform to be determined as:\n\n$$\n\\begin{align*}\nX_{s h}(s) & =\\frac{1-e^{-s T}}{s} \\sum_{n=-\\infty}^{\\infty} x_{c}(n T) e^{-s n T}  \\tag{13.40}\\\\\n& =\\frac{1-e^{s T}}{s} X_{s}(s)\n\\end{align*}\n$$\n\nThis result indicates that the hold transfer function, $\\mathrm{H}_{\\mathrm{sh}}(\\mathrm{s})$, is:\n\n$$\n\\begin{equation*}\n\\mathrm{H}_{\\mathrm{sh}}(\\mathrm{~s})=\\frac{1-\\mathrm{e}^{-\\mathrm{sT}}}{\\mathrm{~s}} \\tag{13.41}\n\\end{equation*}\n$$\n\nIt should be noted that this transfer function is typically referred to as the sample-and-hold response, even though it only accounts for the hold component.\n\nThe spectrum for $H_{s h}(s)$ is obtained by substituting $s=j \\omega$ into (13.41), resulting in:\n\n$$\n\\begin{equation*}\nH_{s h}(j \\omega)=\\frac{1-e^{-j \\omega T}}{j \\omega}=T \\times e^{-j \\omega T / 2} \\times \\frac{\\sin (\\omega T / 2)}{(\\omega T / 2)} \\tag{13.42}\n\\end{equation*}\n$$\n\nimage_name:Fig. 13.13 Sample-and-hold response\ndescription:The graph labeled \"Fig. 13.13 Sample-and-hold response\" illustrates a frequency response function, specifically showing the magnitude of the sample-and-hold response, also known as the sinc response.\n\n1. **Type of Graph and Function:**\n- This is a frequency response graph depicting the magnitude of the sample-and-hold function, often termed the sinc function.\n\n2. **Axes Labels and Units:**\n- The x-axis represents frequency \\( f \\), marked in multiples of the sampling frequency \\( f_s \\), such as \\(-3f_s, -2f_s, -f_s, 0, f_s, 2f_s, 3f_s\\).\n- The y-axis represents the magnitude of the response \\(|H_{sh}(j\\omega)|\\).\n\n3. **Overall Behavior and Trends:**\n- The graph features a central peak at \\( f = 0 \\), indicating the maximum magnitude of the response.\n- As the frequency deviates from zero, the magnitude decreases, exhibiting a characteristic sinc function shape with diminishing oscillations.\n- The response shows periodic nulls at multiples of the sampling frequency \\( \\pm f_s, \\pm 2f_s, \\pm 3f_s \\), where the magnitude reaches zero.\n\n4. **Key Features and Technical Details:**\n- The central peak at \\( f = 0 \\) represents the maximum value of the sinc function.\n- The graph exhibits symmetrical behavior around \\( f = 0 \\), with decreasing amplitude oscillations as frequency increases.\n- The zero crossings at \\( \\pm f_s, \\pm 2f_s, \\pm 3f_s \\) are significant points where the response nulls out.\n\n5. **Annotations and Specific Data Points:**\n- The graph is marked with specific frequency points \\( -3f_s, -2f_s, -f_s, 0, f_s, 2f_s, 3f_s \\) on the x-axis, highlighting the periodic nature of the sinc response.\n- No additional annotations or numerical values are provided beyond these labeled points.\n\nFig. 13.13 Sample-and-hold response (also called the sinc response).\nThe magnitude of this response is given by\n\n$$\n\\left|\\mathrm{H}_{\\mathrm{sh}}(\\mathrm{j} \\omega)\\right|=\\mathrm{T} \\frac{|\\sin (\\omega \\mathrm{~T} / 2)|}{|\\omega \\mathrm{T} / 2|}\n$$\n\nor\n\n$$\n\\begin{equation*}\n\\left|\\mathrm{H}_{\\mathrm{sh}}(\\mathrm{f})\\right|=\\mathrm{T} \\frac{\\left|\\sin \\left(\\pi \\mathrm{f} / \\mathrm{f}_{\\mathrm{s}}\\right)\\right|}{\\left|(\\pi \\mathrm{f}) / \\mathrm{f}_{\\mathrm{s}}\\right|} \\tag{13.43}\n\\end{equation*}\n$$\n\nand is often referred to as the $(\\sin \\mathbf{x}) / \\mathrm{x}$ or sinc response. This magnitude response is depicted in Fig. 13.13.\nMultiplying this sinc response by $\\mathrm{X}_{\\mathrm{s}}(\\mathrm{f})$ in Fig. 13.2 confirms the spectral relationship for $\\mathrm{X}_{\\text {sh }}(\\mathrm{f})$. It should be noted that this frequency shaping due to a sample and hold occurs only for a continuous-time signal. Specifically, although the sample and hold before the A/D converter in Fig. 13.1(b) would result in $\\mathrm{x}_{\\mathrm{sh}}(\\mathrm{t})$ having smaller images at higher frequencies (due to the sinc response), the images of $x(n)$ are all of the same height (i.e., they are not multiplied by the sinc response) since it is a discrete-time signal. This is because, when converted to a discrete-time signal, the smaller images located at and above $f_{s}$ are aliased in a manner that precisely reconstructs the original spectrum, provided it was sampled above the Nyquist rate. In other words, a sample and hold before an A/D converter simply ensures a constant input value during one conversion and does not assist in any anti-aliasing requirement.\n\n#### EXAMPLE 13.8\n\nConsider the discrete-time signal processing system shown in Fig. 13.1(b), where a sample (and clock rate) of 50 kHz is used, and the digital filter has the response\n\n$$\nH(z)=\\frac{0.2}{z-0.8}\n$$\n\nFor a $10-\\mathrm{kHz}$ input sinusoidal signal of 1 V rms, find the magnitude of the output signal, $\\mathrm{y}_{\\mathrm{sn}}(\\mathrm{t})$, at 10 kHz, and at the images 40 kHz and 60 kHz. Assume the quantization effects of the $\\mathrm{A} / \\mathrm{D}$ and $\\mathrm{D} / \\mathrm{A}$ converters are negligible. Also assume the converters complement each other such that a 1-V dc signal into the $\\mathrm{A} / \\mathrm{D}$ converter results in a $1-\\mathrm{V}$ dc signal from the $\\mathrm{D} / \\mathrm{A}$ converter if directly connected.\n\n#### Solution\n\nFirst, the magnitude of $\\mathrm{H}(\\mathrm{z})$ for a $10-\\mathrm{kHz}$ signal with a sampling rate of 50 kHz is found by noting that\n\n$$\n\\begin{aligned}\n\\mathrm{e}^{\\mathrm{j}(2 \\pi \\times 10 \\mathrm{kHz} / 50 \\mathrm{kHz})} & =\\mathrm{e}^{\\mathrm{j} 0.4 \\pi}=\\cos (0.4 \\pi)+\\mathrm{j} \\sin (0.4 \\pi) \\\\\n& =0.309017+\\mathrm{j} 0.951057\n\\end{aligned}\n$$\n\nThus, the gain of $\\mathrm{H}(\\mathrm{z})$ for a $10-\\mathrm{kHz}$ signal is\n\n$$\n\\left|\\mathrm{H}\\left(\\mathrm{e}^{\\mathrm{j} 0.4 \\pi}\\right)\\right|=\\frac{0.2}{|(0.309017-0.8)+\\mathrm{j} 0.951057|}=0.186864\n$$\n\nTo determine the magnitude of $\\mathrm{y}_{\\mathrm{sh}}(\\mathrm{t})$ at various frequencies, we need only multiply the filter's gain by the sinc response shown in Fig. 13.13. Specifically, the magnitude of the sample-and-hold response for a $10-\\mathrm{kHz}$ signal with a $50-\\mathrm{kHz}$ clock is\n\n$$\n\\left|\\mathrm{H}_{\\mathrm{sh}}(10 \\mathrm{kHz})\\right|=\\mathrm{T} \\frac{\\sin (\\pi 10 / 50)}{(\\pi 10 / 50)}=0.9355 \\mathrm{~T}\n$$\n\nThus, the magnitude of $\\mathrm{y}_{\\mathrm{sh}}(\\mathrm{t})$ at 10 kHz is $0.18686 \\times 0.9355=175 \\mathrm{mV}_{\\mathrm{rms}}$ (note that the T term cancels with a similar T term due to the creation of a discrete-time signal—see (13.13) in Section 13.2). Similarly, the magnitude of $\\mathrm{H}_{\\mathrm{sh}}(\\mathrm{f})$ at 40 kHz and 60 kHz is 0.2399 and 0.1559, respectively, resulting in the magnitude of $\\mathrm{y}_{\\mathrm{sh}}(\\mathrm{t})$ at 40 kHz and 60 kHz to be 43.7 and $29.1 \\mathrm{mV}_{\\mathrm{rms}}$, respectively."
},
{
    "text": "In this section, we examine the frequency response that arises when a discrete-time signal is converted back into an analog signal using a sample-and-hold circuit. Note that here, we plot the frequency response for all frequencies (rather than just up to $f_{s} / 2$) because the output signal is a continuous-time signal, not a discrete-time one.\n\nA sample-and-hold signal, $\\mathrm{x}_{\\mathrm{sh}}(\\mathrm{t})$, is related to its sampled signal by the following mathematical relationship:\n\n$$\n\\begin{equation*}\n\\mathrm{x}_{\\mathrm{sh}}(\\mathrm{t})=\\sum_{n=-\\infty}^{\\infty} \\mathrm{x}_{\\mathrm{c}}(\\mathrm{nT})[\\vartheta(\\mathrm{t}-\\mathrm{nT})-\\vartheta(\\mathrm{t}-\\mathrm{nT}-\\mathrm{T})] \\tag{13.39}\n\\end{equation*}\n$$\n\nNote that $\\mathrm{x}_{\\mathrm{sh}}(\\mathrm{t})$ is well-defined for all time, allowing the Laplace transform to be determined as:\n\n$$\n\\begin{align*}\nX_{s h}(s) & =\\frac{1-e^{-s T}}{s} \\sum_{n=-\\infty}^{\\infty} x_{c}(n T) e^{-s n T}  \\tag{13.40}\\\\\n& =\\frac{1-e^{s T}}{s} X_{s}(s)\n\\end{align*}\n$$\n\nThis result indicates that the hold transfer function, $\\mathrm{H}_{\\mathrm{sh}}(\\mathrm{s})$, is:\n\n$$\n\\begin{equation*}\n\\mathrm{H}_{\\mathrm{sh}}(\\mathrm{~s})=\\frac{1-\\mathrm{e}^{-\\mathrm{sT}}}{\\mathrm{~s}} \\tag{13.41}\n\\end{equation*}\n$$\n\nIt should be noted that this transfer function is typically referred to as the sample-and-hold response, even though it only accounts for the hold part.\n\nThe spectrum for $H_{s h}(s)$ is obtained by substituting $s=j \\omega$ into (13.41), resulting in:\n\n$$\n\\begin{equation*}\nH_{s h}(j \\omega)=\\frac{1-e^{-j \\omega T}}{j \\omega}=T \\times e^{-j \\omega T / 2} \\times \\frac{\\sin (\\omega T / 2)}{(\\omega T / 2)} \\tag{13.42}\n\\end{equation*}\n$$\n\nimage_name:Fig. 13.13 Sample-and-hold response\ndescription:The graph labeled \"Fig. 13.13 Sample-and-hold response\" illustrates the frequency response function, specifically showing the magnitude of the sample-and-hold response, also known as the sinc response.\n\n1. **Type of Graph and Function:**\n- This is a frequency response graph depicting the magnitude of the sample-and-hold function, often called the sinc function.\n\n2. **Axes Labels and Units:**\n- The x-axis represents frequency \\( f \\), marked in multiples of the sampling frequency \\( f_s \\), such as \\(-3f_s, -2f_s, -f_s, 0, f_s, 2f_s, 3f_s\\).\n- The y-axis represents the magnitude of the response \\(|H_{sh}(j\\omega)|\\).\n\n3. **Overall Behavior and Trends:**\n- The graph shows a central peak at \\( f = 0 \\), indicating the maximum magnitude of the response.\n- As the frequency deviates from zero, the magnitude decreases, displaying a characteristic sinc function shape with diminishing oscillations.\n- The response exhibits periodic nulls at multiples of the sampling frequency \\( \\pm f_s, \\pm 2f_s, \\pm 3f_s \\), where the magnitude reaches zero.\n\n4. **Key Features and Technical Details:**\n- The central peak at \\( f = 0 \\) represents the maximum value of the sinc function.\n- The graph exhibits symmetrical behavior around \\( f = 0 \\), with decreasing amplitude oscillations as frequency increases.\n- The zero crossings at \\( \\pm f_s, \\pm 2f_s, \\pm 3f_s \\) are significant points where the response nulls out.\n\n5. **Annotations and Specific Data Points:**\n- The graph is marked with specific frequency points \\( -3f_s, -2f_s, -f_s, 0, f_s, 2f_s, 3f_s \\) on the x-axis, highlighting the periodic nature of the sinc response.\n- No additional annotations or numerical values are provided beyond these labeled points.\n\nFig. 13.13 Sample-and-hold response (also known as the sinc response).\nThe magnitude of this response is given by:\n\n$$\n\\left|\\mathrm{H}_{\\mathrm{sh}}(\\mathrm{j} \\omega)\\right|=\\mathrm{T} \\frac{|\\sin (\\omega \\mathrm{~T} / 2)|}{|\\omega \\mathrm{T} / 2|}\n$$\n\nor\n\n$$\n\\begin{equation*}\n\\left|\\mathrm{H}_{\\mathrm{sh}}(\\mathrm{f})\\right|=\\mathrm{T} \\frac{\\left|\\sin \\left(\\pi \\mathrm{f} / \\mathrm{f}_{\\mathrm{s}}\\right)\\right|}{\\left|(\\pi \\mathrm{f}) / \\mathrm{f}_{\\mathrm{s}}\\right|} \\tag{13.43}\n\\end{equation*}\n$$\n\nThis magnitude response is often referred to as the $(\\sin \\mathbf{x}) / \\mathrm{x}$ or sinc response, as illustrated in Fig. 13.13.\nMultiplying this sinc response by $\\mathrm{X}_{\\mathrm{s}}(\\mathrm{f})$ in Fig. 13.2 confirms the spectral relationship for $\\mathrm{X}_{\\text {sh }}(\\mathrm{f})$. It should be noted that this frequency shaping of a sample and hold occurs only for a continuous-time signal. Specifically, although the sample and hold before the A/D converter in Fig. 13.1(b) would result in $\\mathrm{x}_{\\mathrm{sh}}(\\mathrm{t})$ having smaller images at higher frequencies (due to the sinc response), the images of $x(n)$ are all of the same height (i.e., they are not multiplied by the sinc response) since it is a discrete-time signal. This is because, when converted to a discrete-time signal, the smaller images located at and above $f_{s}$ are aliased in a manner that precisely reconstructs the original spectrum, provided it was sampled above the Nyquist rate. In other words, a sample and hold before an A/D converter simply allows the converter to have a constant input value during one conversion and does not aid in any anti-aliasing requirement.\n\n#### EXAMPLE 13.8\n\nConsider the discrete-time signal processing system shown in Fig. 13.1(b), where a sample (and clock rate) of 50 kHz is used, and the digital filter has the response:\n\n$$\nH(z)=\\frac{0.2}{z-0.8}\n$$\n\nFor a $10-\\mathrm{kHz}$ input sinusoidal signal of 1 V rms, find the magnitude of the output signal, $\\mathrm{y}_{\\mathrm{sn}}(\\mathrm{t})$, at 10 kHz, and at the images 40 kHz and 60 kHz. Assume the quantization effects of the $\\mathrm{A} / \\mathrm{D}$ and $\\mathrm{D} / \\mathrm{A}$ converters are negligible. Also assume the converters complement each other such that a 1-V dc signal into the $\\mathrm{A} / \\mathrm{D}$ converter results in a $1-\\mathrm{V}$ dc signal from the $\\mathrm{D} / \\mathrm{A}$ converter if the converters are directly connected.\n\n#### Solution\n\nFirst, the magnitude of $\\mathrm{H}(\\mathrm{z})$ is found for a $10-\\mathrm{kHz}$ signal when the sampling rate is 50 kHz by noting that:\n\n$$\n\\begin{aligned}\n\\mathrm{e}^{\\mathrm{j}(2 \\pi \\times 10 \\mathrm{kHz} / 50 \\mathrm{kHz})} & =\\mathrm{e}^{\\mathrm{j} 0.4 \\pi}=\\cos (0.4 \\pi)+\\mathrm{j} \\sin (0.4 \\pi) \\\\\n& =0.309017+\\mathrm{j} 0.951057\n\\end{aligned}\n$$\n\nThus, the gain of $\\mathrm{H}(\\mathrm{z})$ for a $10-\\mathrm{kHz}$ signal is:\n\n$$\n\\left|\\mathrm{H}\\left(\\mathrm{e}^{\\mathrm{j} 0.4 \\pi}\\right)\\right|=\\frac{0.2}{|(0.309017-0.8)+\\mathrm{j} 0.951057|}=0.186864\n$$\n\nTo determine the magnitude of $\\mathrm{y}_{\\mathrm{sh}}(\\mathrm{t})$ at various frequencies, we need only multiply the filter's gain by the sinc response shown in Fig. 13.13. Specifically, the magnitude of the sample-and-hold response for a $10-\\mathrm{kHz}$ signal when using a $50-\\mathrm{kHz}$ clock is:\n\n$$\n\\left|\\mathrm{H}_{\\mathrm{sh}}(10 \\mathrm{kHz})\\right|=\\mathrm{T} \\frac{\\sin (\\pi 10 / 50)}{(\\pi 10 / 50)}=0.9355 \\mathrm{~T}\n$$\n\nThus, the magnitude of $\\mathrm{y}_{\\mathrm{sh}}(\\mathrm{t})$ at 10 kHz is $0.18686 \\times 0.9355=175 \\mathrm{mV}_{\\mathrm{rms}}$ (note that the T term cancels with a similar T term due to the creation of a discrete-time signal—see (13.13) in Section 13.2). Similarly, the magnitude of $\\mathrm{H}_{\\mathrm{sh}}(\\mathrm{f})$ at 40 kHz and 60 kHz is 0.2399 and 0.1559, respectively, resulting in the magnitude of $\\mathrm{y}_{\\mathrm{sh}}(\\mathrm{t})$ at 40 kHz and 60 kHz to be 43.7 and $29.1 \\mathrm{mV}_{\\mathrm{rms}}$, respectively."
},
{
    "text": "In this segment, we examine the frequency response that arises when a discrete-time signal is converted back into an analog signal using a sample-and-hold circuit. It is important to note that here we plot the frequency response for all frequencies (unlike just up to $f_{s} / 2$) because the output signal is a continuous-time signal, not a discrete-time one.\n\nA sample-and-hold signal, $\\mathrm{x}_{\\mathrm{sh}}(\\mathrm{t})$, is connected to its sampled signal through the mathematical relation\n\n$$\n\\begin{equation*}\n\\mathrm{x}_{\\mathrm{sh}}(\\mathrm{t})=\\sum_{n=-\\infty}^{\\infty} \\mathrm{x}_{\\mathrm{c}}(\\mathrm{nT})[\\vartheta(\\mathrm{t}-\\mathrm{nT})-\\vartheta(\\mathrm{t}-\\mathrm{nT}-\\mathrm{T})] \\tag{13.39}\n\\end{equation*}\n$$\n\nNote that $\\mathrm{x}_{\\mathrm{sh}}(\\mathrm{t})$ is well-defined for all time, allowing the Laplace transform to be determined as\n\n$$\n\\begin{align*}\nX_{s h}(s) & =\\frac{1-e^{-s T}}{s} \\sum_{n=-\\infty}^{\\infty} x_{c}(n T) e^{-s n T}  \\tag{13.40}\\\\\n& =\\frac{1-e^{s T}}{s} X_{s}(s)\n\\end{align*}\n$$\n\nThis result indicates that the hold transfer function, $\\mathrm{H}_{\\mathrm{sh}}(\\mathrm{s})$, is\n\n$$\n\\begin{equation*}\n\\mathrm{H}_{\\mathrm{sh}}(\\mathrm{~s})=\\frac{1-\\mathrm{e}^{-\\mathrm{sT}}}{\\mathrm{~s}} \\tag{13.41}\n\\end{equation*}\n$$\n\nIt should be noted that this transfer function is typically referred to as the sample-and-hold response, even though it only accounts for the holding part.\n\nThe spectrum for $H_{s h}(s)$ is derived by substituting $s=j \\omega$ into (13.41), yielding\n\n$$\n\\begin{equation*}\nH_{s h}(j \\omega)=\\frac{1-e^{-j \\omega T}}{j \\omega}=T \\times e^{-j \\omega T / 2} \\times \\frac{\\sin (\\omega T / 2)}{(\\omega T / 2)} \\tag{13.42}\n\\end{equation*}\n$$\n\nimage_name:Fig. 13.13 Sample-and-hold response\ndescription:The graph labeled \"Fig. 13.13 Sample-and-hold response\" illustrates a frequency response function, specifically showing the magnitude of the sample-and-hold response, also known as the sinc response.\n\n1. **Type of Graph and Function:**\n- This is a frequency response graph depicting the magnitude of the sample-and-hold function, commonly known as the sinc function.\n\n2. **Axes Labels and Units:**\n- The x-axis represents frequency \\( f \\), marked in multiples of the sampling frequency \\( f_s \\), such as \\(-3f_s, -2f_s, -f_s, 0, f_s, 2f_s, 3f_s\\).\n- The y-axis shows the magnitude of the response \\(|H_{sh}(j\\omega)|\\).\n\n3. **Overall Behavior and Trends:**\n- The graph features a central peak at \\( f = 0 \\), indicating the maximum magnitude of the response.\n- As the frequency deviates from zero, the magnitude decreases, exhibiting a characteristic sinc function shape with diminishing oscillations.\n- The response displays periodic nulls at multiples of the sampling frequency \\( \\pm f_s, \\pm 2f_s, \\pm 3f_s \\), where the magnitude drops to zero.\n\n4. **Key Features and Technical Details:**\n- The central peak at \\( f = 0 \\) represents the maximum value of the sinc function.\n- The graph exhibits symmetrical behavior around \\( f = 0 \\), with decreasing amplitude oscillations as frequency increases.\n- The zero crossings at \\( \\pm f_s, \\pm 2f_s, \\pm 3f_s \\) are significant points where the response nulls out.\n\n5. **Annotations and Specific Data Points:**\n- The graph is marked with specific frequency points \\( -3f_s, -2f_s, -f_s, 0, f_s, 2f_s, 3f_s \\) on the x-axis, highlighting the periodic nature of the sinc response.\n- No additional annotations or numerical values are provided beyond these labeled points.\n\nFig. 13.13 Sample-and-hold response (also known as the sinc response).\nThe magnitude of this response is given by\n\n$$\n\\left|\\mathrm{H}_{\\mathrm{sh}}(\\mathrm{j} \\omega)\\right|=\\mathrm{T} \\frac{|\\sin (\\omega \\mathrm{~T} / 2)|}{|\\omega \\mathrm{T} / 2|}\n$$\n\nor\n\n$$\n\\begin{equation*}\n\\left|\\mathrm{H}_{\\mathrm{sh}}(\\mathrm{f})\\right|=\\mathrm{T} \\frac{\\left|\\sin \\left(\\pi \\mathrm{f} / \\mathrm{f}_{\\mathrm{s}}\\right)\\right|}{\\left|(\\pi \\mathrm{f}) / \\mathrm{f}_{\\mathrm{s}}\\right|} \\tag{13.43}\n\\end{equation*}\n$$\n\nand is often referred to as the $(\\sin \\mathbf{x}) / \\mathrm{x}$ or sinc response. This magnitude response is depicted in Fig. 13.13.\nMultiplying this sinc response by $\\mathrm{X}_{\\mathrm{s}}(\\mathrm{f})$ in Fig. 13.2 confirms the spectral relationship for $\\mathrm{X}_{\\text {sh }}(\\mathrm{f})$. It should be noted that this frequency shaping of a sample and hold occurs exclusively for a continuous-time signal. Specifically, although the sample and hold before the A/D converter in Fig. 13.1(b) would result in $\\mathrm{x}_{\\mathrm{sh}}(\\mathrm{t})$ having smaller images at higher frequencies (due to the sinc response), the images of $x(n)$ are all of the same height (i.e., they are not multiplied by the sinc response) since it is a discrete-time signal. This is because, when converted to a discrete-time signal, the smaller images located at and above $f_{s}$ are aliased in a manner that precisely reconstructs the original spectrum, provided it was sampled above the Nyquist rate. In other words, a sample and hold before an A/D converter merely ensures a constant input value during one conversion and does not contribute to any anti-aliasing requirement.\n\n#### EXAMPLE 13.8\n\nConsider the discrete-time signal processing system depicted in Fig. 13.1(b), where a sample (and clock rate) of 50 kHz is used, and the digital filter has the response\n\n$$\nH(z)=\\frac{0.2}{z-0.8}\n$$\n\nFor a $10-\\mathrm{kHz}$ input sinusoidal signal of 1 V rms, determine the magnitude of the output signal, $\\mathrm{y}_{\\mathrm{sn}}(\\mathrm{t})$, at 10 kHz, and at the images 40 kHz and 60 kHz. Assume the quantization effects of the $\\mathrm{A} / \\mathrm{D}$ and $\\mathrm{D} / \\mathrm{A}$ converters are negligible. Also assume the converters complement each other such that a 1-V dc signal into the $\\mathrm{A} / \\mathrm{D}$ converter results in a $1-\\mathrm{V}$ dc signal from the $\\mathrm{D} / \\mathrm{A}$ converter if the converters are directly connected.\n\n#### Solution\n\nFirst, the magnitude of $\\mathrm{H}(\\mathrm{z})$ for a $10-\\mathrm{kHz}$ signal with a sampling rate of 50 kHz is found by noting that\n\n$$\n\\begin{aligned}\n\\mathrm{e}^{\\mathrm{j}(2 \\pi \\times 10 \\mathrm{kHz} / 50 \\mathrm{kHz})} & =\\mathrm{e}^{\\mathrm{j} 0.4 \\pi}=\\cos (0.4 \\pi)+\\mathrm{j} \\sin (0.4 \\pi) \\\\\n& =0.309017+\\mathrm{j} 0.951057\n\\end{aligned}\n$$\n\nThus, the gain of $\\mathrm{H}(\\mathrm{z})$ for a $10-\\mathrm{kHz}$ signal is\n\n$$\n\\left|\\mathrm{H}\\left(\\mathrm{e}^{\\mathrm{j} 0.4 \\pi}\\right)\\right|=\\frac{0.2}{|(0.309017-0.8)+\\mathrm{j} 0.951057|}=0.186864\n$$\n\nTo find the magnitude of $\\mathrm{y}_{\\mathrm{sh}}(\\mathrm{t})$ at various frequencies, we need only multiply the filter's gain by the sinc response shown in Fig. 13.13. Specifically, the magnitude of the sample-and-hold response for a $10-\\mathrm{kHz}$ signal with a $50-\\mathrm{kHz}$ clock is\n\n$$\n\\left|\\mathrm{H}_{\\mathrm{sh}}(10 \\mathrm{kHz})\\right|=\\mathrm{T} \\frac{\\sin (\\pi 10 / 50)}{(\\pi 10 / 50)}=0.9355 \\mathrm{~T}\n$$\n\nThus, the magnitude of $\\mathrm{y}_{\\mathrm{sh}}(\\mathrm{t})$ at 10 kHz is $0.18686 \\times 0.9355=175 \\mathrm{mV}_{\\mathrm{rms}}$ (note that the T term cancels with a similar T term due to the creation of a discrete-time signal—see (13.13) in Section 13.2). Similarly, the magnitude of $\\mathrm{H}_{\\mathrm{sh}}(\\mathrm{f})$ at 40 kHz and 60 kHz is 0.2399 and 0.1559, respectively, resulting in the magnitude of $\\mathrm{y}_{\\mathrm{sh}}(\\mathrm{t})$ at 40 kHz and 60 kHz to be 43.7 and $29.1 \\mathrm{mV}_{\\mathrm{rms}}$, respectively."
},
{
    "text": "In this section, we examine the frequency response that arises when a discrete-time signal is converted back into an analog signal using a sample-and-hold circuit. It is important to note that here we plot the frequency response for all frequencies (rather than just up to \\( f_{s} / 2 \\)), as the output signal is a continuous-time signal, not a discrete-time one.\n\nA sample-and-hold signal, \\( \\mathrm{x}_{\\mathrm{sh}}(\\mathrm{t}) \\), is related to its sampled signal through the following mathematical relationship:\n\n$$\n\\begin{equation*}\n\\mathrm{x}_{\\mathrm{sh}}(\\mathrm{t})=\\sum_{n=-\\infty}^{\\infty} \\mathrm{x}_{\\mathrm{c}}(\\mathrm{nT})[\\vartheta(\\mathrm{t}-\\mathrm{nT})-\\vartheta(\\mathrm{t}-\\mathrm{nT}-\\mathrm{T})] \\tag{13.39}\n\\end{equation*}\n$$\n\nNote that \\( \\mathrm{x}_{\\mathrm{sh}}(\\mathrm{t}) \\) is well-defined for all time, allowing the Laplace transform to be determined as:\n\n$$\n\\begin{align*}\nX_{s h}(s) & =\\frac{1-e^{-s T}}{s} \\sum_{n=-\\infty}^{\\infty} x_{c}(n T) e^{-s n T}  \\tag{13.40}\\\\\n& =\\frac{1-e^{s T}}{s} X_{s}(s)\n\\end{align*}\n$$\n\nThis result indicates that the hold transfer function, \\( \\mathrm{H}_{\\mathrm{sh}}(\\mathrm{s}) \\), is:\n\n$$\n\\begin{equation*}\n\\mathrm{H}_{\\mathrm{sh}}(\\mathrm{~s})=\\frac{1-\\mathrm{e}^{-\\mathrm{sT}}}{\\mathrm{~s}} \\tag{13.41}\n\\end{equation*}\n$$\n\nIt should be noted that this transfer function is typically referred to as the sample-and-hold response, even though it only accounts for the holding part.\n\nThe spectrum for \\( H_{s h}(s) \\) is obtained by substituting \\( s=j \\omega \\) into (13.41), resulting in:\n\n$$\n\\begin{equation*}\nH_{s h}(j \\omega)=\\frac{1-e^{-j \\omega T}}{j \\omega}=T \\times e^{-j \\omega T / 2} \\times \\frac{\\sin (\\omega T / 2)}{(\\omega T / 2)} \\tag{13.42}\n\\end{equation*}\n$$\n\nimage_name:Fig. 13.13 Sample-and-hold response\ndescription:The graph labeled \"Fig. 13.13 Sample-and-hold response\" illustrates a frequency response function, specifically showing the magnitude of the sample-and-hold response, also known as the sinc response.\n\n1. **Type of Graph and Function:**\n- This is a frequency response graph depicting the magnitude of the sample-and-hold function, commonly referred to as the sinc function.\n\n2. **Axes Labels and Units:**\n- The x-axis represents frequency \\( f \\), marked in multiples of the sampling frequency \\( f_s \\), such as \\(-3f_s, -2f_s, -f_s, 0, f_s, 2f_s, 3f_s\\).\n- The y-axis represents the magnitude of the response \\(|H_{sh}(j\\omega)|\\).\n\n3. **Overall Behavior and Trends:**\n- The graph features a central peak at \\( f = 0 \\), indicating the maximum magnitude of the response.\n- As the frequency deviates from zero, the magnitude decreases, exhibiting a characteristic sinc function shape with diminishing oscillations.\n- The response shows periodic nulls at multiples of the sampling frequency \\( \\pm f_s, \\pm 2f_s, \\pm 3f_s \\), where the magnitude reaches zero.\n\n4. **Key Features and Technical Details:**\n- The central peak at \\( f = 0 \\) represents the maximum value of the sinc function.\n- The graph exhibits symmetrical behavior around \\( f = 0 \\), with decreasing amplitude oscillations as frequency increases.\n- The zero crossings at \\( \\pm f_s, \\pm 2f_s, \\pm 3f_s \\) are significant points where the response nulls out.\n\n5. **Annotations and Specific Data Points:**\n- The graph is marked with specific frequency points \\( -3f_s, -2f_s, -f_s, 0, f_s, 2f_s, 3f_s \\) on the x-axis, highlighting the periodic nature of the sinc response.\n- No additional annotations or numerical values are provided beyond these labeled points.\n\nFig. 13.13 Sample-and-hold response (also called the sinc response).\nThe magnitude of this response is given by\n\n$$\n\\left|\\mathrm{H}_{\\mathrm{sh}}(\\mathrm{j} \\omega)\\right|=\\mathrm{T} \\frac{|\\sin (\\omega \\mathrm{~T} / 2)|}{|\\omega \\mathrm{T} / 2|}\n$$\n\nor\n\n$$\n\\begin{equation*}\n\\left|\\mathrm{H}_{\\mathrm{sh}}(\\mathrm{f})\\right|=\\mathrm{T} \\frac{\\left|\\sin \\left(\\pi \\mathrm{f} / \\mathrm{f}_{\\mathrm{s}}\\right)\\right|}{\\left|(\\pi \\mathrm{f}) / \\mathrm{f}_{\\mathrm{s}}\\right|} \\tag{13.43}\n\\end{equation*}\n$$\n\nand is often referred to as the $(\\sin \\mathbf{x}) / \\mathrm{x}$ or sinc response. This magnitude response is depicted in Fig. 13.13.\nMultiplying this sinc response by \\( \\mathrm{X}_{\\mathrm{s}}(\\mathrm{f}) \\) in Fig. 13.2 confirms the spectral relationship for \\( \\mathrm{X}_{\\text {sh }}(\\mathrm{f}) \\). It should be noted that this frequency shaping of a sample and hold occurs only for a continuous-time signal. Specifically, although the sample and hold before the A/D converter shown in Fig. 13.1(b) would result in \\( \\mathrm{x}_{\\mathrm{sh}}(\\mathrm{t}) \\) having smaller images at higher frequencies (due to the sinc response), the images of \\( x(n) \\) are all of the same height (i.e., they are not multiplied by the sinc response) since it is a discrete-time signal. This is because, when converted to a discrete-time signal, the smaller images located at and above \\( f_{s} \\) are aliased in a manner that pre-\n\nKey Point: The frequency response of a sample-and-held signal is that of the original discrete-time sequence, repeated every \\( f_{s} \\), and then shaped by a sinc frequency response.\ncisely reconstructs the original spectrum, so long as it was sampled above the Nyquist rate. In other words, a sample and hold before an A/D converter simply allows the converter to have a constant input value during one conversion and does not aid in any anti-aliasing requirement.\n\n#### EXAMPLE 13.8\n\nConsider the discrete-time signal processing system shown in Fig. 13.1(b), where a sample (and clock rate) of 50 kHz is used and the digital filter has the response\n\n$$\nH(z)=\\frac{0.2}{z-0.8}\n$$\n\nFor a $10-\\mathrm{kHz}$ input sinusoidal signal of 1 V rms, find the magnitude of the output signal, \\( \\mathrm{y}_{\\mathrm{sn}}(\\mathrm{t}) \\), at 10 kHz, and at the images 40 kHz and 60 kHz. Assume the quantization effects of the \\( \\mathrm{A} / \\mathrm{D} \\) and \\( \\mathrm{D} / \\mathrm{A} \\) converters are negligible. Also assume the converters complement each other such that a 1-V dc signal into the \\( \\mathrm{A} / \\mathrm{D} \\) converter results in a 1-V dc signal from the \\( \\mathrm{D} / \\mathrm{A} \\) converter if the converters are directly connected.\n\n#### Solution\n\nFirst, the magnitude of \\( \\mathrm{H}(\\mathrm{z}) \\) is determined for a 10-kHz signal when the sampling rate is 50 kHz by noting that\n\n$$\n\\begin{aligned}\n\\mathrm{e}^{\\mathrm{j}(2 \\pi \\times 10 \\mathrm{kHz} / 50 \\mathrm{kHz})} & =\\mathrm{e}^{\\mathrm{j} 0.4 \\pi}=\\cos (0.4 \\pi)+\\mathrm{j} \\sin (0.4 \\pi) \\\\\n& =0.309017+\\mathrm{j} 0.951057\n\\end{aligned}\n$$\n\nand therefore the gain of \\( \\mathrm{H}(\\mathrm{z}) \\) for a 10-kHz signal is found to be\n\n$$\n\\left|\\mathrm{H}\\left(\\mathrm{e}^{\\mathrm{j} 0.4 \\pi}\\right)\\right|=\\frac{0.2}{|(0.309017-0.8)+\\mathrm{j} 0.951057|}=0.186864\n$$\n\nTo determine the magnitude of \\( \\mathrm{y}_{\\mathrm{sh}}(\\mathrm{t}) \\) at various frequencies, we need only multiply the filter's gain by the sinc response shown in Fig. 13.13. Specifically, the magnitude of the sample-and-hold response for a 10-kHz signal when using a 50-kHz clock is equal to\n\n$$\n\\left|\\mathrm{H}_{\\mathrm{sh}}(10 \\mathrm{kHz})\\right|=\\mathrm{T} \\frac{\\sin (\\pi 10 / 50)}{(\\pi 10 / 50)}=0.9355 \\mathrm{~T}\n$$\n\nand therefore the magnitude of \\( \\mathrm{y}_{\\mathrm{sh}}(\\mathrm{t}) \\) at 10 kHz is equal to \\( 0.18686 \\times 0.9355=175 \\mathrm{mV}_{\\mathrm{rms}} \\) (note that the T term cancels with a similar T term due to the creation of a discrete-time signal—see (13.13) in Section 13.2). Similarly, the magnitude of \\( \\mathrm{H}_{\\mathrm{sh}}(\\mathrm{f}) \\) at 40 kHz and 60 kHz is 0.2399 and 0.1559, respectively, resulting in the magnitude of \\( \\mathrm{y}_{\\mathrm{sh}}(\\mathrm{t}) \\) at 40 kHz and 60 kHz to be 43.7 and \\( 29.1 \\mathrm{mV}_{\\mathrm{rms}} \\), respectively."
},
{
    "text": "- Discrete-time signals can be processed either digitally, involving quantization in both time and amplitude, or using discrete-time analog circuits like switched-capacitor circuits, where the signal amplitude varies continuously. [p. 537]\n- The spectrum of a sampled signal consists of shifted replicas of the original continuous-time spectrum, ensuring no aliasing if the original waveform is bandlimited to half the sampling rate. The minimum sampling frequency to prevent aliasing, known as the Nyquist rate, equals twice the signal bandwidth. [p. 540]\n- The spectra of discrete-time signals match those of the corresponding sampled signals with the sample time normalized to 1 Hz, causing their spectra to repeat every $2 \\pi$. [p. 541]\n- To avoid aliasing during downsampling by a factor L, the original signal must be sampled at L times the Nyquist rate. [p. 543]\n- Upsampling by L leads to a frequency axis renormalization, resulting in L copies of the original signal spectrum being compressed into the range 0 to $2 \\pi$. [p. 543]\n- The frequency response of a discrete-time filter $\\mathrm{H}(\\mathrm{z})$ is determined by assessing its magnitude and phase on the unit circle, or graphically by examining the magnitude and phase of vectors linking its poles and zeros to points on the unit circle. [p. 546]\n- In discrete-time, the point $\\mathrm{z}=1$ corresponds to both dc and signals at the sampling frequency. The frequency response is periodic, and for rational transfer functions with real coefficients, it shows conjugate symmetry around dc. Thus, discrete-time frequency responses only need to be plotted from dc to half the sample rate. [p. 546]\n- A discrete-time filter is stable if all its poles are situated within the unit circle. [p. 549]\n- An infinite impulse response (IIR) filter has an impulse response that never becomes zero, while a finite impulse response (FIR) filter has an impulse response that is limited in duration and eventually reaches exactly zero. [p. 550]\n- The bilinear transform establishes a correspondence between discrete- and continuous-time transfer functions, with $\\mathrm{z}=-1$ corresponding to infinite frequency and $\\mathrm{z}=1$ to dc. [p. 551]\n- By employing the bilinear transform, discrete-time transfer functions can be designed by mapping specifications to hypothetical continuous-time equivalents and determining an appropriate $\\mathrm{H}_{\\mathrm{c}}(\\mathrm{s})$. The inverse mapping $\\mathrm{H}(\\mathrm{z})=\\mathrm{H}_{\\mathrm{c}}((\\mathrm{z}-1) /(\\mathrm{z}+1))$ yields the desired discrete-time transfer function. [p. 551]\n- The frequency response of a sample-and-hold signal mirrors that of the original discrete-time sequence, repeated every $f_{s}$, and further shaped by a sinc frequency response. [p. 553]"
},
{
    "text": "- Discrete-time signals can be processed either digitally, involving quantization in both time and amplitude, or using discrete-time analog circuits like switched-capacitor circuits, where the signal amplitude remains continuously variable. [p. 537]\n- The spectrum of a sampled signal comprises shifted replicas of the original continuous-time spectrum, ensuring no aliasing if the original waveform is bandlimited to half the sampling rate. The minimum sampling frequency to prevent aliasing, known as the Nyquist rate, equals twice the signal bandwidth. [p. 540]\n- The spectra of discrete-time signals correspond to those of the sampled signals with the sample time normalized to 1 Hz, causing their spectra to repeat every $2 \\pi$. [p. 541]\n- To avoid aliasing during downsampling by a factor L, the original signal must be sampled at L times the Nyquist rate. [p. 543]\n- Upsampling by L leads to a frequency axis renormalization, resulting in L copies of the original signal spectrum being compressed into the range 0 to $2 \\pi$. [p. 543]\n- The frequency response of a discrete-time filter $\\mathrm{H}(\\mathrm{z})$ is determined by evaluating its magnitude and phase on the unit circle, or graphically by analyzing the magnitude and phase of vectors linking its poles and zeros to points on the unit circle. [p. 546]\n- In discrete-time, the point $\\mathrm{z}=1$ represents both dc and signals at the sampling frequency. The frequency response is periodic, and for rational transfer functions with real coefficients, it exhibits conjugate symmetry around dc. Thus, discrete-time frequency responses only need to be plotted from dc to half the sample rate. [p. 546]\n- A discrete-time filter is stable if all its poles are situated within the unit circle. [p. 549]\n- An infinite impulse response (IIR) filter has an impulse response that never becomes zero, while a finite impulse response (FIR) filter has an impulse response that is limited in duration and eventually reaches exactly zero. [p. 550]\n- The bilinear transform establishes a mapping between discrete- and continuous-time transfer functions, where $\\mathrm{z}=-1$ corresponds to infinite frequency and $\\mathrm{z}=1$ corresponds to dc. [p. 551]\n- By employing the bilinear transform, discrete-time transfer functions can be designed by mapping specifications to hypothetical continuous-time equivalents and determining an appropriate $\\mathrm{H}_{\\mathrm{c}}(\\mathrm{s})$. The inverse mapping $\\mathrm{H}(\\mathrm{z})=\\mathrm{H}_{\\mathrm{c}}((\\mathrm{z}-1) /(\\mathrm{z}+1))$ yields the desired discrete-time transfer function. [p. 551]\n- The frequency response of a sample-and-held signal mirrors that of the original discrete-time sequence, repeated every $f_{s}$, and subsequently shaped by a sinc frequency response. [p. 553]"
},
{
    "text": "- Discrete-time signals can be processed either digitally, involving quantization in both time and amplitude, or through discrete-time analog circuits like switched-capacitor circuits, where the signal amplitude remains continuously variable. [p. 537]\n- The spectrum of a sampled signal comprises shifted replicas of the original continuous-time spectrum, ensuring no aliasing if the original waveform is bandlimited to half the sampling rate. The minimum sampling frequency to prevent aliasing, known as the Nyquist rate, equals twice the signal bandwidth. [p. 540]\n- Discrete-time signal spectra correspond to the sampled signal spectra with the sample time normalized to 1 Hz, causing their spectra to repeat every $2 \\pi$. [p. 541]\n- To prevent aliasing during downsampling by a factor L, the original signal must be sampled at L times the Nyquist rate. [p. 543]\n- Upsampling by L leads to a frequency axis renormalization, resulting in L copies of the original signal spectrum compressed within the range 0 to $2 \\pi$. [p. 543]\n- The frequency response of a discrete-time filter $\\mathrm{H}(\\mathrm{z})$ is determined by assessing its magnitude and phase on the unit circle, or graphically by examining the magnitude and phase of vectors linking its poles and zeros to points on the unit circle. [p. 546]\n- In discrete-time, the point $\\mathrm{z}=1$ represents both dc and signals at the sampling frequency. The frequency response is periodic, and for rational transfer functions with real coefficients, it shows conjugate symmetry around dc. Thus, discrete-time frequency responses only need to be plotted from dc to half the sample rate. [p. 546]\n- A discrete-time filter is stable if all its poles are situated within the unit circle. [p. 549]\n- An infinite impulse response (IIR) filter has an impulse response that persists indefinitely, whereas a finite impulse response (FIR) filter has an impulse response that is limited in duration, eventually reaching exactly zero. [p. 550]\n- The bilinear transform establishes a mapping between discrete- and continuous-time transfer functions, with $\\mathrm{z}=-1$ corresponding to infinite frequency and $\\mathrm{z}=1$ corresponding to dc. [p. 551]\n- By employing the bilinear transform, discrete-time transfer functions can be designed by mapping specifications to hypothetical continuous-time equivalents and determining an appropriate $\\mathrm{H}_{\\mathrm{c}}(\\mathrm{s})$. The inverse mapping $\\mathrm{H}(\\mathrm{z})=\\mathrm{H}_{\\mathrm{c}}((\\mathrm{z}-1) /(\\mathrm{z}+1))$ yields the desired discrete-time transfer function. [p. 551]\n- The frequency response of a sample-and-hold signal mirrors that of the original discrete-time sequence, repeated every $f_{s}$, and subsequently shaped by a sinc frequency response. [p. 553]"
},
{
    "text": "- Discrete-time signals can be processed either digitally, involving quantization in both time and amplitude, or through discrete-time analog circuits like switched-capacitor circuits, where the signal amplitude remains continuously variable. [p. 537]\n- The spectrum of a sampled signal consists of shifted replicas of the original continuous-time spectrum, ensuring no aliasing if the original waveform is bandlimited to half the sampling rate. The minimum sampling frequency to prevent aliasing, known as the Nyquist rate, equals twice the signal bandwidth. [p. 540]\n- The spectra of discrete-time signals match those of the corresponding sampled signals with the sample time normalized to 1 Hz, causing their spectra to repeat every $2 \\pi$. [p. 541]\n- To prevent aliasing during downsampling by a factor L, the original signal must be sampled at L times the Nyquist rate. [p. 543]\n- Upsampling by L leads to a frequency axis renormalization, compressing L copies of the original signal spectrum into the range 0 to $2 \\pi$. [p. 543]\n- The frequency response of a discrete-time filter $\\mathrm{H}(\\mathrm{z})$ is determined by assessing its magnitude and phase on the unit circle, or graphically by examining the magnitude and phase of vectors linking its poles and zeros to points on the unit circle. [p. 546]\n- In discrete-time, the point $\\mathrm{z}=1$ represents both dc and signals at the sampling frequency. The frequency response is periodic, and for rational transfer functions with real coefficients, it shows conjugate symmetry around dc. Thus, discrete-time frequency responses only need to be plotted from dc to half the sample rate. [p. 546]\n- A discrete-time filter is stable only if all its poles are situated within the unit circle. [p. 549]\n- An infinite impulse response (IIR) filter maintains a nonzero impulse response indefinitely, whereas a finite impulse response (FIR) filter has an impulse response that is limited in duration and eventually becomes exactly zero. [p. 550]\n- The bilinear transform establishes a correspondence between discrete- and continuous-time transfer functions, with $\\mathrm{z}=-1$ corresponding to infinite frequency and $\\mathrm{z}=1$ corresponding to dc. [p. 551]\n- By employing the bilinear transform, discrete-time transfer functions can be designed by mapping specifications to hypothetical continuous-time equivalents and determining an appropriate $\\mathrm{H}_{\\mathrm{c}}(\\mathrm{s})$. The inverse mapping $\\mathrm{H}(\\mathrm{z})=\\mathrm{H}_{\\mathrm{c}}((\\mathrm{z}-1) /(\\mathrm{z}+1))$ yields the desired discrete-time transfer function. [p. 551]\n- The frequency response of a sample-and-hold signal mirrors that of the original discrete-time sequence, repeated every $f_{s}$, and subsequently shaped by a sinc frequency response. [p. 553]"
},
{
    "text": "- Discrete-time signals can be processed either digitally, involving quantization in both time and amplitude, or using discrete-time analog circuits like switched-capacitor circuits, where the signal amplitude varies continuously. [p. 537]\n- The spectrum of a sampled signal comprises shifted replicas of the original continuous-time spectrum, ensuring no aliasing if the original waveform is bandlimited to half the sampling rate. The minimum sampling frequency to prevent aliasing, known as the Nyquist rate, equals twice the signal bandwidth. [p. 540]\n- Discrete-time signal spectra correspond to the sampled signal spectra with the sample time normalized to 1 Hz, causing their spectra to repeat every $2 \\pi$. [p. 541]\n- To avoid aliasing during downsampling by a factor L, the original signal must be sampled at L times the Nyquist rate. [p. 543]\n- Upsampling by L leads to a frequency axis renormalization, resulting in L copies of the original signal spectrum being compressed into the range 0 to $2 \\pi$. [p. 543]\n- The frequency response of a discrete-time filter $\\mathrm{H}(\\mathrm{z})$ is determined by evaluating its magnitude and phase on the unit circle or graphically by examining the magnitude and phase of vectors linking its poles and zeros to points on the unit circle. [p. 546]\n- In discrete-time, the point $\\mathrm{z}=1$ represents both dc and signals at the sampling frequency. The frequency response is periodic, and for rational transfer functions with real coefficients, it exhibits conjugate symmetry around dc. Thus, discrete-time frequency responses only need to be plotted from dc to half the sample rate. [p. 546]\n- A discrete-time filter is stable if all its poles are situated within the unit circle. [p. 549]\n- An infinite impulse response (IIR) filter has an impulse response that never becomes zero, whereas a finite impulse response (FIR) filter has an impulse response that is limited in duration and eventually reaches exactly zero. [p. 550]\n- The bilinear transform establishes a mapping between discrete- and continuous-time transfer functions, where $\\mathrm{z}=-1$ corresponds to infinite frequency and $\\mathrm{z}=1$ corresponds to dc. [p. 551]\n- By employing the bilinear transform, discrete-time transfer functions can be designed by mapping specifications to hypothetical continuous-time equivalents and determining an appropriate $\\mathrm{H}_{\\mathrm{c}}(\\mathrm{s})$. The inverse mapping $\\mathrm{H}(\\mathrm{z})=\\mathrm{H}_{\\mathrm{c}}((\\mathrm{z}-1) /(\\mathrm{z}+1))$ yields the desired discrete-time transfer function. [p. 551]\n- The frequency response of a sample-and-hold signal mirrors that of the original discrete-time sequence, repeated every $f_{s}$, and modified by a sinc frequency response. [p. 553]"
},
{
    "text": "- Discrete-time signals can be processed either digitally, involving quantization in both time and amplitude, or through discrete-time analog circuits like switched-capacitor circuits, where the signal amplitude remains continuously variable. [p. 537]\n- The spectrum of a sampled signal consists of shifted replicas of the original continuous-time spectrum, ensuring no aliasing if the original waveform is bandlimited to half the sampling rate. The minimum sampling frequency to prevent aliasing, known as the Nyquist rate, equals twice the signal bandwidth. [p. 540]\n- The spectra of discrete-time signals match those of the corresponding sampled signals with the sample time normalized to 1 Hz, causing their spectra to repeat every $2 \\pi$. [p. 541]\n- To prevent aliasing during downsampling by a factor L, the original signal must be sampled at L times the Nyquist rate. [p. 543]\n- Upsampling by L leads to a frequency axis renormalization, compressing L copies of the original signal spectrum into the range 0 to $2 \\pi$. [p. 543]\n- The frequency response of a discrete-time filter $\\mathrm{H}(\\mathrm{z})$ is determined by assessing its magnitude and phase on the unit circle, or graphically by examining the magnitude and phase of vectors linking its poles and zeros to points on the unit circle. [p. 546]\n- In discrete-time, the point $\\mathrm{z}=1$ corresponds to both dc and signals at the sampling frequency. The frequency response is periodic, and for rational transfer functions with real coefficients, it shows conjugate symmetry around dc. Thus, discrete-time frequency responses only need to be plotted from dc to half the sample rate. [p. 546]\n- A discrete-time filter is stable only if all its poles are situated within the unit circle. [p. 549]\n- An infinite impulse response (IIR) filter has an impulse response that never becomes zero, while a finite impulse response (FIR) filter has an impulse response that is limited in duration and eventually reaches exactly zero. [p. 550]\n- The bilinear transform establishes a mapping between discrete- and continuous-time transfer functions, with $\\mathrm{z}=-1$ corresponding to infinite frequency and $\\mathrm{z}=1$ corresponding to dc. [p. 551]\n- By employing the bilinear transform, discrete-time transfer functions can be designed by mapping specifications to hypothetical continuous-time equivalents and determining an appropriate $\\mathrm{H}_{\\mathrm{c}}(\\mathrm{s})$. The inverse mapping $\\mathrm{H}(\\mathrm{z})=\\mathrm{H}_{\\mathrm{c}}((\\mathrm{z}-1) /(\\mathrm{z}+1))$ yields the desired discrete-time transfer function. [p. 551]\n- The frequency response of a sample-and-hold signal mirrors that of the original discrete-time sequence, repeated every $f_{s}$, and subsequently shaped by a sinc frequency response. [p. 553]"
},
{
    "text": "- Discrete-time signals can be processed either digitally, involving quantization in both time and amplitude, or through discrete-time analog circuits like switched-capacitor circuits, where the signal amplitude varies continuously. [p. 537]\n- The spectrum of a sampled signal comprises shifted replicas of the original continuous-time spectrum, ensuring no aliasing if the original waveform is bandlimited to half the sampling rate. The minimum sampling frequency to prevent aliasing, known as the Nyquist rate, equals twice the signal bandwidth. [p. 540]\n- The spectra of discrete-time signals match those of the corresponding sampled signals with the sample time normalized to 1 Hz, causing their spectra to repeat every $2 \\pi$. [p. 541]\n- To avoid aliasing during downsampling by a factor L, the original signal must be sampled at L times the Nyquist rate. [p. 543]\n- Upsampling by L leads to a frequency axis renormalization, compressing L copies of the original signal spectrum into the range 0 to $2 \\pi$. [p. 543]\n- The frequency response of a discrete-time filter $\\mathrm{H}(\\mathrm{z})$ is determined by assessing its magnitude and phase on the unit circle, or graphically by examining the magnitude and phase of vectors linking its poles and zeros to points on the unit circle. [p. 546]\n- In discrete-time, the point $\\mathrm{z}=1$ corresponds to both dc and signals at the sampling frequency. The frequency response is periodic, and for rational transfer functions with real coefficients, it shows conjugate symmetry around dc. Thus, discrete-time frequency responses only need to be plotted from dc to half the sample rate. [p. 546]\n- A discrete-time filter is stable if all its poles are situated within the unit circle. [p. 549]\n- An infinite impulse response (IIR) filter has an impulse response that never becomes zero, whereas a finite impulse response (FIR) filter has an impulse response that is limited in duration and eventually reaches zero. [p. 550]\n- The bilinear transform establishes a mapping between discrete- and continuous-time transfer functions, with $\\mathrm{z}=-1$ corresponding to infinite frequency and $\\mathrm{z}=1$ to dc. [p. 551]\n- By employing the bilinear transform, discrete-time transfer functions can be designed by mapping specifications to hypothetical continuous-time equivalents and determining an appropriate $\\mathrm{H}_{\\mathrm{c}}(\\mathrm{s})$. The inverse mapping $\\mathrm{H}(\\mathrm{z})=\\mathrm{H}_{\\mathrm{c}}((\\mathrm{z}-1) /(\\mathrm{z}+1))$ yields the desired discrete-time transfer function. [p. 551]\n- The frequency response of a sample-and-hold signal mirrors that of the original discrete-time sequence, repeated every $f_{s}$, and subsequently shaped by a sinc frequency response. [p. 553]"
},
{
    "text": "- Discrete-time signals can be processed either digitally, involving quantization in both time and amplitude, or through discrete-time analog circuits like switched-capacitor circuits, where the signal amplitude remains continuously variable. [p. 537]\n- The spectrum of a sampled signal comprises shifted replicas of the original continuous-time spectrum, ensuring no aliasing if the original waveform is bandlimited to half the sampling rate. The minimum sampling frequency to prevent aliasing, known as the Nyquist rate, equals twice the signal bandwidth. [p. 540]\n- The spectra of discrete-time signals match those of the corresponding sampled signals with the sample time normalized to 1 Hz, causing their spectra to repeat every $2 \\pi$. [p. 541]\n- To prevent aliasing during downsampling by a factor L, the original signal must be sampled at L times the Nyquist rate. [p. 543]\n- Upsampling by L leads to a frequency axis renormalization, compressing L copies of the original signal spectrum into the range 0 to $2 \\pi$. [p. 543]\n- The frequency response of a discrete-time filter $\\mathrm{H}(\\mathrm{z})$ is determined by assessing its magnitude and phase on the unit circle or graphically by examining the magnitude and phase of vectors linking its poles and zeros to points on the unit circle. [p. 546]\n- In discrete-time, the point $\\mathrm{z}=1$ represents both dc and signals at the sampling frequency. The frequency response is periodic, and for rational transfer functions with real coefficients, it shows conjugate symmetry around dc. Thus, discrete-time frequency responses only need to be plotted from dc to half the sample rate. [p. 546]\n- A discrete-time filter is stable if all its poles are situated within the unit circle. [p. 549]\n- An infinite impulse response (IIR) filter has an impulse response that never becomes zero, whereas a finite impulse response (FIR) filter has an impulse response that is limited in duration and eventually reaches zero. [p. 550]\n- The bilinear transform establishes a correspondence between discrete- and continuous-time transfer functions, where $\\mathrm{z}=-1$ corresponds to infinite frequency and $\\mathrm{z}=1$ corresponds to dc. [p. 551]\n- By employing the bilinear transform, discrete-time transfer functions can be designed by mapping specifications to hypothetical continuous-time equivalents and determining an appropriate $\\mathrm{H}_{\\mathrm{c}}(\\mathrm{s})$. The inverse mapping $\\mathrm{H}(\\mathrm{z})=\\mathrm{H}_{\\mathrm{c}}((\\mathrm{z}-1) /(\\mathrm{z}+1))$ yields the desired discrete-time transfer function. [p. 551]\n- The frequency response of a sample-and-hold signal mirrors that of the original discrete-time sequence, repeated every $f_{s}$, and modified by a sinc frequency response. [p. 553]"
}
]