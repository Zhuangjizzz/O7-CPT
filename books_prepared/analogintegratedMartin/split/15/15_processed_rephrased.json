[

{
    "text": "In this section, the essential elements of analog-to-digital (A/D) and digital-to-analog (D/A) converters are outlined, disregarding their internal architecture or circuit design. Essentially, converters are considered as black boxes here, with the focus solely on their input-output interactions. The internal structures and circuit techniques for implementing data converters are explored in subsequent chapters.\n\nPrior to advancing, it is beneficial to differentiate between the two primary categories of data converters.\n\nKey Point: Nyquist-rate converters exhibit a direct one-to-one relationship between input and output values. Conversely, oversampling converters enhance the signal-to-noise ratio (SNR) by functioning significantly faster than the input signal's Nyquist rate and by filtering out quantization noise beyond the signal bandwidth.\n\nNyquist-Rate Converters We broadly categorize Nyquist-rate data converters as those that produce a sequence of output values, each directly corresponding to a single input value. For instance, a Nyquist-rate D/A converter would produce a series of analog output levels, each derived from a single B-bit input word. However, it is important to note that Nyquist-rate converters are rarely operated at the actual Nyquist rate due to the challenges in designing effective anti-aliasing and reconstruction filters. Typically, these converters function at 1.5 to 10 times the Nyquist rate (i.e., 3 to 20 times the input signal's bandwidth).\n\nOversampling Converters Oversampling converters operate at speeds significantly higher than the input signal's Nyquist rate (usually 10 to 512 times faster) and improve the output's signal-to-noise ratio (SNR) by filtering out quantization noise outside the signal's bandwidth. In A/D converters, this filtering is executed digitally, while in D/A converters, it is done through analog means. Frequently, oversampling converters employ noise shaping to shift a substantial portion of the quantization noise beyond the input signal's bandwidth (refer to Chapter 18).\n\nThis differentiation is highlighted here because the ensuing descriptions primarily pertain to Nyquist-rate converters rather than oversampling converters."
},
{
    "text": "In this section, essential aspects of analog-to-digital (A/D) and digital-to-analog (D/A) converters are outlined,忽略 their internal architecture or circuit design. Essentially, converters are regarded as black boxes here, with focus solely on their input-output relationships. Detailed discussions on internal architectures and circuit techniques for data converters are deferred to subsequent chapters.\n\nPrior to advancing, it is beneficial to differentiate between two primary categories of data converters.\n\nKey Point: Nyquist-rate converters exhibit a direct one-to-one correlation between input and output values. In contrast, oversampling converters enhance the signal-to-noise ratio (SNR) by functioning significantly faster than the input signal's Nyquist rate and filtering out quantization noise beyond the signal bandwidth.\n\nNyquist-Rate Converters We broadly categorize Nyquist-rate data converters as those that produce a sequence of output values, each directly corresponding to a single input value. For instance, a Nyquist-rate D/A converter would produce a series of analog output levels, each derived from a single B-bit input word. However, it is important to note that Nyquist-rate converters are rarely employed at the actual Nyquist rate due to the challenges in implementing effective anti-aliasing and reconstruction filters. Typically, these converters operate at 1.5 to 10 times the Nyquist rate (i.e., 3 to 20 times the input signal's bandwidth).\n\nOversampling Converters Oversampling converters function at speeds significantly higher than the input signal's Nyquist rate (usually 10 to 512 times faster) and boost the output's signal-to-noise ratio (SNR) by filtering out quantization noise outside the signal bandwidth. In A/D converters, this filtering is executed digitally, while in D/A converters, analog filtering is employed. Frequently, oversampling converters utilize noise shaping to shift a substantial portion of the quantization noise beyond the input signal's bandwidth (refer to Chapter 18).\n\nThis differentiation is introduced here because the subsequent descriptions predominantly pertain to Nyquist-rate converters rather than oversampling converters."
},
{
    "text": "In this section, the essential characteristics of analog-to-digital (A/D) and digital-to-analog (D/A) converters are outlined, disregarding their internal architecture or circuit design. Essentially, converters are considered as black boxes here, with the focus solely on their input-output interactions. The internal structures and circuit techniques for implementing data converters are addressed in subsequent chapters.\n\nPrior to advancing, it is beneficial to differentiate between two primary categories of data converters.\n\nKey Point: Nyquist-rate converters exhibit a direct one-to-one relationship between input and output values. Conversely, oversampling converters enhance the signal-to-noise ratio (SNR) by functioning significantly faster than the input signal's Nyquist rate and by filtering out quantization noise beyond the signal bandwidth.\n\nNyquist-Rate Converters We broadly define Nyquist-rate data converters as those that produce a sequence of output values, each corresponding directly to a single input value. For instance, a Nyquist-rate D/A converter would produce a series of analog output levels, each derived from a single B-bit input word. However, it is important to note that Nyquist-rate converters are rarely operated at the actual Nyquist rate due to the challenges in designing effective anti-aliasing and reconstruction filters. Typically, these converters operate at 1.5 to 10 times the Nyquist rate (i.e., 3 to 20 times the input signal's bandwidth).\n\nOversampling Converters Oversampling converters function at speeds significantly higher than the input signal's Nyquist rate (usually 10 to 512 times faster) and improve the output's signal-to-noise ratio (SNR) by removing quantization noise outside the signal's bandwidth. In A/D converters, this filtering is executed digitally, while in D/A converters, it is done via analog methods. Frequently, oversampling converters employ noise shaping to shift a substantial portion of the quantization noise beyond the input signal's bandwidth (refer to Chapter 18).\n\nThis differentiation is introduced here because the ensuing descriptions primarily pertain to Nyquist-rate converters rather than oversampling converters."
},
{
    "text": "In this chapter, the basic principles of analog-to-digital (A/D) and digital-to-analog (D/A) converters are discussed,忽略 their internal architecture or circuit design. Essentially, converters are considered as black boxes here, with the focus solely on their input-output relationships. The internal architectures and circuit techniques for implementing data converters are covered in subsequent chapters.\n\nBefore moving forward, it is important to differentiate between the two primary types of data converters.\n\nKey Point: Nyquist-rate converters exhibit a direct one-to-one relationship between input and output values. Conversely, oversampling converters enhance the signal-to-noise ratio (SNR) by operating significantly faster than the input signal's Nyquist rate and filtering out quantization noise beyond the signal bandwidth.\n\nNyquist-Rate Converters We broadly define Nyquist-rate data converters as those that produce a sequence of output values, each directly corresponding to a single input value. For instance, a Nyquist-rate D/A converter would produce a series of analog output levels, each derived from a single B-bit input word. However, it is noteworthy that Nyquist-rate converters are rarely operated at the actual Nyquist rate due to the challenges in implementing effective anti-aliasing and reconstruction filters. Typically, these converters function at 1.5 to 10 times the Nyquist rate (i.e., 3 to 20 times the input signal's bandwidth).\n\nOversampling Converters Oversampling converters operate at speeds much higher than the input signal's Nyquist rate (usually 10 to 512 times faster) and improve the output's SNR by removing quantization noise outside the signal's bandwidth. In A/D converters, this filtering is executed digitally, while in D/A converters, it is done via analog means. Frequently, oversampling converters employ noise shaping to shift a significant portion of the quantization noise outside the input signal's bandwidth (refer to Chapter 18).\n\nThis distinction is highlighted here because the subsequent descriptions primarily pertain to Nyquist-rate converters rather than oversampling converters."
},
{
    "text": "In this chapter, the basic principles of analog-to-digital (A/D) and digital-to-analog (D/A) converters are outlined, disregarding their internal architecture or circuit design. Essentially, converters are considered as black boxes here, with the focus solely on their input-output interactions. The internal structures and circuit techniques for implementing data converters are covered in subsequent chapters.\n\nPrior to advancing, it is important to differentiate between the two primary categories of data converters.\n\nKey Point: Nyquist-rate converters exhibit a direct one-to-one relationship between input and output values. Conversely, oversampling converters enhance the signal-to-noise ratio (SNR) by functioning significantly faster than the input signal's Nyquist rate and by filtering out quantization noise beyond the signal bandwidth.\n\nNyquist-Rate Converters We broadly classify Nyquist-rate data converters as those that produce a sequence of output values, each corresponding directly to a single input value. For instance, a Nyquist-rate D/A converter would produce a series of analog output levels, each derived from a single B-bit input word. However, it is worth noting that Nyquist-rate converters are rarely operated at the actual Nyquist rate due to the challenges in creating effective anti-aliasing and reconstruction filters. Typically, these converters function at 1.5 to 10 times the Nyquist rate (i.e., 3 to 20 times the input signal's bandwidth).\n\nOversampling Converters Oversampling converters operate at speeds significantly higher than the input signal's Nyquist rate (usually 10 to 512 times faster) and boost the output's signal-to-noise ratio (SNR) by removing quantization noise outside the signal's bandwidth. In A/D converters, this filtration is done digitally, while in D/A converters, it is accomplished through analog means. Frequently, oversampling converters employ noise shaping to shift a substantial portion of the quantization noise outside the input signal's bandwidth (refer to Chapter 18).\n\nThis differentiation is highlighted here because the ensuing descriptions predominantly pertain to Nyquist-rate converters rather than oversampling converters."
},
{
    "text": "In this chapter, the core elements of analog-to-digital (A/D) and digital-to-analog (D/A) converters are discussed,忽略 their internal architecture or circuit design. Essentially, converters are regarded here as black boxes, focusing solely on their input-output characteristics. The internal architectures and circuit techniques for implementing data converters are covered in subsequent chapters.\n\nBefore advancing, it is beneficial to differentiate between two primary categories of data converters.\n\nKey Point: Nyquist-rate converters exhibit a direct one-to-one relationship between input and output values. Conversely, oversampling converters enhance the signal-to-noise ratio (SNR) by functioning significantly faster than the input signal's Nyquist rate and filtering out quantization noise beyond the signal bandwidth.\n\nNyquist-Rate Converters We broadly define Nyquist-rate data converters as those that produce a sequence of output values, each corresponding directly to a single input value. For instance, a Nyquist-rate D/A converter would create a series of analog output levels, with each level derived from a single B-bit input word. However, it is important to note that Nyquist-rate converters are rarely operated at the actual Nyquist rate due to the challenges in designing effective anti-aliasing and reconstruction filters. Typically, these converters function at 1.5 to 10 times the Nyquist rate (i.e., 3 to 20 times the input signal's bandwidth).\n\nOversampling Converters Oversampling converters operate at speeds significantly higher than the input signal's Nyquist rate (usually 10 to 512 times faster) and improve the output's signal-to-noise ratio (SNR) by filtering out quantization noise outside the signal bandwidth. In A/D converters, this filtering is executed digitally, while in D/A converters, it is done through analog means. Frequently, oversampling converters employ noise shaping to shift much of the quantization noise beyond the input signal's bandwidth (refer to Chapter 18).\n\nThis differentiation is introduced here because the subsequent descriptions primarily pertain to Nyquist-rate converters rather than oversampling converters."
},
{
    "text": "In this section, the essential elements of analog-to-digital (A/D) and digital-to-analog (D/A) converters are outlined, disregarding their internal architecture or circuit design. Essentially, converters are treated here as black boxes, focusing solely on their input-output interactions. The internal structures and circuit techniques for implementing data converters are explored in subsequent chapters.\n\nPrior to advancing, it is beneficial to differentiate between the two primary categories of data converters.\n\nKey Point: Nyquist-rate converters exhibit a direct one-to-one relationship between input and output values. Conversely, oversampling converters enhance the signal-to-noise ratio (SNR) by functioning significantly faster than the input signal's Nyquist rate and filtering out quantization noise beyond the signal bandwidth.\n\nNyquist-Rate Converters We broadly categorize Nyquist-rate data converters as those that produce a sequence of output values, each corresponding directly to a single input value. For instance, a Nyquist-rate D/A converter would produce a series of analog output levels, each derived from a single B-bit input word. However, it is important to note that Nyquist-rate converters are rarely operated at the Nyquist rate itself due to the challenges associated with practical anti-aliasing and reconstruction filters. Typically, these converters function at 1.5 to 10 times the Nyquist rate (equivalent to 3 to 20 times the input signal's bandwidth).\n\nOversampling Converters Oversampling converters operate at speeds significantly higher than the input signal's Nyquist rate (usually 10 to 512 times faster) and improve the output's signal-to-noise ratio (SNR) by filtering out quantization noise outside the signal's bandwidth. In A/D converters, this filtering is executed digitally, while in D/A converters, analog filtering is employed. Frequently, oversampling converters utilize noise shaping to position a substantial portion of the quantization noise outside the input signal's bandwidth (refer to Chapter 18).\n\nThis differentiation is emphasized here because the subsequent descriptions primarily pertain to Nyquist-rate converters rather than oversampling converters."
},
{
    "text": "In this section, the essential elements of analog-to-digital (A/D) and digital-to-analog (D/A) converters are outlined,忽略ing their internal architecture or circuit design. Essentially, converters are considered as black boxes here, with the focus solely on their input-output interactions. The internal structures and circuit techniques for implementing data converters are explored in subsequent chapters.\n\nPrior to advancing, it is beneficial to differentiate between the two primary categories of data converters.\n\nKey Point: Nyquist-rate converters exhibit a direct one-to-one relationship between input and output values. Conversely, oversampling converters enhance the signal-to-noise ratio (SNR) by functioning significantly faster than the input signal's Nyquist rate and filtering out quantization noise beyond the signal bandwidth.\n\nNyquist-Rate Converters We broadly characterize Nyquist-rate data converters as those that produce a sequence of output values, each directly corresponding to a single input value. For instance, a Nyquist-rate D/A converter would produce a series of analog output levels, each derived from a single B-bit input word. However, it is important to note that Nyquist-rate converters are rarely operated at the actual Nyquist rate due to the challenges in designing effective anti-aliasing and reconstruction filters. Typically, these converters function at 1.5 to 10 times the Nyquist rate (i.e., 3 to 20 times the input signal's bandwidth).\n\nOversampling Converters Oversampling converters operate at speeds significantly higher than the input signal's Nyquist rate (usually 10 to 512 times faster) and improve the output's signal-to-noise ratio (SNR) by eliminating quantization noise outside the signal's bandwidth. In A/D converters, this filtering is executed digitally, while in D/A converters, analog filtering is employed. Frequently, oversampling converters utilize noise shaping to shift a substantial portion of the quantization noise beyond the input signal's bandwidth (refer to Chapter 18).\n\nThis distinction is emphasized here because the subsequent descriptions predominantly pertain to Nyquist-rate converters rather than oversampling converters."
},
{
    "text": "Examine the block diagram of an N-bit $\\mathrm{D} / \\mathrm{A}$ converter illustrated in Fig. 15.1. Here, $\\mathrm{B}_{\\text {in }}$ is designated as an N-bit digital signal (or word) such that\n\n$$\n\\begin{equation*}\n\\mathrm{B}_{\\mathrm{in}}=\\mathrm{b}_{1} 2^{-1}+\\mathrm{b}_{2} 2^{-2}+\\cdots+\\mathrm{b}_{\\mathrm{N}} 2^{-\\mathrm{N}} \\tag{15.1}\n\\end{equation*}\n$$\n\nwhere $b_{i}$ is either 1 or 0 (i.e., $b_{i}$ is a binary digit). We also identify $b_{1}$ as the most significant bit (MSB) and $b_{N}$ as the least significant bit (LSB). Additionally, we assume $\\mathrm{B}_{\\text {in }}$ represents a positive value, resulting in a unipolar D/A converter. A unipolar D/A converter generates an output signal of a single polarity. Conversely, signed converters produce output signals that can be either positive or negative, depending on a sign bit (typically $b_{1}$). Extending these concepts to the signed case is straightforward but necessitates knowledge of the digital representation used (i.e., sign magnitude, offset binary, or 2's complement). Signed codes are covered in Section 15.4.\n\nimage_name:Fig. 15.1\ndescription:The block diagram labeled \"Fig. 15.1\" depicts a Digital-to-Analog (D/A) converter system. The main components of this system are as follows:\n\n1. **D/A Converter Block**: This is the core component of the diagram. It accepts digital input signals and an analog reference signal, and it produces an analog output signal. The primary role of the D/A converter is to transform the digital input into an analog output, utilizing the reference voltage as a scaling factor.\n\n2. **Input Signals**:\n- **$B_{in}$**: This is the digital input signal to the D/A converter. It comprises a sequence of digital bits representing a numerical value to be converted into an analog signal.\n- **$V_{ref}$**: This is the analog reference signal provided to the D/A converter. It acts as a reference voltage that determines the scale of the analog output.\n\n3. **Output Signal**:\n- **$V_{out}$**: This is the analog output signal generated by the D/A converter. It results from converting the digital input, $B_{in}$, using the reference voltage, $V_{ref}$.\n\n**Flow of Information**:\n- The digital input signal ($B_{in}$) enters the D/A converter block from the left.\n- The reference voltage ($V_{ref}$) is also input into the D/A converter from below.\n- The D/A converter processes these inputs to produce an analog output signal ($V_{out}$), which exits the block on the right.\n\n**Overall System Function**:\nThe main function of this system is to convert a digital signal into an analog signal. The digital input ($B_{in}$) is converted into an analog output ($V_{out}$) by the D/A converter, with the conversion process influenced by the reference voltage ($V_{ref}$). This configuration enables the precise generation of analog signals based on digital inputs, which is crucial in applications such as audio processing, instrumentation, and control systems.\n\nFig. 15.1 A block diagram representing a D/A converter.\n\nThe analog output signal, $\\mathrm{V}_{\\text {out }}$, is related to the digital signal, $\\mathrm{B}_{\\text {in }}$, through an analog reference signal, $\\mathrm{V}_{\\text {ref }}$. For simplicity, we assume both $\\mathrm{V}_{\\text {out }}$ and $\\mathrm{V}_{\\text {ref }}$ are voltage signals, although they could be other physical quantities like current or charge in general. The relationship between these three signals for a unipolar D/A converter is given by\n\n$$\n\\begin{equation*}\n\\mathrm{V}_{\\text {out }}=\\mathrm{V}_{\\text {ref }}\\left(\\mathrm{b}_{1} 2^{-1}+\\mathrm{b}_{2} 2^{-2}+\\cdots+\\mathrm{b}_{\\mathrm{N}} 2^{-\\mathrm{N}}\\right)=\\mathrm{V}_{\\text {ref }} \\mathrm{B}_{\\text {in }} \\tag{15.2}\n\\end{equation*}\n$$\n\nIt is beneficial to define $\\mathrm{V}_{\\mathrm{LSB}}$ as the voltage change when one LSB changes, or mathematically,\n\n$$\n\\begin{equation*}\nV_{\\mathrm{LSB}} \\equiv \\frac{\\mathrm{~V}_{\\mathrm{ref}}}{2^{\\mathrm{N}}} \\tag{15.3}\n\\end{equation*}\n$$\n\nAlso useful, particularly for measuring errors, is the definition of a new \"unit,\" namely, LSB units, which are actually unitless.\n\n$$\n\\begin{equation*}\n1 \\mathrm{LSB}=\\frac{1}{2^{N}} \\tag{15.4}\n\\end{equation*}\n$$\n\nThe transfer curve for an ideal 2-bit D/A converter is depicted in Fig. 15.2. Note that, although only a finite number of analog values appear at the output, for an ideal D/A converter, the output signals are well-defined. Also, the maximum value of $\\mathrm{V}_{\\text {out }}$ is not $\\mathrm{V}_{\\text {ref }}$ but rather $\\mathrm{V}_{\\text {ref }}\\left(1-2^{-\\mathrm{N}}\\right)$, or equivalently, $\\mathrm{V}_{\\text {ref }}-\\mathrm{V}_{\\text {LSB }}$. Finally, as seen from (15.2), a multiplying D/A converter is realized by allowing the reference signal, $\\mathrm{V}_{\\text {ref }}$, to be a variable input signal along with the digital input, $\\mathrm{B}_{\\mathrm{in}}$. Such an arrangement results in\n\nKey Point: Data converters translate between digital binary codes and analog voltages or currents. In an ideal converter, the binary codes correspond to analog signal quantities that are precisely equally spaced.\n$V_{\\text {out }}$ being proportional to the product of the input signals, $B_{\\text {in }}$ and $V_{\\text {ref }}$.\n\n#### EXAMPLE 15.1\n\nAn 8-bit $\\mathrm{D} / \\mathrm{A}$ converter has $\\mathrm{V}_{\\text {ref }}=5 \\mathrm{~V}$. What is the output voltage when $\\mathrm{B}_{\\text {in }}=10110100$? Also, determine $\\mathrm{V}_{\\text {LSB }}$.\nimage_name:Fig. 15.2 Input-output transfer curve for an ideal 2-bit D/A converter\ndescription:The graph illustrates the input-output transfer curve for an ideal 2-bit Digital-to-Analog (D/A) converter. It is a staircase plot showing the relationship between the digital input and the analog output.\n\n1. **Type of Graph and Function:**\n- This is a transfer curve graph for a 2-bit D/A converter, mapping digital input codes to corresponding analog output values.\n\n2. **Axes Labels and Units:**\n- The vertical axis is labeled as \\( \\frac{V_{\\text{out}}}{V_{\\text{ref}}} \\), representing the ratio of output voltage to the reference voltage.\n- The horizontal axis represents the digital input codes, ranging from '00' to '11' in binary.\n\n3. **Overall Behavior and Trends:**\n- The graph shows a linear increase in output voltage with increasing digital input codes. Each step corresponds to a binary input increment.\n- The curve is staircase-shaped, indicating discrete levels of output voltage for each binary input.\n\n4. **Key Features and Technical Details:**\n- The graph has four steps corresponding to the binary inputs '00', '01', '10', and '11'.\n- The output voltage increases in equal steps, each representing an increment of \\( \\frac{1}{4} \\) of the reference voltage \\( V_{\\text{ref}} \\).\n- The dotted line extends beyond the last step, indicating the theoretical continuation of the linear relationship.\n- The graph highlights that \\( V_{\\text{LSB}} = \\frac{1}{4}V_{\\text{ref}} \\), which is the smallest voltage change corresponding to a one-bit change in the input.\n\n5. **Annotations and Specific Data Points:**\n- The graph includes annotations for each binary input code ('00', '01', '10', '11') and the corresponding output levels.\n- A specific note indicates that \\( V_{\\text{LSB}} = \\frac{1}{4} \\) of \\( V_{\\text{ref}} \\), which equals 1 Least Significant Bit (LSB).\n\nFig. 15.2 Input-output transfer curve for an ideal 2-bit D/A converter.\n\n#### Solution\n\nWe can determine the decimal equivalent of $\\mathrm{B}_{\\text {in }}$ using (15.1)\n\n$$\n\\begin{equation*}\n\\mathrm{B}_{\\text {in }}=2^{-1}+2^{-3}+2^{-4}+2^{-6}=0.703125 \\tag{15.5}\n\\end{equation*}\n$$\n\nThen, using (15.2), we find\n\n$$\n\\begin{equation*}\n\\mathrm{V}_{\\text {out }}=\\mathrm{V}_{\\text {ref }} \\mathrm{B}_{\\text {in }}=3.516 \\mathrm{~V} \\tag{15.6}\n\\end{equation*}\n$$\n\nand\n\n$$\n\\begin{equation*}\nV_{\\text {LSB }}=5 / 256=19.5 \\mathrm{mV} \\tag{15.7}\n\\end{equation*}\n$$"
},
{
    "text": "Examine the block diagram of an N-bit $\\mathrm{D} / \\mathrm{A}$ converter illustrated in Fig. 15.1. Here, $\\mathrm{B}_{\\text {in }}$ is designated as an N-bit digital signal (or word) such that\n\n$$\n\\begin{equation*}\n\\mathrm{B}_{\\mathrm{in}}=\\mathrm{b}_{1} 2^{-1}+\\mathrm{b}_{2} 2^{-2}+\\cdots+\\mathrm{b}_{\\mathrm{N}} 2^{-\\mathrm{N}} \\tag{15.1}\n\\end{equation*}\n$$\n\nwhere $b_{i}$ is either 1 or 0 (i.e., $b_{i}$ is a binary digit). We also identify $b_{1}$ as the most significant bit (MSB) and $b_{N}$ as the least significant bit (LSB). Additionally, we assume $\\mathrm{B}_{\\text {in }}$ represents a positive value, leading to a unipolar D/A converter. A unipolar D/A converter generates an output signal of a single polarity. Conversely, signed converters produce output signals that can be either positive or negative, depending on a sign bit (usually $b_{1}$). Extending these concepts to the signed case is straightforward but necessitates knowledge of the digital representation used (i.e., sign magnitude, offset binary, or 2's complement). Signed codes are covered in Section 15.4.\nimage_name:Fig. 15.1\ndescription:The block diagram labeled \"Fig. 15.1\" depicts a Digital-to-Analog (D/A) converter system. The main components of this system are as follows:\n\n1. **D/A Converter Block**: This is the central element of the diagram. It accepts digital input signals and an analog reference signal, producing an analog output signal. The primary role of the D/A converter is to transform the digital input into an analog output, utilizing the reference voltage as a scaling factor.\n\n2. **Input Signals**:\n- **$B_{in}$**: This is the digital input signal to the D/A converter. It comprises a sequence of digital bits representing a numerical value to be converted into an analog signal.\n- **$V_{ref}$**: This is the analog reference signal provided to the D/A converter. It acts as a reference voltage that determines the scale of the analog output.\n\n3. **Output Signal**:\n- **$V_{out}$**: This is the analog output signal generated by the D/A converter. It results from converting the digital input, $B_{in}$, using the reference voltage, $V_{ref}$.\n\n**Flow of Information**:\n- The digital input signal ($B_{in}$) enters the D/A converter block from the left.\n- The reference voltage ($V_{ref}$) is also input into the D/A converter from below.\n- The D/A converter processes these inputs to produce an analog output signal ($V_{out}$), which exits the block on the right.\n\n**Overall System Function**:\nThe main function of this system is to convert a digital signal into an analog signal. The digital input ($B_{in}$) is converted into an analog output ($V_{out}$) by the D/A converter, with the conversion process influenced by the reference voltage ($V_{ref}$). This configuration enables the precise generation of analog signals based on digital inputs, which is crucial in applications such as audio processing, instrumentation, and control systems.\n\nFig. 15.1 A block diagram representing a D/A converter.\n\nThe analog output signal, $\\mathrm{V}_{\\text {out }}$, is related to the digital signal, $\\mathrm{B}_{\\text {in }}$, through an analog reference signal, $\\mathrm{V}_{\\text {ref }}$. For simplicity, we assume both $\\mathrm{V}_{\\text {out }}$ and $\\mathrm{V}_{\\text {ret }}$ are voltage signals, although they could be other physical quantities, such as current or charge, in general. The relationship between these three signals for a unipolar D/A converter is given by\n\n$$\n\\begin{equation*}\n\\mathrm{V}_{\\text {out }}=\\mathrm{V}_{\\text {ref }}\\left(\\mathrm{b}_{1} 2^{-1}+\\mathrm{b}_{2} 2^{-2}+\\cdots+\\mathrm{b}_{\\mathrm{N}} 2^{-\\mathrm{N}}\\right)=\\mathrm{V}_{\\text {ref }} \\mathrm{B}_{\\text {in }} \\tag{15.2}\n\\end{equation*}\n$$\n\nIt is beneficial to define $\\mathrm{V}_{\\mathrm{LSB}}$ as the voltage change when one LSB changes, or mathematically,\n\n$$\n\\begin{equation*}\nV_{\\mathrm{LSB}} \\equiv \\frac{\\mathrm{~V}_{\\mathrm{ref}}}{2^{\\mathrm{N}}} \\tag{15.3}\n\\end{equation*}\n$$\n\nAlso useful, particularly for measuring errors, is the definition of a new \"unit,\" namely, LSB units, which are actually unitless.\n\n$$\n\\begin{equation*}\n1 \\mathrm{LSB}=\\frac{1}{2^{N}} \\tag{15.4}\n\\end{equation*}\n$$\n\nThe transfer curve for an ideal 2-bit D/A converter is shown in Fig. 15.2. Note that, although only a finite number of analog values appear at the output, for an ideal D/A converter, the output signals are well-defined. Additionally, the maximum value of $\\mathrm{V}_{\\text {out }}$ is not $\\mathrm{V}_{\\text {ref }}$ but rather $\\mathrm{V}_{\\text {ref }}\\left(1-2^{-\\mathrm{N}}\\right)$, or equivalently, $\\mathrm{V}_{\\text {ref }}-\\mathrm{V}_{\\text {LSB }}$. Finally, as seen from (15.2), a multiplying D/A converter is achieved by allowing the reference signal, $\\mathrm{V}_{\\text {ref }}$, to be a variable input signal along with the digital input, $\\mathrm{B}_{\\mathrm{in}}$. Such an arrangement results in\n\nKey Point: Data converters translate between digital binary codes and analog voltages or currents. In an ideal converter, the binary codes correspond to analog signal quantities that are precisely equally spaced.\n$V_{\\text {out }}$ being proportional to the product of the input signals, $B_{\\text {in }}$ and $V_{\\text {ref }}$.\n\n#### EXAMPLE 15.1\n\nAn 8-bit $\\mathrm{D} / \\mathrm{A}$ converter has $\\mathrm{V}_{\\text {ret }}=5 \\mathrm{~V}$. What is the output voltage when $\\mathrm{B}_{\\text {in }}=10110100$ ? Also, determine $\\mathrm{V}_{\\text {LSB }}$.\nimage_name:Fig. 15.2 Input-output transfer curve for an ideal 2-bit D/A converter\ndescription:The graph illustrates the transfer curve for an ideal 2-bit Digital-to-Analog (D/A) converter. It is a staircase plot depicting the relationship between the digital input and the analog output.\n\n1. **Type of Graph and Function:**\n- This is a transfer curve graph for a 2-bit D/A converter, mapping digital input codes to corresponding analog output values.\n\n2. **Axes Labels and Units:**\n- The vertical axis is labeled as \\( \\frac{V_{\\text{out}}}{V_{\\text{ref}}} \\), representing the ratio of output voltage to the reference voltage.\n- The horizontal axis represents the digital input codes, ranging from '00' to '11' in binary.\n\n3. **Overall Behavior and Trends:**\n- The graph shows a linear increase in output voltage with increasing digital input codes. Each step corresponds to a binary input increment.\n- The curve is staircase-shaped, indicating discrete levels of output voltage for each binary input.\n\n4. **Key Features and Technical Details:**\n- The graph has four steps corresponding to the binary inputs '00', '01', '10', and '11'.\n- The output voltage increases in equal steps, each representing an increment of \\( \\frac{1}{4} \\) of the reference voltage \\( V_{\\text{ref}} \\).\n- The dotted line extends beyond the last step, indicating the theoretical continuation of the linear relationship.\n- The graph highlights that \\( V_{\\text{LSB}} = \\frac{1}{4}V_{\\text{ref}} \\), which is the smallest voltage change corresponding to a one-bit change in the input.\n\n5. **Annotations and Specific Data Points:**\n- The graph includes annotations for each binary input code ('00', '01', '10', '11') and the corresponding output levels.\n- A specific note indicates that \\( V_{\\text{LSB}} = \\frac{1}{4} \\) of \\( V_{\\text{ref}} \\), which equals 1 Least Significant Bit (LSB).\n\nFig. 15.2 Input-output transfer curve for an ideal 2-bit D/A converter.\n\n#### Solution\n\nWe can determine the decimal equivalent of $\\mathrm{B}_{\\text {in }}$ using (15.1)\n\n$$\n\\begin{equation*}\n\\mathrm{B}_{\\text {in }}=2^{-1}+2^{-3}+2^{-4}+2^{-6}=0.703125 \\tag{15.5}\n\\end{equation*}\n$$\n\nThen, using (15.2), we find\n\n$$\n\\begin{equation*}\n\\mathrm{V}_{\\text {out }}=\\mathrm{V}_{\\text {ref }} \\mathrm{B}_{\\text {in }}=3.516 \\mathrm{~V} \\tag{15.6}\n\\end{equation*}\n$$\n\nand\n\n$$\n\\begin{equation*}\nV_{\\text {LSB }}=5 / 256=19.5 \\mathrm{mV} \\tag{15.7}\n\\end{equation*}\n$$"
},
{
    "text": "Examine the block diagram of an N-bit $\\mathrm{D} / \\mathrm{A}$ converter depicted in Fig. 15.1. Here, $\\mathrm{B}_{\\text {in }}$ is designated as an N-bit digital signal (or word) such that\n\n$$\n\\begin{equation*}\n\\mathrm{B}_{\\mathrm{in}}=\\mathrm{b}_{1} 2^{-1}+\\mathrm{b}_{2} 2^{-2}+\\cdots+\\mathrm{b}_{\\mathrm{N}} 2^{-\\mathrm{N}} \\tag{15.1}\n\\end{equation*}\n$$\n\nwhere $b_{i}$ can be either 1 or 0 (i.e., $b_{i}$ is a binary digit). We also identify $b_{1}$ as the most significant bit (MSB) and $b_{N}$ as the least significant bit (LSB). Additionally, we have assumed that $\\mathrm{B}_{\\text {in }}$ represents a positive value, leading to a unipolar D/A converter. A unipolar D/A converter generates an output signal of a single polarity. Conversely, signed converters produce output signals that can be either positive or negative, depending on a sign bit (typically $b_{1}$). Extending these concepts to the signed case is straightforward but necessitates understanding the type of digital representation used (i.e., sign magnitude, offset binary, or 2's complement). Signed codes are covered in Section 15.4.\nimage_name:Fig. 15.1\ndescription:The block diagram labeled \"Fig. 15.1\" illustrates a Digital-to-Analog (D/A) converter system. The primary components of this system are as follows:\n\n1. **D/A Converter Block**: This is the central element of the diagram. It accepts digital input signals and an analog reference signal, producing an analog output signal. The main function of the D/A converter is to transform the digital input into an analog output, utilizing the reference voltage as a scaling factor.\n\n2. **Input Signals**:\n- **$B_{in}$**: This is the digital input signal to the D/A converter. It comprises a sequence of digital bits representing a numerical value to be converted into an analog signal.\n- **$V_{ref}$**: This is the analog reference signal provided to the D/A converter. It acts as a reference voltage that determines the scale of the analog output.\n\n3. **Output Signal**:\n- **$V_{out}$**: This is the analog output signal generated by the D/A converter. It results from converting the digital input, $B_{in}$, using the reference voltage, $V_{ref}$.\n\n**Flow of Information**:\n- The digital input signal ($B_{in}$) enters the D/A converter block from the left.\n- The reference voltage ($V_{ref}$) is also fed into the D/A converter from below.\n- The D/A converter processes these inputs to produce an analog output signal ($V_{out}$), which exits the block on the right.\n\n**Overall System Function**:\nThe main function of this system is to convert a digital signal into an analog signal. The digital input ($B_{in}$) is converted into an analog output ($V_{out}$) by the D/A converter, with the conversion process influenced by the reference voltage ($V_{ref}$). This configuration enables the precise generation of analog signals based on digital inputs, which is crucial in applications such as audio processing, instrumentation, and control systems.\n\nFig. 15.1 A block diagram depicting a D/A converter.\n\nThe analog output signal, $\\mathrm{V}_{\\text {out }}$, is related to the digital signal, $\\mathrm{B}_{\\text {in }}$, through an analog reference signal, $\\mathrm{V}_{\\text {ref }}$. For simplicity, we assume that both $\\mathrm{V}_{\\text {out }}$ and $\\mathrm{V}_{\\text {ret }}$ are voltage signals, although they could generally be other physical quantities, such as current or charge. The relationship between these three signals for a unipolar D/A converter is given by\n\n$$\n\\begin{equation*}\n\\mathrm{V}_{\\text {out }}=\\mathrm{V}_{\\text {ref }}\\left(\\mathrm{b}_{1} 2^{-1}+\\mathrm{b}_{2} 2^{-2}+\\cdots+\\mathrm{b}_{\\mathrm{N}} 2^{-\\mathrm{N}}\\right)=\\mathrm{V}_{\\text {ref }} \\mathrm{B}_{\\text {in }} \\tag{15.2}\n\\end{equation*}\n$$\n\nIt is beneficial to define $\\mathrm{V}_{\\mathrm{LSB}}$ as the voltage change when one LSB changes, or mathematically,\n\n$$\n\\begin{equation*}\nV_{\\mathrm{LSB}} \\equiv \\frac{\\mathrm{~V}_{\\mathrm{ref}}}{2^{\\mathrm{N}}} \\tag{15.3}\n\\end{equation*}\n$$\n\nAlso useful, particularly in error measurement, is the definition of a new \"unit,\" namely, LSB units, which are actually unitless.\n\n$$\n\\begin{equation*}\n1 \\mathrm{LSB}=\\frac{1}{2^{N}} \\tag{15.4}\n\\end{equation*}\n$$\n\nThe transfer curve for an ideal 2-bit D/A converter is illustrated in Fig. 15.2. Note that, although only a finite number of analog values appear at the output, for an ideal D/A converter, the output signals are well-defined. Also, the maximum value of $\\mathrm{V}_{\\text {out }}$ is not $\\mathrm{V}_{\\text {ref }}$ but rather $\\mathrm{V}_{\\text {ref }}\\left(1-2^{-\\mathrm{N}}\\right)$, or equivalently, $\\mathrm{V}_{\\text {ref }}-\\mathrm{V}_{\\text {LSB }}$. Finally, as seen from (15.2), a multiplying D/A converter is achieved by allowing the reference signal, $\\mathrm{V}_{\\text {ref }}$, to be a variable input signal along with the digital input, $\\mathrm{B}_{\\mathrm{in}}$. Such an arrangement results in\n\nKey Point: Data converters translate between digital binary codes and analog voltages or currents. In an ideal converter, the binary codes correspond to analog signal quantities that are precisely equally spaced.\n$V_{\\text {out }}$ being proportional to the product of the input signals, $B_{\\text {in }}$ and $V_{\\text {ref }}$.\n\n#### EXAMPLE 15.1\n\nAn 8-bit $\\mathrm{D} / \\mathrm{A}$ converter has $\\mathrm{V}_{\\text {ret }}=5 \\mathrm{~V}$. What is the output voltage when $\\mathrm{B}_{\\text {in }}=10110100$ ? Also, determine $\\mathrm{V}_{\\text {LSB }}$.\nimage_name:Fig. 15.2 Input-output transfer curve for an ideal 2-bit D/A converter\ndescription:The graph represents the transfer curve for an ideal 2-bit Digital-to-Analog (D/A) converter. It is a staircase plot depicting the relationship between the digital input and the analog output.\n\n1. **Type of Graph and Function:**\n- This is a transfer curve graph for a 2-bit D/A converter, mapping digital input codes to corresponding analog output values.\n\n2. **Axes Labels and Units:**\n- The vertical axis is labeled as \\( \\frac{V_{\\text{out}}}{V_{\\text{ref}}} \\), indicating the ratio of output voltage to the reference voltage.\n- The horizontal axis represents the digital input codes, ranging from '00' to '11' in binary.\n\n3. **Overall Behavior and Trends:**\n- The graph shows a linear increase in output voltage with increasing digital input codes. Each step corresponds to a binary input increment.\n- The curve is staircase-shaped, indicating discrete levels of output voltage for each binary input.\n\n4. **Key Features and Technical Details:**\n- The graph has four steps corresponding to the binary inputs '00', '01', '10', and '11'.\n- The output voltage increases in equal steps, each representing an increment of \\( \\frac{1}{4} \\) of the reference voltage \\( V_{\\text{ref}} \\).\n- The dotted line extends beyond the last step, indicating the theoretical continuation of the linear relationship.\n- The graph highlights that \\( V_{\\text{LSB}} = \\frac{1}{4}V_{\\text{ref}} \\), which is the smallest voltage change corresponding to a one-bit change in the input.\n\n5. **Annotations and Specific Data Points:**\n- The graph includes annotations for each binary input code ('00', '01', '10', '11') and the corresponding output levels.\n- A specific note indicates that \\( V_{\\text{LSB}} = \\frac{1}{4} \\) of \\( V_{\\text{ref}} \\), which equals 1 Least Significant Bit (LSB).\n\nFig. 15.2 Input-output transfer curve for an ideal 2-bit D/A converter.\n\n#### Solution\n\nWe can determine the decimal equivalent of $\\mathrm{B}_{\\text {in }}$ using (15.1)\n\n$$\n\\begin{equation*}\n\\mathrm{B}_{\\text {in }}=2^{-1}+2^{-3}+2^{-4}+2^{-6}=0.703125 \\tag{15.5}\n\\end{equation*}\n$$\n\nThen, using (15.2), we calculate\n\n$$\n\\begin{equation*}\n\\mathrm{V}_{\\text {out }}=\\mathrm{V}_{\\text {ref }} \\mathrm{B}_{\\text {in }}=3.516 \\mathrm{~V} \\tag{15.6}\n\\end{equation*}\n$$\n\nand\n\n$$\n\\begin{equation*}\nV_{\\text {LSB }}=5 / 256=19.5 \\mathrm{mV} \\tag{15.7}\n\\end{equation*}\n$$"
},
{
    "text": "Examine the block diagram of an N-bit $\\mathrm{D} / \\mathrm{A}$ converter depicted in Fig. 15.1. Here, $\\mathrm{B}_{\\text {in }}$ is an N-bit digital signal (or word) defined as follows:\n\n$$\n\\begin{equation*}\n\\mathrm{B}_{\\mathrm{in}}=\\mathrm{b}_{1} 2^{-1}+\\mathrm{b}_{2} 2^{-2}+\\cdots+\\mathrm{b}_{\\mathrm{N}} 2^{-\\mathrm{N}} \\tag{15.1}\n\\end{equation*}\n$$\n\nwhere $b_{i}$ is either 1 or 0 (i.e., a binary digit). We designate $b_{1}$ as the most significant bit (MSB) and $b_{N}$ as the least significant bit (LSB). Additionally, we assume $\\mathrm{B}_{\\text {in }}$ represents a positive value, leading to a unipolar D/A converter, which generates an output signal of a single polarity. Conversely, signed converters produce output signals that can be either positive or negative, depending on a sign bit (typically $b_{1}$). Extending these concepts to signed cases is straightforward but requires understanding the type of digital representation used (e.g., sign magnitude, offset binary, or 2's complement). Signed codes are covered in Section 15.4.\nimage_name:Fig. 15.1\ndescription:The block diagram labeled \"Fig. 15.1\" illustrates a Digital-to-Analog (D/A) converter system. The main components of this system are:\n\n1. **D/A Converter Block**: This central component receives digital input signals and an analog reference signal, converting them into an analog output signal. Its primary role is to transform digital inputs into analog outputs, utilizing the reference voltage as a scaling factor.\n\n2. **Input Signals**:\n- **$B_{in}$**: This is the digital input signal to the D/A converter, comprising a series of digital bits representing a numerical value for conversion.\n- **$V_{ref}$**: This is the analog reference signal provided to the D/A converter, serving as a reference voltage that determines the scale of the analog output.\n\n3. **Output Signal**:\n- **$V_{out}$**: This is the analog output signal produced by the D/A converter, resulting from the conversion of the digital input, $B_{in}$, using the reference voltage, $V_{ref}$.\n\n**Flow of Information**:\n- The digital input signal ($B_{in}$) enters the D/A converter block from the left.\n- The reference voltage ($V_{ref}$) is also input into the D/A converter from below.\n- The D/A converter processes these inputs to produce an analog output signal ($V_{out}$), which exits the block on the right.\n\n**Overall System Function**:\nThe primary function of this system is to convert digital signals into analog signals. The digital input ($B_{in}$) is converted into an analog output ($V_{out}$) by the D/A converter, with the conversion influenced by the reference voltage ($V_{ref}$). This setup is crucial for accurately generating analog signals from digital inputs, essential in applications like audio processing, instrumentation, and control systems.\n\nFig. 15.1 A block diagram representing a D/A converter.\n\nThe analog output signal, $\\mathrm{V}_{\\text {out }}$, is related to the digital signal, $\\mathrm{B}_{\\text {in }}$, through the analog reference signal, $\\mathrm{V}_{\\text {ref }}$. For simplicity, we assume both $\\mathrm{V}_{\\text {out }}$ and $\\mathrm{V}_{\\text {ref }}$ are voltage signals, though they could represent other physical quantities like current or charge. The relationship for a unipolar D/A converter is given by\n\n$$\n\\begin{equation*}\n\\mathrm{V}_{\\text {out }}=\\mathrm{V}_{\\text {ref }}\\left(\\mathrm{b}_{1} 2^{-1}+\\mathrm{b}_{2} 2^{-2}+\\cdots+\\mathrm{b}_{\\mathrm{N}} 2^{-\\mathrm{N}}\\right)=\\mathrm{V}_{\\text {ref }} \\mathrm{B}_{\\text {in }} \\tag{15.2}\n\\end{equation*}\n$$\n\nIt is helpful to define $\\mathrm{V}_{\\mathrm{LSB}}$ as the voltage change when one LSB changes, mathematically expressed as\n\n$$\n\\begin{equation*}\nV_{\\mathrm{LSB}} \\equiv \\frac{\\mathrm{~V}_{\\mathrm{ref}}}{2^{\\mathrm{N}}} \\tag{15.3}\n\\end{equation*}\n$$\n\nAlso useful, especially for error measurement, is the definition of LSB units, which are unitless.\n\n$$\n\\begin{equation*}\n1 \\mathrm{LSB}=\\frac{1}{2^{N}} \\tag{15.4}\n\\end{equation*}\n$$\n\nThe transfer curve for an ideal 2-bit D/A converter is shown in Fig. 15.2. Note that, despite only a finite number of analog values at the output, an ideal D/A converter produces well-defined output signals. Additionally, the maximum value of $\\mathrm{V}_{\\text {out }}$ is not $\\mathrm{V}_{\\text {ref }}$ but $\\mathrm{V}_{\\text {ref }}\\left(1-2^{-\\mathrm{N}}\\right)$, or equivalently, $\\mathrm{V}_{\\text {ref }}-\\mathrm{V}_{\\text {LSB }}$. Finally, as seen from (15.2), a multiplying D/A converter is achieved by allowing the reference signal, $\\mathrm{V}_{\\text {ref }}$, to be a variable input along with the digital input, $\\mathrm{B}_{\\mathrm{in}}$. This setup results in\n\nKey Point: Data converters translate between digital binary codes and analog voltages or currents. In an ideal converter, the binary codes correspond to precisely equally spaced analog signal quantities.\n$V_{\\text {out }}$ being proportional to the product of the input signals, $B_{\\text {in }}$ and $V_{\\text {ref }}$.\n\n#### EXAMPLE 15.1\n\nAn 8-bit $\\mathrm{D} / \\mathrm{A}$ converter has $\\mathrm{V}_{\\text {ref }}=5 \\mathrm{~V}$. What is the output voltage when $\\mathrm{B}_{\\text {in }}=10110100$ ? Also, determine $\\mathrm{V}_{\\text {LSB }}$.\nimage_name:Fig. 15.2 Input-output transfer curve for an ideal 2-bit D/A converter\ndescription:The graph represents the input-output transfer curve for an ideal 2-bit Digital-to-Analog (D/A) converter, depicting the relationship between digital input and analog output.\n\n1. **Graph Type and Function**:\n- This is a transfer curve graph for a 2-bit D/A converter, mapping digital input codes to corresponding analog output values.\n\n2. **Axes Labels and Units**:\n- The vertical axis is labeled \\( \\frac{V_{\\text{out}}}{V_{\\text{ref}}} \\), indicating the ratio of output voltage to the reference voltage.\n- The horizontal axis represents the digital input codes, ranging from '00' to '11' in binary.\n\n3. **Overall Behavior and Trends**:\n- The graph shows a linear increase in output voltage with increasing digital input codes, with each step corresponding to a binary input increment.\n- The curve is staircase-shaped, indicating discrete output voltage levels for each binary input.\n\n4. **Key Features and Technical Details**:\n- The graph features four steps corresponding to the binary inputs '00', '01', '10', and '11'.\n- The output voltage increases in equal steps, each representing an increment of \\( \\frac{1}{4} \\) of the reference voltage \\( V_{\\text{ref}} \\).\n- A dotted line extends beyond the last step, indicating the theoretical continuation of the linear relationship.\n- The graph highlights that \\( V_{\\text{LSB}} = \\frac{1}{4}V_{\\text{ref}} \\), which is the smallest voltage change for a one-bit change in the input.\n\n5. **Annotations and Specific Data Points**:\n- The graph includes annotations for each binary input code ('00', '01', '10', '11') and the corresponding output levels.\n- A note indicates that \\( V_{\\text{LSB}} = \\frac{1}{4} \\) of \\( V_{\\text{ref}} \\), equaling 1 Least Significant Bit (LSB).\n\nFig. 15.2 Input-output transfer curve for an ideal 2-bit D/A converter.\n\n#### Solution\n\nWe first find the decimal equivalent of $\\mathrm{B}_{\\text {in }}$ using (15.1)\n\n$$\n\\begin{equation*}\n\\mathrm{B}_{\\text {in }}=2^{-1}+2^{-3}+2^{-4}+2^{-6}=0.703125 \\tag{15.5}\n\\end{equation*}\n$$\n\nThen, using (15.2), we calculate\n\n$$\n\\begin{equation*}\n\\mathrm{V}_{\\text {out }}=\\mathrm{V}_{\\text {ref }} \\mathrm{B}_{\\text {in }}=3.516 \\mathrm{~V} \\tag{15.6}\n\\end{equation*}\n$$\n\nand\n\n$$\n\\begin{equation*}\nV_{\\text {LSB }}=5 / 256=19.5 \\mathrm{mV} \\tag{15.7}\n\\end{equation*}\n$$"
},
{
    "text": "Examine the block diagram of an N-bit $\\mathrm{D} / \\mathrm{A}$ converter illustrated in Fig. 15.1. Here, $\\mathrm{B}_{\\text {in }}$ is an N-bit digital signal (or word) defined as follows:\n\n$$\n\\begin{equation*}\n\\mathrm{B}_{\\mathrm{in}}=\\mathrm{b}_{1} 2^{-1}+\\mathrm{b}_{2} 2^{-2}+\\cdots+\\mathrm{b}_{\\mathrm{N}} 2^{-\\mathrm{N}} \\tag{15.1}\n\\end{equation*}\n$$\n\nwhere $b_{i}$ is either 1 or 0 (i.e., $b_{i}$ is a binary digit). We designate $b_{1}$ as the most significant bit (MSB) and $b_{N}$ as the least significant bit (LSB). Additionally, we assume $\\mathrm{B}_{\\text {in }}$ represents a positive value, resulting in a unipolar D/A converter. A unipolar D/A converter generates an output signal of a single polarity. Conversely, signed converters produce output signals that can be either positive or negative, depending on a sign bit (typically $b_{1}$). Extending these concepts to signed converters is straightforward but requires understanding the type of digital representation used (e.g., sign magnitude, offset binary, or 2's complement). Signed codes are covered in Section 15.4.\n\n**Image Description: Fig. 15.1**\nThe block diagram labeled \"Fig. 15.1\" depicts a Digital-to-Analog (D/A) converter system. The main components of this system are:\n\n1. **D/A Converter Block**: This central component receives digital input signals and an analog reference signal, producing an analog output signal. Its primary role is to convert digital inputs into analog outputs, using the reference voltage as a scaling factor.\n\n2. **Input Signals**:\n   - **$B_{in}$**: The digital input signal to the D/A converter, consisting of a series of digital bits representing a numerical value for conversion into an analog signal.\n   - **$V_{ref}$**: The analog reference signal provided to the D/A converter, serving as a reference voltage that determines the scale of the analog output.\n\n3. **Output Signal**:\n   - **$V_{out}$**: The analog output signal generated by the D/A converter, resulting from the conversion of the digital input, $B_{in}$, using the reference voltage, $V_{ref}$.\n\n**Flow of Information**:\n- The digital input signal ($B_{in}$) enters the D/A converter block from the left.\n- The reference voltage ($V_{ref}$) is also fed into the D/A converter from below.\n- The D/A converter processes these inputs to produce the analog output signal ($V_{out}$), which exits the block on the right.\n\n**Overall System Function**:\nThe primary function of this system is to convert a digital signal into an analog signal. The digital input ($B_{in}$) is converted into an analog output ($V_{out}$) by the D/A converter, with the conversion influenced by the reference voltage ($V_{ref}$). This setup enables precise generation of analog signals based on digital inputs, crucial in applications like audio processing, instrumentation, and control systems.\n\nFig. 15.1 A block diagram representing a D/A converter.\n\nThe analog output signal, $\\mathrm{V}_{\\text {out }}$, is related to the digital signal, $\\mathrm{B}_{\\text {in }}$, through the analog reference signal, $\\mathrm{V}_{\\text {ref }}$. For simplicity, we assume both $\\mathrm{V}_{\\text {out }}$ and $\\mathrm{V}_{\\text {ref }}$ are voltage signals, though they could be other physical quantities like current or charge. The relationship for a unipolar D/A converter is given by\n\n$$\n\\begin{equation*}\n\\mathrm{V}_{\\text {out }}=\\mathrm{V}_{\\text {ref }}\\left(\\mathrm{b}_{1} 2^{-1}+\\mathrm{b}_{2} 2^{-2}+\\cdots+\\mathrm{b}_{\\mathrm{N}} 2^{-\\mathrm{N}}\\right)=\\mathrm{V}_{\\text {ref }} \\mathrm{B}_{\\text {in }} \\tag{15.2}\n\\end{equation*}\n$$\n\nIt is helpful to define $\\mathrm{V}_{\\mathrm{LSB}}$ as the voltage change when one LSB changes, mathematically expressed as\n\n$$\n\\begin{equation*}\nV_{\\mathrm{LSB}} \\equiv \\frac{\\mathrm{~V}_{\\mathrm{ref}}}{2^{\\mathrm{N}}} \\tag{15.3}\n\\end{equation*}\n$$\n\nAlso useful, particularly for error measurement, is the definition of LSB units, which are unitless.\n\n$$\n\\begin{equation*}\n1 \\mathrm{LSB}=\\frac{1}{2^{N}} \\tag{15.4}\n\\end{equation*}\n$$\n\nThe transfer curve for an ideal 2-bit D/A converter is shown in Fig. 15.2. Note that, despite a finite number of analog output values, an ideal D/A converter produces well-defined output signals. Also, the maximum value of $\\mathrm{V}_{\\text {out }}$ is not $\\mathrm{V}_{\\text {ref }}$ but $\\mathrm{V}_{\\text {ref }}\\left(1-2^{-\\mathrm{N}}\\right)$, or equivalently, $\\mathrm{V}_{\\text {ref }}-\\mathrm{V}_{\\text {LSB }}$. Finally, as seen from (15.2), a multiplying D/A converter is achieved by allowing the reference signal, $\\mathrm{V}_{\\text {ref }}$, to be a variable input along with the digital input, $\\mathrm{B}_{\\mathrm{in}}$. This setup results in\n\nKey Point: Data converters translate between digital binary codes and analog voltages or currents. In an ideal converter, the binary codes correspond to analog signal quantities that are precisely equally spaced.\n$V_{\\text {out }}$ being proportional to the product of the input signals, $B_{\\text {in }}$ and $V_{\\text {ref }}$.\n\n#### EXAMPLE 15.1\n\nAn 8-bit $\\mathrm{D} / \\mathrm{A}$ converter has $\\mathrm{V}_{\\text {ref }}=5 \\mathrm{~V}$. What is the output voltage when $\\mathrm{B}_{\\text {in }}=10110100$? Also, determine $\\mathrm{V}_{\\text {LSB }}$.\n**Image Description: Fig. 15.2**\nThe graph is a transfer curve for an ideal 2-bit Digital-to-Analog (D/A) converter, depicting the relationship between digital input and analog output.\n\n1. **Type of Graph and Function**:\n   - This is a transfer curve graph for a 2-bit D/A converter, mapping digital input codes to corresponding analog output values.\n\n2. **Axes Labels and Units**:\n   - The vertical axis is labeled \\( \\frac{V_{\\text{out}}}{V_{\\text{ref}}} \\), representing the ratio of output voltage to the reference voltage.\n   - The horizontal axis represents the digital input codes, ranging from '00' to '11' in binary.\n\n3. **Overall Behavior and Trends**:\n   - The graph shows a linear increase in output voltage with increasing digital input codes, each step corresponding to a binary input increment.\n   - The curve is staircase-shaped, indicating discrete output voltage levels for each binary input.\n\n4. **Key Features and Technical Details**:\n   - The graph has four steps corresponding to binary inputs '00', '01', '10', and '11'.\n   - The output voltage increases in equal steps, each representing an increment of \\( \\frac{1}{4} \\) of the reference voltage \\( V_{\\text{ref}} \\).\n   - A dotted line extends beyond the last step, indicating the theoretical continuation of the linear relationship.\n   - The graph notes that \\( V_{\\text{LSB}} = \\frac{1}{4}V_{\\text{ref}} \\), the smallest voltage change corresponding to a one-bit input change.\n\n5. **Annotations and Specific Data Points**:\n   - Annotations for each binary input code ('00', '01', '10', '11') and corresponding output levels are included.\n   - A specific note indicates \\( V_{\\text{LSB}} = \\frac{1}{4} \\) of \\( V_{\\text{ref}} \\), equaling 1 Least Significant Bit (LSB).\n\nFig. 15.2 Input-output transfer curve for an ideal 2-bit D/A converter.\n\n#### Solution\n\nWe first find the decimal equivalent of $\\mathrm{B}_{\\text {in }}$ using (15.1):\n\n$$\n\\begin{equation*}\n\\mathrm{B}_{\\text {in }}=2^{-1}+2^{-3}+2^{-4}+2^{-6}=0.703125 \\tag{15.5}\n\\end{equation*}\n$$\n\nThen, using (15.2), we calculate\n\n$$\n\\begin{equation*}\n\\mathrm{V}_{\\text {out }}=\\mathrm{V}_{\\text {ref }} \\mathrm{B}_{\\text {in }}=3.516 \\mathrm{~V} \\tag{15.6}\n\\end{equation*}\n$$\n\nand\n\n$$\n\\begin{equation*}\nV_{\\text {LSB }}=5 / 256=19.5 \\mathrm{mV} \\tag{15.7}\n\\end{equation*}\n$$"
},
{
    "text": "Examine the block diagram of an N-bit $\\mathrm{D}/\\mathrm{A}$ converter depicted in Fig. 15.1. Here, $\\mathrm{B}_{\\text{in}}$ is an N-bit digital signal (or word) defined as follows:\n\n$$\n\\begin{equation*}\n\\mathrm{B}_{\\mathrm{in}} = \\mathrm{b}_{1} 2^{-1} + \\mathrm{b}_{2} 2^{-2} + \\cdots + \\mathrm{b}_{\\mathrm{N}} 2^{-\\mathrm{N}} \\tag{15.1}\n\\end{equation*}\n$$\n\nwhere each $b_{i}$ is either 1 or 0 (i.e., a binary digit). We designate $b_{1}$ as the most significant bit (MSB) and $b_{N}$ as the least significant bit (LSB). Additionally, we assume $\\mathrm{B}_{\\text{in}}$ represents a positive value, resulting in a unipolar D/A converter, which produces an output signal of a single polarity. Conversely, signed converters can generate output signals of either positive or negative polarity, depending on a sign bit (typically $b_{1}$). Extending these concepts to signed converters is straightforward but requires understanding the digital representation used (e.g., sign magnitude, offset binary, or 2's complement). Signed codes are covered in Section 15.4.\nimage_name:Fig. 15.1\ndescription:The block diagram labeled \"Fig. 15.1\" illustrates a Digital-to-Analog (D/A) converter system. The main components of this system are:\n\n1. **D/A Converter Block**: This central component receives digital input signals and an analog reference signal, producing an analog output signal. Its primary role is to convert digital inputs into analog outputs, using the reference voltage as a scaling factor.\n\n2. **Input Signals**:\n- **$B_{in}$**: The digital input signal to the D/A converter, consisting of a series of digital bits representing a numerical value for conversion into an analog signal.\n- **$V_{ref}$**: The analog reference signal provided to the D/A converter, serving as a reference voltage that determines the scale of the analog output.\n\n3. **Output Signal**:\n- **$V_{out}$**: The analog output signal generated by the D/A converter, resulting from the conversion of the digital input $B_{in}$ using the reference voltage $V_{ref}$.\n\n**Flow of Information**:\n- The digital input signal ($B_{in}$) enters the D/A converter block from the left.\n- The reference voltage ($V_{ref}$) is also input into the D/A converter from below.\n- The D/A converter processes these inputs to produce the analog output signal ($V_{out}$), which exits the block on the right.\n\n**Overall System Function**:\nThe primary function of this system is to convert a digital signal into an analog signal. The digital input ($B_{in}$) is converted into an analog output ($V_{out}$) by the D/A converter, with the conversion influenced by the reference voltage ($V_{ref}$). This setup enables precise generation of analog signals based on digital inputs, crucial for applications like audio processing, instrumentation, and control systems.\n\nFig. 15.1 A block diagram representing a D/A converter.\n\nThe analog output signal, $\\mathrm{V}_{\\text{out}}$, is related to the digital signal, $\\mathrm{B}_{\\text{in}}$, through the analog reference signal, $\\mathrm{V}_{\\text{ref}}$. For simplicity, we assume both $\\mathrm{V}_{\\text{out}}$ and $\\mathrm{V}_{\\text{ref}}$ are voltage signals, though they could be other physical quantities like current or charge. The relationship for a unipolar D/A converter is given by\n\n$$\n\\begin{equation*}\n\\mathrm{V}_{\\text{out}} = \\mathrm{V}_{\\text{ref}} \\left( \\mathrm{b}_{1} 2^{-1} + \\mathrm{b}_{2} 2^{-2} + \\cdots + \\mathrm{b}_{\\mathrm{N}} 2^{-\\mathrm{N}} \\right) = \\mathrm{V}_{\\text{ref}} \\mathrm{B}_{\\text{in}} \\tag{15.2}\n\\end{equation*}\n$$\n\nIt is helpful to define $\\mathrm{V}_{\\mathrm{LSB}}$ as the voltage change when one LSB changes, mathematically expressed as\n\n$$\n\\begin{equation*}\nV_{\\mathrm{LSB}} \\equiv \\frac{\\mathrm{V}_{\\text{ref}}}{2^{\\mathrm{N}}} \\tag{15.3}\n\\end{equation*}\n$$\n\nAlso useful, particularly for error measurement, is the definition of LSB units, which are unitless.\n\n$$\n\\begin{equation*}\n1 \\mathrm{LSB} = \\frac{1}{2^{\\mathrm{N}}} \\tag{15.4}\n\\end{equation*}\n$$\n\nThe transfer curve for an ideal 2-bit D/A converter is shown in Fig. 15.2. Note that, despite only a finite number of analog values at the output, an ideal D/A converter produces well-defined output signals. Also, the maximum value of $\\mathrm{V}_{\\text{out}}$ is not $\\mathrm{V}_{\\text{ref}}$ but $\\mathrm{V}_{\\text{ref}} \\left(1 - 2^{-\\mathrm{N}}\\right)$, or equivalently, $\\mathrm{V}_{\\text{ref}} - \\mathrm{V}_{\\text{LSB}}$. Finally, as seen from (15.2), a multiplying D/A converter is achieved by allowing the reference signal, $\\mathrm{V}_{\\text{ref}}$, to be a variable input along with the digital input, $\\mathrm{B}_{\\text{in}}$. This setup results in\n\nKey Point: Data converters translate between digital binary codes and analog voltages or currents. In an ideal converter, the binary codes correspond to precisely equally spaced analog signal quantities.\n$V_{\\text{out}}$ being proportional to the product of the input signals, $B_{\\text{in}}$ and $V_{\\text{ref}}$.\n\n#### EXAMPLE 15.1\n\nAn 8-bit $\\mathrm{D}/\\mathrm{A}$ converter has $\\mathrm{V}_{\\text{ref}} = 5 \\mathrm{V}$. What is the output voltage when $\\mathrm{B}_{\\text{in}} = 10110100$? Also, determine $\\mathrm{V}_{\\text{LSB}}$.\nimage_name:Fig. 15.2 Input-output transfer curve for an ideal 2-bit D/A converter\ndescription:The graph depicts the transfer curve for an ideal 2-bit Digital-to-Analog (D/A) converter, showing the relationship between digital input and analog output.\n\n1. **Type of Graph and Function**:\n- This is a transfer curve graph for a 2-bit D/A converter, mapping digital input codes to corresponding analog output values.\n\n2. **Axes Labels and Units**:\n- The vertical axis is labeled \\( \\frac{V_{\\text{out}}}{V_{\\text{ref}}} \\), representing the ratio of output voltage to the reference voltage.\n- The horizontal axis represents the digital input codes, ranging from '00' to '11' in binary.\n\n3. **Overall Behavior and Trends**:\n- The graph displays a linear increase in output voltage with increasing digital input codes, with each step corresponding to a binary input increment.\n- The curve is staircase-shaped, indicating discrete output voltage levels for each binary input.\n\n4. **Key Features and Technical Details**:\n- The graph has four steps corresponding to binary inputs '00', '01', '10', and '11'.\n- The output voltage increases in equal steps, each representing \\( \\frac{1}{4} \\) of the reference voltage \\( V_{\\text{ref}} \\).\n- A dotted line extends beyond the last step, indicating the theoretical linear relationship continuation.\n- The graph notes that \\( V_{\\text{LSB}} = \\frac{1}{4}V_{\\text{ref}} \\), the smallest voltage change for a one-bit input change.\n\n5. **Annotations and Specific Data Points**:\n- The graph includes annotations for each binary input code ('00', '01', '10', '11') and corresponding output levels.\n- A specific note indicates \\( V_{\\text{LSB}} = \\frac{1}{4} \\) of \\( V_{\\text{ref}} \\), equaling 1 Least Significant Bit (LSB).\n\nFig. 15.2 Input-output transfer curve for an ideal 2-bit D/A converter.\n\n#### Solution\n\nWe first find the decimal equivalent of $\\mathrm{B}_{\\text{in}}$ using (15.1):\n\n$$\n\\begin{equation*}\n\\mathrm{B}_{\\text{in}} = 2^{-1} + 2^{-3} + 2^{-4} + 2^{-6} = 0.703125 \\tag{15.5}\n\\end{equation*}\n$$\n\nThen, using (15.2), we calculate\n\n$$\n\\begin{equation*}\n\\mathrm{V}_{\\text{out}} = \\mathrm{V}_{\\text{ref}} \\mathrm{B}_{\\text{in}} = 3.516 \\mathrm{V} \\tag{15.6}\n\\end{equation*}\n$$\n\nand\n\n$$\n\\begin{equation*}\nV_{\\text{LSB}} = \\frac{5}{256} = 19.5 \\mathrm{mV} \\tag{15.7}\n\\end{equation*}\n$$"
},
{
    "text": "Examine the block diagram of an N-bit $\\mathrm{D} / \\mathrm{A}$ converter depicted in Fig. 15.1. Here, $\\mathrm{B}_{\\text {in }}$ is designated as an N-bit digital signal (or word) such that\n\n$$\n\\begin{equation*}\n\\mathrm{B}_{\\mathrm{in}}=\\mathrm{b}_{1} 2^{-1}+\\mathrm{b}_{2} 2^{-2}+\\cdots+\\mathrm{b}_{\\mathrm{N}} 2^{-\\mathrm{N}} \\tag{15.1}\n\\end{equation*}\n$$\n\nwhere $b_{i}$ is either 1 or 0 (i.e., $b_{i}$ is a binary digit). We also identify $b_{1}$ as the most significant bit (MSB) and $b_{N}$ as the least significant bit (LSB). Additionally, we assume $\\mathrm{B}_{\\text {in }}$ represents a positive value, leading to a unipolar D/A converter. A unipolar D/A converter generates an output signal of a single polarity. Conversely, signed converters produce output signals that can be either positive or negative, depending on a sign bit (usually $b_{1}$). Extending these concepts to signed cases is straightforward but necessitates knowledge of the digital representation type (i.e., sign magnitude, offset binary, or 2's complement). Signed codes are covered in Section 15.4.\nimage_name:Fig. 15.1\ndescription:The block diagram labeled \"Fig. 15.1\" illustrates a Digital-to-Analog (D/A) converter system. The primary components of this system are:\n\n1. **D/A Converter Block**: This central element receives digital input signals and an analog reference signal, producing an analog output signal. Its main function is to convert digital inputs into analog outputs, utilizing the reference voltage as a scaling factor.\n\n2. **Input Signals**:\n- **$B_{in}$**: This is the digital input to the D/A converter, comprising a series of digital bits representing a numerical value for conversion into an analog signal.\n- **$V_{ref}$**: This is the analog reference signal provided to the D/A converter, serving as a reference voltage that determines the analog output scale.\n\n3. **Output Signal**:\n- **$V_{out}$**: This is the analog output generated by the D/A converter, resulting from the conversion of the digital input, $B_{in}$, using the reference voltage, $V_{ref}$.\n\n**Information Flow**:\n- The digital input signal ($B_{in}$) enters the D/A converter block from the left.\n- The reference voltage ($V_{ref}$) is also input into the D/A converter from below.\n- The D/A converter processes these inputs to produce the analog output signal ($V_{out}$), which exits the block on the right.\n\n**System Function**:\nThe main function of this system is to convert a digital signal into an analog signal. The digital input ($B_{in}$) is converted into an analog output ($V_{out}$) by the D/A converter, with the conversion influenced by the reference voltage ($V_{ref}$). This setup enables precise generation of analog signals from digital inputs, crucial in applications like audio processing, instrumentation, and control systems.\n\nFig. 15.1 A block diagram depicting a D/A converter.\n\nThe analog output signal, $\\mathrm{V}_{\\text {out }}$, is related to the digital signal, $\\mathrm{B}_{\\text {in }}$, through the analog reference signal, $\\mathrm{V}_{\\text {ref }}$. For simplicity, we assume both $\\mathrm{V}_{\\text {out }}$ and $\\mathrm{V}_{\\text {ref }}$ are voltage signals, though they could be other physical quantities like current or charge. The relationship for a unipolar D/A converter is given by\n\n$$\n\\begin{equation*}\n\\mathrm{V}_{\\text {out }}=\\mathrm{V}_{\\text {ref }}\\left(\\mathrm{b}_{1} 2^{-1}+\\mathrm{b}_{2} 2^{-2}+\\cdots+\\mathrm{b}_{\\mathrm{N}} 2^{-\\mathrm{N}}\\right)=\\mathrm{V}_{\\text {ref }} \\mathrm{B}_{\\text {in }} \\tag{15.2}\n\\end{equation*}\n$$\n\nIt is beneficial to define $\\mathrm{V}_{\\mathrm{LSB}}$ as the voltage change when one LSB changes, mathematically expressed as\n\n$$\n\\begin{equation*}\nV_{\\mathrm{LSB}} \\equiv \\frac{\\mathrm{~V}_{\\mathrm{ref}}}{2^{\\mathrm{N}}} \\tag{15.3}\n\\end{equation*}\n$$\n\nAlso useful, particularly for error measurement, is the definition of LSB units, which are unitless.\n\n$$\n\\begin{equation*}\n1 \\mathrm{LSB}=\\frac{1}{2^{N}} \\tag{15.4}\n\\end{equation*}\n$$\n\nThe transfer curve for an ideal 2-bit D/A converter is shown in Fig. 15.2. Note that, despite only a finite number of analog output values, an ideal D/A converter produces well-defined output signals. Also, the maximum $\\mathrm{V}_{\\text {out }}$ is not $\\mathrm{V}_{\\text {ref }}$ but $\\mathrm{V}_{\\text {ref }}\\left(1-2^{-\\mathrm{N}}\\right)$, or equivalently, $\\mathrm{V}_{\\text {ref }}-\\mathrm{V}_{\\text {LSB }}$. Finally, as seen from (15.2), a multiplying D/A converter is achieved by allowing the reference signal, $\\mathrm{V}_{\\text {ref }}$, to vary along with the digital input, $\\mathrm{B}_{\\mathrm{in}}$. This setup results in\n\nKey Point: Data converters translate between digital binary codes and analog voltages or currents. In an ideal converter, the binary codes correspond to precisely equally spaced analog signal quantities.\n$V_{\\text {out }}$ being proportional to the product of the input signals, $B_{\\text {in }}$ and $V_{\\text {ref }}$.\n\n#### EXAMPLE 15.1\n\nAn 8-bit $\\mathrm{D} / \\mathrm{A}$ converter has $\\mathrm{V}_{\\text {ref }}=5 \\mathrm{~V}$. What is the output voltage when $\\mathrm{B}_{\\text {in }}=10110100$? Also, determine $\\mathrm{V}_{\\text {LSB }}$.\nimage_name:Fig. 15.2 Input-output transfer curve for an ideal 2-bit D/A converter\ndescription:The graph is a transfer curve for an ideal 2-bit Digital-to-Analog (D/A) converter, showing the relationship between digital input and analog output.\n\n1. **Graph Type and Function**:\n- This is a transfer curve graph for a 2-bit D/A converter, mapping digital input codes to corresponding analog output values.\n\n2. **Axes Labels and Units**:\n- The vertical axis is labeled \\( \\frac{V_{\\text{out}}}{V_{\\text{ref}}} \\), representing the ratio of output voltage to reference voltage.\n- The horizontal axis represents the digital input codes, ranging from '00' to '11' in binary.\n\n3. **Behavior and Trends**:\n- The graph shows a linear increase in output voltage with increasing digital input codes, with each step corresponding to a binary input increment.\n- The curve is staircase-shaped, indicating discrete output voltage levels for each binary input.\n\n4. **Key Features and Technical Details**:\n- The graph has four steps corresponding to binary inputs '00', '01', '10', and '11'.\n- The output voltage increases in equal steps, each representing \\( \\frac{1}{4} \\) of the reference voltage \\( V_{\\text{ref}} \\).\n- A dotted line extends beyond the last step, indicating the theoretical linear relationship continuation.\n- The graph notes that \\( V_{\\text{LSB}} = \\frac{1}{4}V_{\\text{ref}} \\), the smallest voltage change for a one-bit input change.\n\n5. **Annotations and Specific Data Points**:\n- The graph includes annotations for each binary input code ('00', '01', '10', '11') and corresponding output levels.\n- A specific note indicates \\( V_{\\text{LSB}} = \\frac{1}{4} \\) of \\( V_{\\text{ref}} \\), equal to 1 Least Significant Bit (LSB).\n\nFig. 15.2 Input-output transfer curve for an ideal 2-bit D/A converter.\n\n#### Solution\n\nWe first find the decimal equivalent of $\\mathrm{B}_{\\text {in }}$ using (15.1)\n\n$$\n\\begin{equation*}\n\\mathrm{B}_{\\text {in }}=2^{-1}+2^{-3}+2^{-4}+2^{-6}=0.703125 \\tag{15.5}\n\\end{equation*}\n$$\n\nThen, using (15.2), we calculate\n\n$$\n\\begin{equation*}\n\\mathrm{V}_{\\text {out }}=\\mathrm{V}_{\\text {ref }} \\mathrm{B}_{\\text {in }}=3.516 \\mathrm{~V} \\tag{15.6}\n\\end{equation*}\n$$\n\nand\n\n$$\n\\begin{equation*}\nV_{\\text {LSB }}=5 / 256=19.5 \\mathrm{mV} \\tag{15.7}\n\\end{equation*}\n$$"
},
{
    "text": "Consider the block diagram of an N-bit $\\mathrm{D}/\\mathrm{A}$ converter illustrated in Fig. 15.1. Here, $\\mathrm{B}_{\\text{in}}$ is designated as an N-bit digital signal (or word) such that\n\n$$\n\\begin{equation*}\n\\mathrm{B}_{\\mathrm{in}} = \\mathrm{b}_1 2^{-1} + \\mathrm{b}_2 2^{-2} + \\cdots + \\mathrm{b}_{\\mathrm{N}} 2^{-\\mathrm{N}} \\tag{15.1}\n\\end{equation*}\n$$\n\nwhere $\\mathrm{b}_i$ equals either 1 or 0 (i.e., $\\mathrm{b}_i$ is a binary digit). We also identify $\\mathrm{b}_1$ as the most significant bit (MSB) and $\\mathrm{b}_N$ as the least significant bit (LSB). Furthermore, we assume $\\mathrm{B}_{\\text{in}}$ represents a positive value, resulting in a unipolar D/A converter. A unipolar D/A converter generates an output signal of a single polarity. Conversely, signed converters produce output signals that can be either positive or negative, depending on a sign bit (typically $\\mathrm{b}_1$). Extending these concepts to the signed case is straightforward but necessitates knowledge of the digital representation type used (i.e., sign magnitude, offset binary, or 2's complement). Signed codes are discussed in Section 15.4.\n\n**Image Description: Fig. 15.1**\nThe block diagram labeled \"Fig. 15.1\" depicts a Digital-to-Analog (D/A) converter system. The main components of this system are:\n\n1. **D/A Converter Block**: This central component receives digital input signals and an analog reference signal, producing an analog output signal. Its primary role is to convert digital inputs into analog outputs, utilizing the reference voltage as a scaling factor.\n\n2. **Input Signals**:\n   - **$B_{\\text{in}}$**: The digital input signal to the D/A converter, comprising a series of digital bits representing a numerical value for conversion into an analog signal.\n   - **$V_{\\text{ref}}$**: The analog reference signal provided to the D/A converter, serving as a reference voltage that determines the scale of the analog output.\n\n3. **Output Signal**:\n   - **$V_{\\text{out}}$**: The analog output signal generated by the D/A converter, resulting from the conversion of the digital input $B_{\\text{in}}$ using the reference voltage $V_{\\text{ref}}$.\n\n**Flow of Information**:\n- The digital input signal ($B_{\\text{in}}$) enters the D/A converter block from the left.\n- The reference voltage ($V_{\\text{ref}}$) is also fed into the D/A converter from below.\n- The D/A converter processes these inputs to produce the analog output signal ($V_{\\text{out}}$), which exits the block on the right.\n\n**Overall System Function**:\nThe primary function of this system is to convert a digital signal into an analog signal. The digital input ($B_{\\text{in}}$) is converted into an analog output ($V_{\\text{out}}$) by the D/A converter, with the conversion influenced by the reference voltage ($V_{\\text{ref}}$). This setup enables precise generation of analog signals based on digital inputs, crucial for applications like audio processing, instrumentation, and control systems.\n\nFig. 15.1 A block diagram representing a D/A converter.\n\nThe analog output signal, $\\mathrm{V}_{\\text{out}}$, is related to the digital signal, $\\mathrm{B}_{\\text{in}}$, through the analog reference signal, $\\mathrm{V}_{\\text{ref}}$. For simplicity, we assume both $\\mathrm{V}_{\\text{out}}$ and $\\mathrm{V}_{\\text{ref}}$ are voltage signals, though they could be other physical quantities like current or charge. The relationship for a unipolar D/A converter is given by\n\n$$\n\\begin{equation*}\n\\mathrm{V}_{\\text{out}} = \\mathrm{V}_{\\text{ref}} \\left( \\mathrm{b}_1 2^{-1} + \\mathrm{b}_2 2^{-2} + \\cdots + \\mathrm{b}_{\\mathrm{N}} 2^{-\\mathrm{N}} \\right) = \\mathrm{V}_{\\text{ref}} \\mathrm{B}_{\\text{in}} \\tag{15.2}\n\\end{equation*}\n$$\n\nIt is beneficial to define $\\mathrm{V}_{\\mathrm{LSB}}$ as the voltage change when one LSB changes, mathematically expressed as\n\n$$\n\\begin{equation*}\nV_{\\mathrm{LSB}} \\equiv \\frac{\\mathrm{V}_{\\text{ref}}}{2^{\\mathrm{N}}} \\tag{15.3}\n\\end{equation*}\n$$\n\nAlso useful, particularly for error measurement, is the definition of LSB units, which are unitless.\n\n$$\n\\begin{equation*}\n1 \\mathrm{LSB} = \\frac{1}{2^{\\mathrm{N}}} \\tag{15.4}\n\\end{equation*}\n$$\n\nThe transfer curve for an ideal 2-bit D/A converter is shown in Fig. 15.2. Note that, despite only a finite number of analog values at the output, an ideal D/A converter produces well-defined output signals. Also, the maximum value of $\\mathrm{V}_{\\text{out}}$ is not $\\mathrm{V}_{\\text{ref}}$ but $\\mathrm{V}_{\\text{ref}} \\left(1 - 2^{-\\mathrm{N}}\\right)$, or equivalently, $\\mathrm{V}_{\\text{ref}} - \\mathrm{V}_{\\text{LSB}}$. Finally, as seen from (15.2), a multiplying D/A converter is realized by allowing the reference signal, $\\mathrm{V}_{\\text{ref}}$, to be a variable input along with the digital input, $\\mathrm{B}_{\\text{in}}$. This setup results in $V_{\\text{out}}$ being proportional to the product of the input signals, $B_{\\text{in}}$ and $V_{\\text{ref}}$.\n\n**Key Point**: Data converters translate between digital binary codes and analog voltages or currents. In an ideal converter, the binary codes correspond to precisely equally spaced analog signal quantities.\n\n#### EXAMPLE 15.1\n\nAn 8-bit $\\mathrm{D}/\\mathrm{A}$ converter has $\\mathrm{V}_{\\text{ref}} = 5 \\mathrm{V}$. What is the output voltage when $\\mathrm{B}_{\\text{in}} = 10110100$? Also, find $\\mathrm{V}_{\\text{LSB}}$.\n\n**Image Description: Fig. 15.2**\nThe graph is a transfer curve for an ideal 2-bit Digital-to-Analog (D/A) converter, depicting the relationship between digital input and analog output.\n\n1. **Graph Type and Function**:\n   - This is a transfer curve graph for a 2-bit D/A converter, mapping digital input codes to corresponding analog output values.\n\n2. **Axes Labels and Units**:\n   - The vertical axis is labeled as $\\frac{V_{\\text{out}}}{V_{\\text{ref}}}$, representing the ratio of output voltage to the reference voltage.\n   - The horizontal axis represents the digital input codes, ranging from '00' to '11' in binary.\n\n3. **Overall Behavior and Trends**:\n   - The graph shows a linear increase in output voltage with increasing digital input codes, each step corresponding to a binary input increment.\n   - The curve is staircase-shaped, indicating discrete output voltage levels for each binary input.\n\n4. **Key Features and Technical Details**:\n   - The graph has four steps corresponding to binary inputs '00', '01', '10', and '11'.\n   - The output voltage increases in equal steps, each representing an increment of $\\frac{1}{4}$ of the reference voltage $V_{\\text{ref}}$.\n   - A dotted line extends beyond the last step, indicating the theoretical linear relationship continuation.\n   - The graph notes that $V_{\\text{LSB}} = \\frac{1}{4}V_{\\text{ref}}$, corresponding to a one-bit change in the input.\n\n5. **Annotations and Specific Data Points**:\n   - The graph includes annotations for each binary input code ('00', '01', '10', '11') and corresponding output levels.\n   - A specific note indicates $V_{\\text{LSB}} = \\frac{1}{4}$ of $V_{\\text{ref}}$, equal to 1 Least Significant Bit (LSB).\n\nFig. 15.2 Input-output transfer curve for an ideal 2-bit D/A converter.\n\n#### Solution\n\nWe can determine the decimal equivalent of $\\mathrm{B}_{\\text{in}}$ using (15.1):\n\n$$\n\\begin{equation*}\n\\mathrm{B}_{\\text{in}} = 2^{-1} + 2^{-3} + 2^{-4} + 2^{-6} = 0.703125 \\tag{15.5}\n\\end{equation*}\n$$\n\nThen, using (15.2), we find\n\n$$\n\\begin{equation*}\n\\mathrm{V}_{\\text{out}} = \\mathrm{V}_{\\text{ref}} \\mathrm{B}_{\\text{in}} = 3.516 \\mathrm{V} \\tag{15.6}\n\\end{equation*}\n$$\n\nand\n\n$$\n\\begin{equation*}\nV_{\\text{LSB}} = \\frac{5}{256} = 19.5 \\mathrm{mV} \\tag{15.7}\n\\end{equation*}\n$$"
},
{
    "text": "image_name:Fig. 15.3 A block diagram illustrating an A/D converter\ndescription:Fig. 15.3 depicts a block diagram of an Analog-to-Digital (A/D) converter system. The core element of this system is the \"A/D\" block, which signifies the analog-to-digital converter. This block's primary role is to convert an analog input voltage into a digital output word.\n\nMain Components:\n- **A/D Converter Block:** This central unit is tasked with converting analog signals into digital format.\n\nFlow of Information or Control:\n- **Analog Input (V_in):** The analog input voltage, represented as \\( V_{\\text{in}} \\), enters the A/D converter block from the left. This signal is the one to be digitized.\n- **Reference Voltage (V_ref):** The reference voltage, \\( V_{\\text{ref}} \\), is fed into the A/D converter from below. This voltage is essential for setting the scale and resolution of the conversion.\n- **Digital Output (B_out):** The A/D converter's output is a digital word, denoted as \\( B_{\\text{out}} \\), which exits the block on the right. This represents the binary equivalent of the analog input signal.\n\nLabels, Annotations, and Key Indicators:\n- The diagram includes labels for \\( V_{\\text{in}} \\), \\( V_{\\text{ref}} \\), and \\( B_{\\text{out}} \\) to indicate the input, output, and reference signal points.\n\nOverall System Function:\nThe main function of this A/D converter system is to convert an analog input signal into a corresponding digital output. The reference voltage \\( V_{\\text{ref}} \\) is used to calibrate the conversion, ensuring the digital output accurately reflects the analog input within the specified resolution and range. This conversion is crucial for interfacing analog signals with digital systems, facilitating further processing, storage, or transmission in digital form.\n\nFig. 15.3 A block diagram illustrating an A/D converter.\nimage_name:Fig. 15.4 Input-output transfer curve for a 2-bit A/D converter\ndescription:Fig. 15.4, titled \"Input-output transfer curve for a 2-bit A/D converter,\" is a step function graph showing the relationship between the analog input voltage \\( V_{\\text{in}} \\) and the digital output \\( B_{\\text{out}} \\) for a 2-bit analog-to-digital converter.\n\nType of Graph and Function:\nThis graph is a step function, commonly used to depict the quantization process in A/D converters.\n\nAxes Labels and Units:\n- **Horizontal Axis (X-axis):** Represents the normalized analog input voltage \\( V_{\\text{in}}/V_{\\text{ref}} \\), ranging from 0 to 1.\n- **Vertical Axis (Y-axis):** Represents the digital output \\( B_{\\text{out}} \\), which can take discrete values corresponding to the binary outputs 00, 01, 10, and 11.\n\nOverall Behavior and Trends:\nThe graph displays a series of discrete steps, each corresponding to a range of input voltages that map to a specific digital output. The steps increment as the input voltage rises, reflecting the quantization levels of the 2-bit converter.\n\nKey Features and Technical Details:\n- The step size is equivalent to 1 LSB (Least Significant Bit), defined as \\( V_{\\text{LSB}} = \\frac{1}{4}V_{\\text{ref}} \\).\n- The input voltage \\( V_{\\text{in}} \\) is divided into four regions: 0 to \\( \\frac{1}{4}V_{\\text{ref}} \\), \\( \\frac{1}{4}V_{\\text{ref}} \\) to \\( \\frac{1}{2}V_{\\text{ref}} \\), \\( \\frac{1}{2}V_{\\text{ref}} \\) to \\( \\frac{3}{4}V_{\\text{ref}} \\), and \\( \\frac{3}{4}V_{\\text{ref}} \\) to \\( V_{\\text{ref}} \\).\n- The digital output \\( B_{\\text{out}} \\) transitions from 00 to 11 as the input voltage increases through these regions.\n\nAnnotations and Specific Data Points:\n- The graph includes annotations for each transition point, indicating the input voltage at which the digital output changes.\n- A dashed line represents the ideal linear relationship between \\( V_{\\text{in}} \\) and \\( B_{\\text{out}} \\), highlighting the quantization error.\n\nThis graph effectively illustrates the quantization process in a 2-bit A/D converter, showing how continuous input voltages are mapped to discrete digital outputs, with each step representing a quantization level defined by the converter's resolution.\n\nFig. 15.4 Input-output transfer curve for a 2-bit A/D converter.\n\nThe block diagram for an A/D converter is presented in Fig. 15.3, where \\( B_{\\text{out}} \\) represents the digital output word, and \\( V_{\\text{in}} \\) and \\( V_{\\text{ref}} \\) are the analog input and reference signals, respectively. Additionally, \\( V_{\\text{LSB}} \\) is defined as the signal change corresponding to a single LSB change, similar to the D/A case.\n\nFor an A/D converter, the following equation relates these signals:\n\n$$\nV_{\\text{ref}}\\left(b_1 2^{-1} + b_2 2^{-2} + \\cdots + b_N 2^{-N}\\right) = V_{\\text{in}} \\pm V_x\n$$\n\nwhere\n\n$$\n\\begin{equation*}\n-\\frac{1}{2} V_{\\text{LSB}} \\leq V_x < \\frac{1}{2} V_{\\text{LSB}} \\tag{15.8}\n\\end{equation*}\n$$\n\nNote that there is a range of valid input values that produce the same digital output word, leading to quantization error. In contrast, no quantization error occurs in a D/A converter because the output signals are well-defined. ${}^{1}$\n\nAs with the D/A case, a transfer curve for an A/D converter can be depicted as shown in Fig. 15.4 for a 2-bit converter. Note that the transitions along the \\( V_{\\text{in}} \\) axis are offset by \\( \\frac{1}{2} V_{\\text{LSB}} \\), ensuring the midpoints of the staircase curve align precisely with the equivalent D/A transfer curve. Here, the transition voltages are denoted as \\( V_{ij} \\), where the subscript \\( ij \\) indicates the upper \\( B_{\\text{out}} \\) value of the transition. For instance, \\( V_{01} \\) in Fig. 15.4 represents the voltage (normalized with respect to \\( V_{\\text{ref}} \\)) for the transition from 00 to 01.\n\nFinally, it should be noted that the relationship in (15.8) holds only if the input signal remains within 1 LSB of the two last transition voltages. Specifically, for the 2-bit transfer curve shown in Fig. 15.4, \\( V_{\\text{in}} \\) should be less than \\( \\frac{7}{8} V_{\\text{ref}} \\) and greater than \\( -\\frac{1}{8} V_{\\text{ref}} \\). Otherwise, the quantizer is considered overloaded, as the magnitude of the quantization error would exceed \\( \\frac{V_{\\text{LSB}}}{2} \\).\n\n1. Quantization errors will occur if a 6-bit D/A converter is used to convert a 10-bit digital signal, but in this scenario, the error arises from converting a 10-bit digital signal to a 6-bit digital signal."
},
{
    "text": "image_name:Fig. 15.3 A block diagram depicting an A/D converter\ndescription:Fig. 15.3 illustrates a block diagram of an Analog-to-Digital (A/D) converter system. The core element of this system is the \"A/D\" block, which signifies the analog-to-digital converter. This block's primary role is to convert an analog input voltage into a digital output word.\n\nMain Components:\n- **A/D Converter Block:** This central unit is tasked with converting analog signals into digital format.\n\nFlow of Information or Control:\n- **Analog Input (V_in):** The analog input voltage, represented as \\( V_{\\text{in}} \\), is fed into the A/D converter block from the left. This signal is the one that requires digitization.\n- **Reference Voltage (V_ref):** The reference voltage, denoted as \\( V_{\\text{ref}} \\), is supplied to the A/D converter from below. This voltage is essential for establishing the scale and resolution of the conversion.\n- **Digital Output (B_out):** The A/D converter's output is a digital word, labeled \\( B_{\\text{out}} \\), which exits the block on the right. This represents the binary counterpart of the analog input signal.\n\nLabels, Annotations, and Key Indicators:\n- The diagram features labels for \\( V_{\\text{in}} \\), \\( V_{\\text{ref}} \\), and \\( B_{\\text{out}} \\) to clearly indicate the input, output, and reference points.\n\nOverall System Function:\nThe main function of this A/D converter system is to convert an analog input signal into a corresponding digital output. The reference voltage \\( V_{\\text{ref}} \\) is utilized to calibrate the conversion, ensuring the digital output accurately reflects the analog input within the defined resolution and range. This conversion is vital for integrating analog signals with digital systems, facilitating further processing, storage, or transmission in digital format.\n\nFig. 15.3 A block diagram depicting an A/D converter.\nimage_name:Fig. 15.4 Input-output transfer curve for a 2-bit A/D converter\ndescription:Fig. 15.4, titled \"Input-output transfer curve for a 2-bit A/D converter,\" presents a step function that depicts the relationship between the analog input voltage \\( V_{\\text{in}} \\) and the digital output \\( B_{\\text{out}} \\) for a 2-bit analog-to-digital converter.\n\nType of Graph and Function:\nThis graph is a step function, commonly used to depict the quantization process in A/D converters.\n\nAxes Labels and Units:\n- **Horizontal Axis (X-axis):** Represents the normalized analog input voltage \\( V_{\\text{in}}/V_{\\text{ref}} \\), ranging from 0 to 1.\n- **Vertical Axis (Y-axis):** Represents the digital output \\( B_{\\text{out}} \\), which can assume discrete values corresponding to the binary outputs 00, 01, 10, and 11.\n\nOverall Behavior and Trends:\nThe graph displays a series of discrete steps, each corresponding to a range of input voltages that map to a specific digital output. As the input voltage increases, the steps increment, reflecting the quantization levels of the 2-bit converter.\n\nKey Features and Technical Details:\n- The step size equates to 1 LSB (Least Significant Bit), defined as \\( V_{\\text{LSB}} = \\frac{1}{4}V_{\\text{ref}} \\).\n- The input voltage \\( V_{\\text{in}} \\) is segmented into four regions: 0 to \\( \\frac{1}{4}V_{\\text{ref}} \\), \\( \\frac{1}{4}V_{\\text{ref}} \\) to \\( \\frac{1}{2}V_{\\text{ref}} \\), \\( \\frac{1}{2}V_{\\text{ref}} \\) to \\( \\frac{3}{4}V_{\\text{ref}} \\), and \\( \\frac{3}{4}V_{\\text{ref}} \\) to \\( V_{\\text{ref}} \\).\n- The digital output \\( B_{\\text{out}} \\) transitions from 00 to 11 as the input voltage rises through these regions.\n\nAnnotations and Specific Data Points:\n- The graph includes annotations for each transition point, indicating the input voltage at which the digital output shifts.\n- A dashed line represents the ideal linear relationship between \\( V_{\\text{in}} \\) and \\( B_{\\text{out}} \\), highlighting the quantization error.\n\nThis graph effectively illustrates the quantization process in a 2-bit A/D converter, showing how continuous input voltages are mapped to discrete digital outputs, with each step representing a quantization level defined by the converter's resolution.\n\nFig. 15.4 Input-output transfer curve for a 2-bit A/D converter.\n\nThe block diagram for an A/D converter is depicted in Fig. 15.3, where \\( B_{\\text{out}} \\) represents the digital output word, while \\( V_{\\text{in}} \\) and \\( V_{\\text{ref}} \\) are the analog input and reference signals, respectively. Additionally, \\( V_{\\text{LSB}} \\) is defined as the signal change corresponding to a single LSB change, similar to the D/A case.\n\nFor an A/D converter, the following equation relates these signals:\n\n$$\nV_{\\text{ref}}\\left(b_1 2^{-1} + b_2 2^{-2} + \\cdots + b_N 2^{-N}\\right) = V_{\\text{in}} \\pm V_x\n$$\n\nwhere\n\n$$\n\\begin{equation*}\n-\\frac{1}{2} V_{\\text{LSB}} \\leq V_x < \\frac{1}{2} V_{\\text{LSB}} \\tag{15.8}\n\\end{equation*}\n$$\n\nIt is important to note that there is a range of valid input values that produce the same digital output word, leading to what is known as quantization error. In contrast, no quantization error occurs in a D/A converter since the output signals are well-defined. ${}^{1}$\n\nAs with the D/A case, a transfer curve for an A/D converter can be illustrated, as shown in Fig. 15.4 for a 2-bit converter. Note that the transitions along the \\( V_{\\text{in}} \\) axis are offset by \\( \\frac{1}{2} V_{\\text{LSB}} \\), ensuring the midpoints of the staircase curve align precisely with the equivalent D/A transfer curve. Here, the transition voltages are denoted as \\( V_{ij} \\), where the subscript \\( ij \\) indicates the upper \\( B_{\\text{out}} \\) value of the transition. For instance, \\( V_{01} \\) in Fig. 15.4 represents the voltage (normalized with respect to \\( V_{\\text{ref}} \\)) for the transition from 00 to 01.\n\nFinally, it should be noted that the relationship in (15.8) holds true only if the input signal remains within 1 LSB of the two last transition voltages. Specifically, for the 2-bit transfer curve shown in Fig. 15.4, \\( V_{\\text{in}} \\) should be less than \\( \\frac{7}{8} V_{\\text{ref}} \\) and greater than \\( -\\frac{1}{8} V_{\\text{ref}} \\). If not, the quantizer is considered overloaded, as the magnitude of the quantization error would exceed \\( \\frac{V_{\\text{LSB}}}{2} \\).\n\n1. Quantization errors will arise if a 6-bit D/A converter is used to convert a 10-bit digital signal, but in this scenario, the error occurs during the conversion from a 10-bit digital signal to a 6-bit digital signal."
},
{
    "text": "image_name:Fig. 15.3 A block diagram depicting an A/D converter\ndescription:Fig. 15.3 illustrates a block diagram of an Analog-to-Digital (A/D) converter system. The core element is the \"A/D\" block, which signifies the analog-to-digital converter. This block's primary role is to convert an analog input voltage into a digital output word.\n\nMain Components:\n- **A/D Converter Block:** This central unit is tasked with converting analog signals into digital format.\n\nFlow of Information or Control:\n- **Analog Input (V_in):** The analog input voltage, labeled \\( V_{\\text{in}} \\), enters the A/D converter block from the left. This signal is the one to be digitized.\n- **Reference Voltage (V_ref):** The reference voltage, \\( V_{\\text{ref}} \\), is fed into the A/D converter from below. This voltage is essential for defining the conversion's scale and resolution.\n- **Digital Output (B_out):** The A/D converter's output is a digital word, denoted as \\( B_{\\text{out}} \\), which exits the block on the right. This represents the binary equivalent of the analog input signal.\n\nLabels, Annotations, and Key Indicators:\n- The diagram features labels for \\( V_{\\text{in}} \\), \\( V_{\\text{ref}} \\), and \\( B_{\\text{out}} \\) to mark the input, output, and reference points.\n\nOverall System Function:\nThe main function of this A/D converter system is to convert an analog input signal into a corresponding digital output. The reference voltage \\( V_{\\text{ref}} \\) is used to calibrate the conversion, ensuring the digital output accurately reflects the analog input within the specified resolution and range. This conversion is crucial for integrating analog signals with digital systems, allowing for further processing, storage, or transmission in digital form.\n\nFig. 15.3 A block diagram depicting an A/D converter.\nimage_name:Fig. 15.4 Input-output transfer curve for a 2-bit A/D converter\ndescription:Fig. 15.4, titled \"Input-output transfer curve for a 2-bit A/D converter,\" is a step function graph depicting the relationship between the analog input voltage \\( V_{\\text{in}} \\) and the digital output \\( B_{\\text{out}} \\) for a 2-bit analog-to-digital converter.\n\nType of Graph and Function:\nThis graph is a step function, commonly used to depict the quantization process in A/D converters.\n\nAxes Labels and Units:\n- **Horizontal Axis (X-axis):** Represents the normalized analog input voltage \\( V_{\\text{in}}/V_{\\text{ref}} \\), ranging from 0 to 1.\n- **Vertical Axis (Y-axis):** Represents the digital output \\( B_{\\text{out}} \\), which can take discrete values corresponding to the binary outputs 00, 01, 10, and 11.\n\nOverall Behavior and Trends:\nThe graph displays discrete steps, each corresponding to a range of input voltages that map to a specific digital output. The steps ascend in value as the input voltage rises, reflecting the quantization levels of the 2-bit converter.\n\nKey Features and Technical Details:\n- The step size is equivalent to 1 LSB (Least Significant Bit), defined as \\( V_{\\text{LSB}} = \\frac{1}{4}V_{\\text{ref}} \\).\n- The input voltage \\( V_{\\text{in}} \\) is divided into four regions: 0 to \\( \\frac{1}{4}V_{\\text{ref}} \\), \\( \\frac{1}{4}V_{\\text{ref}} \\) to \\( \\frac{1}{2}V_{\\text{ref}} \\), \\( \\frac{1}{2}V_{\\text{ref}} \\) to \\( \\frac{3}{4}V_{\\text{ref}} \\), and \\( \\frac{3}{4}V_{\\text{ref}} \\) to \\( V_{\\text{ref}} \\).\n- The digital output \\( B_{\\text{out}} \\) transitions from 00 to 11 as the input voltage increases through these regions.\n\nAnnotations and Specific Data Points:\n- The graph includes annotations for each transition point, indicating the input voltage at which the digital output changes.\n- A dashed line represents the ideal linear relationship between \\( V_{\\text{in}} \\) and \\( B_{\\text{out}} \\), highlighting the quantization error.\n\nThis graph effectively illustrates the quantization process in a 2-bit A/D converter, showing how continuous input voltages are mapped to discrete digital outputs, with each step representing a quantization level defined by the converter's resolution.\n\nFig. 15.4 Input-output transfer curve for a 2-bit A/D converter.\n\nThe block diagram for an A/D converter is shown in Fig. 15.3, where \\( B_{\\text{out}} \\) is the digital output word, and \\( V_{\\text{in}} \\) and \\( V_{\\text{ref}} \\) are the analog input and reference signals, respectively. Additionally, \\( V_{\\text{LSB}} \\) is defined as the signal change corresponding to a single LSB change, similar to the D/A case.\n\nFor an A/D converter, the following equation relates these signals:\n\n$$\nV_{\\text{ref}}\\left(b_1 2^{-1} + b_2 2^{-2} + \\cdots + b_N 2^{-N}\\right) = V_{\\text{in}} \\pm V_x\n$$\n\nwhere\n\n$$\n-\\frac{1}{2} V_{\\text{LSB}} \\leq V_x < \\frac{1}{2} V_{\\text{LSB}} \\tag{15.8}\n$$\n\nNote that there is a range of valid input values that produce the same digital output word, leading to quantization error. In contrast, no quantization error occurs in a D/A converter since the output signals are well-defined.${}^1$\n\nAs with the D/A case, a transfer curve for an A/D converter can be depicted as shown in Fig. 15.4 for a 2-bit converter. Note that the transitions along the \\( V_{\\text{in}} \\) axis are offset by \\( \\frac{1}{2} V_{\\text{LSB}} \\), so the midpoints of the staircase curve align precisely with the equivalent D/A transfer curve. Here, the transition voltages are defined at \\( V_{ij} \\), where the subscript \\( ij \\) indicates the upper \\( B_{\\text{out}} \\) value of the transition. For instance, \\( V_{01} \\) in Fig. 15.4 represents the voltage (normalized to \\( V_{\\text{ref}} \\)) for the transition from 00 to 01.\n\nFinally, it should be noted that the relation in (15.8) holds only if the input signal remains within 1 LSB of the two last transition voltages. Specifically, for the 2-bit transfer curve shown in Fig. 15.4, \\( V_{\\text{in}} \\) should be less than \\( \\frac{7}{8} V_{\\text{ref}} \\) and greater than \\( -\\frac{1}{8} V_{\\text{ref}} \\). Otherwise, the quantizer is considered overloaded, as the quantization error magnitude would exceed \\( \\frac{V_{\\text{LSB}}}{2} \\).\n\n1. Quantization errors will occur if a 6-bit D/A converter is used to convert a 10-bit digital signal, but in this scenario, the error arises from converting a 10-bit digital signal to a 6-bit digital signal."
},
{
    "text": "image_name:Fig. 15.3 A block diagram depicting an A/D converter\ndescription:Fig. 15.3 illustrates a block diagram of an Analog-to-Digital (A/D) converter system. The core element of this system is the \"A/D\" block, which is tasked with converting an analog input voltage into a digital output word.\n\nMain Components:\n- **A/D Converter Block:** This central unit is responsible for the conversion of analog signals to digital format.\n\nFlow of Information or Control:\n- **Analog Input (V_in):** The analog input voltage, represented as \\( V_{\\text{in}} \\), enters the A/D converter block from the left. This signal is intended for digitization.\n- **Reference Voltage (V_ref):** The reference voltage, \\( V_{\\text{ref}} \\), is provided to the A/D converter from below. This voltage is essential for defining the scale and resolution of the conversion.\n- **Digital Output (B_out):** The A/D converter's output is a digital word, denoted as \\( B_{\\text{out}} \\), which exits the block on the right. This represents the binary equivalent of the analog input signal.\n\nLabels, Annotations, and Key Indicators:\n- The diagram includes labels for \\( V_{\\text{in}} \\), \\( V_{\\text{ref}} \\), and \\( B_{\\text{out}} \\) to indicate the input, output, and reference points.\n\nOverall System Function:\nThe primary role of this A/D converter system is to convert an analog input signal into a corresponding digital output. The reference voltage \\( V_{\\text{ref}} \\) is used to calibrate the conversion, ensuring the digital output accurately reflects the analog input within the specified resolution and range. This conversion is vital for integrating analog signals with digital systems, facilitating further processing, storage, or transmission in digital form.\n\nFig. 15.3 A block diagram depicting an A/D converter.\nimage_name:Fig. 15.4 Input-output transfer curve for a 2-bit A/D converter\ndescription:Fig. 15.4, titled \"Input-output transfer curve for a 2-bit A/D converter,\" presents a step function graph depicting the relationship between the analog input voltage \\( V_{\\text{in}} \\) and the digital output \\( B_{\\text{out}} \\) for a 2-bit A/D converter.\n\nType of Graph and Function:\nThis graph is a step function, commonly used to depict the quantization process in A/D converters.\n\nAxes Labels and Units:\n- **Horizontal Axis (X-axis):** Represents the normalized analog input voltage \\( V_{\\text{in}}/V_{\\text{ref}} \\), ranging from 0 to 1.\n- **Vertical Axis (Y-axis):** Represents the digital output \\( B_{\\text{out}} \\), which can assume discrete values corresponding to the binary outputs 00, 01, 10, and 11.\n\nOverall Behavior and Trends:\nThe graph displays a series of discrete steps, each corresponding to a range of input voltages that map to a specific digital output. As the input voltage increases, the steps ascend in value, reflecting the quantization levels of the 2-bit converter.\n\nKey Features and Technical Details:\n- The step size is equivalent to 1 LSB (Least Significant Bit), defined as \\( V_{\\text{LSB}} = \\frac{1}{4}V_{\\text{ref}} \\).\n- The input voltage \\( V_{\\text{in}} \\) is segmented into four regions: 0 to \\( \\frac{1}{4}V_{\\text{ref}} \\), \\( \\frac{1}{4}V_{\\text{ref}} \\) to \\( \\frac{1}{2}V_{\\text{ref}} \\), \\( \\frac{1}{2}V_{\\text{ref}} \\) to \\( \\frac{3}{4}V_{\\text{ref}} \\), and \\( \\frac{3}{4}V_{\\text{ref}} \\) to \\( V_{\\text{ref}} \\).\n- The digital output \\( B_{\\text{out}} \\) transitions from 00 to 11 as the input voltage rises through these regions.\n\nAnnotations and Specific Data Points:\n- The graph includes annotations for each transition point, indicating the input voltage at which the digital output shifts.\n- A dashed line represents the ideal linear relationship between \\( V_{\\text{in}} \\) and \\( B_{\\text{out}} \\), highlighting the quantization error.\n\nThis graph effectively illustrates the quantization process in a 2-bit A/D converter, showing how continuous input voltages are mapped to discrete digital outputs, with each step representing a quantization level defined by the converter's resolution.\n\nFig. 15.4 Input-output transfer curve for a 2-bit A/D converter.\n\nThe block diagram for an A/D converter is shown in Fig. 15.3, where \\( B_{\\text{out}} \\) represents the digital output word, and \\( V_{\\text{in}} \\) and \\( V_{\\text{ref}} \\) are the analog input and reference signals, respectively. Additionally, \\( V_{\\text{LSB}} \\) is defined as the signal change corresponding to a single LSB change, similar to the D/A case.\n\nFor an A/D converter, the following equation relates these signals:\n\n$$\nV_{\\text{ref}}\\left(b_1 2^{-1} + b_2 2^{-2} + \\cdots + b_N 2^{-N}\\right) = V_{\\text{in}} \\pm V_x\n$$\n\nwhere\n\n$$\n-\\frac{1}{2} V_{\\text{LSB}} \\leq V_x < \\frac{1}{2} V_{\\text{LSB}} \\tag{15.8}\n$$\n\nIt is important to note that there exists a range of valid input values that produce the same digital output word, leading to what is known as quantization error. In contrast, no quantization error occurs in a D/A converter since the output signals are precisely defined. ${}^{1}$\n\nAs with the D/A case, a transfer curve for an A/D converter can be depicted as shown in Fig. 15.4 for a 2-bit converter. Note that the transitions along the \\( V_{\\text{in}} \\) axis are offset by \\( \\frac{1}{2} V_{\\text{LSB}} \\), ensuring that the midpoints of the staircase curve align exactly with the equivalent D/A transfer curve. Here, the transition voltages are denoted as \\( V_{ij} \\), where the subscript \\( ij \\) indicates the upper \\( B_{\\text{out}} \\) value of the transition. For instance, \\( V_{01} \\) in Fig. 15.4 represents the voltage (normalized with respect to \\( V_{\\text{ref}} \\)) for the transition from 00 to 01.\n\nLastly, it should be noted that the relationship in (15.8) is valid only if the input signal remains within 1 LSB of the two last transition voltages. Specifically, for the 2-bit transfer curve shown in Fig. 15.4, \\( V_{\\text{in}} \\) should be less than \\( \\frac{7}{8} V_{\\text{ref}} \\) and greater than \\( -\\frac{1}{8} V_{\\text{ref}} \\). If not, the quantizer is considered overloaded, as the magnitude of the quantization error would exceed \\( \\frac{V_{\\text{LSB}}}{2} \\).\n\n1. Of course, quantization errors will arise if a 6-bit D/A converter is used to convert a 10-bit digital signal, but in this scenario, the quantization error occurs during the conversion from a 10-bit digital signal to a 6-bit digital signal."
},
{
    "text": "image_name:Fig. 15.3 A block diagram depicting an A/D converter\ndescription:Fig. 15.3 illustrates a block diagram of an Analog-to-Digital (A/D) converter system. The core element of this system is a block marked \"A/D,\" which signifies the analog-to-digital converter. This block's function is to convert an incoming analog voltage into a digital output word.\n\nMain Components:\n- **A/D Converter Block:** This central unit is tasked with the conversion of analog signals into digital format.\n\nFlow of Information or Control:\n- **Analog Input (V_in):** The analog input voltage, represented as \\( V_{\\text{in}} \\), enters the A/D converter block from the left. This signal is the one to be converted into digital form.\n- **Reference Voltage (V_ref):** The reference voltage, denoted as \\( V_{\\text{ref}} \\), is fed into the A/D converter from below. This voltage is essential for setting the scale and resolution of the conversion.\n- **Digital Output (B_out):** The A/D converter's output is a digital word, labeled \\( B_{\\text{out}} \\), which exits the block on the right. This represents the binary counterpart of the analog input signal.\n\nLabels, Annotations, and Key Indicators:\n- The diagram features labels for \\( V_{\\text{in}} \\), \\( V_{\\text{ref}} \\), and \\( B_{\\text{out}} \\) to clearly identify the input, output, and reference points.\n\nOverall System Function:\nThe primary role of this A/D converter system is to convert an analog input signal into a corresponding digital output. The reference voltage \\( V_{\\text{ref}} \\) is utilized to calibrate the conversion, ensuring the digital output accurately reflects the analog input within the defined resolution and range. This conversion is vital for integrating analog signals with digital systems, facilitating further digital processing, storage, or transmission.\n\nFig. 15.3 A block diagram depicting an A/D converter.\nimage_name:Fig. 15.4 Input-output transfer curve for a 2-bit A/D converter\ndescription:Fig. 15.4, titled \"Input-output transfer curve for a 2-bit A/D converter,\" presents a step function graph that shows the relationship between the analog input voltage \\( V_{\\text{in}} \\) and the digital output \\( B_{\\text{out}} \\) for a 2-bit analog-to-digital converter.\n\nType of Graph and Function:\nThis graph is a step function, commonly used to depict the quantization process in A/D converters.\n\nAxes Labels and Units:\n- **Horizontal Axis (X-axis):** Displays the normalized analog input voltage \\( V_{\\text{in}}/V_{\\text{ref}} \\), ranging from 0 to 1.\n- **Vertical Axis (Y-axis):** Represents the digital output \\( B_{\\text{out}} \\), which can assume discrete values corresponding to the binary outputs 00, 01, 10, and 11.\n\nOverall Behavior and Trends:\nThe graph illustrates a series of discrete steps, each corresponding to a specific range of input voltages that map to a particular digital output. As the input voltage rises, the steps increase in value, reflecting the quantization levels of the 2-bit converter.\n\nKey Features and Technical Details:\n- The step size is equivalent to 1 LSB (Least Significant Bit), defined as \\( V_{\\text{LSB}} = \\frac{1}{4}V_{\\text{ref}} \\).\n- The input voltage \\( V_{\\text{in}} \\) is segmented into four regions: 0 to \\( \\frac{1}{4}V_{\\text{ref}} \\), \\( \\frac{1}{4}V_{\\text{ref}} \\) to \\( \\frac{1}{2}V_{\\text{ref}} \\), \\( \\frac{1}{2}V_{\\text{ref}} \\) to \\( \\frac{3}{4}V_{\\text{ref}} \\), and \\( \\frac{3}{4}V_{\\text{ref}} \\) to \\( V_{\\text{ref}} \\).\n- The digital output \\( B_{\\text{out}} \\) transitions from 00 to 11 as the input voltage increases through these regions.\n\nAnnotations and Specific Data Points:\n- The graph includes annotations for each transition point, indicating the input voltage at which the digital output changes.\n- A dashed line represents the ideal linear relationship between \\( V_{\\text{in}} \\) and \\( B_{\\text{out}} \\), highlighting the quantization error.\n\nThis graph effectively illustrates the quantization process in a 2-bit A/D converter, demonstrating how continuous input voltages are mapped to discrete digital outputs, with each step representing a quantization level defined by the converter's resolution.\n\nFig. 15.4 Input-output transfer curve for a 2-bit A/D converter.\n\nThe block diagram for an A/D converter is presented in Fig. 15.3, where \\( B_{\\text{out}} \\) represents the digital output word, and \\( V_{\\text{in}} \\) and \\( V_{\\text{ref}} \\) are the analog input and reference signals, respectively. Additionally, \\( V_{\\text{LSB}} \\) is defined as the signal change corresponding to a single LSB change, similar to the D/A case.\n\nFor an A/D converter, the following equation relates these signals:\n\n$$\nV_{\\text{ref}}\\left(b_1 2^{-1} + b_2 2^{-2} + \\cdots + b_N 2^{-N}\\right) = V_{\\text{in}} \\pm V_x\n$$\n\nwhere\n\n$$\n\\begin{equation*}\n-\\frac{1}{2} V_{\\text{LSB}} \\leq V_x < \\frac{1}{2} V_{\\text{LSB}} \\tag{15.8}\n\\end{equation*}\n$$\n\nIt is important to note that there is a range of valid input values that produce the same digital output word, leading to what is known as quantization error. In contrast, no quantization error occurs in a D/A converter because the output signals are well-defined.${}^{1}$\n\nAs in the D/A case, a transfer curve for an A/D converter can be depicted as shown in Fig. 15.4 for a 2-bit converter. Note that the transitions along the \\( V_{\\text{in}} \\) axis are offset by \\( \\frac{1}{2} V_{\\text{LSB}} \\), ensuring the midpoints of the staircase curve align precisely with the equivalent D/A transfer curve. Here, the transition voltages are denoted as \\( V_{ij} \\), where the subscript \\( ij \\) indicates the upper \\( B_{\\text{out}} \\) value of the transition. For instance, \\( V_{01} \\) in Fig. 15.4 represents the voltage (normalized with respect to \\( V_{\\text{ref}} \\)) for the transition from 00 to 01.\n\nLastly, it should be noted that the relationship shown in (15.8) is valid only if the input signal remains within 1 LSB of the two last transition voltages. Specifically, for the 2-bit transfer curve depicted in Fig. 15.4, \\( V_{\\text{in}} \\) should be less than \\( \\frac{7}{8} V_{\\text{ref}} \\) and greater than \\( -\\frac{1}{8} V_{\\text{ref}} \\). If not, the quantizer is considered overloaded, as the magnitude of the quantization error would exceed \\( \\frac{V_{\\text{LSB}}}{2} \\).\n\n1. Quantization errors will arise if a 6-bit D/A converter is used to convert a 10-bit digital signal, but in this scenario, the error occurs during the conversion from a 10-bit digital signal to a 6-bit digital signal."
},
{
    "text": "image_name:Fig. 15.3 A block diagram illustrating an A/D converter\ndescription:Fig. 15.3 displays a block diagram of an Analog-to-Digital (A/D) converter system. The core element is the \"A/D\" block, which is tasked with converting analog input voltages into digital output words.\n\nMain Components:\n- **A/D Converter Block:** This central unit handles the conversion of analog signals to digital format.\n\nFlow of Information or Control:\n- **Analog Input (V_in):** The analog input voltage, designated as \\( V_{\\text{in}} \\), enters the A/D converter block from the left. This signal is to be converted into a digital form.\n- **Reference Voltage (V_ref):** The reference voltage, \\( V_{\\text{ref}} \\), is provided to the A/D converter from below. This voltage is essential for defining the conversion scale and resolution.\n- **Digital Output (B_out):** The A/D converter's output is a digital word, labeled \\( B_{\\text{out}} \\), which exits the block on the right. This represents the binary equivalent of the analog input.\n\nLabels, Annotations, and Key Indicators:\n- The diagram includes labels for \\( V_{\\text{in}} \\), \\( V_{\\text{ref}} \\), and \\( B_{\\text{out}} \\) to clearly indicate the input, output, and reference points.\n\nOverall System Function:\nThe primary role of this A/D converter system is to convert an analog input signal into a corresponding digital output. The reference voltage \\( V_{\\text{ref}} \\) is used to calibrate the conversion, ensuring the digital output accurately reflects the analog input within the specified resolution and range. This conversion is vital for integrating analog signals with digital systems, facilitating further digital processing, storage, or transmission.\n\nFig. 15.3 A block diagram illustrating an A/D converter.\nimage_name:Fig. 15.4 Input-output transfer curve for a 2-bit A/D converter\ndescription:Fig. 15.4 presents a step function graph depicting the relationship between the analog input voltage \\( V_{\\text{in}} \\) and the digital output \\( B_{\\text{out}} \\) for a 2-bit A/D converter.\n\nType of Graph and Function:\nThis graph is a step function, commonly used to depict the quantization process in A/D converters.\n\nAxes Labels and Units:\n- **Horizontal Axis (X-axis):** Represents the normalized analog input voltage \\( V_{\\text{in}}/V_{\\text{ref}} \\), ranging from 0 to 1.\n- **Vertical Axis (Y-axis):** Represents the digital output \\( B_{\\text{out}} \\), which can take discrete values corresponding to the binary outputs 00, 01, 10, and 11.\n\nOverall Behavior and Trends:\nThe graph illustrates a series of discrete steps, each corresponding to a range of input voltages that map to a specific digital output. As the input voltage increases, the steps ascend, reflecting the quantization levels of the 2-bit converter.\n\nKey Features and Technical Details:\n- The step size is equivalent to 1 LSB (Least Significant Bit), defined as \\( V_{\\text{LSB}} = \\frac{1}{4}V_{\\text{ref}} \\).\n- The input voltage \\( V_{\\text{in}} \\) is segmented into four regions: 0 to \\( \\frac{1}{4}V_{\\text{ref}} \\), \\( \\frac{1}{4}V_{\\text{ref}} \\) to \\( \\frac{1}{2}V_{\\text{ref}} \\), \\( \\frac{1}{2}V_{\\text{ref}} \\) to \\( \\frac{3}{4}V_{\\text{ref}} \\), and \\( \\frac{3}{4}V_{\\text{ref}} \\) to \\( V_{\\text{ref}} \\).\n- The digital output \\( B_{\\text{out}} \\) transitions from 00 to 11 as the input voltage increases through these regions.\n\nAnnotations and Specific Data Points:\n- The graph includes annotations for each transition point, indicating the input voltage at which the digital output changes.\n- A dashed line represents the ideal linear relationship between \\( V_{\\text{in}} \\) and \\( B_{\\text{out}} \\), highlighting the quantization error.\n\nThis graph effectively illustrates the quantization process in a 2-bit A/D converter, showing how continuous input voltages are mapped to discrete digital outputs, with each step representing a quantization level defined by the converter's resolution.\n\nFig. 15.4 Input-output transfer curve for a 2-bit A/D converter.\n\nThe block diagram for an A/D converter is depicted in Fig. 15.3, where \\( B_{\\text{out}} \\) represents the digital output word, while \\( V_{\\text{in}} \\) and \\( V_{\\text{ref}} \\) are the analog input and reference signals, respectively. Additionally, \\( V_{\\text{LSB}} \\) is defined as the signal change corresponding to a single LSB change, similar to the D/A case.\n\nFor an A/D converter, the following equation relates these signals:\n\n$$\nV_{\\text{ref}}\\left(b_1 2^{-1} + b_2 2^{-2} + \\cdots + b_N 2^{-N}\\right) = V_{\\text{in}} \\pm V_x\n$$\n\nwhere\n\n$$\n\\begin{equation*}\n-\\frac{1}{2} V_{\\text{LSB}} \\leq V_x < \\frac{1}{2} V_{\\text{LSB}} \\tag{15.8}\n\\end{equation*}\n$$\n\nIt is important to note that there is a range of valid input values that produce the same digital output word, leading to quantization error. In contrast, no quantization error occurs in a D/A converter because the output signals are well-defined. ${}^{1}$\n\nAs with the D/A case, a transfer curve for an A/D converter can be illustrated, as shown in Fig. 15.4 for a 2-bit converter. The transitions along the \\( V_{\\text{in}} \\) axis are offset by \\( \\frac{1}{2} V_{\\text{LSB}} \\), ensuring the midpoints of the staircase curve align with the equivalent D/A transfer curve. Here, the transition voltages are denoted as \\( V_{ij} \\), where the subscript \\( ij \\) indicates the upper \\( B_{\\text{out}} \\) value of the transition. For instance, \\( V_{01} \\) in Fig. 15.4 represents the voltage (normalized to \\( V_{\\text{ref}} \\)) for the transition from 00 to 01.\n\nFinally, it should be noted that the relationship in (15.8) is valid only if the input signal remains within 1 LSB of the two last transition voltages. Specifically, for the 2-bit transfer curve shown in Fig. 15.4, \\( V_{\\text{in}} \\) should be less than \\( \\frac{7}{8} V_{\\text{ref}} \\) and greater than \\( -\\frac{1}{8} V_{\\text{ref}} \\). If not, the quantizer is considered overloaded, as the quantization error magnitude would exceed \\( \\frac{V_{\\text{LSB}}}{2} \\).\n\n1. Quantization errors will arise if a 6-bit D/A converter is used to convert a 10-bit digital signal, but in this scenario, the error occurs during the conversion from a 10-bit digital signal to a 6-bit digital signal."
},
{
    "text": "image_name:Fig. 15.3 A block diagram illustrating an A/D converter\ndescription:Fig. 15.3 presents a block diagram of an Analog-to-Digital (A/D) converter system. The core element is the \"A/D\" block, which is tasked with converting an analog input voltage into a digital output word.\n\nMain Components:\n- **A/D Converter Block:** This central unit is responsible for the conversion of analog signals into digital format.\n\nFlow of Information or Control:\n- **Analog Input (V_in):** The analog input voltage, designated as \\( V_{\\text{in}} \\), enters the A/D converter block from the left. This signal is intended for digitization.\n- **Reference Voltage (V_ref):** The reference voltage, \\( V_{\\text{ref}} \\), is provided to the A/D converter from below. This voltage is essential for establishing the conversion scale and resolution.\n- **Digital Output (B_out):** The A/D converter's output is a digital word, denoted as \\( B_{\\text{out}} \\), which exits the block on the right. This represents the binary counterpart of the analog input signal.\n\nLabels, Annotations, and Key Indicators:\n- The diagram includes labels for \\( V_{\\text{in}} \\), \\( V_{\\text{ref}} \\), and \\( B_{\\text{out}} \\), marking the input, output, and reference signal points.\n\nOverall System Function:\nThe primary role of this A/D converter system is to convert an analog input signal into a corresponding digital output. The reference voltage \\( V_{\\text{ref}} \\) is used to calibrate the conversion, ensuring the digital output accurately reflects the analog input within the specified resolution and range. This conversion is vital for integrating analog signals with digital systems, facilitating further digital processing, storage, or transmission.\n\nFig. 15.3 A block diagram illustrating an A/D converter.\nimage_name:Fig. 15.4 Input-output transfer curve for a 2-bit A/D converter\ndescription:Fig. 15.4, titled \"Input-output transfer curve for a 2-bit A/D converter,\" depicts a step function that represents the relationship between the analog input voltage \\( V_{\\text{in}} \\) and the digital output \\( B_{\\text{out}} \\) for a 2-bit A/D converter.\n\nType of Graph and Function:\nThis graph is a step function, commonly used to depict the quantization process in A/D converters.\n\nAxes Labels and Units:\n- **Horizontal Axis (X-axis):** Displays the normalized analog input voltage \\( V_{\\text{in}}/V_{\\text{ref}} \\), ranging from 0 to 1.\n- **Vertical Axis (Y-axis):** Represents the digital output \\( B_{\\text{out}} \\), which can assume discrete values corresponding to the binary outputs 00, 01, 10, and 11.\n\nOverall Behavior and Trends:\nThe graph exhibits a series of discrete steps, each corresponding to a range of input voltages that map to a specific digital output. As the input voltage increases, the steps ascend, reflecting the quantization levels of the 2-bit converter.\n\nKey Features and Technical Details:\n- The step size equates to 1 LSB (Least Significant Bit), defined as \\( V_{\\text{LSB}} = \\frac{1}{4}V_{\\text{ref}} \\).\n- The input voltage \\( V_{\\text{in}} \\) is segmented into four regions: 0 to \\( \\frac{1}{4}V_{\\text{ref}} \\), \\( \\frac{1}{4}V_{\\text{ref}} \\) to \\( \\frac{1}{2}V_{\\text{ref}} \\), \\( \\frac{1}{2}V_{\\text{ref}} \\) to \\( \\frac{3}{4}V_{\\text{ref}} \\), and \\( \\frac{3}{4}V_{\\text{ref}} \\) to \\( V_{\\text{ref}} \\).\n- The digital output \\( B_{\\text{out}} \\) transitions from 00 to 11 as the input voltage rises through these regions.\n\nAnnotations and Specific Data Points:\n- The graph includes annotations for each transition point, indicating the input voltage at which the digital output shifts.\n- A dashed line represents the ideal linear relationship between \\( V_{\\text{in}} \\) and \\( B_{\\text{out}} \\), highlighting the quantization error.\n\nThis graph effectively illustrates the quantization process in a 2-bit A/D converter, demonstrating how continuous input voltages are mapped to discrete digital outputs, with each step representing a quantization level defined by the converter's resolution.\n\nFig. 15.4 Input-output transfer curve for a 2-bit A/D converter.\n\nThe block diagram for an A/D converter is depicted in Fig. 15.3, where \\( B_{\\text{out}} \\) represents the digital output word, and \\( V_{\\text{in}} \\) and \\( V_{\\text{ref}} \\) are the analog input and reference signals, respectively. Additionally, \\( V_{\\text{LSB}} \\) is defined as the signal change corresponding to a single LSB change, analogous to the D/A case.\n\nFor an A/D converter, the following equation relates these signals:\n\n$$\nV_{\\text{ref}}\\left(b_1 2^{-1} + b_2 2^{-2} + \\cdots + b_N 2^{-N}\\right) = V_{\\text{in}} \\pm V_x\n$$\n\nwhere\n\n$$\n-\\frac{1}{2} V_{\\text{LSB}} \\leq V_x < \\frac{1}{2} V_{\\text{LSB}} \\tag{15.8}\n$$\n\nIt is important to note that there is a range of valid input values that produce the same digital output word, leading to quantization error. In contrast, no quantization error occurs in a D/A converter because the output signals are precisely defined. ${}^{1}$\n\nAs with the D/A case, a transfer curve for an A/D converter can be illustrated, as shown in Fig. 15.4 for a 2-bit converter. Note that the transitions along the \\( V_{\\text{in}} \\) axis are offset by \\( \\frac{1}{2} V_{\\text{LSB}} \\), ensuring the midpoints of the staircase curve align with the equivalent D/A transfer curve. Here, the transition voltages are denoted as \\( V_{ij} \\), where the subscript \\( ij \\) indicates the upper \\( B_{\\text{out}} \\) value of the transition. For instance, \\( V_{01} \\) in Fig. 15.4 represents the voltage (normalized to \\( V_{\\text{ref}} \\)) for the transition from 00 to 01.\n\nFinally, it should be noted that the relationship in (15.8) is valid only if the input signal remains within 1 LSB of the two last transition voltages. Specifically, for the 2-bit transfer curve shown in Fig. 15.4, \\( V_{\\text{in}} \\) should be less than \\( \\frac{7}{8} V_{\\text{ref}} \\) and greater than \\( -\\frac{1}{8} V_{\\text{ref}} \\). If not, the quantizer is considered overloaded, as the quantization error magnitude would exceed \\( \\frac{V_{\\text{LSB}}}{2} \\).\n\n1. Quantization errors will arise if a 6-bit D/A converter is used to convert a 10-bit digital signal, but in this scenario, the error occurs during the conversion from a 10-bit digital signal to a 6-bit digital signal."
},
{
    "text": "image_name:Fig. 15.3 A block diagram depicting an A/D converter\ndescription:Fig. 15.3 illustrates a block diagram of an Analog-to-Digital (A/D) converter system. The core element of this system is a block marked \"A/D,\" representing the analog-to-digital converter. This block's function is to convert an analog input voltage into a digital output word.\n\nMain Components:\n- **A/D Converter Block:** This central block is tasked with converting analog signals into digital format.\n\nFlow of Information or Control:\n- **Analog Input (V_in):** The analog input voltage, designated as \\( V_{\\text{in}} \\), enters the A/D converter block from the left. This signal is to be converted into digital form.\n- **Reference Voltage (V_ref):** The reference voltage, \\( V_{\\text{ref}} \\), is provided to the A/D converter from below. This voltage is essential for establishing the scale and resolution of the conversion.\n- **Digital Output (B_out):** The A/D converter's output is a digital word, denoted as \\( B_{\\text{out}} \\), which exits the block on the right. This represents the binary equivalent of the analog input signal.\n\nLabels, Annotations, and Key Indicators:\n- The diagram includes labels for \\( V_{\\text{in}} \\), \\( V_{\\text{ref}} \\), and \\( B_{\\text{out}} \\) to clearly indicate the input, output, and reference points.\n\nOverall System Function:\nThe primary role of this A/D converter system is to convert an analog input signal into a corresponding digital output. The reference voltage \\( V_{\\text{ref}} \\) is utilized to calibrate the conversion, ensuring the digital output accurately reflects the analog input within the specified resolution and range. This conversion is vital for integrating analog signals with digital systems, facilitating further processing, storage, or transmission in digital format.\n\nFig. 15.3 A block diagram depicting an A/D converter.\nimage_name:Fig. 15.4 Input-output transfer curve for a 2-bit A/D converter\ndescription:Fig. 15.4, titled \"Input-output transfer curve for a 2-bit A/D converter,\" presents a step function graph that depicts the relationship between the analog input voltage \\( V_{\\text{in}} \\) and the digital output \\( B_{\\text{out}} \\) for a 2-bit analog-to-digital converter.\n\nType of Graph and Function:\nThis graph is a step function, commonly used to depict the quantization process in A/D converters.\n\nAxes Labels and Units:\n- **Horizontal Axis (X-axis):** Represents the normalized analog input voltage \\( V_{\\text{in}}/V_{\\text{ref}} \\), ranging from 0 to 1.\n- **Vertical Axis (Y-axis):** Represents the digital output \\( B_{\\text{out}} \\), which can assume discrete values corresponding to the binary outputs 00, 01, 10, and 11.\n\nOverall Behavior and Trends:\nThe graph displays a series of discrete steps, each corresponding to a range of input voltages that map to a specific digital output. As the input voltage increases, the steps increment, reflecting the quantization levels of the 2-bit converter.\n\nKey Features and Technical Details:\n- The step size is equivalent to 1 LSB (Least Significant Bit), defined as \\( V_{\\text{LSB}} = \\frac{1}{4}V_{\\text{ref}} \\).\n- The input voltage \\( V_{\\text{in}} \\) is segmented into four regions: 0 to \\( \\frac{1}{4}V_{\\text{ref}} \\), \\( \\frac{1}{4}V_{\\text{ref}} \\) to \\( \\frac{1}{2}V_{\\text{ref}} \\), \\( \\frac{1}{2}V_{\\text{ref}} \\) to \\( \\frac{3}{4}V_{\\text{ref}} \\), and \\( \\frac{3}{4}V_{\\text{ref}} \\) to \\( V_{\\text{ref}} \\).\n- The digital output \\( B_{\\text{out}} \\) transitions from 00 to 11 as the input voltage increases through these regions.\n\nAnnotations and Specific Data Points:\n- The graph includes annotations for each transition point, indicating the input voltage at which the digital output changes.\n- A dashed line represents the ideal linear relationship between \\( V_{\\text{in}} \\) and \\( B_{\\text{out}} \\), highlighting the quantization error.\n\nThis graph effectively illustrates the quantization process in a 2-bit A/D converter, showing how continuous input voltages are mapped to discrete digital outputs, with each step representing a quantization level defined by the converter's resolution.\n\nFig. 15.4 Input-output transfer curve for a 2-bit A/D converter.\n\nThe block diagram for an A/D converter is depicted in Fig. 15.3, where \\( B_{\\text{out}} \\) represents the digital output word, while \\( V_{\\text{in}} \\) and \\( V_{\\text{ref}} \\) are the analog input and reference signals, respectively. Additionally, \\( V_{\\text{LSB}} \\) is defined as the signal change corresponding to a single LSB change, similar to the D/A case.\n\nFor an A/D converter, the following equation relates these signals:\n\n$$\nV_{\\text{ref}}\\left(b_1 2^{-1} + b_2 2^{-2} + \\cdots + b_N 2^{-N}\\right) = V_{\\text{in}} \\pm V_x\n$$\n\nwhere\n\n$$\n\\begin{equation*}\n-\\frac{1}{2} V_{\\text{LSB}} \\leq V_x < \\frac{1}{2} V_{\\text{LSB}} \\tag{15.8}\n\\end{equation*}\n$$\n\nIt is important to note that there is a range of valid input values that produce the same digital output word, leading to what is known as quantization error. In contrast, no quantization error occurs in a D/A converter since the output signals are well-defined.${}^{1}$\n\nAs with the D/A case, a transfer curve for an A/D converter can be illustrated, as shown in Fig. 15.4 for a 2-bit converter. Note that the transitions along the \\( V_{\\text{in}} \\) axis are offset by \\( \\frac{1}{2} V_{\\text{LSB}} \\), ensuring the midpoints of the staircase curve align precisely with the equivalent D/A transfer curve. Here, the transition voltages are denoted as \\( V_{ij} \\), where the subscript \\( ij \\) indicates the upper \\( B_{\\text{out}} \\) value of the transition. For instance, \\( V_{01} \\) in Fig. 15.4 represents the voltage (normalized with respect to \\( V_{\\text{ref}} \\)) for the transition from 00 to 01.\n\nFinally, it should be noted that the relationship in (15.8) is valid only if the input signal remains within 1 LSB of the two last transition voltages. Specifically, for the 2-bit transfer curve shown in Fig. 15.4, \\( V_{\\text{in}} \\) should be less than \\( \\frac{7}{8} V_{\\text{ref}} \\) and greater than \\( -\\frac{1}{8} V_{\\text{ref}} \\). If not, the quantizer is considered overloaded, as the magnitude of the quantization error would exceed \\( \\frac{V_{\\text{LSB}}}{2} \\).\n\n1. Quantization errors will arise if a 6-bit D/A converter is used to convert a 10-bit digital signal, but in this scenario, the error occurs during the conversion from a 10-bit digital signal to a 6-bit digital signal."
},
{
    "text": "To comprehend some characteristics of the quantization noise signal, $\\mathrm{V}_{\\mathrm{Q}}$, we will examine its behavior when the input is a specific function. Specifically, let us consider the input signal, $\\mathrm{V}_{\\mathrm{in}}$, in Fig. 15.5 to be a ramp. Such an input results in the output from the $\\mathrm{D} / \\mathrm{A}, \\mathrm{V}_{1}$, appearing as a staircase, as depicted in Fig. 15.6, assuming no overloading takes place. By subtracting these two signals, we obtain the noise signal, $\\mathrm{V}_{\\mathrm{Q}}$, which is a\n\nKey Point: Provided it is not overloaded, the ideal quantizer introduces an additive quantization noise of less than 1/2 of an LSB in magnitude.\nimage_name:Fig. 15.5\ndescription:The system block diagram in Fig. 15.5 depicts a circuit designed to study quantization noise behavior. The main components of the system are as follows:\n\n1. **A/D Converter (Analog to Digital Converter):** This block receives the input signal $V_{in}$, which is a ramp signal. The A/D converter converts the analog input signal into a digital output signal labeled as 'B'.\n\n2. **D/A Converter (Digital to Analog Converter):** The digital signal 'B' from the A/D converter is input into the D/A converter. This block transforms the digital signal back into an analog signal, producing an output $V_1$.\n\n3. **Summing Junction:** The system includes a summing junction where the analog output $V_1$ from the D/A converter is subtracted from the original input signal $V_{in}$. The result of this subtraction is the quantization noise signal $V_Q$.\n\n**Flow of Information:**\n- The input signal $V_{in}$ enters the A/D converter, where it is converted to a digital signal.\n- The digital output 'B' is then fed to the D/A converter, which converts it back to an analog signal $V_1$.\n- The signal $V_1$ is then input into a summing junction, where it is subtracted from the original input $V_{in}$ to produce the quantization noise $V_Q$.\n\n**Overall System Function:**\n- The primary purpose of this system is to demonstrate the behavior of quantization noise. By comparing the original input signal with the reconstructed output from the D/A converter, the system isolates the quantization error as the output $V_Q$. This error is confined to within ±1/2 of the least significant bit (LSB) of the quantizer, assuming no overloading occurs. The system effectively illustrates how quantization introduces noise into a signal processing chain.\n\nQuantization noise\n\nFig. 15.5 A circuit to investigate quantization noise behavior.\nimage_name:Fig. 15.5\ndescription:The diagram labeled \"Fig. 15.5\" comprises two separate graphs that illustrate the behavior of quantization noise in a signal processing circuit.\n\nLeft Graph:\n1. **Type of Graph and Function:**\n- This is a time-domain waveform showing the input and output signals of a digital-to-analog converter (DAC).\n\n2. **Axes Labels and Units:**\n- The horizontal axis represents time, labeled as \"t (Time)\".\n- The vertical axis represents voltage, with no specific units given.\n- Two signals are depicted: $V_{in}$ (dotted line) and $V_1$ (solid stepped line).\n\n3. **Overall Behavior and Trends:**\n- The graph displays a ramp input signal $V_{in}$, which is a continuous increasing linear function over time.\n- The output signal $V_1$ is a stepped approximation of the input, indicating quantization.\n- The steps in $V_1$ reflect the discrete levels of the quantizer, showing how the continuous input is approximated.\n\n4. **Key Features and Technical Details:**\n- The steps in $V_1$ illustrate the quantization process, where each step represents a discrete level of the quantizer.\n- There is a noticeable delay between the input $V_{in}$ and the quantized output $V_1$.\n\nRight Graph:\n1. **Type of Graph and Function:**\n- This is another time-domain waveform focusing on the quantization error signal $V_Q$.\n\n2. **Axes Labels and Units:**\n- The horizontal axis is labeled as \"t (Time)\".\n- The vertical axis represents voltage, labeled as $V_Q$.\n- The voltage scale is marked with $\\frac{1}{2} V_{LSB}$ and $-\\frac{1}{2} V_{LSB}$, indicating the limits of the quantization noise.\n\n3. **Overall Behavior and Trends:**\n- The graph shows an oscillating waveform of $V_Q$, demonstrating the quantization noise.\n- The waveform oscillates between $\\frac{1}{2} V_{LSB}$ and $-\\frac{1}{2} V_{LSB}$, indicating the bounded nature of the quantization error.\n\n4. **Key Features and Technical Details:**\n- The oscillation period is marked as $T$, showing the periodic nature of the quantization error.\n- The average of $V_Q$ over time is zero, as indicated by its symmetrical oscillation around the horizontal axis.\n\n5. **Annotations and Specific Data Points:**\n- The graph emphasizes the limits of the quantization noise, constrained between $\\frac{1}{2} V_{LSB}$ and $-\\frac{1}{2} V_{LSB}$.\nimage_name:Fig. 15.6\ndescription:The graph in Fig. 15.6 consists of two parts, each illustrating different aspects of quantization noise behavior when a ramp signal is applied to the circuit.\n\n**Left Graph:**\n1. **Type of Graph and Function:**\n- This is a time-domain waveform graph showing the input and quantized output signals.\n2. **Axes Labels and Units:**\n- The x-axis represents time, labeled as 't (Time)'.\n- The y-axis represents voltage, with the input voltage $V_{in}$ and the quantized output $V_1$.\n3. **Overall Behavior and Trends:**\n- The input signal $V_{in}$ is a smooth, continuous ramp signal depicted with a dashed line.\n- The quantized output $V_1$ is a staircase waveform, indicating discrete steps that approximate the continuous input ramp.\n- The steps occur at regular intervals, corresponding to the quantization levels.\n4. **Key Features and Technical Details:**\n- The quantized output exhibits a stepwise increase as time progresses, reflecting the quantization process.\n- Each step corresponds to a change of one least significant bit (LSB) in the digital representation.\n5. **Annotations and Specific Data Points:**\n- The graph does not provide specific numerical values for the voltage levels or time intervals.\n\n**Right Graph:**\n1. **Type of Graph and Function:**\n- This is also a time-domain waveform graph showing the quantization error signal $V_Q$.\n2. **Axes Labels and Units:**\n- The x-axis represents time, labeled as 't (Time)'.\n- The y-axis represents voltage, specifically the quantization error $V_Q$.\n3. **Overall Behavior and Trends:**\n- The error signal $V_Q$ oscillates between $+1/2 V_{LSB}$ and $-1/2 V_{LSB}$, forming a triangular waveform.\n- The waveform is periodic with a constant period $T$.\n4. **Key Features and Technical Details:**\n- The amplitude of the error signal is limited to $\n± 1/2 V_{LSB}$, indicating the bounds of quantization noise.\n- The average value of the quantization error is zero, as the waveform is symmetric about the time axis.\n5. **Annotations and Specific Data Points:**\n- The period $T$ of the waveform is marked on the graph, but no specific numerical values are provided for $T$ or $V_{LSB}$.\n\nOverall, these graphs illustrate how quantization introduces discrete steps in the output signal and generates a bounded error signal that oscillates around zero, demonstrating the inherent noise in the quantization process.\n\nFig. 15.6 Applying a ramp signal to the circuit in Fig. 15.5.\nresult of quantization error. Note that the quantization signal, $\\mathrm{V}_{\\mathrm{Q}}$, is limited to $\\pm \\mathrm{V}_{\\mathrm{LSB}} / 2$ and will be so limited for all input signals (not just ramps). Clearly, the average of $\\mathrm{V}_{\\mathrm{Q}}$ is zero. However, the rms value of the noise signal, $\\mathrm{V}_{\\mathrm{Q}(\\mathrm{rms})}$, is given by\n\n$$\n\\begin{align*}\n& V_{Q(r m s)}= {\\left[\\frac{1}{T} \\int_{-T / 2}^{T / 2} V_{Q}^{2} d t\\right]^{1 / 2}=\\left[\\frac{1}{T} \\int_{-T / 2}^{T / 2} V_{\\mathrm{LsB}}^{2}\\left(\\frac{-t}{T}\\right)^{2} \\mathrm{dt}\\right]^{1 / 2} } \\\\\n&=\\left[\\frac{\\mathrm{V}_{\\mathrm{LSB}}^{2}}{\\mathrm{~T}^{3}}\\left(\\left.\\frac{\\mathrm{t}^{3}}{3}\\right|_{-\\mathrm{T} / 2} ^{\\mathrm{T} / 2}\\right]^{1 / 2}\\right.  \\tag{15.11}\\\\\n& \\mathrm{V}_{\\mathrm{Q}(\\mathrm{rss})}=\\frac{\\mathrm{V}_{\\mathrm{LSB}}}{\\sqrt{12}} \\tag{15.12}\n\\end{align*}\n$$\n\nThus, we observe that the rms power of the quantization noise source is proportional to the magnitude of $\\mathrm{V}_{\\mathrm{LSB}}$, which is determined by the number of bits, N, in the converter."
},
{
    "text": "To comprehend certain characteristics of the quantization noise signal, $\\mathrm{V}_{\\mathrm{Q}}$, we will examine its behavior when the input is a specific function. Specifically, let us consider the input signal, $\\mathrm{V}_{\\mathrm{in}}$, in Fig. 15.5 to be a ramp. Such an input results in the output from the $\\mathrm{D} / \\mathrm{A}$, $\\mathrm{V}_{1}$, appearing as a staircase, as depicted in Fig. 15.6, assuming no overloading. By subtracting these two signals, we obtain the noise signal, $\\mathrm{V}_{\\mathrm{Q}}$, which is a\n\nKey Point: An ideal quantizer, when not overloaded, introduces an additive quantization noise less than 1/2 of an LSB in magnitude.\nimage_name:Fig. 15.5\ndescription:The system block diagram in Fig. 15.5 depicts a circuit designed to study quantization noise behavior. The main components of the system are:\n\n1. **A/D Converter (Analog to Digital Converter):** This block accepts the input signal $V_{in}$, which is a ramp signal. The A/D converter converts the analog input into a digital output labeled as 'B'.\n\n2. **D/A Converter (Digital to Analog Converter):** The digital signal 'B' from the A/D converter is input to the D/A converter. This block transforms the digital signal back into an analog signal, producing an output $V_1$.\n\n3. **Summing Junction:** The system includes a summing junction where the analog output $V_1$ from the D/A converter is subtracted from the original input signal $V_{in}$. The result of this subtraction is the quantization noise signal $V_Q$.\n\n**Flow of Information:**\n- The input signal $V_{in}$ enters the A/D converter for digitization.\n- The digital output 'B' is then fed to the D/A converter, which converts it back to an analog signal $V_1$.\n- The signal $V_1$ is then subtracted from the original input $V_{in}$ at the summing junction to produce the quantization noise $V_Q$.\n\n**Overall System Function:**\n- The primary purpose of this system is to demonstrate quantization noise behavior. By comparing the original input signal with the reconstructed output from the D/A converter, the system isolates the quantization error as the output $V_Q$. This error is confined to within ±1/2 of the least significant bit (LSB) of the quantizer, assuming no overloading. The system effectively shows how quantization introduces noise into a signal processing chain.\n\nQuantization noise\n\nFig. 15.5 A circuit to investigate quantization noise behavior.\nimage_name:Fig. 15.5\ndescription:The diagram labeled \"Fig. 15.5\" consists of two separate graphs illustrating the behavior of quantization noise in a signal processing circuit.\n\nLeft Graph:\n1. **Type of Graph and Function:**\n- This is a time-domain waveform showing the input and output signals of a digital-to-analog converter (DAC).\n\n2. **Axes Labels and Units:**\n- The horizontal axis represents time, labeled as \"t (Time)\".\n- The vertical axis represents voltage, with no specific units given.\n- Two signals are depicted: $V_{in}$ (dotted line) and $V_1$ (solid stepped line).\n\n3. **Overall Behavior and Trends:**\n- The graph displays a ramp input signal $V_{in}$, which is a continuous increasing linear function over time.\n- The output signal $V_1$ is a stepped approximation of the input, indicating quantization.\n- The steps in $V_1$ reflect the discrete levels of the quantizer, showing how the continuous input is approximated.\n\n4. **Key Features and Technical Details:**\n- The steps in $V_1$ illustrate the quantization process, where each step represents a discrete level of the quantizer.\n- There is a noticeable delay between the input $V_{in}$ and the quantized output $V_1$.\n\nRight Graph:\n1. **Type of Graph and Function:**\n- This is another time-domain waveform focusing on the quantization error signal $V_Q$.\n\n2. **Axes Labels and Units:**\n- The horizontal axis is labeled as \"t (Time)\".\n- The vertical axis represents voltage, labeled as $V_Q$.\n- The voltage scale is marked with $\\frac{1}{2} V_{LSB}$ and $-\\frac{1}{2} V_{LSB}$, indicating the limits of the quantization noise.\n\n3. **Overall Behavior and Trends:**\n- The graph shows an oscillating waveform of $V_Q$, demonstrating the quantization noise.\n- The waveform oscillates between $\\frac{1}{2} V_{LSB}$ and $-\\frac{1}{2} V_{LSB}$, indicating the bounded nature of the quantization error.\n\n4. **Key Features and Technical Details:**\n- The oscillation period is marked as $T$, showing the periodic nature of the quantization error.\n- The average of $V_Q$ over time is zero, as indicated by its symmetrical oscillation around the horizontal axis.\n\n5. **Annotations and Specific Data Points:**\n- The graph emphasizes the limits of the quantization noise, constrained between $\\frac{1}{2} V_{LSB}$ and $-\\frac{1}{2} V_{LSB}$.\nimage_name:Fig. 15.6\ndescription:The graph in Fig. 15.6 consists of two parts, each illustrating different aspects of quantization noise behavior when a ramp signal is applied to the circuit.\n\n**Left Graph:**\n1. **Type of Graph and Function:**\n- This is a time-domain waveform graph showing the input and quantized output signals.\n2. **Axes Labels and Units:**\n- The x-axis represents time, labeled as 't (Time)'.\n- The y-axis represents voltage, with the input voltage $V_{in}$ and the quantized output $V_1$.\n3. **Overall Behavior and Trends:**\n- The input signal $V_{in}$ is a smooth, continuous ramp signal depicted with a dashed line.\n- The quantized output $V_1$ is a staircase waveform, indicating discrete steps that approximate the continuous input ramp.\n- The steps occur at regular intervals, corresponding to the quantization levels.\n4. **Key Features and Technical Details:**\n- The quantized output exhibits a stepwise increase as time progresses, reflecting the quantization process.\n- Each step corresponds to a change of one least significant bit (LSB) in the digital representation.\n5. **Annotations and Specific Data Points:**\n- The graph does not provide specific numerical values for the voltage levels or time intervals.\n\n**Right Graph:**\n1. **Type of Graph and Function:**\n- This is also a time-domain waveform graph showing the quantization error signal $V_Q$.\n2. **Axes Labels and Units:**\n- The x-axis represents time, labeled as 't (Time)'.\n- The y-axis represents voltage, specifically the quantization error $V_Q$.\n3. **Overall Behavior and Trends:**\n- The error signal $V_Q$ oscillates between $+1/2 V_{LSB}$ and $-1/2 V_{LSB}$, forming a triangular waveform.\n- The waveform is periodic with a constant period $T$.\n4. **Key Features and Technical Details:**\n- The amplitude of the error signal is limited to ±1/2 V_{LSB}, indicating the bounds of quantization noise.\n- The average value of the quantization error is zero, as the waveform is symmetric about the time axis.\n5. **Annotations and Specific Data Points:**\n- The period $T$ of the waveform is marked on the graph, but no specific numerical values are provided for $T$ or $V_{LSB}$.\n\nOverall, these graphs illustrate how quantization introduces discrete steps in the output signal and generates a bounded error signal that oscillates around zero, demonstrating the inherent noise in the quantization process.\n\nFig. 15.6 Applying a ramp signal to the circuit in Fig. 15.5.\nresult of quantization error. Note that the quantization signal, $\\mathrm{V}_{\\mathrm{Q}}$, is limited to $\\pm \\mathrm{V}_{\\mathrm{LSB}} / 2$ and will be so limited for all input signals (not just ramps). Clearly, the average of $\\mathrm{V}_{\\mathrm{Q}}$ is zero. However, the rms value of the noise signal, $\\mathrm{V}_{\\mathrm{Q}(\\mathrm{rms})}$, is given by\n\n$$\n\\begin{align*}\n& V_{Q(r m s)}= {\\left[\\frac{1}{T} \\int_{-T / 2}^{T / 2} V_{Q}^{2} d t\\right]^{1 / 2}=\\left[\\frac{1}{T} \\int_{-T / 2}^{T / 2} V_{\\mathrm{LsB}}^{2}\\left(\\frac{-t}{T}\\right)^{2} \\mathrm{dt}\\right]^{1 / 2} } \\\\\n&=\\left[\\frac{\\mathrm{V}_{\\mathrm{LSB}}^{2}}{\\mathrm{~T}^{3}}\\left(\\left.\\frac{\\mathrm{t}^{3}}{3}\\right|_{-\\mathrm{T} / 2} ^{\\mathrm{T} / 2}\\right]^{1 / 2}\\right.  \\tag{15.11}\\\\\n& \\mathrm{V}_{\\mathrm{Q}(\\mathrm{rms})}=\\frac{\\mathrm{V}_{\\mathrm{LSB}}}{\\sqrt{12}} \\tag{15.12}\n\\end{align*}\n$$\n\nThus, we see that the rms power of the quantization noise source is proportional to the size of $\\mathrm{V}_{\\mathrm{LSB}}$, which is determined by the number of bits, N, in the converter."
},
{
    "text": "To comprehend certain characteristics of the quantization noise signal, $\\mathrm{V}_{\\mathrm{Q}}$, we will examine its behavior when the input is a specific function. Specifically, let us consider the input signal, $\\mathrm{V}_{\\mathrm{in}}$, in Fig. 15.5 to be a ramp. Such an input results in the output from the $\\mathrm{D} / \\mathrm{A}$, $\\mathrm{V}_{1}$, appearing as a staircase, as depicted in Fig. 15.6, assuming no overloading. By subtracting these two signals, we obtain the noise signal, $\\mathrm{V}_{\\mathrm{Q}}$, which is a\n\nKey Point: As long as it is not overloaded, the ideal quantizer introduces an additive quantization noise less than 1/2 of an LSB in magnitude.\nimage_name:Fig. 15.5\ndescription:The system block diagram in Fig. 15.5 depicts a circuit designed to study quantization noise behavior. The main components of the system are:\n\n1. **A/D Converter (Analog to Digital Converter):** This block accepts the input signal $V_{in}$, which is a ramp signal. The A/D converter converts the analog input into a digital output labeled as 'B'.\n\n2. **D/A Converter (Digital to Analog Converter):** The digital signal 'B' from the A/D converter is input into the D/A converter. This block transforms the digital signal back into an analog signal, producing an output $V_1$.\n\n3. **Summing Junction:** The system includes a summing junction where the analog output $V_1$ from the D/A converter is subtracted from the original input signal $V_{in}$. The result of this subtraction is the quantization noise signal $V_Q$.\n\n**Flow of Information:**\n- The input signal $V_{in}$ is processed by the A/D converter, converting it to a digital signal.\n- The digital output 'B' is then fed to the D/A converter, which converts it back to an analog signal $V_1$.\n- The signal $V_1$ is then input into a summing junction, where it is subtracted from the original input $V_{in}$ to yield the quantization noise $V_Q$.\n\n**Overall System Function:**\n- The primary purpose of this system is to demonstrate the behavior of quantization noise. By comparing the original input signal with the reconstructed output from the D/A converter, the system isolates the quantization error as the output $V_Q$. This error is confined to within ±1/2 of the least significant bit (LSB) of the quantizer, assuming no overloading. The system effectively illustrates how quantization introduces noise into a signal processing chain.\n\nQuantization noise\n\nFig. 15.5 A circuit to investigate quantization noise behavior.\nimage_name:Fig. 15.5\ndescription:The diagram labeled \"Fig. 15.5\" comprises two separate graphs that illustrate the behavior of quantization noise in a signal processing circuit.\n\nLeft Graph:\n1. **Type of Graph and Function:**\n- This is a time-domain waveform showing the input and output signals of a digital-to-analog converter (DAC).\n\n2. **Axes Labels and Units:**\n- The horizontal axis represents time, labeled as \"t (Time)\".\n- The vertical axis represents voltage, with no specific units given.\n- Two signals are depicted: $V_{in}$ (dotted line) and $V_1$ (solid stepped line).\n\n3. **Overall Behavior and Trends:**\n- The graph displays a ramp input signal $V_{in}$, which is a continuous increasing linear function over time.\n- The output signal $V_1$ is a stepped approximation of the input, indicating quantization.\n- The steps in $V_1$ reflect the discrete levels of the quantizer, showing how the continuous input is approximated.\n\n4. **Key Features and Technical Details:**\n- The steps in $V_1$ illustrate the quantization process, where each step represents a discrete level of the quantizer.\n- There is a noticeable delay between the input $V_{in}$ and the quantized output $V_1$.\n\nRight Graph:\n1. **Type of Graph and Function:**\n- This is another time-domain waveform focusing on the quantization error signal $V_Q$.\n\n2. **Axes Labels and Units:**\n- The horizontal axis is labeled as \"t (Time)\".\n- The vertical axis represents voltage, labeled as $V_Q$.\n- The voltage scale is marked with $\\frac{1}{2} V_{LSB}$ and $-\\frac{1}{2} V_{LSB}$, indicating the limits of the quantization noise.\n\n3. **Overall Behavior and Trends:**\n- The graph shows an oscillating waveform of $V_Q$, demonstrating the quantization noise.\n- The waveform oscillates between $\\frac{1}{2} V_{LSB}$ and $-\\frac{1}{2} V_{LSB}$, indicating the bounded nature of the quantization error.\n\n4. **Key Features and Technical Details:**\n- The oscillation period is marked as $T$, showing the periodic nature of the quantization error.\n- The average of $V_Q$ over time is zero, as indicated by its symmetrical oscillation around the horizontal axis.\n\n5. **Annotations and Specific Data Points:**\n- The graph emphasizes the limits of the quantization noise, constrained between $\\frac{1}{2} V_{LSB}$ and $-\\frac{1}{2} V_{LSB}$.\nimage_name:Fig. 15.6\ndescription:The graph in Fig. 15.6 consists of two parts, each illustrating different aspects of quantization noise behavior when a ramp signal is applied to the circuit.\n\n**Left Graph:**\n1. **Type of Graph and Function:**\n- This is a time-domain waveform graph showing the input and quantized output signals.\n2. **Axes Labels and Units:**\n- The x-axis represents time, labeled as 't (Time)'.\n- The y-axis represents voltage, with the input voltage $V_{in}$ and the quantized output $V_1$.\n3. **Overall Behavior and Trends:**\n- The input signal $V_{in}$ is a smooth, continuous ramp signal depicted with a dashed line.\n- The quantized output $V_1$ is a staircase waveform, indicating discrete steps that approximate the continuous input ramp.\n- The steps occur at regular intervals, corresponding to the quantization levels.\n4. **Key Features and Technical Details:**\n- The quantized output exhibits a stepwise increase as time progresses, reflecting the quantization process.\n- Each step corresponds to a change of one least significant bit (LSB) in the digital representation.\n5. **Annotations and Specific Data Points:**\n- The graph does not provide specific numerical values for the voltage levels or time intervals.\n\n**Right Graph:**\n1. **Type of Graph and Function:**\n- This is also a time-domain waveform graph showing the quantization error signal $V_Q$.\n2. **Axes Labels and Units:**\n- The x-axis represents time, labeled as 't (Time)'.\n- The y-axis represents voltage, specifically the quantization error $V_Q$.\n3. **Overall Behavior and Trends:**\n- The error signal $V_Q$ oscillates between $+1/2 V_{LSB}$ and $-1/2 V_{LSB}$, forming a triangular waveform.\n- The waveform is periodic with a constant period $T$.\n4. **Key Features and Technical Details:**\n- The amplitude of the error signal is limited to $\n± 1/2 V_{LSB}$, indicating the bounds of quantization noise.\n- The average value of the quantization error is zero, as the waveform is symmetric about the time axis.\n5. **Annotations and Specific Data Points:**\n- The period $T$ of the waveform is marked on the graph, but no specific numerical values are provided for $T$ or $V_{LSB}$.\n\nOverall, these graphs illustrate how quantization introduces discrete steps in the output signal and generates a bounded error signal that oscillates around zero, demonstrating the inherent noise in the quantization process.\n\nFig. 15.6 Applying a ramp signal to the circuit in Fig. 15.5.\nresult of quantization error. Note that the quantization signal, $\\mathrm{V}_{\\mathrm{Q}}$, is limited to $\\pm \\mathrm{V}_{\\mathrm{LSB}} / 2$ and will be so limited for all input signals (not just ramps). Clearly, the average of $\\mathrm{V}_{\\mathrm{Q}}$ is zero. However, the rms value of the noise signal, $\\mathrm{V}_{\\mathrm{Q}(\\mathrm{rms})}$, is given by\n\n$$\n\\begin{align*}\n& V_{Q(r m s)}= {\\left[\\frac{1}{T} \\int_{-T / 2}^{T / 2} V_{Q}^{2} d t\\right]^{1 / 2}=\\left[\\frac{1}{T} \\int_{-T / 2}^{T / 2} V_{\\mathrm{LsB}}^{2}\\left(\\frac{-t}{T}\\right)^{2} \\mathrm{dt}\\right]^{1 / 2} } \\\\\n&=\\left[\\frac{\\mathrm{V}_{\\mathrm{LSB}}^{2}}{\\mathrm{~T}^{3}}\\left(\\left.\\frac{\\mathrm{t}^{3}}{3}\\right|_{-\\mathrm{T} / 2} ^{\\mathrm{T} / 2}\\right]^{1 / 2}\\right.  \\tag{15.11}\\\\\n& \\mathrm{V}_{\\mathrm{Q}(\\mathrm{rss})}=\\frac{\\mathrm{V}_{\\mathrm{LSB}}}{\\sqrt{12}} \\tag{15.12}\n\\end{align*}\n$$\n\nThus, we see that the rms power of the quantization noise source is proportional to the size of $\\mathrm{V}_{\\mathrm{LSB}}$, which is determined by the number of bits, N, in the converter."
},
{
    "text": "To comprehend some characteristics of the quantization noise signal, $\\mathrm{V}_{\\mathrm{Q}}$, we will examine its behavior when the input is a specific function. Specifically, let us assume the input signal, $\\mathrm{V}_{\\mathrm{in}}$, in Fig. 15.5 is a ramp. Such an input results in the output from the $\\mathrm{D} / \\mathrm{A}, \\mathrm{V}_{1}$, appearing as a staircase, as depicted in Fig. 15.6, assuming no overloading occurs. By taking the difference between these two signals, we obtain the noise signal, $\\mathrm{V}_{\\mathrm{Q}}$, which is a\n\nKey Point: As long as it is not overloaded, the ideal quantizer introduces an additive quantization noise less than 1/2 of an LSB in magnitude.\nimage_name:Fig. 15.5\ndescription:The system block diagram in Fig. 15.5 depicts a circuit designed to study quantization noise behavior. The main components of the system are as follows:\n\n1. **A/D Converter (Analog to Digital Converter):** This block receives the input signal $V_{in}$, which is a ramp signal. The A/D converter digitizes the analog input signal, producing a digital output signal labeled as 'B'.\n\n2. **D/A Converter (Digital to Analog Converter):** The digital signal 'B' from the A/D converter is fed into the D/A converter. This block converts the digital signal back into an analog signal, producing an output $V_1$.\n\n3. **Summing Junction:** The system includes a summing junction where the analog output $V_1$ from the D/A converter is subtracted from the original input signal $V_{in}$. The result of this subtraction is the quantization noise signal $V_Q$.\n\n**Flow of Information:**\n- The input signal $V_{in}$ enters the A/D converter, where it is digitized.\n- The digital output 'B' is then sent to the D/A converter, which converts it back to an analog signal $V_1$.\n- The signal $V_1$ is fed into a summing junction, where it is subtracted from the original input $V_{in}$ to produce the quantization noise $V_Q$.\n\n**Overall System Function:**\n- The primary function of this system is to demonstrate the behavior of quantization noise. By comparing the original input signal with the reconstructed output from the D/A converter, the system isolates the quantization error as the output $V_Q$. This error is limited to within ±1/2 of the least significant bit (LSB) of the quantizer, assuming no overloading occurs. The system effectively illustrates how quantization introduces noise into a signal processing chain.\n\nQuantization noise\n\nFig. 15.5 A circuit to investigate quantization noise behavior.\nimage_name:Fig. 15.5\ndescription:The diagram labeled \"Fig. 15.5\" consists of two separate graphs illustrating the behavior of quantization noise in a signal processing circuit.\n\nLeft Graph:\n1. **Type of Graph and Function:**\n- This is a time-domain waveform showing the input and output signals of a digital-to-analog converter (DAC).\n\n2. **Axes Labels and Units:**\n- The horizontal axis represents time, labeled as \"t (Time)\".\n- The vertical axis represents voltage, with no specific units given.\n- Two signals are shown: $V_{in}$ (dotted line) and $V_1$ (solid stepped line).\n\n3. **Overall Behavior and Trends:**\n- The graph shows a ramp input signal $V_{in}$, which is a continuous increasing linear function over time.\n- The output signal $V_1$ is a stepped approximation of the input, indicating quantization.\n- The steps in $V_1$ reflect the discrete levels of the quantizer, showing how the continuous input is approximated.\n\n4. **Key Features and Technical Details:**\n- The steps in $V_1$ illustrate the quantization process, where each step represents a discrete level of the quantizer.\n- There is a noticeable delay between the input $V_{in}$ and the quantized output $V_1$.\n\nRight Graph:\n1. **Type of Graph and Function:**\n- This is another time-domain waveform focusing on the quantization error signal $V_Q$.\n\n2. **Axes Labels and Units:**\n- The horizontal axis is labeled as \"t (Time)\".\n- The vertical axis represents voltage, labeled as $V_Q$.\n- The voltage scale is marked with $\\frac{1}{2} V_{LSB}$ and $-\\frac{1}{2} V_{LSB}$, indicating the limits of the quantization noise.\n\n3. **Overall Behavior and Trends:**\n- The graph shows an oscillating waveform of $V_Q$, demonstrating the quantization noise.\n- The waveform oscillates between $\\frac{1}{2} V_{LSB}$ and $-\\frac{1}{2} V_{LSB}$, indicating the bounded nature of the quantization error.\n\n4. **Key Features and Technical Details:**\n- The oscillation period is marked as $T$, showing the periodic nature of the quantization error.\n- The average of $V_Q$ over time is zero, as indicated by its symmetrical oscillation around the horizontal axis.\n\n5. **Annotations and Specific Data Points:**\n- The graph emphasizes the limits of the quantization noise, constrained between $\\frac{1}{2} V_{LSB}$ and $-\\frac{1}{2} V_{LSB}$.\nimage_name:Fig. 15.6\ndescription:The graph in Fig. 15.6 consists of two parts, each illustrating different aspects of quantization noise behavior when a ramp signal is applied to the circuit.\n\n**Left Graph:**\n1. **Type of Graph and Function:**\n- This is a time-domain waveform graph showing the input and quantized output signals.\n2. **Axes Labels and Units:**\n- The x-axis represents time, labeled as 't (Time)'.\n- The y-axis represents voltage, with the input voltage $V_{in}$ and the quantized output $V_1$.\n3. **Overall Behavior and Trends:**\n- The input signal $V_{in}$ is a smooth, continuous ramp signal depicted with a dashed line.\n- The quantized output $V_1$ is a staircase waveform, indicating discrete steps that approximate the continuous input ramp.\n- The steps occur at regular intervals, corresponding to the quantization levels.\n4. **Key Features and Technical Details:**\n- The quantized output exhibits a stepwise increase as time progresses, reflecting the quantization process.\n- Each step corresponds to a change of one least significant bit (LSB) in the digital representation.\n5. **Annotations and Specific Data Points:**\n- The graph does not provide specific numerical values for the voltage levels or time intervals.\n\n**Right Graph:**\n1. **Type of Graph and Function:**\n- This is also a time-domain waveform graph showing the quantization error signal $V_Q$.\n2. **Axes Labels and Units:**\n- The x-axis represents time, labeled as 't (Time)'.\n- The y-axis represents voltage, specifically the quantization error $V_Q$.\n3. **Overall Behavior and Trends:**\n- The error signal $V_Q$ oscillates between $+1/2 V_{LSB}$ and $-1/2 V_{LSB}$, forming a triangular waveform.\n- The waveform is periodic with a constant period $T$.\n4. **Key Features and Technical Details:**\n- The amplitude of the error signal is limited to $\n± 1/2 V_{LSB}$, indicating the bounds of quantization noise.\n- The average value of the quantization error is zero, as the waveform is symmetric about the time axis.\n5. **Annotations and Specific Data Points:**\n- The period $T$ of the waveform is marked on the graph, but no specific numerical values are provided for $T$ or $V_{LSB}$.\n\nOverall, these graphs illustrate how quantization introduces discrete steps in the output signal and generates a bounded error signal that oscillates around zero, demonstrating the inherent noise in the quantization process.\n\nFig. 15.6 Applying a ramp signal to the circuit in Fig. 15.5.\nresult of quantization error. Note that the quantization signal, $\\mathrm{V}_{\\mathrm{Q}}$, is limited to $\\pm \\mathrm{V}_{\\mathrm{LSB}} / 2$ and will be so limited for all input signals (not just ramps). Clearly, the average of $\\mathrm{V}_{\\mathrm{Q}}$ is zero. However, the rms value of the noise signal, $\\mathrm{V}_{\\mathrm{Q}(\\mathrm{rms})}$, is given by\n\n$$\n\\begin{align*}\n& V_{Q(r m s)}= {\\left[\\frac{1}{T} \\int_{-T / 2}^{T / 2} V_{Q}^{2} d t\\right]^{1 / 2}=\\left[\\frac{1}{T} \\int_{-T / 2}^{T / 2} V_{\\mathrm{LsB}}^{2}\\left(\\frac{-t}{T}\\right)^{2} \\mathrm{dt}\\right]^{1 / 2} } \\\\\n&=\\left[\\frac{\\mathrm{V}_{\\mathrm{LSB}}^{2}}{\\mathrm{~T}^{3}}\\left(\\left.\\frac{\\mathrm{t}^{3}}{3}\\right|_{-\\mathrm{T} / 2} ^{\\mathrm{T} / 2}\\right]^{1 / 2}\\right.  \\tag{15.11}\\\\\n& \\mathrm{V}_{\\mathrm{Q}(\\mathrm{rss})}=\\frac{\\mathrm{V}_{\\mathrm{LSB}}}{\\sqrt{12}} \\tag{15.12}\n\\end{align*}\n$$\n\nThus, we see that the rms power of the quantization noise source is proportional to the size of $\\mathrm{V}_{\\mathrm{LSB}}$, which is determined by the number of bits, N , in the converter."
},
{
    "text": "To comprehend some characteristics of the quantization noise signal, $\\mathrm{V}_{\\mathrm{Q}}$, we will examine its behavior when the input is a specific function. In particular, let us consider the input signal, $\\mathrm{V}_{\\mathrm{in}}$, in Fig. 15.5 as a ramp. This type of input results in the output from the $\\mathrm{D} / \\mathrm{A}$, $\\mathrm{V}_{1}$, appearing as a staircase, as depicted in Fig. 15.6, assuming no overloading takes place. By calculating the difference between these two signals, we obtain the noise signal, $\\mathrm{V}_{\\mathrm{Q}}$, which is a\n\nKey Point: As long as it is not overloaded, the ideal quantizer introduces an additive quantization noise less than 1/2 of an LSB in magnitude.\n\nimage_name:Fig. 15.5\ndescription:Fig. 15.5 presents a system block diagram designed to study the behavior of quantization noise. The main components of the system are:\n\n1. **A/D Converter (Analog to Digital Converter):** This block receives the input signal $V_{in}$, which is a ramp signal. The A/D converter converts the analog input into a digital output labeled 'B'.\n\n2. **D/A Converter (Digital to Analog Converter):** The digital signal 'B' from the A/D converter is input to the D/A converter, which then converts it back into an analog signal, producing an output $V_1$.\n\n3. **Summing Junction:** The system includes a summing junction where the analog output $V_1$ from the D/A converter is subtracted from the original input signal $V_{in}$. The result of this subtraction is the quantization noise signal $V_Q$.\n\n**Flow of Information:**\n- The input signal $V_{in}$ is first digitized by the A/D converter.\n- The digital output 'B' is then converted back to an analog signal $V_1$ by the D/A converter.\n- The signal $V_1$ is subtracted from the original input $V_{in}$ at the summing junction to produce the quantization noise $V_Q$.\n\n**Overall System Function:**\n- The main purpose of this system is to demonstrate the behavior of quantization noise. By comparing the original input signal with the reconstructed output from the D/A converter, the system isolates the quantization error as the output $V_Q$. This error is confined to within ±1/2 of the least significant bit (LSB) of the quantizer, assuming no overloading occurs. The system effectively illustrates how quantization introduces noise into a signal processing chain.\n\nQuantization noise\n\nFig. 15.5 A circuit to investigate quantization noise behavior.\n\nimage_name:Fig. 15.5\ndescription:The diagram labeled \"Fig. 15.5\" consists of two separate graphs depicting the behavior of quantization noise in a signal processing circuit.\n\nLeft Graph:\n1. **Type of Graph and Function:**\n- This is a time-domain waveform showing the input and output signals of a digital-to-analog converter (DAC).\n\n2. **Axes Labels and Units:**\n- The horizontal axis represents time, labeled as \"t (Time)\".\n- The vertical axis represents voltage, with no specific units given.\n- Two signals are shown: $V_{in}$ (dotted line) and $V_1$ (solid stepped line).\n\n3. **Overall Behavior and Trends:**\n- The graph displays a ramp input signal $V_{in}$, which is a continuous increasing linear function over time.\n- The output signal $V_1$ is a stepped approximation of the input, indicating quantization.\n- The steps in $V_1$ reflect the discrete levels of the quantizer, showing how the continuous input is approximated.\n\n4. **Key Features and Technical Details:**\n- The steps in $V_1$ illustrate the quantization process, where each step represents a discrete level of the quantizer.\n- There is a noticeable delay between the input $V_{in}$ and the quantized output $V_1$.\n\nRight Graph:\n1. **Type of Graph and Function:**\n- This is another time-domain waveform focusing on the quantization error signal $V_Q$.\n\n2. **Axes Labels and Units:**\n- The horizontal axis is labeled as \"t (Time)\".\n- The vertical axis represents voltage, labeled as $V_Q$.\n- The voltage scale is marked with $\\frac{1}{2} V_{LSB}$ and $-\\frac{1}{2} V_{LSB}$, indicating the limits of the quantization noise.\n\n3. **Overall Behavior and Trends:**\n- The graph shows an oscillating waveform of $V_Q$, demonstrating the quantization noise.\n- The waveform oscillates between $\\frac{1}{2} V_{LSB}$ and $-\\frac{1}{2} V_{LSB}$, indicating the bounded nature of the quantization error.\n\n4. **Key Features and Technical Details:**\n- The oscillation period is marked as $T$, showing the periodic nature of the quantization error.\n- The average of $V_Q$ over time is zero, as indicated by its symmetrical oscillation around the horizontal axis.\n\n5. **Annotations and Specific Data Points:**\n- The graph emphasizes the limits of the quantization noise, constrained between $\\frac{1}{2} V_{LSB}$ and $-\\frac{1}{2} V_{LSB}$.\n\nimage_name:Fig. 15.6\ndescription:Fig. 15.6 comprises two parts, each illustrating different aspects of quantization noise behavior when a ramp signal is applied to the circuit.\n\n**Left Graph:**\n1. **Type of Graph and Function:**\n- This is a time-domain waveform graph showing the input and quantized output signals.\n\n2. **Axes Labels and Units:**\n- The x-axis represents time, labeled as 't (Time)'.\n- The y-axis represents voltage, with the input voltage $V_{in}$ and the quantized output $V_1$.\n\n3. **Overall Behavior and Trends:**\n- The input signal $V_{in}$ is a smooth, continuous ramp signal depicted with a dashed line.\n- The quantized output $V_1$ is a staircase waveform, indicating discrete steps that approximate the continuous input ramp.\n- The steps occur at regular intervals, corresponding to the quantization levels.\n\n4. **Key Features and Technical Details:**\n- The quantized output exhibits a stepwise increase as time progresses, reflecting the quantization process.\n- Each step corresponds to a change of one least significant bit (LSB) in the digital representation.\n\n5. **Annotations and Specific Data Points:**\n- The graph does not provide specific numerical values for the voltage levels or time intervals.\n\n**Right Graph:**\n1. **Type of Graph and Function:**\n- This is also a time-domain waveform graph showing the quantization error signal $V_Q$.\n\n2. **Axes Labels and Units:**\n- The x-axis represents time, labeled as 't (Time)'.\n- The y-axis represents voltage, specifically the quantization error $V_Q$.\n\n3. **Overall Behavior and Trends:**\n- The error signal $V_Q$ oscillates between $+1/2 V_{LSB}$ and $-1/2 V_{LSB}$, forming a triangular waveform.\n- The waveform is periodic with a constant period $T$.\n\n4. **Key Features and Technical Details:**\n- The amplitude of the error signal is limited to ±1/2 V_{LSB}, indicating the bounds of quantization noise.\n- The average value of the quantization error is zero, as the waveform is symmetric about the time axis.\n\n5. **Annotations and Specific Data Points:**\n- The period $T$ of the waveform is marked on the graph, but no specific numerical values are provided for $T$ or $V_{LSB}$.\n\nOverall, these graphs illustrate how quantization introduces discrete steps in the output signal and generates a bounded error signal that oscillates around zero, demonstrating the inherent noise in the quantization process.\n\nFig. 15.6 Applying a ramp signal to the circuit in Fig. 15.5.\n\nResult of quantization error. Note that the quantization signal, $\\mathrm{V}_{\\mathrm{Q}}$, is limited to $\\pm \\mathrm{V}_{\\mathrm{LSB}} / 2$ and will be so limited for all input signals (not just ramps). Clearly, the average of $\\mathrm{V}_{\\mathrm{Q}}$ is zero. However, the rms value of the noise signal, $\\mathrm{V}_{\\mathrm{Q}(\\mathrm{rms})}$, is given by\n\n$$\n\\begin{align*}\n& V_{Q(r m s)}= {\\left[\\frac{1}{T} \\int_{-T / 2}^{T / 2} V_{Q}^{2} d t\\right]^{1 / 2}=\\left[\\frac{1}{T} \\int_{-T / 2}^{T / 2} V_{\\mathrm{LsB}}^{2}\\left(\\frac{-t}{T}\\right)^{2} \\mathrm{dt}\\right]^{1 / 2} } \\\\\n&=\\left[\\frac{\\mathrm{V}_{\\mathrm{LSB}}^{2}}{\\mathrm{~T}^{3}}\\left(\\left.\\frac{\\mathrm{t}^{3}}{3}\\right|_{-\\mathrm{T} / 2} ^{\\mathrm{T} / 2}\\right]^{1 / 2}\\right.  \\tag{15.11}\\\\\n& \\mathrm{V}_{\\mathrm{Q}(\\mathrm{rss})}=\\frac{\\mathrm{V}_{\\mathrm{LSB}}}{\\sqrt{12}} \\tag{15.12}\n\\end{align*}\n$$\n\nThus, we see that the rms power of the quantization noise source is proportional to the size of $\\mathrm{V}_{\\mathrm{LSB}}$, which is determined by the number of bits, N, in the converter."
},
{
    "text": "To comprehend certain characteristics of the quantization noise signal, $\\mathrm{V}_{\\mathrm{Q}}$, we will examine its behavior when the input is a specific function. In particular, let us consider the input signal, $\\mathrm{V}_{\\mathrm{in}}$, in Fig. 15.5 to be a ramp. Such an input results in the output from the $\\mathrm{D} / \\mathrm{A}$, $\\mathrm{V}_{1}$, appearing as a staircase, as depicted in Fig. 15.6, assuming no overloading takes place. By subtracting these two signals, we obtain the noise signal, $\\mathrm{V}_{\\mathrm{Q}}$, which is a\n\nKey Point: Provided it is not overloaded, the ideal quantizer introduces an additive quantization noise that is less than 1/2 of an LSB in magnitude.\nimage_name:Fig. 15.5\ndescription:The system block diagram in Fig. 15.5 depicts a circuit designed to study the behavior of quantization noise. The main components of the system are as follows:\n\n1. **A/D Converter (Analog to Digital Converter):** This block receives the input signal $V_{in}$, which is a ramp signal. The A/D converter converts the analog input signal into a digital output signal labeled as 'B'.\n\n2. **D/A Converter (Digital to Analog Converter):** The digital signal 'B' from the A/D converter is input into the D/A converter. This block transforms the digital signal back into an analog signal, producing an output $V_1$.\n\n3. **Summing Junction:** The system includes a summing junction where the analog output $V_1$ from the D/A converter is subtracted from the original input signal $V_{in}$. The result of this subtraction is the quantization noise signal $V_Q$.\n\n**Flow of Information:**\n- The input signal $V_{in}$ enters the A/D converter, where it undergoes digitization.\n- The digital output 'B' is then transmitted to the D/A converter, which reconverts it to an analog signal $V_1$.\n- The signal $V_1$ is then fed into a summing junction, where it is subtracted from the original input $V_{in}$ to yield the quantization noise $V_Q$.\n\n**Overall System Function:**\n- The primary role of this system is to demonstrate the behavior of quantization noise. By comparing the original input signal with the reconstructed output from the D/A converter, the system isolates the quantization error as the output $V_Q$. This error is confined within ±1/2 of the least significant bit (LSB) of the quantizer, assuming no overloading occurs. The system effectively illustrates how quantization introduces noise into a signal processing chain.\n\nQuantization noise\n\nFig. 15.5 A circuit to investigate quantization noise behavior.\nimage_name:Fig. 15.5\ndescription:The diagram labeled \"Fig. 15.5\" comprises two separate graphs that illustrate the behavior of quantization noise in a signal processing circuit.\n\nLeft Graph:\n1. **Type of Graph and Function:**\n- This is a time-domain waveform showing the input and output signals of a digital-to-analog converter (DAC).\n\n2. **Axes Labels and Units:**\n- The horizontal axis represents time, labeled as \"t (Time)\".\n- The vertical axis represents voltage, with no specific units given.\n- Two signals are depicted: $V_{in}$ (dotted line) and $V_1$ (solid stepped line).\n\n3. **Overall Behavior and Trends:**\n- The graph displays a ramp input signal $V_{in}$, which is a continuous increasing linear function over time.\n- The output signal $V_1$ is a stepped approximation of the input, indicating quantization.\n- The steps in $V_1$ reflect the discrete levels of the quantizer, showing how the continuous input is approximated.\n\n4. **Key Features and Technical Details:**\n- The steps in $V_1$ illustrate the quantization process, where each step represents a discrete level of the quantizer.\n- There is a noticeable delay between the input $V_{in}$ and the quantized output $V_1$.\n\nRight Graph:\n1. **Type of Graph and Function:**\n- This is another time-domain waveform focusing on the quantization error signal $V_Q$.\n\n2. **Axes Labels and Units:**\n- The horizontal axis is labeled as \"t (Time)\".\n- The vertical axis represents voltage, labeled as $V_Q$.\n- The voltage scale is marked with $\\frac{1}{2} V_{LSB}$ and $-\\frac{1}{2} V_{LSB}$, indicating the limits of the quantization noise.\n\n3. **Overall Behavior and Trends:**\n- The graph shows an oscillating waveform of $V_Q$, demonstrating the quantization noise.\n- The waveform oscillates between $\\frac{1}{2} V_{LSB}$ and $-\\frac{1}{2} V_{LSB}$, indicating the bounded nature of the quantization error.\n\n4. **Key Features and Technical Details:**\n- The oscillation period is marked as $T$, showing the periodic nature of the quantization error.\n- The average of $V_Q$ over time is zero, as indicated by its symmetrical oscillation around the horizontal axis.\n\n5. **Annotations and Specific Data Points:**\n- The graph emphasizes the limits of the quantization noise, constrained between $\\frac{1}{2} V_{LSB}$ and $-\\frac{1}{2} V_{LSB}$.\nimage_name:Fig. 15.6\ndescription:The graph in Fig. 15.6 consists of two parts, each illustrating different aspects of quantization noise behavior when a ramp signal is applied to the circuit.\n\n**Left Graph:**\n1. **Type of Graph and Function:**\n- This is a time-domain waveform graph showing the input and quantized output signals.\n2. **Axes Labels and Units:**\n- The x-axis represents time, labeled as 't (Time)'.\n- The y-axis represents voltage, with the input voltage $V_{in}$ and the quantized output $V_1$.\n3. **Overall Behavior and Trends:**\n- The input signal $V_{in}$ is a smooth, continuous ramp signal depicted with a dashed line.\n- The quantized output $V_1$ is a staircase waveform, indicating discrete steps that approximate the continuous input ramp.\n- The steps occur at regular intervals, corresponding to the quantization levels.\n4. **Key Features and Technical Details:**\n- The quantized output exhibits a stepwise increase as time progresses, reflecting the quantization process.\n- Each step corresponds to a change of one least significant bit (LSB) in the digital representation.\n5. **Annotations and Specific Data Points:**\n- The graph does not provide specific numerical values for the voltage levels or time intervals.\n\n**Right Graph:**\n1. **Type of Graph and Function:**\n- This is also a time-domain waveform graph showing the quantization error signal $V_Q$.\n2. **Axes Labels and Units:**\n- The x-axis represents time, labeled as 't (Time)'.\n- The y-axis represents voltage, specifically the quantization error $V_Q$.\n3. **Overall Behavior and Trends:**\n- The error signal $V_Q$ oscillates between $+1/2 V_{LSB}$ and $-1/2 V_{LSB}$, forming a triangular waveform.\n- The waveform is periodic with a constant period $T$.\n4. **Key Features and Technical Details:**\n- The amplitude of the error signal is limited to $\n± 1/2 V_{LSB}$, indicating the bounds of quantization noise.\n- The average value of the quantization error is zero, as the waveform is symmetric about the time axis.\n5. **Annotations and Specific Data Points:**\n- The period $T$ of the waveform is marked on the graph, but no specific numerical values are provided for $T$ or $V_{LSB}$.\n\nOverall, these graphs illustrate how quantization introduces discrete steps in the output signal and generates a bounded error signal that oscillates around zero, demonstrating the inherent noise in the quantization process.\n\nFig. 15.6 Applying a ramp signal to the circuit in Fig. 15.5.\nresult of quantization error. Note that the quantization signal, $\\mathrm{V}_{\\mathrm{Q}}$, is limited to $\\pm \\mathrm{V}_{\\mathrm{LSB}} / 2$ and will be so limited for all input signals (not just ramps). Clearly, the average of $\\mathrm{V}_{\\mathrm{Q}}$ is zero. However, the rms value of the noise signal, $\\mathrm{V}_{\\mathrm{Q}(\\mathrm{rms})}$, is given by\n\n$$\n\\begin{align*}\n& V_{Q(r m s)}= {\\left[\\frac{1}{T} \\int_{-T / 2}^{T / 2} V_{Q}^{2} d t\\right]^{1 / 2}=\\left[\\frac{1}{T} \\int_{-T / 2}^{T / 2} V_{\\mathrm{LsB}}^{2}\\left(\\frac{-t}{T}\\right)^{2} \\mathrm{dt}\\right]^{1 / 2} } \\\\\n&=\\left[\\frac{\\mathrm{V}_{\\mathrm{LSB}}^{2}}{\\mathrm{~T}^{3}}\\left(\\left.\\frac{\\mathrm{t}^{3}}{3}\\right|_{-\\mathrm{T} / 2} ^{\\mathrm{T} / 2}\\right]^{1 / 2}\\right.  \\tag{15.11}\\\\\n& \\mathrm{V}_{\\mathrm{Q}(\\mathrm{rss})}=\\frac{\\mathrm{V}_{\\mathrm{LSB}}}{\\sqrt{12}} \\tag{15.12}\n\\end{align*}\n$$\n\nThus, we observe that the rms power of the quantization noise source is proportional to the magnitude of $\\mathrm{V}_{\\mathrm{LSB}}$, which is determined by the number of bits, N, in the converter."
},
{
    "text": "To comprehend some characteristics of the quantization noise signal, $\\mathrm{V}_{\\mathrm{Q}}$, we will examine its behavior when the input is a specific function. In particular, let's assume the input signal, $\\mathrm{V}_{\\mathrm{in}}$, in Fig. 15.5, is a ramp. This input results in the output from the $\\mathrm{D} / \\mathrm{A}$, $\\mathrm{V}_{1}$, appearing as a staircase, as depicted in Fig. 15.6, provided no overloading takes place. By subtracting these two signals, we obtain the noise signal, $\\mathrm{V}_{\\mathrm{Q}}$, which is a\n\nKey Point: An ideal quantizer, when not overloaded, introduces an additive quantization noise with a magnitude less than 1/2 of an LSB.\nimage_name:Fig. 15.5\ndescription:Fig. 15.5 presents a system block diagram designed to study the behavior of quantization noise. The main components of this system are:\n\n1. **A/D Converter (Analog to Digital Converter):** This block accepts the input signal $V_{in}$, which is a ramp signal, and digitizes it, producing a digital output labeled 'B'.\n\n2. **D/A Converter (Digital to Analog Converter):** The digital signal 'B' from the A/D converter is input into the D/A converter, which converts it back to an analog signal, yielding an output $V_1$.\n\n3. **Summing Junction:** The system includes a summing junction where the analog output $V_1$ from the D/A converter is subtracted from the original input signal $V_{in}$, resulting in the quantization noise signal $V_Q$.\n\n**Flow of Information:**\n- The input signal $V_{in}$ is digitized by the A/D converter.\n- The digital output 'B' is then converted back to an analog signal $V_1$ by the D/A converter.\n- The signal $V_1$ is subtracted from the original input $V_{in}$ at the summing junction to produce the quantization noise $V_Q$.\n\n**Overall System Function:**\n- The primary purpose of this system is to demonstrate quantization noise behavior. By comparing the original input signal with the reconstructed output from the D/A converter, the system isolates the quantization error as the output $V_Q$. This error is confined to within ±1/2 of the least significant bit (LSB) of the quantizer, assuming no overloading. The system effectively shows how quantization introduces noise into a signal processing chain.\n\nQuantization noise\n\nFig. 15.5 A circuit for investigating quantization noise behavior.\nimage_name:Fig. 15.5\ndescription:The diagram labeled \"Fig. 15.5\" comprises two separate graphs that illustrate the behavior of quantization noise in a signal processing circuit.\n\nLeft Graph:\n1. **Type of Graph and Function:**\n- This is a time-domain waveform showing the input and output signals of a digital-to-analog converter (DAC).\n\n2. **Axes Labels and Units:**\n- The horizontal axis is labeled \"t (Time)\".\n- The vertical axis represents voltage, with no specific units indicated.\n- Two signals are displayed: $V_{in}$ (dotted line) and $V_1$ (solid stepped line).\n\n3. **Overall Behavior and Trends:**\n- The graph depicts a ramp input signal $V_{in}$, which is a continuous increasing linear function over time.\n- The output signal $V_1$ is a stepped approximation of the input, highlighting the quantization process.\n- The steps in $V_1$ reflect the discrete levels of the quantizer, showing how the continuous input is approximated.\n\n4. **Key Features and Technical Details:**\n- The steps in $V_1$ illustrate the quantization process, with each step representing a discrete level of the quantizer.\n- There is a noticeable delay between the input $V_{in}$ and the quantized output $V_1$.\n\nRight Graph:\n1. **Type of Graph and Function:**\n- This is another time-domain waveform focusing on the quantization error signal $V_Q$.\n\n2. **Axes Labels and Units:**\n- The horizontal axis is labeled \"t (Time)\".\n- The vertical axis represents voltage, labeled as $V_Q$.\n- The voltage scale is marked with $\\frac{1}{2} V_{LSB}$ and $-\\frac{1}{2} V_{LSB}$, indicating the limits of the quantization noise.\n\n3. **Overall Behavior and Trends:**\n- The graph shows an oscillating waveform of $V_Q$, demonstrating the quantization noise.\n- The waveform oscillates between $\\frac{1}{2} V_{LSB}$ and $-\\frac{1}{2} V_{LSB}$, indicating the bounded nature of the quantization error.\n\n4. **Key Features and Technical Details:**\n- The oscillation period is marked as $T$, showing the periodic nature of the quantization error.\n- The average of $V_Q$ over time is zero, as indicated by its symmetrical oscillation around the horizontal axis.\n\n5. **Annotations and Specific Data Points:**\n- The graph emphasizes the limits of the quantization noise, constrained between $\\frac{1}{2} V_{LSB}$ and $-\\frac{1}{2} V_{LSB}$.\nimage_name:Fig. 15.6\ndescription:Fig. 15.6 consists of two parts, each illustrating different aspects of quantization noise behavior when a ramp signal is applied to the circuit.\n\n**Left Graph:**\n1. **Type of Graph and Function:**\n- This is a time-domain waveform graph showing the input and quantized output signals.\n2. **Axes Labels and Units:**\n- The x-axis represents time, labeled as 't (Time)'.\n- The y-axis represents voltage, with the input voltage $V_{in}$ and the quantized output $V_1$.\n3. **Overall Behavior and Trends:**\n- The input signal $V_{in}$ is a smooth, continuous ramp signal depicted with a dashed line.\n- The quantized output $V_1$ is a staircase waveform, indicating discrete steps that approximate the continuous input ramp.\n- The steps occur at regular intervals, corresponding to the quantization levels.\n4. **Key Features and Technical Details:**\n- The quantized output exhibits a stepwise increase over time, reflecting the quantization process.\n- Each step corresponds to a change of one least significant bit (LSB) in the digital representation.\n5. **Annotations and Specific Data Points:**\n- The graph does not provide specific numerical values for the voltage levels or time intervals.\n\n**Right Graph:**\n1. **Type of Graph and Function:**\n- This is also a time-domain waveform graph showing the quantization error signal $V_Q$.\n2. **Axes Labels and Units:**\n- The x-axis represents time, labeled as 't (Time)'.\n- The y-axis represents voltage, specifically the quantization error $V_Q$.\n3. **Overall Behavior and Trends:**\n- The error signal $V_Q$ oscillates between $+1/2 V_{LSB}$ and $-1/2 V_{LSB}$, forming a triangular waveform.\n- The waveform is periodic with a constant period $T$.\n4. **Key Features and Technical Details:**\n- The amplitude of the error signal is limited to $\n± 1/2 V_{LSB}$, indicating the bounds of quantization noise.\n- The average value of the quantization error is zero, as the waveform is symmetric about the time axis.\n5. **Annotations and Specific Data Points:**\n- The period $T$ of the waveform is marked on the graph, but no specific numerical values are provided for $T$ or $V_{LSB}$.\n\nOverall, these graphs illustrate how quantization introduces discrete steps in the output signal and generates a bounded error signal that oscillates around zero, demonstrating the inherent noise in the quantization process.\n\nFig. 15.6 Applying a ramp signal to the circuit in Fig. 15.5.\nresult of quantization error. Note that the quantization signal, $\\mathrm{V}_{\\mathrm{Q}}$, is limited to $\\pm \\mathrm{V}_{\\mathrm{LSB}} / 2$ and will be so limited for all input signals (not just ramps). Clearly, the average of $\\mathrm{V}_{\\mathrm{Q}}$ is zero. However, the rms value of the noise signal, $\\mathrm{V}_{\\mathrm{Q}(\\mathrm{rms})}$, is given by\n\n$$\n\\begin{align*}\n& V_{Q(r m s)}= {\\left[\\frac{1}{T} \\int_{-T / 2}^{T / 2} V_{Q}^{2} d t\\right]^{1 / 2}=\\left[\\frac{1}{T} \\int_{-T / 2}^{T / 2} V_{\\mathrm{LsB}}^{2}\\left(\\frac{-t}{T}\\right)^{2} \\mathrm{dt}\\right]^{1 / 2} } \\\\\n&=\\left[\\frac{\\mathrm{V}_{\\mathrm{LSB}}^{2}}{\\mathrm{~T}^{3}}\\left(\\left.\\frac{\\mathrm{t}^{3}}{3}\\right|_{-\\mathrm{T} / 2} ^{\\mathrm{T} / 2}\\right]^{1 / 2}\\right.  \\tag{15.11}\\\\\n& \\mathrm{V}_{\\mathrm{Q}(\\mathrm{rss})}=\\frac{\\mathrm{V}_{\\mathrm{LSB}}}{\\sqrt{12}} \\tag{15.12}\n\\end{align*}\n$$\n\nThus, we see that the rms power of the quantization noise source is proportional to the magnitude of $\\mathrm{V}_{\\mathrm{LSB}}$, which is determined by the number of bits, N, in the converter."
},
{
    "text": "To comprehend some characteristics of the quantization noise signal, $\\mathrm{V}_{\\mathrm{Q}}$, we will examine its behavior when the input is a specific function. Specifically, let us assume the input signal, $\\mathrm{V}_{\\mathrm{in}}$, in Fig. 15.5 is a ramp. Such an input results in the output from the $\\mathrm{D} / \\mathrm{A}$, $\\mathrm{V}_{1}$, appearing as a staircase, as depicted in Fig. 15.6, assuming no overloading takes place. By subtracting these two signals, we obtain the noise signal, $\\mathrm{V}_{\\mathrm{Q}}$, which is a\n\nKey Point: As long as it is not overloaded, the ideal quantizer introduces an additive quantization noise less than 1/2 of an LSB in magnitude.\nimage_name:Fig. 15.5\ndescription:The system block diagram in Fig. 15.5 depicts a circuit designed to study quantization noise behavior. The main components of the system are:\n\n1. **A/D Converter (Analog to Digital Converter):** This block receives the input signal $V_{in}$, which is a ramp signal. The A/D converter digitizes this analog input, producing a digital output labeled 'B'.\n\n2. **D/A Converter (Digital to Analog Converter):** The digital signal 'B' from the A/D converter is input into the D/A converter. This block converts the digital signal back to an analog signal, producing an output $V_1$.\n\n3. **Summing Junction:** The system includes a summing junction where the analog output $V_1$ from the D/A converter is subtracted from the original input signal $V_{in}$. The result of this subtraction is the quantization noise signal $V_Q$.\n\n**Flow of Information:**\n- The input signal $V_{in}$ enters the A/D converter, where it is converted to a digital signal.\n- The digital output 'B' is then fed to the D/A converter, which reconverts it to an analog signal $V_1$.\n- The signal $V_1$ is then input into a summing junction, where it is subtracted from the original input $V_{in}$ to produce the quantization noise $V_Q$.\n\n**Overall System Function:**\n- The primary purpose of this system is to demonstrate the behavior of quantization noise. By comparing the original input signal with the reconstructed output from the D/A converter, the system isolates the quantization error as the output $V_Q$. This error is confined to within ±1/2 of the least significant bit (LSB) of the quantizer, assuming no overloading occurs. The system effectively illustrates how quantization introduces noise into a signal processing chain.\n\nQuantization noise\n\nFig. 15.5 A circuit to investigate quantization noise behavior.\nimage_name:Fig. 15.5\ndescription:The diagram labeled \"Fig. 15.5\" consists of two separate graphs illustrating the behavior of quantization noise in a signal processing circuit.\n\nLeft Graph:\n1. **Type of Graph and Function:**\n- This is a time-domain waveform showing the input and output signals of a digital-to-analog converter (DAC).\n\n2. **Axes Labels and Units:**\n- The horizontal axis represents time, labeled as \"t (Time)\".\n- The vertical axis represents voltage, with no specific units given.\n- Two signals are shown: $V_{in}$ (dotted line) and $V_1$ (solid stepped line).\n\n3. **Overall Behavior and Trends:**\n- The graph depicts a ramp input signal $V_{in}$, which is a continuous increasing linear function over time.\n- The output signal $V_1$ is a stepped approximation of the input, indicating quantization.\n- The steps in $V_1$ reflect the discrete levels of the quantizer, showing how the continuous input is approximated.\n\n4. **Key Features and Technical Details:**\n- The steps in $V_1$ illustrate the quantization process, where each step represents a discrete level of the quantizer.\n- There is a noticeable delay between the input $V_{in}$ and the quantized output $V_1$.\n\nRight Graph:\n1. **Type of Graph and Function:**\n- This is another time-domain waveform focusing on the quantization error signal $V_Q$.\n\n2. **Axes Labels and Units:**\n- The horizontal axis is labeled as \"t (Time)\".\n- The vertical axis represents voltage, labeled as $V_Q$.\n- The voltage scale is marked with $\\frac{1}{2} V_{LSB}$ and $-\\frac{1}{2} V_{LSB}$, indicating the limits of the quantization noise.\n\n3. **Overall Behavior and Trends:**\n- The graph shows an oscillating waveform of $V_Q$, demonstrating the quantization noise.\n- The waveform oscillates between $\\frac{1}{2} V_{LSB}$ and $-\\frac{1}{2} V_{LSB}$, indicating the bounded nature of the quantization error.\n\n4. **Key Features and Technical Details:**\n- The oscillation period is marked as $T$, showing the periodic nature of the quantization error.\n- The average of $V_Q$ over time is zero, as indicated by its symmetrical oscillation around the horizontal axis.\n\n5. **Annotations and Specific Data Points:**\n- The graph emphasizes the limits of the quantization noise, constrained between $\\frac{1}{2} V_{LSB}$ and $-\\frac{1}{2} V_{LSB}$.\nimage_name:Fig. 15.6\ndescription:The graph in Fig. 15.6 consists of two parts, each illustrating different aspects of quantization noise behavior when a ramp signal is applied to the circuit.\n\n**Left Graph:**\n1. **Type of Graph and Function:**\n- This is a time-domain waveform graph showing the input and quantized output signals.\n2. **Axes Labels and Units:**\n- The x-axis represents time, labeled as 't (Time)'.\n- The y-axis represents voltage, with the input voltage $V_{in}$ and the quantized output $V_1$.\n3. **Overall Behavior and Trends:**\n- The input signal $V_{in}$ is a smooth, continuous ramp signal depicted with a dashed line.\n- The quantized output $V_1$ is a staircase waveform, indicating discrete steps that approximate the continuous input ramp.\n- The steps occur at regular intervals, corresponding to the quantization levels.\n4. **Key Features and Technical Details:**\n- The quantized output exhibits a stepwise increase as time progresses, reflecting the quantization process.\n- Each step corresponds to a change of one least significant bit (LSB) in the digital representation.\n5. **Annotations and Specific Data Points:**\n- The graph does not provide specific numerical values for the voltage levels or time intervals.\n\n**Right Graph:**\n1. **Type of Graph and Function:**\n- This is also a time-domain waveform graph showing the quantization error signal $V_Q$.\n2. **Axes Labels and Units:**\n- The x-axis represents time, labeled as 't (Time)'.\n- The y-axis represents voltage, specifically the quantization error $V_Q$.\n3. **Overall Behavior and Trends:**\n- The error signal $V_Q$ oscillates between $+1/2 V_{LSB}$ and $-1/2 V_{LSB}$, forming a triangular waveform.\n- The waveform is periodic with a constant period $T$.\n4. **Key Features and Technical Details:**\n- The amplitude of the error signal is limited to $\n± 1/2 V_{LSB}$, indicating the bounds of quantization noise.\n- The average value of the quantization error is zero, as the waveform is symmetric about the time axis.\n5. **Annotations and Specific Data Points:**\n- The period $T$ of the waveform is marked on the graph, but no specific numerical values are provided for $T$ or $V_{LSB}$.\n\nOverall, these graphs illustrate how quantization introduces discrete steps in the output signal and generates a bounded error signal that oscillates around zero, demonstrating the inherent noise in the quantization process.\n\nFig. 15.6 Applying a ramp signal to the circuit in Fig. 15.5.\nresult of quantization error. Note that the quantization signal, $\\mathrm{V}_{\\mathrm{Q}}$, is limited to $\\pm \\mathrm{V}_{\\mathrm{LSB}} / 2$ and will be so limited for all input signals (not just ramps). Clearly, the average of $\\mathrm{V}_{\\mathrm{Q}}$ is zero. However, the rms value of the noise signal, $\\mathrm{V}_{\\mathrm{Q}(\\mathrm{rms})}$, is given by\n\n$$\n\\begin{align*}\n& V_{Q(r m s)}= {\\left[\\frac{1}{T} \\int_{-T / 2}^{T / 2} V_{Q}^{2} d t\\right]^{1 / 2}=\\left[\\frac{1}{T} \\int_{-T / 2}^{T / 2} V_{\\mathrm{LsB}}^{2}\\left(\\frac{-t}{T}\\right)^{2} \\mathrm{dt}\\right]^{1 / 2} } \\\\\n&=\\left[\\frac{\\mathrm{V}_{\\mathrm{LSB}}^{2}}{\\mathrm{~T}^{3}}\\left(\\left.\\frac{\\mathrm{t}^{3}}{3}\\right|_{-\\mathrm{T} / 2} ^{\\mathrm{T} / 2}\\right]^{1 / 2}\\right.  \\tag{15.11}\\\\\n& \\mathrm{V}_{\\mathrm{Q}(\\mathrm{rss})}=\\frac{\\mathrm{V}_{\\mathrm{LSB}}}{\\sqrt{12}} \\tag{15.12}\n\\end{align*}\n$$\n\nThus, we see that the rms power of the quantization noise source is proportional to the size of $\\mathrm{V}_{\\mathrm{LSB}}$, which is determined by the number of bits, N , in the converter."
},
{
    "text": "The previous deterministic approach was illustrated as a straightforward example to observe certain characteristics of the quantization noise signal. Nevertheless, to address the broader range of input scenarios, a stochastic approach is generally employed. In this stochastic approach, we presume that the input signal fluctuates rapidly, causing the quantization error signal, $\\mathrm{V}_{\\mathrm{Q}}$, to behave as a random variable uniformly distributed between $\\pm \\mathrm{V}_{\\mathrm{LSB}} / 2$. The probability density function for this error signal, $\\mathrm{f}_{\\mathrm{Q}}(\\mathrm{x})$, remains constant, as depicted in Fig. 15.7.\n\nThe mean value of the quantization error, $\\mathrm{V}_{\\mathrm{Q}(\\mathrm{avg})}$, is determined to be zero as follows:\n\n$$\n\\begin{equation*}\nV_{Q(a v g)}=\\int_{-\\infty}^{\\infty} x f_{Q}(x) d x=\\frac{1}{V_{\\mathrm{LSB}}}\\left(\\int_{-V_{\\mathrm{LSB}} / 2}^{V_{\\mathrm{LSB} / 2}} x d x\\right)=0 \\tag{15.13}\n\\end{equation*}\n$$\n\nSimilarly, the rms value of the quantization error is expressed by\n\n$$\n\\begin{equation*}\nV_{Q(\\mathrm{~ms})}=\\left[\\int_{-\\infty}^{\\infty} x^{2} f_{e}(x) d x\\right]^{1 / 2}=\\left[\\frac{1}{V_{\\mathrm{LSB}}}\\left(\\int_{-\\mathrm{V}_{\\mathrm{LSB}} / 2}^{\\mathrm{V}_{\\mathrm{LSB} / 2}} x^{2} d x\\right)\\right]^{1 / 2}=\\frac{\\mathrm{V}_{\\mathrm{LSB}}}{\\sqrt{12}} \\tag{15.14}\n\\end{equation*}\n$$\n\nThis result aligns with (15.12), derived using a deterministic ramp input signal. The equivalence of these two results is unsurprising, as randomly selected samples from the sawtooth waveform in the deterministic case would also exhibit a uniformly distributed probability density function. Generally, the rms quantization noise power equals $\\mathrm{V}_{\\mathrm{LSB}} / \\sqrt{12}$ when the quantization noise signal is uniformly distributed over the interval $\\pm \\mathrm{V}_{\\mathrm{LSB}} / 2$.\n\n**Fig. 15.7 Description:**\nThe graph in Fig. 15.7 illustrates the assumed probability density function (PDF) for the quantization error, denoted as \\( f_Q(x) \\). This is a type of probability distribution graph.\n\n1. **Graph Type and Function:**\n- The graph represents a probability density function (PDF) for quantization error.\n\n2. **Axes Labels and Units:**\n- The horizontal axis, labeled \\( x \\), represents the quantization error, typically in volts when dealing with voltage levels like \\( V_{LSB} \\).\n- The vertical axis shows the probability density \\( f_Q(x) \\).\n\n3. **Behavior and Trends:**\n- The graph displays a uniform distribution over the interval \\( \\left[-\\frac{V_{LSB}}{2}, \\frac{V_{LSB}}{2}\\right] \\), indicating equal likelihood for any value within this range.\n\n4. **Key Features:**\n- The PDF height is \\( \\frac{1}{V_{LSB}} \\), ensuring the total area under the curve equals 1, a requirement for all probability density functions.\n- The distribution is centered at zero, reflecting an unbiased quantization error.\n\n5. **Annotations:**\n- The distribution edges are marked at \\( -\\frac{V_{LSB}}{2} \\) and \\( \\frac{V_{LSB}}{2} \\).\n- An annotation confirms the integral of the PDF over the range equals 1, validating it as a valid probability density function.\n\nFig. 15.7 Assumed probability density function for the quantization error, $\\mathrm{V}_{\\mathrm{Q}}$.\n\nConsidering that the magnitude of $\\mathrm{V}_{\\text {LSB }}$ is halved with each additional bit and assuming $\\mathrm{V}_{\\text {ret }}$ remains constant, we observe from (15.14) that the noise power decreases by 6 dB for each extra bit in the $\\mathrm{A} / \\mathrm{D}$ converter. Consequently, for a given input signal waveform, a formula can be derived to determine the optimal signal-to-noise ratio (SNR) for a specified number of bits in an ideal A/D converter.\n\nFor instance, assuming $\\mathrm{V}_{\\text {in }}$ is a sawtooth waveform with a height of $\\mathrm{V}_{\\text {ref }}$ (or equivalently, a random signal uniformly distributed between 0 and $\\mathrm{V}_{\\text {ref }}$) and considering only the ac power of the signal, the signal-to-quantization noise ratio (SQNR) is given by\n\n$$\n\\begin{align*}\n\\text { SQNR } & =20 \\log \\left(\\frac{V_{\\text {in(rms }}}{\\mathrm{V}_{\\mathrm{Q}(\\mathrm{rms})}}\\right)=20 \\log \\left(\\frac{\\mathrm{~V}_{\\text {ref }} / \\sqrt{12}}{\\mathrm{~V}_{\\mathrm{LSB}} / \\sqrt{12}}\\right)  \\tag{15.15}\\\\\n& =20 \\log \\left(2^{\\mathrm{N}}\\right)=6.02 \\mathrm{NdB}\n\\end{align*}\n$$\n\nThis represents the highest achievable SNR for a data converter with N-bits of resolution, considering only the quantization noise of an ideal converter. For example, a 10-bit A/D converter can achieve a best possible SNR of approximately 60 dB.\n\nAlternatively, a more commonly used SNR formula assumes $\\mathrm{V}_{\\text {in }}$ is a sinusoidal waveform between 0 and $\\mathrm{V}_{\\text {ref }}$. Thus, the ac power of the sinusoidal wave is $\\mathrm{V}_{\\mathrm{ref}} /(2 \\sqrt{2})$, resulting in\n\n$$\n\\begin{align*}\n\\text { SQNR } & =20 \\log \\left(\\frac{\\mathrm{~V}_{\\mathrm{in}(\\mathrm{rms})}}{\\left.\\mathrm{V}_{\\mathrm{Q}(\\mathrm{rms}}\\right)}\\right. \\\\\n& =20 \\log \\left(\\frac{\\mathrm{~V}_{\\mathrm{ref}} /(2 \\sqrt{2})}{\\mathrm{V}_{\\mathrm{LSB}} /(\\sqrt{12})}\\right)  \\tag{15.16}\\\\\n& =20 \\log \\left(\\sqrt{\\frac{3}{2}} 2^{\\mathrm{N}}\\right) \\\\\n\\text { SQNR } & =6.02 \\mathrm{~N}+1.76 \\mathrm{~dB}\n\\end{align*}\n$$\n\nIn essence, a sinusoidal signal has 1.76 dB more ac power than a random signal uniformly distributed between the same peak levels.\n\nNote that (15.16) provides the best possible SNR for an N-bit A/D converter. However, the idealized SNR decreases from this optimal value for lower input signal levels. For example, Fig. 15.8 shows a plot of the idealized SNR for a 10-bit A/D converter versus the sinusoidal input signal amplitude. Nonetheless, these SNR values can be enhanced using oversampling techniques if the input signal's bandwidth is less than the Nyquist rate. Oversampling will be discussed in detail in Chapter 18, which covers the design of oversampling converters.\n\n**Key Point:** Quantization noise can be modeled as a random quantity uniformly distributed between -LSB/2 and +LSB/2. For a sinusoidal input, this results in a maximum SNR of $6.02 N+1.76 dB$ for an ideal N-bit converter.\n\n#### EXAMPLE 15.2\n\nA $200-\\mathrm{mV}_{\\mathrm{pp}}$ sinusoidal signal is applied to an ideal 12-bit $\\mathrm{A} / \\mathrm{D}$ converter with $\\mathrm{V}_{\\mathrm{ref}}=5 \\mathrm{~V}$. Determine the SNR of the digitized output signal.\n\n**Fig. 15.8 Description:**\nThe graph illustrates the Signal-to-Noise Ratio (SNR) in decibels (dB) versus the input signal amplitude in decibels relative to full scale (dBFS) for a 10-bit analog-to-digital (A/D) converter. The x-axis, representing the input voltage \\( V_{in} \\) in dBFS, ranges from -60 to 0 dBFS, while the y-axis shows the SNR in dB, ranging from 0 to 60 dB.\n\nThe graph displays a linear relationship, with SNR increasing as the input signal amplitude rises. Starting from the origin, it indicates low SNR at very low input levels. As the input amplitude approaches 0 dBFS (corresponding to full-scale input where \\( V_{pp} = V_{ref} \\)), the SNR reaches its maximum.\n\nAnnotated as 'Best possible SNR' at the top right, the line indicates the maximum achievable SNR for this converter at full scale, near 60 dB.\n\nThis graph demonstrates the ideal performance of the converter, showing the best SNR is achieved when the input signal utilizes the full dynamic range.\n\n**Fig. 15.8 Idealized SNR versus sinusoidal input signal amplitude for a 10-bit A/D converter. The 0 dBFS input signal amplitude corresponds to a peak-to-peak voltage equaling \"Full-Scale,\" in this case $V_{\\text {ref }}$.\n\n#### Solution\n\nFirst, we use (15.16) to calculate the maximum SNR for a full-scale sinusoidal waveform of $\\pm 2.5 \\mathrm{~V}$.\n\n$$\n\\begin{equation*}\n\\mathrm{SNR}_{\\text {max }}=6.02 \\times 12+1.76=74 \\mathrm{~dB} \\tag{15.17}\n\\end{equation*}\n$$\n\nHowever, since the input is only a $\\pm 100-\\mathrm{mV}$ sinusoidal waveform, which is 28 dB below full scale, the SNR of the digitized output is\n\n$$\n\\begin{equation*}\n\\mathrm{SNR}=74-28=46 \\mathrm{~dB} \\tag{15.18}\n\\end{equation*}\n$$"
},
{
    "text": "The initial deterministic approach was illustrated as a straightforward example to explore certain characteristics of the quantization noise signal. Nevertheless, to address the broader range of input scenarios, a stochastic approach is generally employed. In this stochastic framework, it is assumed that the input signal fluctuates rapidly, causing the quantization error signal, $\\mathrm{V}_{\\mathrm{Q}}$, to behave as a random variable uniformly distributed between $\\pm \\mathrm{V}_{\\mathrm{LSB}} / 2$. The probability density function for such an error signal, $\\mathrm{f}_{\\mathrm{Q}}(\\mathrm{x})$, remains constant, as depicted in Fig. 15.7.\n\nThe mean value of the quantization error, $\\mathrm{V}_{\\mathrm{Q}(\\mathrm{avg})}$, is determined to be zero, as shown below:\n\n$$\n\\begin{equation*}\nV_{Q(a v g)}=\\int_{-\\infty}^{\\infty} x f_{Q}(x) d x=\\frac{1}{V_{\\mathrm{LSB}}}\\left(\\int_{-V_{\\mathrm{LSB}} / 2}^{V_{\\mathrm{LSB} / 2}} x d x\\right)=0 \\tag{15.13}\n\\end{equation*}\n$$\n\nSimilarly, the root mean square (rms) value of the quantization error is given by\n\n$$\n\\begin{equation*}\nV_{Q(\\mathrm{~ms})}=\\left[\\int_{-\\infty}^{\\infty} x^{2} f_{e}(x) d x\\right]^{1 / 2}=\\left[\\frac{1}{V_{\\mathrm{LSB}}}\\left(\\int_{-\\mathrm{V}_{\\mathrm{LSB}} / 2}^{\\mathrm{V}_{\\mathrm{LSB} / 2}} x^{2} d x\\right)\\right]^{1 / 2}=\\frac{\\mathrm{V}_{\\mathrm{LSB}}}{\\sqrt{12}} \\tag{15.14}\n\\end{equation*}\n$$\n\nThis result aligns with (15.12), derived using a deterministic ramp input signal. The一致性 of these results is expected, as random samples from the sawtooth waveform in the deterministic case would also exhibit a uniformly distributed probability density function. Generally, the rms quantization noise power equals $\\mathrm{V}_{\\mathrm{LSB}} / \\sqrt{12}$ when the quantization noise signal is uniformly distributed over the interval $\\pm \\mathrm{V}_{\\mathrm{LSB}} / 2$.\n\n**Fig. 15.7 Assumed Probability Density Function for the Quantization Error**\n\nThe graph in Fig. 15.7 illustrates the assumed probability density function (PDF) for the quantization error, represented as \\( f_Q(x) \\). This is a graphical representation of a probability distribution.\n\n1. **Graph Type and Function:**\n   - The graph is a probability density function (PDF) for quantization error.\n\n2. **Axis Labels and Units:**\n   - The horizontal axis, labeled \\( x \\), represents the quantization error. While units are not specified, they are typically in volts when dealing with voltage levels like \\( V_{LSB} \\).\n   - The vertical axis represents the probability density \\( f_Q(x) \\).\n\n3. **General Behavior and Trends:**\n   - The graph displays a uniform distribution over the interval \\( \\left[-\\frac{V_{LSB}}{2}, \\frac{V_{LSB}}{2}\\right] \\), indicating equal likelihood for any value within this range.\n\n4. **Key Features and Technical Details:**\n   - The height of the PDF is \\( \\frac{1}{V_{LSB}} \\), ensuring the total area under the curve equals 1, a requirement for all probability density functions.\n   - The distribution is centered around zero, reflecting the assumption of an unbiased quantization error.\n\n5. **Annotations and Specific Data Points:**\n   - The distribution edges are marked at \\( -\\frac{V_{LSB}}{2} \\) and \\( \\frac{V_{LSB}}{2} \\).\n   - An annotation confirms that the integral of the PDF over the entire range equals 1, validating it as a valid probability density function.\n\nFig. 15.7 Assumed probability density function for the quantization error, $\\mathrm{V}_{\\mathrm{Q}}$.\n\nConsidering that the magnitude of $\\mathrm{V}_{\\text {LSB }}$ is halved with each additional bit and assuming $\\mathrm{V}_{\\text {ret }}$ remains constant, we observe from (15.14) that the noise power decreases by 6 dB for each additional bit in the $\\mathrm{A} / \\mathrm{D}$ converter. Consequently, for a given input signal waveform, a formula can be derived to determine the optimal signal-to-noise ratio (SNR) for a specified number of bits in an ideal A/D converter.\n\nFor instance, assuming $\\mathrm{V}_{\\text {in }}$ is a sawtooth waveform with an amplitude of $\\mathrm{V}_{\\text {ref }}$ (or equivalently, a random signal uniformly distributed between 0 and $\\mathrm{V}_{\\text {ref }}$), and considering only the AC power of the signal, the signal-to-quantization noise ratio (SQNR) is expressed as\n\n$$\n\\begin{align*}\n\\text { SQNR } & =20 \\log \\left(\\frac{V_{\\text {in(rms }}}{\\mathrm{V}_{\\mathrm{Q}(\\mathrm{rms})}}\\right)=20 \\log \\left(\\frac{\\mathrm{~V}_{\\text {ref }} / \\sqrt{12}}{\\mathrm{~V}_{\\mathrm{LSB}} / \\sqrt{12}}\\right)  \\tag{15.15}\\\\\n& =20 \\log \\left(2^{\\mathrm{N}}\\right)=6.02 \\mathrm{NdB}\n\\end{align*}\n$$\n\nThis represents the highest achievable SNR for a data converter with N-bits of resolution, considering only the quantization noise of an ideal converter. For example, a 10-bit A/D converter can achieve a maximum SNR of approximately 60 dB.\n\nAlternatively, a more commonly used SNR formula assumes $\\mathrm{V}_{\\text {in }}$ is a sinusoidal waveform between 0 and $\\mathrm{V}_{\\text {ref }}$. Thus, the AC power of the sinusoidal wave is $\\mathrm{V}_{\\mathrm{ref}} /(2 \\sqrt{2})$, resulting in\n\n$$\n\\begin{align*}\n\\text { SQNR } & =20 \\log \\left(\\frac{\\mathrm{~V}_{\\mathrm{in}(\\mathrm{rms})}}{\\left.\\mathrm{V}_{\\mathrm{Q}(\\mathrm{rms}}\\right)}\\right. \\\\\n& =20 \\log \\left(\\frac{\\mathrm{~V}_{\\mathrm{ref}} /(2 \\sqrt{2})}{\\mathrm{V}_{\\mathrm{LSB}} /(\\sqrt{12})}\\right)  \\tag{15.16}\\\\\n& =20 \\log \\left(\\sqrt{\\frac{3}{2}} 2^{\\mathrm{N}}\\right) \\\\\n\\text { SQNR } & =6.02 \\mathrm{~N}+1.76 \\mathrm{~dB}\n\\end{align*}\n$$\n\nIn essence, a sinusoidal signal has 1.76 dB more AC power than a random signal uniformly distributed between the same peak levels.\n\nNote that (15.16) provides the maximum achievable SNR for an N-bit A/D converter. However, the idealized SNR decreases from this maximum value for lower input signal levels. For example, Fig. 15.8 shows a plot of the idealized SNR for a 10-bit A/D converter versus the sinusoidal input signal amplitude. It should be noted that these SNR values can be enhanced using oversampling techniques if the input signal's bandwidth is below the Nyquist rate. Oversampling will be discussed in detail in Chapter 18, where the design of oversampling converters is presented.\n\n**Key Point:** Quantization noise can be modeled as a random variable uniformly distributed between -LSB/2 and +LSB/2. For a sinusoidal input, this results in a maximum SNR of $6.02 N+1.76 dB$ for an ideal N-bit converter.\n\n#### EXAMPLE 15.2\n\nA $200-\\mathrm{mV}_{\\mathrm{pp}}$ sinusoidal signal is applied to an ideal 12-bit $\\mathrm{A} / \\mathrm{D}$ converter with $\\mathrm{V}_{\\mathrm{ref}}=5 \\mathrm{~V}$. Determine the SNR of the digitized output signal.\n\n**Fig. 15.8**\n\nThe graph illustrates the Signal-to-Noise Ratio (SNR) in decibels (dB) versus the input signal amplitude in decibels relative to full scale (dBFS) for a 10-bit analog-to-digital (A/D) converter. The x-axis represents the input voltage \\( V_{in} \\) in dBFS, ranging from -60 to 0 dBFS, while the y-axis shows the SNR in dB, ranging from 0 to 60 dB.\n\nThe graph displays a linear relationship, with SNR increasing as the input signal amplitude increases. The line originates at the origin, indicating low SNR at very low input levels. As the input amplitude approaches 0 dBFS (corresponding to the full-scale input where \\( V_{pp} = V_{ref} \\)), the SNR reaches its maximum value.\n\nThe line is labeled 'Best possible SNR' at the top right, indicating the highest achievable SNR for this converter at full-scale input. This point corresponds to the highest SNR value on the graph, near 60 dB.\n\nThis graph demonstrates the ideal performance of the converter, showing that the best SNR is achieved when the input signal utilizes the full dynamic range of the converter, aligning with the theoretical maximum SNR for a 10-bit converter.\n\n**Fig. 15.8 Idealized SNR versus Sinusoidal Input Signal Amplitude for a 10-bit A/D Converter. The 0 dBFS input signal amplitude corresponds to a peak-to-peak voltage equaling \"Full-Scale,\" in this case $V_{\\text {ref }}$.\n\n#### Solution\n\nFirst, we use (15.16) to determine the maximum SNR for a full-scale sinusoidal waveform of $\\pm 2.5 \\mathrm{~V}$.\n\n$$\n\\begin{equation*}\n\\mathrm{SNR}_{\\text {max }}=6.02 \\times 12+1.76=74 \\mathrm{~dB} \\tag{15.17}\n\\end{equation*}\n$$\n\nHowever, since the input is only a $\\pm 100-\\mathrm{mV}$ sinusoidal waveform, which is 28 dB below full scale, the SNR of the digitized output is\n\n$$\n\\begin{equation*}\n\\mathrm{SNR}=74-28=46 \\mathrm{~dB} \\tag{15.18}\n\\end{equation*}\n$$"
},
{
    "text": "The earlier deterministic method was illustrated as a straightforward example to explore certain characteristics of the quantization noise signal. Nevertheless, to address the broader range of input scenarios, a stochastic approach is generally employed. In this stochastic approach, it is assumed that the input signal fluctuates rapidly, causing the quantization error signal, $\\mathrm{V}_{\\mathrm{Q}}$, to behave as a random variable uniformly distributed between $\\pm \\mathrm{V}_{\\mathrm{LSB}} / 2$. The probability density function for this error signal, $\\mathrm{f}_{\\mathrm{Q}}(\\mathrm{x})$, remains constant, as depicted in Fig. 15.7.\n\nThe mean value of the quantization error, $\\mathrm{V}_{\\mathrm{Q}(\\mathrm{avg})}$, is determined to be zero, as shown below:\n\n$$\n\\begin{equation*}\nV_{Q(a v g)}=\\int_{-\\infty}^{\\infty} x f_{Q}(x) d x=\\frac{1}{V_{\\mathrm{LSB}}}\\left(\\int_{-V_{\\mathrm{LSB}} / 2}^{V_{\\mathrm{LSB} / 2}} x d x\\right)=0 \\tag{15.13}\n\\end{equation*}\n$$\n\nSimilarly, the root mean square (rms) value of the quantization error is given by\n\n$$\n\\begin{equation*}\nV_{Q(\\mathrm{~ms})}=\\left[\\int_{-\\infty}^{\\infty} x^{2} f_{e}(x) d x\\right]^{1 / 2}=\\left[\\frac{1}{V_{\\mathrm{LSB}}}\\left(\\int_{-\\mathrm{V}_{\\mathrm{LSB}} / 2}^{\\mathrm{V}_{\\mathrm{LSB} / 2}} x^{2} d x\\right)\\right]^{1 / 2}=\\frac{\\mathrm{V}_{\\mathrm{LSB}}}{\\sqrt{12}} \\tag{15.14}\n\\end{equation*}\n$$\n\nThis result matches (15.12), derived using a deterministic ramp input signal. The equivalence of these two results is expected, as random samples from the sawtooth waveform in the deterministic case would also exhibit a uniformly distributed probability density function. Generally, the rms quantization noise power equals $\\mathrm{V}_{\\mathrm{LSB}} / \\sqrt{12}$ when the quantization noise signal is uniformly distributed over the interval $\\pm \\mathrm{V}_{\\mathrm{LSB}} / 2$.\n\nimage_name:Fig. 15.7 Assumed probability density function for the quantization error\ndescription:The graph in Fig. 15.7 illustrates the assumed probability density function (PDF) for the quantization error, represented as \\( f_Q(x) \\). This graph is a type of probability distribution plot.\n\n1. **Type of Graph and Function:**\n- The graph represents a probability density function (PDF) for quantization error.\n\n2. **Axes Labels and Units:**\n- The horizontal axis, labeled \\( x \\), represents the quantization error, with units typically in volts when dealing with voltage levels like \\( V_{LSB} \\).\n- The vertical axis shows the probability density \\( f_Q(x) \\).\n\n3. **Overall Behavior and Trends:**\n- The graph displays a uniform distribution across the interval \\( \\left[-\\frac{V_{LSB}}{2}, \\frac{V_{LSB}}{2}\\right] \\), indicating equal likelihood for any value within this range.\n\n4. **Key Features and Technical Details:**\n- The height of the PDF is \\( \\frac{1}{V_{LSB}} \\), ensuring the total area under the curve equals 1, a requirement for all probability density functions.\n- The distribution is centered at zero, reflecting the assumption of an unbiased quantization error.\n\n5. **Annotations and Specific Data Points:**\n- The distribution's edges are marked at \\( -\\frac{V_{LSB}}{2} \\) and \\( \\frac{V_{LSB}}{2} \\).\n- An annotation confirms that the integral of the PDF over the entire range equals 1, validating it as a valid probability density function.\n\nFig. 15.7 Assumed probability density function for the quantization error, $\\mathrm{V}_{\\mathrm{Q}}$.\n\nConsidering that the magnitude of $\\mathrm{V}_{\\text {LSB }}$ is halved with each additional bit and assuming $\\mathrm{V}_{\\text {ret }}$ remains constant, it follows from (15.14) that the noise power decreases by 6 dB for each additional bit in the $\\mathrm{A} / \\mathrm{D}$ converter. Thus, for a given input signal waveform, a formula can be derived to determine the optimal signal-to-noise ratio (SNR) for a specified number of bits in an ideal A/D converter.\n\nFor instance, assuming $\\mathrm{V}_{\\text {in }}$ is a sawtooth wave with amplitude $\\mathrm{V}_{\\text {ref }}$ (or equivalently, a random signal uniformly distributed between 0 and $\\mathrm{V}_{\\text {ref }}$) and considering only the AC power of the signal, the signal-to-quantization noise ratio (SQNR) is given by\n\n$$\n\\begin{align*}\n\\text { SQNR } & =20 \\log \\left(\\frac{V_{\\text {in(rms }}}{\\mathrm{V}_{\\mathrm{Q}(\\mathrm{rms})}}\\right)=20 \\log \\left(\\frac{\\mathrm{~V}_{\\text {ref }} / \\sqrt{12}}{\\mathrm{~V}_{\\mathrm{LSB}} / \\sqrt{12}}\\right)  \\tag{15.15}\\\\\n& =20 \\log \\left(2^{\\mathrm{N}}\\right)=6.02 \\mathrm{NdB}\n\\end{align*}\n$$\n\nThis represents the highest achievable SNR for a data converter with N-bits of resolution, considering only the quantization noise of an ideal converter. For example, a 10-bit A/D converter can achieve a best possible SNR of approximately 60 dB.\n\nAlternatively, a more frequently used SNR formula assumes $\\mathrm{V}_{\\text {in }}$ is a sinusoidal waveform between 0 and $\\mathrm{V}_{\\text {ref }}$. Thus, the AC power of the sinusoidal wave is $\\mathrm{V}_{\\mathrm{ref}} /(2 \\sqrt{2})$, leading to\n\n$$\n\\begin{align*}\n\\text { SQNR } & =20 \\log \\left(\\frac{\\mathrm{~V}_{\\mathrm{in}(\\mathrm{rms})}}{\\left.\\mathrm{V}_{\\mathrm{Q}(\\mathrm{rms}}\\right)}\\right. \\\\\n& =20 \\log \\left(\\frac{\\mathrm{~V}_{\\mathrm{ref}} /(2 \\sqrt{2})}{\\mathrm{V}_{\\mathrm{LSB}} /(\\sqrt{12})}\\right)  \\tag{15.16}\\\\\n& =20 \\log \\left(\\sqrt{\\frac{3}{2}} 2^{\\mathrm{N}}\\right) \\\\\n\\text { SQNR } & =6.02 \\mathrm{~N}+1.76 \\mathrm{~dB}\n\\end{align*}\n$$\n\nIn other words, a sinusoidal signal has 1.76 dB more AC power than a random signal uniformly distributed between the same peak levels.\n\nNote that (15.16) provides the best possible SNR for an N-bit A/D converter. However, the idealized SNR decreases from this optimal value for lower input signal levels. For example, Fig. 15.8 shows a plot of the idealized SNR for a 10-bit A/D converter versus the sinusoidal input signal amplitude. It should be noted that these SNR values could be enhanced using oversampling techniques if the input signal's bandwidth is less than the Nyquist rate. Oversampling will be discussed in detail in Chapter 18, which covers the design of oversampling converters.\n\nKey Point: Quantization noise can be modeled as a random variable uniformly distributed between -LSB/2 and +LSB/2. For a sinusoidal input, this results in a maximum SNR of $6.02 N+1.76 dB$ for an ideal N-bit converter.\n\n#### EXAMPLE 15.2\n\nA $200-\\mathrm{mV}_{\\mathrm{pp}}$ sinusoidal signal is applied to an ideal 12-bit $\\mathrm{A} / \\mathrm{D}$ converter with $\\mathrm{V}_{\\mathrm{ref}}=5 \\mathrm{~V}$. Determine the SNR of the digitized output signal.\nimage_name:Fig. 15.8\ndescription:The graph illustrates the Signal-to-Noise Ratio (SNR) in decibels (dB) as a function of the input signal amplitude in decibels relative to full scale (dBFS) for a 10-bit analog-to-digital (A/D) converter. The x-axis represents the input voltage \\( V_{in} \\) in dBFS, ranging from -60 to 0 dBFS, while the y-axis shows the SNR in dB, ranging from 0 to 60 dB.\n\nThe graph displays a linear relationship, with SNR increasing as the input signal amplitude increases. The line originates at the origin, indicating low SNR at very low input levels. As the input amplitude approaches 0 dBFS (corresponding to the full-scale input where \\( V_{pp} = V_{ref} \\)), the SNR reaches its maximum.\n\nThe line is labeled 'Best possible SNR' at the top right, indicating the highest achievable SNR for this converter at full-scale input. This point corresponds to the highest SNR value on the graph, near 60 dB.\n\nThis graph demonstrates the ideal performance of the converter, showing that the best SNR is achieved when the input signal utilizes the full dynamic range of the converter, aligning with the theoretical maximum SNR for a 10-bit converter.\n\nFig. 15.8 Idealized SNR versus sinusoidal input signal amplitude for a 10-bit A/D converter. The 0 dBFS input signal amplitude corresponds to a peak-to-peak voltage equaling \"Full-Scale,\" in this case $V_{\\text {ref }}$.\n\n#### Solution\n\nFirst, we use (15.16) to determine the maximum SNR if a full-scale sinusoidal waveform of $\\pm 2.5 \\mathrm{~V}$ were applied to the input.\n\n$$\n\\begin{equation*}\n\\mathrm{SNR}_{\\text {max }}=6.02 \\times 12+1.76=74 \\mathrm{~dB} \\tag{15.17}\n\\end{equation*}\n$$\n\nHowever, since the input is only a $\\pm 100-\\mathrm{mV}$ sinusoidal waveform, which is 28 dB below full scale, the SNR of the digitized output is\n\n$$\n\\begin{equation*}\n\\mathrm{SNR}=74-28=46 \\mathrm{~dB} \\tag{15.18}\n\\end{equation*}\n$$"
},
{
    "text": "The prior deterministic method was illustrated as a basic example to explore certain characteristics of the quantization noise signal. Nevertheless, to address the broader range of input scenarios, a stochastic approach is generally employed. In this stochastic framework, we assume the input signal fluctuates rapidly, causing the quantization error signal, $\\mathrm{V}_{\\mathrm{Q}}$, to behave as a random variable uniformly distributed between $\\pm \\mathrm{V}_{\\mathrm{LSB}} / 2$. The probability density function for this error signal, $\\mathrm{f}_{\\mathrm{Q}}(\\mathrm{x})$, remains constant, as depicted in Fig. 15.7.\n\nThe mean value of the quantization error, $\\mathrm{V}_{\\mathrm{Q}(\\mathrm{avg})}$, is determined to be zero as follows:\n\n$$\n\\begin{equation*}\nV_{Q(a v g)}=\\int_{-\\infty}^{\\infty} x f_{Q}(x) d x=\\frac{1}{V_{\\mathrm{LSB}}}\\left(\\int_{-V_{\\mathrm{LSB}} / 2}^{V_{\\mathrm{LSB} / 2}} x d x\\right)=0 \\tag{15.13}\n\\end{equation*}\n$$\n\nSimilarly, the root mean square (rms) value of the quantization error is given by\n\n$$\n\\begin{equation*}\nV_{Q(\\mathrm{~ms})}=\\left[\\int_{-\\infty}^{\\infty} x^{2} f_{e}(x) d x\\right]^{1 / 2}=\\left[\\frac{1}{V_{\\mathrm{LSB}}}\\left(\\int_{-\\mathrm{V}_{\\mathrm{LSB}} / 2}^{\\mathrm{V}_{\\mathrm{LSB} / 2}} x^{2} d x\\right)\\right]^{1 / 2}=\\frac{\\mathrm{V}_{\\mathrm{LSB}}}{\\sqrt{12}} \\tag{15.14}\n\\end{equation*}\n$$\n\nThis result aligns with (15.12), derived using a deterministic ramp input signal. The一致性 of these results is expected, as random samples from the sawtooth waveform in the deterministic case would also exhibit a uniformly distributed probability density function. Generally, the rms quantization noise power equals $\\mathrm{V}_{\\mathrm{LSB}} / \\sqrt{12}$ when the quantization noise signal is uniformly distributed over the interval $\\pm \\mathrm{V}_{\\mathrm{LSB}} / 2$.\nimage_name:Fig. 15.7 Assumed probability density function for the quantization error\ndescription:The graph in Fig. 15.7 illustrates the assumed probability density function (PDF) for the quantization error, represented as \\( f_Q(x) \\). This is a graphical representation of a probability distribution.\n\n1. **Graph Type and Function:**\n- The graph represents a probability density function (PDF) for quantization error.\n\n2. **Axes Labels and Units:**\n- The horizontal axis is labeled \\( x \\), indicating the quantization error. The units, though not specified, are typically in volts when related to voltage levels like \\( V_{LSB} \\).\n- The vertical axis shows the probability density \\( f_Q(x) \\).\n\n3. **General Behavior and Trends:**\n- The graph displays a uniform distribution across the interval \\( \\left[-\\frac{V_{LSB}}{2}, \\frac{V_{LSB}}{2}\\right] \\), signifying that any value within this range is equally probable for the quantization error.\n\n4. **Key Features and Technical Aspects:**\n- The height of the PDF is \\( \\frac{1}{V_{LSB}} \\), ensuring the total area under the curve is 1, a necessity for all probability density functions.\n- The distribution is centered at zero, reflecting the assumption of an unbiased quantization error.\n\n5. **Annotations and Specific Data Points:**\n- The boundaries of the distribution are marked at \\( -\\frac{V_{LSB}}{2} \\) and \\( \\frac{V_{LSB}}{2} \\).\n- An annotation confirms that the integral of the PDF over the entire range equals 1, validating it as a valid probability density function.\n\nFig. 15.7 Assumed probability density function for the quantization error, $\\mathrm{V}_{\\mathrm{Q}}$.\n\nConsidering that the magnitude of $\\mathrm{V}_{\\text {LSB }}$ is halved with each additional bit and assuming $\\mathrm{V}_{\\text {ret }}$ remains constant, we observe from (15.14) that the noise power reduces by 6 dB for every additional bit in the $\\mathrm{A} / \\mathrm{D}$ converter. Consequently, for a given input signal waveform, a formula can be derived to determine the optimal signal-to-noise ratio (SNR) for a specified number of bits in an ideal A/D converter.\n\nFor instance, if $\\mathrm{V}_{\\text {in }}$ is a sawtooth waveform with a height of $\\mathrm{V}_{\\text {ref }}$ (or equivalently, a random signal uniformly distributed between 0 and $\\mathrm{V}_{\\text {ref }}$), and considering only the ac power of the signal, the signal-to-quantization noise ratio (SQNR) is expressed as\n\n$$\n\\begin{align*}\n\\text { SQNR } & =20 \\log \\left(\\frac{V_{\\text {in(rms }}}{\\mathrm{V}_{\\mathrm{Q}(\\mathrm{rms})}}\\right)=20 \\log \\left(\\frac{\\mathrm{~V}_{\\text {ref }} / \\sqrt{12}}{\\mathrm{~V}_{\\mathrm{LSB}} / \\sqrt{12}}\\right)  \\tag{15.15}\\\\\n& =20 \\log \\left(2^{\\mathrm{N}}\\right)=6.02 \\mathrm{NdB}\n\\end{align*}\n$$\n\nThis represents the highest achievable SNR for a data converter with N-bits of resolution, considering only the quantization noise of an ideal converter. For example, a 10-bit A/D converter can achieve a best possible SNR of approximately 60 dB.\n\nAlternatively, a more commonly used SNR formula assumes $\\mathrm{V}_{\\text {in }}$ is a sinusoidal waveform between 0 and $\\mathrm{V}_{\\text {ref }}$. Thus, the ac power of the sinusoidal wave is $\\mathrm{V}_{\\mathrm{ref}} /(2 \\sqrt{2})$, leading to\n\n$$\n\\begin{align*}\n\\text { SQNR } & =20 \\log \\left(\\frac{\\mathrm{~V}_{\\mathrm{in}(\\mathrm{rms})}}{\\left.\\mathrm{V}_{\\mathrm{Q}(\\mathrm{rms}}\\right)}\\right. \\\\\n& =20 \\log \\left(\\frac{\\mathrm{~V}_{\\mathrm{ref}} /(2 \\sqrt{2})}{\\mathrm{V}_{\\mathrm{LSB}} /(\\sqrt{12})}\\right)  \\tag{15.16}\\\\\n& =20 \\log \\left(\\sqrt{\\frac{3}{2}} 2^{\\mathrm{N}}\\right) \\\\\n\\text { SQNR } & =6.02 \\mathrm{~N}+1.76 \\mathrm{~dB}\n\\end{align*}\n$$\n\nIn essence, a sinusoidal signal possesses 1.76 dB more ac power than a random signal uniformly distributed between the same peak levels.\n\nNote that (15.16) provides the best possible SNR for an N-bit A/D converter. However, the idealized SNR decreases from this optimal value for lower input signal levels. For example, Fig. 15.8 depicts a plot of the idealized SNR for a 10-bit A/D converter against the sinusoidal input signal amplitude. It is important to note that these SNR values can be enhanced through oversampling techniques if the input signal's bandwidth is less than the Nyquist rate. Oversampling will be discussed in detail in Chapter 18, which covers the design of oversampling converters.\n\nKey Point: Quantization noise can be modeled as a random variable uniformly distributed between -LSB/2 and $+L S B / 2$. For a sinusoidal input, this results in a maximum SNR of $6.02 N+1.76 d B$ for an ideal $N$-bit converter.\n\n#### EXAMPLE 15.2\n\nA $200-\\mathrm{mV}_{\\mathrm{pp}}$ sinusoidal signal is applied to an ideal 12-bit $\\mathrm{A} / \\mathrm{D}$ converter with $\\mathrm{V}_{\\mathrm{ref}}=5 \\mathrm{~V}$. Determine the SNR of the digitized output signal.\nimage_name:Fig. 15.8\ndescription:The depicted graph is a plot of Signal-to-Noise Ratio (SNR) in decibels (dB) versus the input signal amplitude in decibels relative to full scale (dBFS) for a 10-bit analog-to-digital (A/D) converter. The x-axis represents the input voltage \\( V_{in} \\) in dBFS, ranging from -60 to 0 dBFS, while the y-axis represents the SNR in dB, ranging from 0 to 60 dB.\n\nThe graph shows a linear relationship, where the SNR increases with the input signal amplitude. The line originates from the origin, indicating low SNR at very low input levels. As the input amplitude nears 0 dBFS (corresponding to the full-scale input where \\( V_{pp} = V_{ref} \\)), the SNR reaches its peak.\n\nThe line is labeled 'Best possible SNR' at the top right, indicating the maximum achievable SNR for this converter at full-scale input. This point corresponds to the highest SNR value on the graph, around 60 dB.\n\nThis graph illustrates the ideal performance of the converter, demonstrating that the best SNR is achieved when the input signal utilizes the full dynamic range of the converter, aligning with the theoretical maximum SNR for a 10-bit converter.\n\nFig. 15.8 Idealized SNR versus sinusoidal input signal amplitude for a 10-bit A/D converter. The 0 -dBFS input signal amplitude corresponds to a peak-to-peak voltage equaling \"Full-Scale,\" in this case $V_{\\text {ref }}$.\n\n#### Solution\n\nFirst, we use (15.16) to calculate the maximum SNR if a full-scale sinusoidal waveform of $\\pm 2.5 \\mathrm{~V}$ were applied to the input.\n\n$$\n\\begin{equation*}\n\\mathrm{SNR}_{\\text {max }}=6.02 \\times 12+1.76=74 \\mathrm{~dB} \\tag{15.17}\n\\end{equation*}\n$$\n\nHowever, since the input is only a $\\pm 100-\\mathrm{mV}$ sinusoidal waveform, which is 28 dB below full scale, the SNR of the digitized output is\n\n$$\n\\begin{equation*}\n\\mathrm{SNR}=74-28=46 \\mathrm{~dB} \\tag{15.18}\n\\end{equation*}\n$$"
},
{
    "text": "The prior deterministic method was illustrated as a straightforward example to observe certain characteristics of the quantization noise signal. Nevertheless, to address the broader range of input scenarios, a stochastic approach is generally employed. In this stochastic approach, we assume that the input signal varies rapidly, causing the quantization error signal, $\\mathrm{V}_{\\mathrm{Q}}$, to behave as a random variable uniformly distributed between $\\pm \\mathrm{V}_{\\mathrm{LSB}} / 2$. The probability density function for this error signal, $\\mathrm{f}_{\\mathrm{Q}}(\\mathrm{x})$, remains constant, as depicted in Fig. 15.7.\n\nThe mean value of the quantization error, $\\mathrm{V}_{\\mathrm{Q}(\\mathrm{avg})}$, is determined to be zero as follows:\n\n$$\n\\begin{equation*}\nV_{Q(a v g)}=\\int_{-\\infty}^{\\infty} x f_{Q}(x) d x=\\frac{1}{V_{\\mathrm{LSB}}}\\left(\\int_{-V_{\\mathrm{LSB}} / 2}^{V_{\\mathrm{LSB} / 2}} x d x\\right)=0 \\tag{15.13}\n\\end{equation*}\n$$\n\nSimilarly, the root mean square (rms) value of the quantization error is expressed by\n\n$$\n\\begin{equation*}\nV_{Q(\\mathrm{~ms})}=\\left[\\int_{-\\infty}^{\\infty} x^{2} f_{e}(x) d x\\right]^{1 / 2}=\\left[\\frac{1}{V_{\\mathrm{LSB}}}\\left(\\int_{-\\mathrm{V}_{\\mathrm{LSB}} / 2}^{\\mathrm{V}_{\\mathrm{LSB} / 2}} x^{2} d x\\right)\\right]^{1 / 2}=\\frac{\\mathrm{V}_{\\mathrm{LSB}}}{\\sqrt{12}} \\tag{15.14}\n\\end{equation*}\n$$\n\nThis result matches (15.12), derived using a deterministic ramp input signal. The equivalence of these two results is expected, as random samples from the sawtooth waveform in the deterministic case would also exhibit a uniformly distributed probability density function. Generally, the rms quantization noise power equals $\\mathrm{V}_{\\mathrm{LSB}} / \\sqrt{12}$ when the quantization noise signal is uniformly distributed over the interval $\\pm \\mathrm{V}_{\\mathrm{LSB}} / 2$.\n\n**Fig. 15.7 Description:**\nThe graph in Fig. 15.7 illustrates the assumed probability density function (PDF) for the quantization error, denoted as \\( f_Q(x) \\). This is a type of probability distribution graph.\n\n1. **Graph Type and Function:**\n- The graph represents a probability density function (PDF) for quantization error.\n\n2. **Axes Labels and Units:**\n- The horizontal axis, labeled \\( x \\), represents the quantization error, typically in volts for voltage levels like \\( V_{LSB} \\).\n- The vertical axis depicts the probability density \\( f_Q(x) \\).\n\n3. **Behavior and Trends:**\n- The graph shows a uniform distribution over the interval \\( \\left[-\\frac{V_{LSB}}{2}, \\frac{V_{LSB}}{2}\\right] \\), indicating equal likelihood of any value within this range.\n\n4. **Key Features and Technical Details:**\n- The PDF height is \\( \\frac{1}{V_{LSB}} \\), ensuring the total area under the curve equals 1, a requirement for all probability density functions.\n- The distribution is centered at zero, reflecting an unbiased quantization error.\n\n5. **Annotations and Specific Data Points:**\n- The distribution edges are marked at \\( -\\frac{V_{LSB}}{2} \\) and \\( \\frac{V_{LSB}}{2} \\).\n- An annotation confirms that the integral of the PDF over the range equals 1, validating it as a valid probability density function.\n\nFig. 15.7 Assumed probability density function for the quantization error, $\\mathrm{V}_{\\mathrm{Q}}$.\n\nConsidering that the magnitude of $\\mathrm{V}_{\\text {LSB }}$ is halved with each additional bit and assuming $\\mathrm{V}_{\\text {ret }}$ remains constant, we observe from (15.14) that the noise power decreases by 6 dB for each additional bit in the $\\mathrm{A} / \\mathrm{D}$ converter. Thus, for a given input signal waveform, a formula can be derived to determine the optimal signal-to-noise ratio (SNR) for a specified number of bits in an ideal A/D converter.\n\nFor instance, assuming $\\mathrm{V}_{\\text {in }}$ is a sawtooth waveform of height $\\mathrm{V}_{\\text {ref }}$ (or a random signal uniformly distributed between 0 and $\\mathrm{V}_{\\text {ref }}$) and considering only the ac power of the signal, the signal-to-quantization noise ratio (SQNR) is given by\n\n$$\n\\begin{align*}\n\\text { SQNR } & =20 \\log \\left(\\frac{V_{\\text {in(rms }}}{\\mathrm{V}_{\\mathrm{Q}(\\mathrm{rms})}}\\right)=20 \\log \\left(\\frac{\\mathrm{~V}_{\\text {ref }} / \\sqrt{12}}{\\mathrm{~V}_{\\mathrm{LSB}} / \\sqrt{12}}\\right)  \\tag{15.15}\\\\\n& =20 \\log \\left(2^{\\mathrm{N}}\\right)=6.02 \\mathrm{NdB}\n\\end{align*}\n$$\n\nThis represents the highest achievable SNR for a data converter with N-bits of resolution, considering only the quantization noise of an ideal converter. For example, a 10-bit A/D converter can achieve a best possible SNR of approximately 60 dB.\n\nAlternatively, a more common SNR formula assumes $\\mathrm{V}_{\\text {in }}$ is a sinusoidal waveform between 0 and $\\mathrm{V}_{\\text {ref }}$. Thus, the ac power of the sinusoidal wave is $\\mathrm{V}_{\\mathrm{ref}} /(2 \\sqrt{2})$, resulting in\n\n$$\n\\begin{align*}\n\\text { SQNR } & =20 \\log \\left(\\frac{\\mathrm{~V}_{\\mathrm{in}(\\mathrm{rms})}}{\\left.\\mathrm{V}_{\\mathrm{Q}(\\mathrm{rms}}\\right)}\\right. \\\\\n& =20 \\log \\left(\\frac{\\mathrm{~V}_{\\mathrm{ref}} /(2 \\sqrt{2})}{\\mathrm{V}_{\\mathrm{LSB}} /(\\sqrt{12})}\\right)  \\tag{15.16}\\\\\n& =20 \\log \\left(\\sqrt{\\frac{3}{2}} 2^{\\mathrm{N}}\\right) \\\\\n\\text { SQNR } & =6.02 \\mathrm{~N}+1.76 \\mathrm{~dB}\n\\end{align*}\n$$\n\nIn other words, a sinusoidal signal has 1.76 dB more ac power than a random signal uniformly distributed between the same peak levels.\n\nNote that (15.16) provides the best possible SNR for an N-bit A/D converter. However, the idealized SNR decreases from this optimal value for lower input signal levels. For example, Fig. 15.8 shows a plot of the idealized SNR for a 10-bit A/D converter versus the sinusoidal input signal amplitude. It should be noted that these SNR values can be enhanced using oversampling techniques if the input signal's bandwidth is less than the Nyquist rate. Oversampling will be discussed in detail in Chapter 18, where the design of oversampling converters is presented.\n\n**Key Point:** Quantization noise can be modeled as a random quantity uniformly distributed between -LSB/2 and +LSB/2. For a sinusoidal input, this results in a maximum SNR of $6.02 N+1.76 dB$ for an ideal N-bit converter.\n\n#### EXAMPLE 15.2\n\nA $200-\\mathrm{mV}_{\\mathrm{pp}}$ sinusoidal signal is applied to an ideal 12-bit $\\mathrm{A} / \\mathrm{D}$ converter with $\\mathrm{V}_{\\mathrm{ref}}=5 \\mathrm{~V}$. Determine the SNR of the digitized output signal.\n**Fig. 15.8 Description:**\nThe graph illustrates the Signal-to-Noise Ratio (SNR) in decibels (dB) versus the input signal amplitude in decibels relative to full scale (dBFS) for a 10-bit analog-to-digital (A/D) converter. The x-axis represents the input voltage \\( V_{in} \\) in dBFS, ranging from -60 to 0 dBFS, and the y-axis represents the SNR in dB, ranging from 0 to 60 dB.\n\nThe graph displays a linear relationship, with SNR increasing as the input signal amplitude increases. The line starts at the origin, indicating low SNR at very low input levels. As the input amplitude approaches 0 dBFS (corresponding to full-scale input where \\( V_{pp} = V_{ref} \\)), the SNR reaches its maximum value.\n\nThe line is labeled 'Best possible SNR' at the top right, indicating the maximum achievable SNR for this converter at full scale. This point corresponds to the highest SNR value on the graph, near 60 dB.\n\nThis graph demonstrates the ideal performance of the converter, showing that the best SNR is achieved when the input signal utilizes the full dynamic range of the converter, aligning with the theoretical maximum SNR for a 10-bit converter.\n\n**Fig. 15.8** Idealized SNR versus sinusoidal input signal amplitude for a 10-bit A/D converter. The 0 dBFS input signal amplitude corresponds to a peak-to-peak voltage equaling \"Full-Scale,\" in this case $V_{\\text {ref }}$.\n\n#### Solution\n\nFirst, we use (15.16) to find the maximum SNR for a full-scale sinusoidal waveform of $\\pm 2.5 \\mathrm{~V}$.\n\n$$\n\\begin{equation*}\n\\mathrm{SNR}_{\\text {max }}=6.02 \\times 12+1.76=74 \\mathrm{~dB} \\tag{15.17}\n\\end{equation*}\n$$\n\nHowever, since the input is only a $\\pm 100-\\mathrm{mV}$ sinusoidal waveform, which is 28 dB below full scale, the SNR of the digitized output is\n\n$$\n\\begin{equation*}\n\\mathrm{SNR}=74-28=46 \\mathrm{~dB} \\tag{15.18}\n\\end{equation*}\n$$"
},
{
    "text": "The initial deterministic approach was illustrated as a straightforward example to observe certain characteristics of the quantization noise signal. Nevertheless, to address the broader range of input scenarios, a stochastic approach is generally employed. In this stochastic method, we presume that the input signal fluctuates rapidly, causing the quantization error signal, $\\mathrm{V}_{\\mathrm{Q}}$, to behave as a random variable uniformly distributed between $\\pm \\mathrm{V}_{\\mathrm{LSB}} / 2$. The probability density function for this error signal, $\\mathrm{f}_{\\mathrm{Q}}(\\mathrm{x})$, remains constant, as depicted in Fig. 15.7.\n\nThe mean value of the quantization error, $\\mathrm{V}_{\\mathrm{Q}(\\mathrm{avg})}$, is determined to be zero as follows:\n\n$$\n\\begin{equation*}\nV_{Q(a v g)}=\\int_{-\\infty}^{\\infty} x f_{Q}(x) d x=\\frac{1}{V_{\\mathrm{LSB}}}\\left(\\int_{-V_{\\mathrm{LSB}} / 2}^{V_{\\mathrm{LSB} / 2}} x d x\\right)=0 \\tag{15.13}\n\\end{equation*}\n$$\n\nSimilarly, the root mean square (rms) value of the quantization error is expressed by\n\n$$\n\\begin{equation*}\nV_{Q(\\mathrm{~ms})}=\\left[\\int_{-\\infty}^{\\infty} x^{2} f_{e}(x) d x\\right]^{1 / 2}=\\left[\\frac{1}{V_{\\mathrm{LSB}}}\\left(\\int_{-\\mathrm{V}_{\\mathrm{LSB}} / 2}^{\\mathrm{V}_{\\mathrm{LSB} / 2}} x^{2} d x\\right)\\right]^{1 / 2}=\\frac{\\mathrm{V}_{\\mathrm{LSB}}}{\\sqrt{12}} \\tag{15.14}\n\\end{equation*}\n$$\n\nThis result aligns with (15.12), derived using a deterministic ramp input signal. The equivalence of these two results is expected, as random samples from the sawtooth waveform in the deterministic case would also exhibit a uniformly distributed probability density function. Generally, the rms quantization noise power equals $\\mathrm{V}_{\\mathrm{LSB}} / \\sqrt{12}$ when the quantization noise signal is uniformly distributed over the interval $\\pm \\mathrm{V}_{\\mathrm{LSB}} / 2$.\nimage_name:Fig. 15.7 Assumed probability density function for the quantization error\ndescription:The graph in Fig. 15.7 illustrates the assumed probability density function (PDF) for the quantization error, represented as \\( f_Q(x) \\). This is a graphical representation of a probability distribution.\n\n1. **Graph Type and Function:**\n- The graph represents a probability density function (PDF) for quantization error.\n\n2. **Axes Labels and Units:**\n- The horizontal axis, labeled \\( x \\), represents the quantization error, typically measured in volts when dealing with voltage levels such as \\( V_{LSB} \\).\n- The vertical axis denotes the probability density \\( f_Q(x) \\).\n\n3. **Overall Behavior and Trends:**\n- The graph shows a uniform distribution across the interval \\( \\left[-\\frac{V_{LSB}}{2}, \\frac{V_{LSB}}{2}\\right] \\), indicating equal likelihood for any value within this range.\n\n4. **Key Features and Technical Details:**\n- The height of the PDF is \\( \\frac{1}{V_{LSB}} \\), ensuring the total area under the curve equals 1, a requisite for all probability density functions.\n- The distribution is centered at zero, reflecting the assumption of an unbiased quantization error.\n\n5. **Annotations and Specific Data Points:**\n- The distribution's boundaries are marked at \\( -\\frac{V_{LSB}}{2} \\) and \\( \\frac{V_{LSB}}{2} \\).\n- An annotation confirms that the integral of the PDF over the entire range equals 1, validating it as a valid probability density function.\n\nFig. 15.7 Assumed probability density function for the quantization error, $\\mathrm{V}_{\\mathrm{Q}}$.\n\nConsidering that the magnitude of $\\mathrm{V}_{\\text {LSB }}$ is halved with each additional bit, and assuming $\\mathrm{V}_{\\text {ret }}$ remains constant, we observe from (15.14) that the noise power reduces by 6 dB for each additional bit in the $\\mathrm{A} / \\mathrm{D}$ converter. Consequently, for a given input signal waveform, a formula can be derived to determine the optimal signal-to-noise ratio (SNR) for a specified number of bits in an ideal A/D converter.\n\nFor instance, assuming $\\mathrm{V}_{\\text {in }}$ is a sawtooth waveform with amplitude $\\mathrm{V}_{\\text {ref }}$ (or equivalently, a random signal uniformly distributed between 0 and $\\mathrm{V}_{\\text {ref }}$), and considering only the AC power of the signal, the signal-to-quantization noise ratio (SQNR) is given by\n\n$$\n\\begin{align*}\n\\text { SQNR } & =20 \\log \\left(\\frac{V_{\\text {in(rms }}}{\\mathrm{V}_{\\mathrm{Q}(\\mathrm{rms})}}\\right)=20 \\log \\left(\\frac{\\mathrm{~V}_{\\text {ref }} / \\sqrt{12}}{\\mathrm{~V}_{\\mathrm{LSB}} / \\sqrt{12}}\\right)  \\tag{15.15}\\\\\n& =20 \\log \\left(2^{\\mathrm{N}}\\right)=6.02 \\mathrm{NdB}\n\\end{align*}\n$$\n\nThis represents the highest achievable SNR for a data converter with N-bits of resolution, considering only the quantization noise of an ideal converter. For example, a 10-bit A/D converter can achieve a maximum SNR of approximately 60 dB.\n\nAlternatively, a more commonly used SNR formula assumes $\\mathrm{V}_{\\text {in }}$ is a sinusoidal waveform between 0 and $\\mathrm{V}_{\\text {ref }}$. Thus, the AC power of the sinusoidal wave is $\\mathrm{V}_{\\mathrm{ref}} /(2 \\sqrt{2})$, resulting in\n\n$$\n\\begin{align*}\n\\text { SQNR } & =20 \\log \\left(\\frac{\\mathrm{~V}_{\\mathrm{in}(\\mathrm{rms})}}{\\left.\\mathrm{V}_{\\mathrm{Q}(\\mathrm{rms}}\\right)}\\right. \\\\\n& =20 \\log \\left(\\frac{\\mathrm{~V}_{\\mathrm{ref}} /(2 \\sqrt{2})}{\\mathrm{V}_{\\mathrm{LSB}} /(\\sqrt{12})}\\right)  \\tag{15.16}\\\\\n& =20 \\log \\left(\\sqrt{\\frac{3}{2}} 2^{\\mathrm{N}}\\right) \\\\\n\\text { SQNR } & =6.02 \\mathrm{~N}+1.76 \\mathrm{~dB}\n\\end{align*}\n$$\n\nIn essence, a sinusoidal signal exhibits 1.76 dB more AC power than a random signal uniformly distributed between the same peak levels.\n\nNote that (15.16) provides the maximum possible SNR for an N-bit A/D converter. However, the idealized SNR decreases from this maximum value for lower input signal levels. For example, Fig. 15.8 shows a plot of the idealized SNR for a 10-bit A/D converter against the sinusoidal input signal amplitude. It should be noted that these SNR values can be enhanced through oversampling techniques if the input signal's bandwidth is less than the Nyquist rate. Oversampling will be discussed in detail in Chapter 18, where the design of oversampling converters is presented.\n\nKey Point: Quantization noise can be modeled as a random variable uniformly distributed between -LSB/2 and $+L S B / 2$. For a sinusoidal input, this results in a maximum SNR of $6.02 N+1.76 d B$ for an ideal $N$-bit converter.\n\n#### EXAMPLE 15.2\n\nA $200-\\mathrm{mV}_{\\mathrm{pp}}$ sinusoidal signal is applied to an ideal 12-bit $\\mathrm{A} / \\mathrm{D}$ converter with $\\mathrm{V}_{\\mathrm{ref}}=5 \\mathrm{~V}$. Determine the SNR of the digitized output signal.\nimage_name:Fig. 15.8\ndescription:The depicted graph is a plot of Signal-to-Noise Ratio (SNR) in decibels (dB) versus the input signal amplitude in decibels relative to full scale (dBFS) for a 10-bit analog-to-digital (A/D) converter. The x-axis represents the input voltage \\( V_{in} \\) in dBFS, ranging from -60 to 0 dBFS, and the y-axis represents the SNR in dB, ranging from 0 to 60 dB.\n\nThe graph displays a linear relationship, where the SNR increases with the input signal amplitude. The line originates at the origin, indicating low SNR at very low input levels. As the input amplitude nears 0 dBFS (corresponding to the full-scale input where \\( V_{pp} = V_{ref} \\)), the SNR reaches its peak.\n\nThe line is labeled 'Best possible SNR' at the top right, indicating the maximum achievable SNR for this converter at full-scale input. This point corresponds to the highest SNR value on the graph, around 60 dB.\n\nThis graph illustrates the ideal performance of the converter, showing that the best SNR is achieved when the input signal utilizes the full dynamic range of the converter, aligning with the theoretical maximum SNR for a 10-bit converter.\n\nFig. 15.8 Idealized SNR versus sinusoidal input signal amplitude for a 10-bit A/D converter. The 0 -dBFS input signal amplitude corresponds to a peak-to-peak voltage equaling \"Full-Scale,\" in this case $V_{\\text {ref }}$.\n\n#### Solution\n\nFirst, we use (15.16) to determine the maximum SNR if a full-scale sinusoidal waveform of $\\pm 2.5 \\mathrm{~V}$ were applied to the input.\n\n$$\n\\begin{equation*}\n\\mathrm{SNR}_{\\text {max }}=6.02 \\times 12+1.76=74 \\mathrm{~dB} \\tag{15.17}\n\\end{equation*}\n$$\n\nHowever, since the input is only a $\\pm 100-\\mathrm{mV}$ sinusoidal waveform, which is 28 dB below full scale, the SNR of the digitized output is\n\n$$\n\\begin{equation*}\n\\mathrm{SNR}=74-28=46 \\mathrm{~dB} \\tag{15.18}\n\\end{equation*}\n$$"
},
{
    "text": "The earlier deterministic method was illustrated as a basic example to explore certain characteristics of the quantization noise signal. Nevertheless, to address the broader range of input scenarios, a stochastic approach is generally employed. In this stochastic approach, we presume that the input signal fluctuates rapidly, causing the quantization error signal, $\\mathrm{V}_{\\mathrm{Q}}$, to be a random variable uniformly distributed between $\\pm \\mathrm{V}_{\\mathrm{LSB}} / 2$. The probability density function for this error signal, $\\mathrm{f}_{\\mathrm{Q}}(\\mathrm{x})$, remains constant, as depicted in Fig. 15.7.\n\nThe mean value of the quantization error, $\\mathrm{V}_{\\mathrm{Q}(\\mathrm{avg})}$, is determined to be zero as follows:\n\n$$\n\\begin{equation*}\nV_{Q(a v g)}=\\int_{-\\infty}^{\\infty} x f_{Q}(x) d x=\\frac{1}{V_{\\mathrm{LSB}}}\\left(\\int_{-V_{\\mathrm{LSB}} / 2}^{V_{\\mathrm{LSB} / 2}} x d x\\right)=0 \\tag{15.13}\n\\end{equation*}\n$$\n\nSimilarly, the rms value of the quantization error is expressed by\n\n$$\n\\begin{equation*}\nV_{Q(\\mathrm{~ms})}=\\left[\\int_{-\\infty}^{\\infty} x^{2} f_{e}(x) d x\\right]^{1 / 2}=\\left[\\frac{1}{V_{\\mathrm{LSB}}}\\left(\\int_{-\\mathrm{V}_{\\mathrm{LSB}} / 2}^{\\mathrm{V}_{\\mathrm{LSB} / 2}} x^{2} d x\\right)\\right]^{1 / 2}=\\frac{\\mathrm{V}_{\\mathrm{LSB}}}{\\sqrt{12}} \\tag{15.14}\n\\end{equation*}\n$$\n\nThis result matches (15.12), derived using a deterministic ramp input signal. The equivalence of these two results is unsurprising, as random samples from the sawtooth waveform in the deterministic case would also exhibit a uniformly distributed probability density function. Generally, the rms quantization noise power equals $\\mathrm{V}_{\\mathrm{LSB}} / \\sqrt{12}$ when the quantization noise signal is uniformly distributed over the interval $\\pm \\mathrm{V}_{\\mathrm{LSB}} / 2$.\nimage_name:Fig. 15.7 Assumed probability density function for the quantization error\ndescription:The graph in Fig. 15.7 illustrates the assumed probability density function (PDF) for the quantization error, represented as \\( f_Q(x) \\). This is a form of probability distribution graph.\n\n1. **Graph Type and Function:**\n- The graph represents a probability density function (PDF) for quantization error.\n\n2. **Axes Labels and Units:**\n- The horizontal axis is labeled \\( x \\) and signifies the quantization error. The units are not specified but are usually in volts when dealing with voltage levels like \\( V_{LSB} \\).\n- The vertical axis denotes the probability density \\( f_Q(x) \\).\n\n3. **General Behavior and Trends:**\n- The graph displays a uniform distribution across the interval \\( \\left[-\\frac{V_{LSB}}{2}, \\frac{V_{LSB}}{2}\\right] \\), indicating that any value within this range is equally likely for the quantization error.\n\n4. **Key Features and Technical Details:**\n- The height of the PDF is \\( \\frac{1}{V_{LSB}} \\), ensuring the total area under the curve equals 1, a necessity for all probability density functions.\n- The distribution is centered at zero, reflecting the assumption of an unbiased quantization error.\n\n5. **Annotations and Specific Data Points:**\n- The distribution's edges are marked at \\( -\\frac{V_{LSB}}{2} \\) and \\( \\frac{V_{LSB}}{2} \\).\n- An annotation confirms that the integral of the PDF over the entire range equals 1, validating it as a valid probability density function.\n\nFig. 15.7 Assumed probability density function for the quantization error, $\\mathrm{V}_{\\mathrm{Q}}$.\n\nConsidering that the magnitude of $\\mathrm{V}_{\\text {LSB }}$ is halved with each additional bit and assuming $\\mathrm{V}_{\\text {ret }}$ remains constant, we observe from (15.14) that the noise power reduces by 6 dB for every additional bit in the $\\mathrm{A} / \\mathrm{D}$ converter. Consequently, for a given input signal waveform, a formula can be derived to determine the optimal signal-to-noise ratio (SNR) for a specified number of bits in an ideal A/D converter.\n\nFor instance, assuming $\\mathrm{V}_{\\text {in }}$ is a sawtooth wave with an amplitude of $\\mathrm{V}_{\\text {ref }}$ (or equivalently, a random signal uniformly distributed between 0 and $\\mathrm{V}_{\\text {ref }}$) and considering only the ac power of the signal, the signal-to-quantization noise ratio (SQNR) is given by\n\n$$\n\\begin{align*}\n\\text { SQNR } & =20 \\log \\left(\\frac{V_{\\text {in(rms }}}{\\mathrm{V}_{\\mathrm{Q}(\\mathrm{rms})}}\\right)=20 \\log \\left(\\frac{\\mathrm{~V}_{\\text {ref }} / \\sqrt{12}}{\\mathrm{~V}_{\\mathrm{LSB}} / \\sqrt{12}}\\right)  \\tag{15.15}\\\\\n& =20 \\log \\left(2^{\\mathrm{N}}\\right)=6.02 \\mathrm{NdB}\n\\end{align*}\n$$\n\nThis represents the highest achievable SNR for a data converter with N-bits of resolution, considering only the quantization noise of an ideal converter. For example, a 10-bit A/D converter can achieve a best possible SNR of approximately 60 dB.\n\nAlternatively, a more frequently used SNR formula assumes $\\mathrm{V}_{\\text {in }}$ is a sinusoidal waveform between 0 and $\\mathrm{V}_{\\text {ref }}$. Thus, the ac power of the sinusoidal wave is $\\mathrm{V}_{\\mathrm{ref}} /(2 \\sqrt{2})$, resulting in\n\n$$\n\\begin{align*}\n\\text { SQNR } & =20 \\log \\left(\\frac{\\mathrm{~V}_{\\mathrm{in}(\\mathrm{rms})}}{\\left.\\mathrm{V}_{\\mathrm{Q}(\\mathrm{rms}}\\right)}\\right. \\\\\n& =20 \\log \\left(\\frac{\\mathrm{~V}_{\\mathrm{ref}} /(2 \\sqrt{2})}{\\mathrm{V}_{\\mathrm{LSB}} /(\\sqrt{12})}\\right)  \\tag{15.16}\\\\\n& =20 \\log \\left(\\sqrt{\\frac{3}{2}} 2^{\\mathrm{N}}\\right) \\\\\n\\text { SQNR } & =6.02 \\mathrm{~N}+1.76 \\mathrm{~dB}\n\\end{align*}\n$$\n\nIn other words, a sinusoidal signal has 1.76 dB more ac power than a random signal uniformly distributed between the same peak levels.\n\nNote that (15.16) provides the best possible SNR for an N-bit A/D converter. However, the idealized SNR decreases from this optimal value for lower input signal levels. For example, Fig. 15.8 shows a plot of the idealized SNR for a 10-bit A/D converter against the sinusoidal input signal amplitude. Nevertheless, it should be noted that these SNR values can be enhanced using oversampling techniques if the input signal's bandwidth is less than the Nyquist rate. Oversampling will be discussed in detail in Chapter 18, where the design of oversampling converters is presented.\n\nKey Point: Quantization noise can be modeled as a random variable uniformly distributed between -LSB/2 and $+L S B / 2$. For a sinusoidal input, this results in a maximum SNR of $6.02 N+1.76 d B$ for an ideal $N$-bit converter.\n\n#### EXAMPLE 15.2\n\nA $200-\\mathrm{mV}_{\\mathrm{pp}}$ sinusoidal signal is applied to an ideal 12-bit $\\mathrm{A} / \\mathrm{D}$ converter with $\\mathrm{V}_{\\mathrm{ref}}=5 \\mathrm{~V}$. Determine the SNR of the digitized output signal.\nimage_name:Fig. 15.8\ndescription:The depicted graph is a plot of Signal-to-Noise Ratio (SNR) in decibels (dB) versus the input signal amplitude in decibels relative to full scale (dBFS) for a 10-bit analog-to-digital (A/D) converter. The x-axis represents the input voltage \\( V_{in} \\) in dBFS, ranging from -60 to 0 dBFS, and the y-axis represents the SNR in dB, ranging from 0 to 60 dB.\n\nThe graph shows a linear relationship, where the SNR increases with the input signal amplitude. The line originates at the origin, indicating low SNR at very low input levels. As the input amplitude nears 0 dBFS (corresponding to the full-scale input where \\( V_{pp} = V_{ref} \\)), the SNR reaches its maximum.\n\nThe line is labeled 'Best possible SNR' at the top right, indicating the highest achievable SNR for this converter at full-scale input. This point corresponds to the highest SNR value on the graph, around 60 dB.\n\nThis graph illustrates the ideal performance of the converter, showing that the best SNR is achieved when the input signal utilizes the full dynamic range of the converter, aligning with the theoretical maximum SNR for a 10-bit converter.\n\nFig. 15.8 Idealized SNR versus sinusoidal input signal amplitude for a 10-bit A/D converter. The 0 -dBFS input signal amplitude corresponds to a peak-to-peak voltage equaling \"Full-Scale,\" in this case $V_{\\text {ref }}$.\n\n#### Solution\n\nFirst, we use (15.16) to determine the maximum SNR if a full-scale sinusoidal waveform of $\\pm 2.5 \\mathrm{~V}$ were applied to the input.\n\n$$\n\\begin{equation*}\n\\mathrm{SNR}_{\\text {max }}=6.02 \\times 12+1.76=74 \\mathrm{~dB} \\tag{15.17}\n\\end{equation*}\n$$\n\nHowever, since the input is only a $\\pm 100-\\mathrm{mV}$ sinusoidal waveform, which is 28 dB below full scale, the SNR of the digitized output is\n\n$$\n\\begin{equation*}\n\\mathrm{SNR}=74-28=46 \\mathrm{~dB} \\tag{15.18}\n\\end{equation*}\n$$"
},
{
    "text": "The earlier deterministic method was illustrated as a basic example to observe certain characteristics of the quantization noise signal. Nevertheless, to address the broader range of input scenarios, a stochastic approach is generally employed. In this stochastic approach, it is assumed that the input signal fluctuates rapidly, causing the quantization error signal, $\\mathrm{V}_{\\mathrm{Q}}$, to be a random variable uniformly distributed between $\\pm \\mathrm{V}_{\\mathrm{LSB}} / 2$. The probability density function for such an error signal, $\\mathrm{f}_{\\mathrm{Q}}(\\mathrm{x})$, remains constant, as depicted in Fig. 15.7.\n\nThe mean value of the quantization error, $\\mathrm{V}_{\\mathrm{Q}(\\mathrm{avg})}$, is determined to be zero as follows:\n\n$$\n\\begin{equation*}\nV_{Q(a v g)}=\\int_{-\\infty}^{\\infty} x f_{Q}(x) d x=\\frac{1}{V_{\\mathrm{LSB}}}\\left(\\int_{-V_{\\mathrm{LSB}} / 2}^{V_{\\mathrm{LSB} / 2}} x d x\\right)=0 \\tag{15.13}\n\\end{equation*}\n$$\n\nSimilarly, the rms value of the quantization error is expressed by\n\n$$\n\\begin{equation*}\nV_{Q(\\mathrm{~ms})}=\\left[\\int_{-\\infty}^{\\infty} x^{2} f_{e}(x) d x\\right]^{1 / 2}=\\left[\\frac{1}{V_{\\mathrm{LSB}}}\\left(\\int_{-\\mathrm{V}_{\\mathrm{LSB}} / 2}^{\\mathrm{V}_{\\mathrm{LSB} / 2}} x^{2} d x\\right)\\right]^{1 / 2}=\\frac{\\mathrm{V}_{\\mathrm{LSB}}}{\\sqrt{12}} \\tag{15.14}\n\\end{equation*}\n$$\n\nThis result matches (15.12), derived using a deterministic ramp input signal. The equivalence of these two results is expected, as random samples from the sawtooth waveform in the deterministic case would also exhibit a uniformly distributed probability density function. Generally, the rms quantization noise power equals $\\mathrm{V}_{\\mathrm{LSB}} / \\sqrt{12}$ when the quantization noise signal is uniformly distributed over the interval $\\pm \\mathrm{V}_{\\mathrm{LSB}} / 2$.\n\n**Fig. 15.7 Description:**\nThe graph in Fig. 15.7 illustrates the assumed probability density function (PDF) for the quantization error, denoted as \\( f_Q(x) \\). This is a type of probability distribution graph.\n\n1. **Graph Type and Function:**\n   - The graph represents a probability density function (PDF) for quantization error.\n\n2. **Axes Labels and Units:**\n   - The horizontal axis, labeled \\( x \\), represents the quantization error, typically in volts for voltage levels like \\( V_{LSB} \\).\n   - The vertical axis shows the probability density \\( f_Q(x) \\).\n\n3. **Behavior and Trends:**\n   - The graph displays a uniform distribution over the interval \\( \\left[-\\frac{V_{LSB}}{2}, \\frac{V_{LSB}}{2}\\right] \\), indicating equal likelihood of any value within this range.\n\n4. **Key Features and Technical Details:**\n   - The PDF height is \\( \\frac{1}{V_{LSB}} \\), ensuring the total area under the curve equals 1, a requirement for all probability density functions.\n   - The distribution is centered at zero, reflecting an unbiased quantization error.\n\n5. **Annotations and Specific Data Points:**\n   - The distribution edges are marked at \\( -\\frac{V_{LSB}}{2} \\) and \\( \\frac{V_{LSB}}{2} \\).\n   - An annotation confirms that the integral of the PDF over the entire range equals 1, validating it as a valid probability density function.\n\nFig. 15.7 Assumed probability density function for the quantization error, $\\mathrm{V}_{\\mathrm{Q}}$.\n\nConsidering that the magnitude of $\\mathrm{V}_{\\text {LSB }}$ is halved with each additional bit and assuming $\\mathrm{V}_{\\text {ret }}$ remains constant, it follows from (15.14) that the noise power reduces by 6 dB for each additional bit in the $\\mathrm{A} / \\mathrm{D}$ converter. Thus, for a given input signal waveform, a formula can be derived to determine the optimal signal-to-noise ratio (SNR) for a specified number of bits in an ideal A/D converter.\n\nFor instance, if $\\mathrm{V}_{\\text {in }}$ is a sawtooth wave with amplitude $\\mathrm{V}_{\\text {ref }}$ (or a random signal uniformly distributed between 0 and $\\mathrm{V}_{\\text {ref }}$), and considering only the ac power of the signal, the signal-to-quantization noise ratio (SQNR) is given by\n\n$$\n\\begin{align*}\n\\text { SQNR } & =20 \\log \\left(\\frac{V_{\\text {in(rms }}}{\\mathrm{V}_{\\mathrm{Q}(\\mathrm{rms})}}\\right)=20 \\log \\left(\\frac{\\mathrm{~V}_{\\text {ref }} / \\sqrt{12}}{\\mathrm{~V}_{\\mathrm{LSB}} / \\sqrt{12}}\\right)  \\tag{15.15}\\\\\n& =20 \\log \\left(2^{\\mathrm{N}}\\right)=6.02 \\mathrm{NdB}\n\\end{align*}\n$$\n\nThis represents the highest achievable SNR for a data converter with N-bits of resolution, considering only the quantization noise of an ideal converter. For example, a 10-bit A/D converter can achieve a best possible SNR of around 60 dB.\n\nAlternatively, a more frequently used SNR formula assumes $\\mathrm{V}_{\\text {in }}$ is a sinusoidal waveform between 0 and $\\mathrm{V}_{\\text {ref }}$. Thus, the ac power of the sinusoidal wave is $\\mathrm{V}_{\\mathrm{ref}} /(2 \\sqrt{2})$, resulting in\n\n$$\n\\begin{align*}\n\\text { SQNR } & =20 \\log \\left(\\frac{\\mathrm{~V}_{\\mathrm{in}(\\mathrm{rms})}}{\\left.\\mathrm{V}_{\\mathrm{Q}(\\mathrm{rms}}\\right)}\\right. \\\\\n& =20 \\log \\left(\\frac{\\mathrm{~V}_{\\mathrm{ref}} /(2 \\sqrt{2})}{\\mathrm{V}_{\\mathrm{LSB}} /(\\sqrt{12})}\\right)  \\tag{15.16}\\\\\n& =20 \\log \\left(\\sqrt{\\frac{3}{2}} 2^{\\mathrm{N}}\\right) \\\\\n\\text { SQNR } & =6.02 \\mathrm{~N}+1.76 \\mathrm{~dB}\n\\end{align*}\n$$\n\nIn other words, a sinusoidal signal has 1.76 dB more ac power than a random signal uniformly distributed between the same peak levels.\n\nNote that (15.16) provides the best possible SNR for an N-bit A/D converter. However, the idealized SNR decreases from this optimal value for lower input signal levels. For example, Fig. 15.8 shows a plot of the idealized SNR for a 10-bit A/D converter versus the sinusoidal input signal amplitude. It should be noted that these SNR values can be enhanced using oversampling techniques if the input signal's bandwidth is less than the Nyquist rate. Oversampling will be discussed in detail in Chapter 18, where the design of oversampling converters is presented.\n\n**Key Point:** Quantization noise can be modeled as a random variable uniformly distributed between -LSB/2 and +LSB/2. For a sinusoidal input, this results in a maximum SNR of $6.02 N+1.76 dB$ for an ideal N-bit converter.\n\n#### EXAMPLE 15.2\n\nA $200-\\mathrm{mV}_{\\mathrm{pp}}$ sinusoidal signal is applied to an ideal 12-bit $\\mathrm{A} / \\mathrm{D}$ converter with $\\mathrm{V}_{\\mathrm{ref}}=5 \\mathrm{~V}$. Determine the SNR of the digitized output signal.\n\n**Fig. 15.8 Description:**\nThe graph illustrates the Signal-to-Noise Ratio (SNR) in decibels (dB) versus the input signal amplitude in decibels relative to full scale (dBFS) for a 10-bit analog-to-digital (A/D) converter. The x-axis represents the input voltage \\( V_{in} \\) in dBFS, ranging from -60 to 0 dBFS, and the y-axis represents the SNR in dB, ranging from 0 to 60 dB.\n\nThe graph shows a linear relationship, with SNR increasing as the input signal amplitude increases. The line starts at the origin, indicating low SNR at very low input levels. As the input amplitude approaches 0 dBFS (full-scale input where \\( V_{pp} = V_{ref} \\)), the SNR reaches its maximum value.\n\nThe line is labeled 'Best possible SNR' at the top right, indicating the maximum achievable SNR for this converter at full scale. This point corresponds to the highest SNR value on the graph, near 60 dB.\n\nThis graph demonstrates the ideal performance of the converter, showing that the best SNR is achieved when the input signal utilizes the full dynamic range of the converter, aligning with the theoretical maximum SNR for a 10-bit converter.\n\nFig. 15.8 Idealized SNR versus sinusoidal input signal amplitude for a 10-bit A/D converter. The 0 dBFS input signal amplitude corresponds to a peak-to-peak voltage equaling \"Full-Scale,\" in this case $V_{\\text {ref }}$.\n\n#### Solution\n\nFirst, we use (15.16) to find the maximum SNR for a full-scale sinusoidal waveform of $\\pm 2.5 \\mathrm{~V}$.\n\n$$\n\\begin{equation*}\n\\mathrm{SNR}_{\\text {max }}=6.02 \\times 12+1.76=74 \\mathrm{~dB} \\tag{15.17}\n\\end{equation*}\n$$\n\nHowever, since the input is only a $\\pm 100-\\mathrm{mV}$ sinusoidal waveform, which is 28 dB below full scale, the SNR of the digitized output is\n\n$$\n\\begin{equation*}\n\\mathrm{SNR}=74-28=46 \\mathrm{~dB} \\tag{15.18}\n\\end{equation*}\n$$"
},
{
    "text": "In numerous applications, it is essential to design a converter capable of handling both positive and negative analog signals, necessitating both positive and negative digital representations. Typically, the analog signal is confined within $\\pm 0.5 \\mathrm{~V}_{\\text {ref }}$, ensuring its full-scale range matches that of the unipolar scenario. Common signed digital formats include sign magnitude, 1's complement, offset binary, and 2's complement, as illustrated in Table 15.1 for a 4-bit example. Note from Table 15.1 that all positive number representations are identical except in the offset-binary case, where the MSB is inverted.\n\nSign Magnitude\n\nFor negative numbers in the sign-magnitude format, all bits remain the same as their positive counterparts, except the MSB is inverted. For instance, the sign-magnitude representation for 5 is 0101, while for -5, it is 1101. However, this method results in two representations for zero, thereby accommodating only $2^{N}-1$ unique numbers.\n\nTable 15.1 Some 4-bit signed digital representations.\n\n| Number | Normalized <br> number | Sign <br> magnitude | 1's <br> complement | Offset <br> binary | $\\mathbf{2} \\mathbf{s}$ <br> complement |\n| :---: | :---: | :---: | :---: | :---: | :---: |\n| +7 | $+7 / 8$ | 0111 | 0111 | 1111 | 0111 |\n| +6 | $+6 / 8$ | 0110 | 0110 | 1110 | 0110 |\n| +5 | $+5 / 8$ | 0101 | 0101 | 1101 | 0101 |\n| +4 | $+4 / 8$ | 0100 | 0100 | 1100 | 0100 |\n| +3 | $+3 / 8$ | 0011 | 0011 | 1011 | 0011 |\n| +2 | $+2 / 8$ | 0010 | 0010 | 1010 | 0010 |\n| +1 | $+1 / 8$ | 0001 | 0001 | 1001 | 0001 |\n| +0 | +0 | 0000 | 0000 | 1000 | 0000 |\n| $(-0)$ | $(-0)$ | $(1000)$ | $(11111)$ |  |  |\n| -1 | $-1 / 8$ | 1001 | 1110 | 0111 | 1111 |\n| -2 | $-2 / 8$ | 1010 | 1101 | 0110 | 1110 |\n| -3 | $-3 / 8$ | 1011 | 1100 | 0101 | 1101 |\n| -4 | $-4 / 8$ | 1100 | 1011 | 0100 | 1100 |\n| -5 | $-5 / 8$ | 1101 | 1010 | 0011 | 1011 |\n| -6 | $-6 / 8$ | 1110 | 1001 | 0010 | 1010 |\n| -7 | $-7 / 8$ | 1111 | 1000 | 0001 | 1001 |\n| -8 | $-8 / 8$ |  |  | 0000 | 1000 |\n\n1's Complement\n\nIn the 1's-complement system, negative numbers are depicted as the bitwise complement of their positive equivalents. For example, 5 is represented as 0101, while -5 is 1010. It is important to note that this system also has two representations for zero, thus accommodating only $2^{\\mathrm{N}}-1$ numbers.\n\nOffset Binary\n\nThe offset-binary format is derived by assigning 0000 to the most negative value and incrementing from there, similar to the unipolar case. Essentially, this system can be viewed as a unipolar representation ranging from 0 to $2^{\\mathrm{N}}$, but with the decimal values shifted by $2^{\\mathrm{N}-1}$, or equivalently, ranging from $-2^{\\mathrm{N}-1}$ to $2^{\\mathrm{N}-1}$. For example, in a 4-bit scenario, the offset-binary code for 5 is 1101, the same as the unipolar code for 13, since $13=5+2^{4-1}$. The offset-binary code for -5 is 0011, akin to the unipolar code for 3. Note that this format avoids redundancy, ensuring all sixteen numbers are uniquely represented. Additionally, it closely relates to the unipolar system through a simple offset.\n\nFinally, the unipolar relationship for a D/A converter given in (15.2) can be easily adapted to the signed case with offset-binary representation as\n\n$$\n\\begin{equation*}\n\\mathrm{V}_{\\text {out }}=\\mathrm{V}_{\\text {ref }}\\left(\\mathrm{b}_{1} 2^{-1}+\\mathrm{b}_{2} 2^{-2}+\\cdots+\\mathrm{b}_{\\mathrm{N}} 2^{-\\mathrm{N}}\\right)-0.5 \\mathrm{~V}_{\\text {ref }} \\tag{15.19}\n\\end{equation*}\n$$\n\nHere, the output signal is constrained within $\\pm 0.5 \\mathrm{~V}_{\\text {ref }}$.\n\n2's Complement\n\nThe 2's-complement format is derived from the offset-binary number by simply inverting the MSB. For a 4-bit example, 5 is 0101 in 2's complement (the same as in sign magnitude and 1's complement), while -5 is 1011. It is worth mentioning that the 2's-complement code for negative numbers can also be obtained by adding 1 LSB to the corresponding 1's-complement code.\n\nThe primary advantage of 2's-complement coding is that it facilitates straightforward addition of both positive and negative numbers without requiring additional hardware. Moreover, subtraction of two numbers, $A-B$, can be easily executed by inverting all bits of $B$ (forming the 1's-complement) and then adding this result to $A$ along with a single LSB to create the 2's-complement equivalent of -B. Adding a single LSB is readily achieved in hardware by setting the carry-in bit high in the overall adder. Thus, subtraction necessitates minimal extra hardware. Furthermore, when summing multiple numbers using 2's-complement codes, no overflow hardware is needed as long as the final result remains within the digital code range (even if intermediate results exceed this range). Due to these advantages, 2's-complement codes are the preferred representation for signed numbers in arithmetic operations."
},
{
    "text": "In numerous applications, it is essential to design a converter capable of handling both positive and negative analog signals, necessitating digital representations for both positive and negative values. Typically, the analog signal is confined within $\\pm 0.5 \\mathrm{~V}_{\\text {ref }}$, ensuring its full-scale range matches that of the unipolar scenario. Common signed digital formats include sign magnitude, 1's complement, offset binary, and 2's complement, as illustrated in Table 15.1 for a 4-bit example. It is evident from Table 15.1 that all positive number representations are identical except in the offset-binary case, where the MSB is inverted.\n\nSign Magnitude\n\nFor negative numbers in the sign-magnitude system, all bits remain the same as their positive counterparts, except the MSB is flipped. For instance, the sign-magnitude representation of 5 is 0101, while for -5, it is 1101. However, this method leads to two representations for zero, resulting in only $2^{N}-1$ unique numbers being represented.\n\nTable 15.1 Some 4-bit signed digital representations.\n\n| Number | Normalized <br> number | Sign <br> magnitude | 1's <br> complement | Offset <br> binary | $\\mathbf{2} \\mathbf{s}$ <br> complement |\n| :---: | :---: | :---: | :---: | :---: | :---: |\n| +7 | $+7 / 8$ | 0111 | 0111 | 1111 | 0111 |\n| +6 | $+6 / 8$ | 0110 | 0110 | 1110 | 0110 |\n| +5 | $+5 / 8$ | 0101 | 0101 | 1101 | 0101 |\n| +4 | $+4 / 8$ | 0100 | 0100 | 1100 | 0100 |\n| +3 | $+3 / 8$ | 0011 | 0011 | 1011 | 0011 |\n| +2 | $+2 / 8$ | 0010 | 0010 | 1010 | 0010 |\n| +1 | $+1 / 8$ | 0001 | 0001 | 1001 | 0001 |\n| +0 | +0 | 0000 | 0000 | 1000 | 0000 |\n| $(-0)$ | $(-0)$ | $(1000)$ | $(11111)$ |  |  |\n| -1 | $-1 / 8$ | 1001 | 1110 | 0111 | 1111 |\n| -2 | $-2 / 8$ | 1010 | 1101 | 0110 | 1110 |\n| -3 | $-3 / 8$ | 1011 | 1100 | 0101 | 1101 |\n| -4 | $-4 / 8$ | 1100 | 1011 | 0100 | 1100 |\n| -5 | $-5 / 8$ | 1101 | 1010 | 0011 | 1011 |\n| -6 | $-6 / 8$ | 1110 | 1001 | 0010 | 1010 |\n| -7 | $-7 / 8$ | 1111 | 1000 | 0001 | 1001 |\n| -8 | $-8 / 8$ |  |  | 0000 | 1000 |\n\n1's Complement\n\nIn the 1's-complement representation, negative numbers are depicted as the bitwise inverse of their positive equivalents. For example, 5 is represented as 0101, while -5 is 1010. It is important to note that this method also results in two representations for zero, thus accommodating only $2^{\\mathrm{N}}-1$ distinct numbers.\n\nOffset Binary\n\nThe offset-binary format is derived by assigning 0000 to the most negative value and incrementing from there, akin to the unipolar case. Essentially, this system can be viewed as a unipolar representation ranging from 0 to $2^{\\mathrm{N}}$, but with the decimal values shifted by $2^{\\mathrm{N}-1}$, or equivalently, ranging from $-2^{\\mathrm{N}-1}$ to $2^{\\mathrm{N}-1}$. For example, the offset-binary code for 5 in a 4-bit scenario matches the unipolar code for 13, which is 1101, since $13=5+2^{4-1}$. The offset-binary code for -5 corresponds to the unipolar code for 3, which is 0011. This format avoids redundancy, ensuring all sixteen numbers are uniquely represented. Additionally, it benefits from a straightforward relationship with the unipolar case through a simple offset.\n\nThe unipolar relationship for a D/A converter, as given in (15.2), can be easily adapted to the signed case with offset-binary representation as follows:\n\n$$\n\\begin{equation*}\n\\mathrm{V}_{\\text {out }}=\\mathrm{V}_{\\text {ref }}\\left(\\mathrm{b}_{1} 2^{-1}+\\mathrm{b}_{2} 2^{-2}+\\cdots+\\mathrm{b}_{\\mathrm{N}} 2^{-\\mathrm{N}}\\right)-0.5 \\mathrm{~V}_{\\text {ref }} \\tag{15.19}\n\\end{equation*}\n$$\n\nHere, the output signal is constrained within $\\pm 0.5 \\mathrm{~V}_{\\text {ref }}$.\n\n2's Complement\n\nLastly, the 2's-complement representation is derived from the offset-binary number by simply inverting the MSB. In a 4-bit example, 5 is represented as 0101 in 2's complement (identical to sign magnitude and 1's complement), while -5 is 1011. It is worth noting that the 2's-complement code for negative numbers can also be obtained by adding 1 LSB to the corresponding 1's-complement code.\n\nThe primary advantage of 2's-complement coding is that it facilitates straightforward addition of both positive and negative numbers without requiring additional hardware. Furthermore, subtraction of two numbers, $A-B$, can be easily executed by inverting all bits of $B$ (forming the 1's-complement) and then adding this result to $A$ along with a single LSB to create the 2's-complement equivalent of -B. Adding a single LSB is readily achieved in hardware by setting the carry-in bit high in the overall adder. Consequently, subtraction necessitates minimal additional hardware. Additionally, when numerous numbers are summed using 2's-complement codes, no overflow hardware is needed as long as the final result remains within the digital code range (even if intermediate results exceed this range). These attributes make 2's-complement codes the preferred choice for representing signed numbers in arithmetic operations."
},
{
    "text": "In numerous applications, it is essential to design a converter capable of handling both positive and negative analog signals, necessitating digital representations for both positive and negative values. Typically, the analog signal is confined within $\\pm 0.5 \\mathrm{~V}_{\\text {ref }}$, ensuring its full-scale range matches that of the unipolar scenario. Common signed digital representations include sign magnitude, 1's complement, offset binary, and 2's complement, as illustrated in Table 15.1 for a 4-bit example. It is evident from Table 15.1 that all positive number representations are identical except in the offset-binary case, where the MSB is inverted.\n\n**Sign Magnitude**\n\nFor negative numbers in the sign-magnitude system, all bits remain the same as their positive counterparts, except the MSB is flipped. For instance, the sign-magnitude representation for 5 is 0101, while for -5, it is 1101. However, this method results in two representations for zero, thereby limiting the number of representable values to $2^{N}-1$.\n\n**Table 15.1 Some 4-bit signed digital representations.**\n\n| Number | Normalized <br> number | Sign <br> magnitude | 1's <br> complement | Offset <br> binary | $\\mathbf{2} \\mathbf{s}$ <br> complement |\n| :---: | :---: | :---: | :---: | :---: | :---: |\n| +7 | $+7 / 8$ | 0111 | 0111 | 1111 | 0111 |\n| +6 | $+6 / 8$ | 0110 | 0110 | 1110 | 0110 |\n| +5 | $+5 / 8$ | 0101 | 0101 | 1101 | 0101 |\n| +4 | $+4 / 8$ | 0100 | 0100 | 1100 | 0100 |\n| +3 | $+3 / 8$ | 0011 | 0011 | 1011 | 0011 |\n| +2 | $+2 / 8$ | 0010 | 0010 | 1010 | 0010 |\n| +1 | $+1 / 8$ | 0001 | 0001 | 1001 | 0001 |\n| +0 | +0 | 0000 | 0000 | 1000 | 0000 |\n| $(-0)$ | $(-0)$ | $(1000)$ | $(11111)$ |  |  |\n| -1 | $-1 / 8$ | 1001 | 1110 | 0111 | 1111 |\n| -2 | $-2 / 8$ | 1010 | 1101 | 0110 | 1110 |\n| -3 | $-3 / 8$ | 1011 | 1100 | 0101 | 1101 |\n| -4 | $-4 / 8$ | 1100 | 1011 | 0100 | 1100 |\n| -5 | $-5 / 8$ | 1101 | 1010 | 0011 | 1011 |\n| -6 | $-6 / 8$ | 1110 | 1001 | 0010 | 1010 |\n| -7 | $-7 / 8$ | 1111 | 1000 | 0001 | 1001 |\n| -8 | $-8 / 8$ |  |  | 0000 | 1000 |\n\n**1's Complement**\n\nIn the 1's-complement representation, negative numbers are depicted as the bitwise inverse of their positive equivalents. For example, 5 is represented as 0101, while -5 is 1010. It is important to note that this system also has two representations for zero, thus limiting the number of representable values to $2^{\\mathrm{N}}-1$.\n\n**Offset Binary**\n\nThe offset-binary representation is derived by assigning 0000 to the most negative number and incrementing from there, similar to the unipolar case. Essentially, this system can be viewed as a unipolar representation ranging from 0 to $2^{\\mathrm{N}}$, but with the decimal values offset by $2^{\\mathrm{N}-1}$, or equivalently, ranging from $-2^{\\mathrm{N}-1}$ to $2^{\\mathrm{N}-1}$. For instance, the offset-binary code for 5 in a 4-bit system is 1101, the same as the unipolar code for 13, since $13=5+2^{4-1}$. The offset-binary code for -5 corresponds to the unipolar code for 3, which is 0011. Notably, the offset-binary code avoids redundancy, ensuring all sixteen numbers are uniquely represented. Additionally, this code benefits from its close relationship to the unipolar system through a simple offset.\n\nFurthermore, the unipolar relationship for a D/A converter, as given in (15.2), can be readily adapted to the signed case with offset-binary representation as follows:\n\n$$\n\\begin{equation*}\n\\mathrm{V}_{\\text {out }}=\\mathrm{V}_{\\text {ref }}\\left(\\mathrm{b}_{1} 2^{-1}+\\mathrm{b}_{2} 2^{-2}+\\cdots+\\mathrm{b}_{\\mathrm{N}} 2^{-\\mathrm{N}}\\right)-0.5 \\mathrm{~V}_{\\text {ref }} \\tag{15.19}\n\\end{equation*}\n$$\n\nHere, the output signal is constrained within $\\pm 0.5 \\mathrm{~V}_{\\text {ref }}$.\n\n**2's Complement**\n\nLastly, the 2's-complement representation is derived from the offset-binary number by simply inverting the MSB. In a 4-bit example, 5 is represented as 0101 in 2's complement (the same as in sign magnitude and 1's complement), while -5 is 1011. It is worth noting that the 2's-complement code for negative numbers can also be obtained by adding 1 LSB to the equivalent 1's-complement code.\n\nThe primary advantage of 2's-complement coding is that it facilitates straightforward addition of both positive and negative numbers without requiring additional hardware. Moreover, subtraction of two numbers, $A-B$, can be easily executed by inverting all bits of $B$ (forming the 1's-complement equivalent) and then adding this result to $A$ along with a single LSB to create the 2's-complement equivalent of -B. Adding a single LSB is easily achieved in hardware by setting the carry-in bit high in the overall adder. Consequently, subtraction necessitates only minimal additional hardware. Furthermore, when numerous numbers are summed using 2's-complement codes, no overflow hardware is needed, provided the final result remains within the digital code range (even if intermediate results exceed this range). These attributes make 2's-complement codes the preferred representation for signed numbers in arithmetic operations."
},
{
    "text": "In numerous applications, it is essential to develop a converter capable of handling both positive and negative analog signals, necessitating the use of both positive and negative digital representations. Typically, the analog signal is confined within $\\pm 0.5 \\mathrm{~V}_{\\text {ref }}$, ensuring its full-scale range matches that of the unipolar scenario. Common signed digital representations include sign magnitude, 1's complement, offset binary, and 2's complement, as illustrated in Table 15.1 for a 4-bit example. It is evident from Table 15.1 that all positive number representations are identical except in the offset-binary case, where the MSB is inverted.\n\nSign Magnitude\n\nFor negative numbers in the sign-magnitude system, all bits remain the same as their positive counterparts, except the MSB is inverted. For instance, the sign-magnitude representation of 5 is 0101, while for -5, it is 1101. However, this method results in two representations for zero, thereby limiting the number of representable values to $2^{N}-1$.\n\nTable 15.1 Some 4-bit signed digital representations.\n\n| Number | Normalized <br> number | Sign <br> magnitude | 1's <br> complement | Offset <br> binary | $\\mathbf{2} \\mathbf{s}$ <br> complement |\n| :---: | :---: | :---: | :---: | :---: | :---: |\n| +7 | $+7 / 8$ | 0111 | 0111 | 1111 | 0111 |\n| +6 | $+6 / 8$ | 0110 | 0110 | 1110 | 0110 |\n| +5 | $+5 / 8$ | 0101 | 0101 | 1101 | 0101 |\n| +4 | $+4 / 8$ | 0100 | 0100 | 1100 | 0100 |\n| +3 | $+3 / 8$ | 0011 | 0011 | 1011 | 0011 |\n| +2 | $+2 / 8$ | 0010 | 0010 | 1010 | 0010 |\n| +1 | $+1 / 8$ | 0001 | 0001 | 1001 | 0001 |\n| +0 | +0 | 0000 | 0000 | 1000 | 0000 |\n| $(-0)$ | $(-0)$ | $(1000)$ | $(11111)$ |  |  |\n| -1 | $-1 / 8$ | 1001 | 1110 | 0111 | 1111 |\n| -2 | $-2 / 8$ | 1010 | 1101 | 0110 | 1110 |\n| -3 | $-3 / 8$ | 1011 | 1100 | 0101 | 1101 |\n| -4 | $-4 / 8$ | 1100 | 1011 | 0100 | 1100 |\n| -5 | $-5 / 8$ | 1101 | 1010 | 0011 | 1011 |\n| -6 | $-6 / 8$ | 1110 | 1001 | 0010 | 1010 |\n| -7 | $-7 / 8$ | 1111 | 1000 | 0001 | 1001 |\n| -8 | $-8 / 8$ |  |  | 0000 | 1000 |\n\n1's Complement\n\nIn the 1's-complement system, negative numbers are represented by inverting all bits of their positive equivalents. For example, 5 is represented as 0101, while -5 is 1010. It is important to note that this system also results in two representations for zero, thus limiting the number of representable values to $2^{\\mathrm{N}}-1$.\n\nOffset Binary\n\nThe offset-binary system is derived by assigning 0000 to the most negative number and incrementing from there, akin to the unipolar case. Essentially, this can be viewed as a unipolar system ranging from 0 to $2^{\\mathrm{N}}$, but with the decimal values shifted by $2^{\\mathrm{N}-1}$, or equivalently, ranging from $-2^{\\mathrm{N}-1}$ to $2^{\\mathrm{N}-1}$. For example, the offset-binary code for 5 in a 4-bit system is 1101, the same as the unipolar code for 13, since $13=5+2^{4-1}$. The offset-binary code for -5 is 0011, corresponding to the unipolar code for 3. This system avoids redundancy, ensuring all sixteen numbers are uniquely represented. Additionally, it benefits from a straightforward relationship with the unipolar system through a simple offset.\n\nThe unipolar D/A converter relationship given in (15.2) can be easily adapted to the signed case with offset-binary representation as follows:\n\n$$\n\\begin{equation*}\n\\mathrm{V}_{\\text {out }}=\\mathrm{V}_{\\text {ref }}\\left(\\mathrm{b}_{1} 2^{-1}+\\mathrm{b}_{2} 2^{-2}+\\cdots+\\mathrm{b}_{\\mathrm{N}} 2^{-\\mathrm{N}}\\right)-0.5 \\mathrm{~V}_{\\text {ref }} \\tag{15.19}\n\\end{equation*}\n$$\n\nHere, the output signal is constrained within $\\pm 0.5 \\mathrm{~V}_{\\text {ref }}$.\n\n2's Complement\n\nThe 2's-complement representation is derived from the offset-binary number by simply inverting the MSB. In a 4-bit example, 5 is represented as 0101 in 2's complement (the same as in sign magnitude and 1's complement), while -5 is 1011. It is worth noting that the 2's-complement code for negative numbers can also be obtained by adding 1 LSB to the equivalent 1's-complement code.\n\nThe primary advantage of 2's-complement coding is that it facilitates straightforward addition of both positive and negative numbers without requiring additional hardware. Subtraction, such as $A-B$, can be easily performed by inverting all bits of $B$ (forming the 1's-complement) and then adding this result to $A$ along with a single LSB to create the 2's-complement equivalent of -B. Adding a single LSB is easily achieved in hardware by setting the carry-in bit high in the overall adder. Thus, subtraction necessitates minimal additional hardware. Furthermore, when summing multiple numbers using 2's-complement codes, no overflow hardware is needed as long as the final result remains within the digital code range, even if intermediate results exceed this range. These advantages make 2's-complement codes the preferred choice for signed number representation in arithmetic operations."
},
{
    "text": "In numerous applications, it is essential to develop a converter capable of handling both positive and negative analog signals, necessitating digital representations for both positive and negative values. Typically, the analog signal is confined within $\\pm 0.5 \\mathrm{~V}_{\\text {ref }}$, ensuring its full-scale range matches that of the unipolar scenario. Common signed digital representations include sign magnitude, 1's complement, offset binary, and 2's complement, as illustrated in Table 15.1 for a 4-bit example. It is evident from Table 15.1 that all positive number representations are identical except in the offset-binary case, where the MSB is inverted.\n\nSign Magnitude\n\nFor negative numbers in the sign-magnitude system, all bits remain the same as their positive counterparts, except the MSB is flipped. For instance, the sign-magnitude representation for 5 is 0101, while for -5, it is 1101. However, this method results in two representations for zero, thereby accommodating only $2^{N}-1$ unique numbers.\n\nTable 15.1 Some 4-bit signed digital representations.\n\n| Number | Normalized <br> number | Sign <br> magnitude | 1's <br> complement | Offset <br> binary | $\\mathbf{2} \\mathbf{s}$ <br> complement |\n| :---: | :---: | :---: | :---: | :---: | :---: |\n| +7 | $+7 / 8$ | 0111 | 0111 | 1111 | 0111 |\n| +6 | $+6 / 8$ | 0110 | 0110 | 1110 | 0110 |\n| +5 | $+5 / 8$ | 0101 | 0101 | 1101 | 0101 |\n| +4 | $+4 / 8$ | 0100 | 0100 | 1100 | 0100 |\n| +3 | $+3 / 8$ | 0011 | 0011 | 1011 | 0011 |\n| +2 | $+2 / 8$ | 0010 | 0010 | 1010 | 0010 |\n| +1 | $+1 / 8$ | 0001 | 0001 | 1001 | 0001 |\n| +0 | +0 | 0000 | 0000 | 1000 | 0000 |\n| $(-0)$ | $(-0)$ | $(1000)$ | $(11111)$ |  |  |\n| -1 | $-1 / 8$ | 1001 | 1110 | 0111 | 1111 |\n| -2 | $-2 / 8$ | 1010 | 1101 | 0110 | 1110 |\n| -3 | $-3 / 8$ | 1011 | 1100 | 0101 | 1101 |\n| -4 | $-4 / 8$ | 1100 | 1011 | 0100 | 1100 |\n| -5 | $-5 / 8$ | 1101 | 1010 | 0011 | 1011 |\n| -6 | $-6 / 8$ | 1110 | 1001 | 0010 | 1010 |\n| -7 | $-7 / 8$ | 1111 | 1000 | 0001 | 1001 |\n| -8 | $-8 / 8$ |  |  | 0000 | 1000 |\n\n1's Complement\n\nIn the 1's-complement system, negative numbers are depicted as the inverse of all bits of their positive equivalents. For example, 5 is represented as 0101, while -5 is 1010. It is important to note that this system also features two representations for zero, thus supporting only $2^{\\mathrm{N}}-1$ distinct numbers.\n\nOffset Binary\n\nThe offset-binary system is derived by assigning 0000 to the most negative number and incrementing from there, akin to the unipolar system. Essentially, this can be viewed as a unipolar system ranging from 0 to $2^{\\mathrm{N}}$, but with decimal values shifted by $2^{\\mathrm{N}-1}$, or equivalently, ranging from $-2^{\\mathrm{N}-1}$ to $2^{\\mathrm{N}-1}$. For example, in a 4-bit scenario, the offset-binary code for 5 matches the unipolar code for 13, which is 1101, since $13=5+2^{4-1}$. Similarly, the offset-binary code for -5 corresponds to the unipolar code for 3, which is 0011. This system avoids redundancy, ensuring all sixteen numbers are uniquely represented. Additionally, it benefits from a straightforward relationship with the unipolar system through a simple offset.\n\nThe unipolar D/A converter relationship given in (15.2) can be easily adapted to the signed case with offset-binary representation as follows:\n\n$$\n\\begin{equation*}\n\\mathrm{V}_{\\text {out }}=\\mathrm{V}_{\\text {ref }}\\left(\\mathrm{b}_{1} 2^{-1}+\\mathrm{b}_{2} 2^{-2}+\\cdots+\\mathrm{b}_{\\mathrm{N}} 2^{-\\mathrm{N}}\\right)-0.5 \\mathrm{~V}_{\\text {ref }} \\tag{15.19}\n\\end{equation*}\n$$\n\nHere, the output signal is constrained within $\\pm 0.5 \\mathrm{~V}_{\\text {ref }}$.\n\n2's Complement\n\nThe 2's-complement representation is derived from the offset-binary number by simply inverting the MSB. In a 4-bit example, 5 is represented as 0101 in 2's complement (similar to sign magnitude and 1's complement), while -5 is 1011. It is worth noting that the 2's-complement code for negative numbers can also be obtained by adding 1 LSB to the corresponding 1's-complement code.\n\nThe primary advantage of 2's-complement coding is that it facilitates straightforward addition of both positive and negative numbers without requiring additional hardware. Moreover, subtraction of two numbers, $A-B$, can be easily executed by inverting all bits of $B$ (forming the 1's-complement) and then adding this result to $A$ along with a single LSB to create the 2's-complement equivalent of -B. Adding a single LSB is easily achieved in hardware by setting the carry-in bit high in the overall adder. Consequently, subtraction necessitates minimal additional hardware. Furthermore, when numerous numbers are summed using 2's-complement codes, no overflow hardware is needed, provided the final result remains within the digital code range (even if intermediate results exceed this range). These attributes make 2's-complement codes the preferred choice for signed number representation in arithmetic operations."
},
{
    "text": "In numerous applications, it is essential to design a converter capable of handling both positive and negative analog signals, necessitating the use of both positive and negative digital representations. Typically, the analog signal is confined within $\\pm 0.5 \\mathrm{~V}_{\\text {ref }}$, ensuring its full-scale range matches that of the unipolar scenario. Common signed digital representations include sign magnitude, 1's complement, offset binary, and 2's complement, as illustrated in Table 15.1 for a 4-bit example. It is noteworthy from Table 15.1 that all positive number representations are identical except in the offset-binary case, where the MSB is inverted.\n\nSign Magnitude\n\nFor negative numbers in the sign-magnitude system, all bits remain the same as their positive counterparts, except the MSB is inverted. For instance, the sign-magnitude representation for 5 is 0101, while for -5, it is 1101. However, this method leads to two representations for the number 0, thereby allowing only $2^{N}-1$ unique numbers to be represented.\n\nTable 15.1 Some 4-bit signed digital representations.\n\n| Number | Normalized <br> number | Sign <br> magnitude | 1's <br> complement | Offset <br> binary | $\\mathbf{2} \\mathbf{s}$ <br> complement |\n| :---: | :---: | :---: | :---: | :---: | :---: |\n| +7 | $+7 / 8$ | 0111 | 0111 | 1111 | 0111 |\n| +6 | $+6 / 8$ | 0110 | 0110 | 1110 | 0110 |\n| +5 | $+5 / 8$ | 0101 | 0101 | 1101 | 0101 |\n| +4 | $+4 / 8$ | 0100 | 0100 | 1100 | 0100 |\n| +3 | $+3 / 8$ | 0011 | 0011 | 1011 | 0011 |\n| +2 | $+2 / 8$ | 0010 | 0010 | 1010 | 0010 |\n| +1 | $+1 / 8$ | 0001 | 0001 | 1001 | 0001 |\n| +0 | +0 | 0000 | 0000 | 1000 | 0000 |\n| $(-0)$ | $(-0)$ | $(1000)$ | $(11111)$ |  |  |\n| -1 | $-1 / 8$ | 1001 | 1110 | 0111 | 1111 |\n| -2 | $-2 / 8$ | 1010 | 1101 | 0110 | 1110 |\n| -3 | $-3 / 8$ | 1011 | 1100 | 0101 | 1101 |\n| -4 | $-4 / 8$ | 1100 | 1011 | 0100 | 1100 |\n| -5 | $-5 / 8$ | 1101 | 1010 | 0011 | 1011 |\n| -6 | $-6 / 8$ | 1110 | 1001 | 0010 | 1010 |\n| -7 | $-7 / 8$ | 1111 | 1000 | 0001 | 1001 |\n| -8 | $-8 / 8$ |  |  | 0000 | 1000 |\n\n1's Complement\n\nIn the 1's-complement representation, negative numbers are depicted as the bitwise complement of their positive equivalents. For example, 5 is represented as 0101, while -5 is 1010. It is important to note that the 1's-complement system also exhibits two representations for 0, thus accommodating only $2^{\\mathrm{N}}-1$ distinct numbers.\n\nOffset Binary\n\nThe offset-binary representation is derived by assigning 0000 to the most negative number and incrementing from there, akin to the unipolar case. Essentially, this system can be viewed as a unipolar representation ranging from 0 to $2^{\\mathrm{N}}$, but with the decimal values offset by $2^{\\mathrm{N}-1}$, or equivalently, ranging from $-2^{\\mathrm{N}-1}$ to $2^{\\mathrm{N}-1}$. For example, in a 4-bit scenario, the offset-binary code for 5 is identical to the unipolar code for 13, which is 1101, since $13=5+2^{4-1}$. The offset-binary code for -5 matches the unipolar code for 3, which is 0011. Notably, the offset-binary code avoids redundancy, ensuring all sixteen numbers are uniquely represented. Additionally, this code benefits from its close relationship to the unipolar system through a simple offset.\n\nFinally, the unipolar relationship for a D/A converter, as given in (15.2), can be readily adapted to the signed case with offset-binary representation as follows:\n\n$$\n\\begin{equation*}\n\\mathrm{V}_{\\text {out }}=\\mathrm{V}_{\\text {ref }}\\left(\\mathrm{b}_{1} 2^{-1}+\\mathrm{b}_{2} 2^{-2}+\\cdots+\\mathrm{b}_{\\mathrm{N}} 2^{-\\mathrm{N}}\\right)-0.5 \\mathrm{~V}_{\\text {ref }} \\tag{15.19}\n\\end{equation*}\n$$\n\nHere, it is observed that the output signal is now constrained within $\\pm 0.5 \\mathrm{~V}_{\\text {ref }}$.\n\n2's Complement\n\nLastly, the 2's-complement representation is derived from the offset-binary number by simply inverting the MSB. In a 4-bit example, 5 is represented as 0101 in 2's complement (the same as in sign magnitude and 1's complement), while -5 is 1011. It is worth noting that the 2's-complement code for negative numbers can also be obtained by adding 1 LSB to the corresponding 1's-complement code.\n\nThe primary advantage of 2's-complement coding lies in its ability to perform addition of both positive and negative numbers using straightforward addition, eliminating the need for additional hardware. Moreover, subtraction of two numbers, $A-B$, can be easily executed by inverting all bits of $B$ (forming the 1's-complement equivalent) and then adding this result to $A$ along with a single LSB to create the 2's-complement equivalent of -B. Adding a single LSB is effortlessly achieved in hardware by setting the carry-in bit high in the overall adder. Consequently, subtraction requires minimal additional hardware. Furthermore, when numerous numbers are summed using 2's-complement codes, no overflow hardware is needed, provided the final result remains within the digital code range (even if intermediate results exceed this range). These attributes make 2's-complement codes the preferred representation for signed numbers in arithmetic operations."
},
{
    "text": "In numerous applications, it is essential to design a converter capable of handling both positive and negative analog signals, necessitating digital representations for both positive and negative values. Typically, the analog signal is confined within $\\pm 0.5 \\mathrm{~V}_{\\text {ref }}$, ensuring its full-scale range matches that of the unipolar scenario. Common signed digital representations include sign magnitude, 1's complement, offset binary, and 2's complement, as illustrated in Table 15.1 for a 4-bit example. From Table 15.1, it is evident that all positive number representations are identical except in the offset-binary case, where the MSB is inverted.\n\nSign Magnitude\n\nFor negative numbers in the sign-magnitude system, all bits remain the same as their positive counterparts, except the MSB is inverted. For instance, the sign-magnitude representation for 5 is 0101, while for -5, it is 1101. However, this method results in two representations for zero, thereby accommodating only $2^{N}-1$ unique numbers.\n\nTable 15.1 Some 4-bit signed digital representations.\n\n| Number | Normalized <br> number | Sign <br> magnitude | 1's <br> complement | Offset <br> binary | $\\mathbf{2} \\mathbf{s}$ <br> complement |\n| :---: | :---: | :---: | :---: | :---: | :---: |\n| +7 | $+7 / 8$ | 0111 | 0111 | 1111 | 0111 |\n| +6 | $+6 / 8$ | 0110 | 0110 | 1110 | 0110 |\n| +5 | $+5 / 8$ | 0101 | 0101 | 1101 | 0101 |\n| +4 | $+4 / 8$ | 0100 | 0100 | 1100 | 0100 |\n| +3 | $+3 / 8$ | 0011 | 0011 | 1011 | 0011 |\n| +2 | $+2 / 8$ | 0010 | 0010 | 1010 | 0010 |\n| +1 | $+1 / 8$ | 0001 | 0001 | 1001 | 0001 |\n| +0 | +0 | 0000 | 0000 | 1000 | 0000 |\n| $(-0)$ | $(-0)$ | $(1000)$ | $(11111)$ |  |  |\n| -1 | $-1 / 8$ | 1001 | 1110 | 0111 | 1111 |\n| -2 | $-2 / 8$ | 1010 | 1101 | 0110 | 1110 |\n| -3 | $-3 / 8$ | 1011 | 1100 | 0101 | 1101 |\n| -4 | $-4 / 8$ | 1100 | 1011 | 0100 | 1100 |\n| -5 | $-5 / 8$ | 1101 | 1010 | 0011 | 1011 |\n| -6 | $-6 / 8$ | 1110 | 1001 | 0010 | 1010 |\n| -7 | $-7 / 8$ | 1111 | 1000 | 0001 | 1001 |\n| -8 | $-8 / 8$ |  |  | 0000 | 1000 |\n\n1's Complement\n\nIn the 1's-complement representation, negative numbers are depicted as the bitwise inverse of their positive equivalents. For example, 5 is represented as 0101, while -5 is 1010. It is important to note that this system also has two representations for zero, thus supporting only $2^{\\mathrm{N}}-1$ distinct numbers.\n\nOffset Binary\n\nThe offset-binary representation is derived by assigning 0000 to the most negative number and incrementing from there, akin to the unipolar case. Essentially, this system can be viewed as a unipolar representation ranging from 0 to $2^{\\mathrm{N}}$, but with the decimal values shifted by $2^{\\mathrm{N}-1}$, or equivalently, ranging from $-2^{\\mathrm{N}-1}$ to $2^{\\mathrm{N}-1}$. For example, in a 4-bit scenario, the offset-binary code for 5 is the same as the unipolar code for 13, which is 1101, since $13=5+2^{4-1}$. The offset-binary code for -5 corresponds to the unipolar code for 3, which is 0011. This system avoids redundancy, ensuring all sixteen numbers are uniquely represented. Additionally, it benefits from a straightforward relationship with the unipolar case through a simple offset.\n\nThe unipolar relationship for a D/A converter, as given in (15.2), can be easily adapted to the signed case with offset-binary representation as follows:\n\n$$\n\\begin{equation*}\n\\mathrm{V}_{\\text {out }}=\\mathrm{V}_{\\text {ref }}\\left(\\mathrm{b}_{1} 2^{-1}+\\mathrm{b}_{2} 2^{-2}+\\cdots+\\mathrm{b}_{\\mathrm{N}} 2^{-\\mathrm{N}}\\right)-0.5 \\mathrm{~V}_{\\text {ref }} \\tag{15.19}\n\\end{equation*}\n$$\n\nHere, the output signal is constrained within $\\pm 0.5 \\mathrm{~V}_{\\text {ref }}$.\n\n2's Complement\n\nThe 2's-complement representation is derived from the offset-binary number by simply inverting the MSB. For a 4-bit example, 5 is represented as 0101 in 2's complement (the same as in sign magnitude and 1's complement), while -5 is 1011. It is worth noting that the 2's-complement code for negative numbers can also be obtained by adding 1 LSB to the corresponding 1's-complement code.\n\nThe primary advantage of 2's-complement coding is that it facilitates straightforward addition of both positive and negative numbers without requiring additional hardware. Moreover, subtraction of two numbers, $A-B$, can be easily executed by inverting all bits of $B$ (forming the 1's-complement) and then adding this result to $A$ along with a single LSB to create the 2's-complement equivalent of -B. Adding a single LSB is easily achieved in hardware by setting the carry-in bit high in the overall adder. Consequently, subtraction necessitates minimal additional hardware. Furthermore, when summing multiple numbers using 2's-complement codes, no overflow hardware is needed as long as the final result remains within the digital code range (even if intermediate results exceed this range). These advantages make 2's-complement codes the preferred choice for representing signed numbers in arithmetic operations."
},
{
    "text": "In numerous applications, it is essential to design a converter capable of handling both positive and negative analog signals, necessitating digital representations for both positive and negative values. Typically, the analog signal is confined within $\\pm 0.5 \\mathrm{~V}_{\\text {ref }}$, ensuring its full-scale range matches that of the unipolar scenario. Common signed digital representations include sign magnitude, 1's complement, offset binary, and 2's complement, as illustrated in Table 15.1 for a 4-bit example. It is notable from Table 15.1 that all positive number representations are identical except in the offset-binary case, where the MSB is inverted.\n\nSign Magnitude\n\nFor negative numbers in the sign-magnitude system, all bits mirror the positive number representation, except the MSB is flipped. For instance, the sign-magnitude representation of 5 is 0101, while for -5, it is 1101. However, this method results in two representations for zero, thereby limiting the number of represented values to $2^{N}-1$.\n\nTable 15.1 Some 4-bit signed digital representations.\n\n| Number | Normalized <br> number | Sign <br> magnitude | 1's <br> complement | Offset <br> binary | $\\mathbf{2} \\mathbf{s}$ <br> complement |\n| :---: | :---: | :---: | :---: | :---: | :---: |\n| +7 | $+7 / 8$ | 0111 | 0111 | 1111 | 0111 |\n| +6 | $+6 / 8$ | 0110 | 0110 | 1110 | 0110 |\n| +5 | $+5 / 8$ | 0101 | 0101 | 1101 | 0101 |\n| +4 | $+4 / 8$ | 0100 | 0100 | 1100 | 0100 |\n| +3 | $+3 / 8$ | 0011 | 0011 | 1011 | 0011 |\n| +2 | $+2 / 8$ | 0010 | 0010 | 1010 | 0010 |\n| +1 | $+1 / 8$ | 0001 | 0001 | 1001 | 0001 |\n| +0 | +0 | 0000 | 0000 | 1000 | 0000 |\n| $(-0)$ | $(-0)$ | $(1000)$ | $(11111)$ |  |  |\n| -1 | $-1 / 8$ | 1001 | 1110 | 0111 | 1111 |\n| -2 | $-2 / 8$ | 1010 | 1101 | 0110 | 1110 |\n| -3 | $-3 / 8$ | 1011 | 1100 | 0101 | 1101 |\n| -4 | $-4 / 8$ | 1100 | 1011 | 0100 | 1100 |\n| -5 | $-5 / 8$ | 1101 | 1010 | 0011 | 1011 |\n| -6 | $-6 / 8$ | 1110 | 1001 | 0010 | 1010 |\n| -7 | $-7 / 8$ | 1111 | 1000 | 0001 | 1001 |\n| -8 | $-8 / 8$ |  |  | 0000 | 1000 |\n\n1's Complement\n\nIn the 1's-complement representation, negative numbers are depicted as the bitwise inverse of their positive counterparts. For example, 5 is represented as 0101, while -5 is 1010. It is important to note that this method also results in two representations for zero, thus limiting the count to $2^{\\mathrm{N}}-1$.\n\nOffset Binary\n\nThe offset-binary representation is derived by assigning 0000 to the most negative value and incrementing from there, akin to the unipolar case. Essentially, this system can be viewed as a unipolar representation ranging from 0 to $2^{\\mathrm{N}}$, but with the decimal values shifted by $2^{\\mathrm{N}-1}$, or equivalently, ranging from $-2^{\\mathrm{N}-1}$ to $2^{\\mathrm{N}-1}$. For example, in a 4-bit scenario, the offset-binary code for 5 is the same as the unipolar code for 13, which is 1101, since $13=5+2^{4-1}$. The offset-binary code for -5 corresponds to the unipolar code for 3, which is 0011. This method avoids redundancy, ensuring all sixteen numbers are uniquely represented. Additionally, it offers the advantage of a straightforward relationship with the unipolar case through a simple offset.\n\nThe unipolar relationship for a D/A converter, as given in (15.2), can be easily adapted to the signed case with offset-binary representation as follows:\n\n$$\n\\begin{equation*}\n\\mathrm{V}_{\\text {out }}=\\mathrm{V}_{\\text {ref }}\\left(\\mathrm{b}_{1} 2^{-1}+\\mathrm{b}_{2} 2^{-2}+\\cdots+\\mathrm{b}_{\\mathrm{N}} 2^{-\\mathrm{N}}\\right)-0.5 \\mathrm{~V}_{\\text {ref }} \\tag{15.19}\n\\end{equation*}\n$$\n\nHere, the output signal is constrained within $\\pm 0.5 \\mathrm{~V}_{\\text {ref }}$.\n\n2's Complement\n\nThe 2's-complement representation is derived from the offset-binary number by simply inverting the MSB. In a 4-bit example, 5 is represented as 0101 in 2's complement (the same as in sign magnitude and 1's complement), while -5 is 1011. It is worth mentioning that the 2's-complement code for negative numbers can also be obtained by adding 1 LSB to the corresponding 1's-complement code.\n\nThe primary advantage of 2's-complement coding is that it facilitates straightforward addition of both positive and negative numbers without requiring additional hardware. Moreover, subtraction of two numbers, $A-B$, can be easily executed by inverting all bits of $B$ (forming the 1's-complement) and then adding this result to $A$ along with a single LSB to create the 2's-complement equivalent of -B. Adding a single LSB is easily achieved in hardware by setting the carry-in bit high in the overall adder. Consequently, subtraction demands minimal additional hardware. Furthermore, when numerous numbers are summed using 2's-complement codes, no overflow hardware is needed, provided the final result remains within the digital code range (even if intermediate results exceed this range). These attributes make 2's-complement codes the preferred choice for representing signed numbers in arithmetic operations."
},
{
    "text": "In numerous applications, it is essential to design a converter capable of handling both positive and negative analog signals, necessitating digital representations for both polarities. Typically, the analog signal is confined within $\\pm 0.5 \\mathrm{~V}_{\\text {ref }}$, ensuring its full-scale range matches that of the unipolar scenario. Common signed digital formats include sign magnitude, 1's complement, offset binary, and 2's complement, as illustrated in Table 15.1 for a 4-bit example. It is evident from Table 15.1 that all positive number representations are identical except in the offset-binary case, where the MSB is inverted.\n\nSign Magnitude\n\nFor negative numbers in the sign-magnitude format, all bits remain the same as their positive counterparts, except the MSB is inverted. For instance, the sign-magnitude representation for 5 is 0101, while for -5, it is 1101. However, this method results in two representations for zero, thereby allowing only $2^{N}-1$ unique numbers.\n\nTable 15.1 Some 4-bit signed digital representations.\n\n| Number | Normalized <br> number | Sign <br> magnitude | 1's <br> complement | Offset <br> binary | $\\mathbf{2} \\mathbf{s}$ <br> complement |\n| :---: | :---: | :---: | :---: | :---: | :---: |\n| +7 | $+7 / 8$ | 0111 | 0111 | 1111 | 0111 |\n| +6 | $+6 / 8$ | 0110 | 0110 | 1110 | 0110 |\n| +5 | $+5 / 8$ | 0101 | 0101 | 1101 | 0101 |\n| +4 | $+4 / 8$ | 0100 | 0100 | 1100 | 0100 |\n| +3 | $+3 / 8$ | 0011 | 0011 | 1011 | 0011 |\n| +2 | $+2 / 8$ | 0010 | 0010 | 1010 | 0010 |\n| +1 | $+1 / 8$ | 0001 | 0001 | 1001 | 0001 |\n| +0 | +0 | 0000 | 0000 | 1000 | 0000 |\n| $(-0)$ | $(-0)$ | $(1000)$ | $(11111)$ |  |  |\n| -1 | $-1 / 8$ | 1001 | 1110 | 0111 | 1111 |\n| -2 | $-2 / 8$ | 1010 | 1101 | 0110 | 1110 |\n| -3 | $-3 / 8$ | 1011 | 1100 | 0101 | 1101 |\n| -4 | $-4 / 8$ | 1100 | 1011 | 0100 | 1100 |\n| -5 | $-5 / 8$ | 1101 | 1010 | 0011 | 1011 |\n| -6 | $-6 / 8$ | 1110 | 1001 | 0010 | 1010 |\n| -7 | $-7 / 8$ | 1111 | 1000 | 0001 | 1001 |\n| -8 | $-8 / 8$ |  |  | 0000 | 1000 |\n\n1's Complement\n\nIn the 1's-complement system, negative numbers are depicted as the bitwise inverse of their positive equivalents. For example, 5 is represented as 0101, while -5 is 1010. It is important to note that this system also yields two representations for zero, thus accommodating only $2^{\\mathrm{N}}-1$ distinct numbers.\n\nOffset Binary\n\nThe offset-binary scheme is derived by assigning 0000 to the most negative value and incrementing from there, akin to the unipolar approach. Essentially, this system can be viewed as a unipolar representation ranging from 0 to $2^{\\mathrm{N}}$, but with the decimal values shifted by $2^{\\mathrm{N}-1}$, or equivalently, ranging from $-2^{\\mathrm{N}-1}$ to $2^{\\mathrm{N}-1}$. For example, in a 4-bit scenario, the offset-binary code for 5 is identical to the unipolar code for 13, which is 1101, since $13=5+2^{4-1}$. The offset-binary code for -5 corresponds to the unipolar code for 3, which is 0011. Notably, the offset-binary system avoids redundancy, ensuring all sixteen numbers are uniquely represented. Additionally, this system benefits from its close relationship with the unipolar case through a simple offset.\n\nThe unipolar relationship for a D/A converter, as given in (15.2), can be readily adapted to the signed case using offset-binary representation as follows:\n\n$$\n\\begin{equation*}\n\\mathrm{V}_{\\text {out }}=\\mathrm{V}_{\\text {ref }}\\left(\\mathrm{b}_{1} 2^{-1}+\\mathrm{b}_{2} 2^{-2}+\\cdots+\\mathrm{b}_{\\mathrm{N}} 2^{-\\mathrm{N}}\\right)-0.5 \\mathrm{~V}_{\\text {ref }} \\tag{15.19}\n\\end{equation*}\n$$\n\nHere, the output signal is constrained within $\\pm 0.5 \\mathrm{~V}_{\\text {ref }}$.\n\n2's Complement\n\nLastly, the 2's-complement representation is derived from the offset-binary number by simply inverting the MSB. In a 4-bit example, 5 is represented as 0101 in 2's complement (the same as in sign magnitude and 1's complement), while -5 is 1011. It is worth noting that the 2's-complement code for negative numbers can also be obtained by adding 1 LSB to the corresponding 1's-complement code.\n\nThe primary advantage of 2's-complement coding is that it facilitates straightforward addition of both positive and negative numbers without requiring additional hardware. Moreover, subtraction of two numbers, $A-B$, can be easily executed by inverting all bits of $B$ (forming the 1's-complement) and then adding this result to $A$ along with a single LSB to create the 2's-complement equivalent of -B. Adding a single LSB is easily achieved in hardware by setting the carry-in bit high in the overall adder. Consequently, subtraction necessitates minimal additional hardware. Furthermore, when summing multiple numbers using 2's-complement codes, no overflow hardware is needed as long as the final result remains within the digital code range (even if intermediate results exceed this range). These attributes make 2's-complement codes the preferred choice for representing signed numbers in arithmetic operations."
},
{
    "text": "In numerous applications, it is essential to design a converter capable of handling both positive and negative analog signals, necessitating digital representations for both polarities. Typically, the analog signal is confined within $\\pm 0.5 \\mathrm{~V}_{\\text {ref }}$, ensuring its full-scale range matches that of the unipolar scenario. Common signed digital formats include sign magnitude, 1's complement, offset binary, and 2's complement, as illustrated in Table 15.1 for a 4-bit example. It is evident from Table 15.1 that all positive number representations are identical except in the offset-binary case, where the MSB is inverted.\n\nSign Magnitude\n\nFor negative numbers in the sign-magnitude system, all bits remain the same as their positive counterparts, except the MSB is flipped. For instance, the sign-magnitude representation of 5 is 0101, while -5 is represented as 1101. However, this method leads to two representations for zero, thereby accommodating only $2^{N}-1$ unique numbers.\n\nTable 15.1 Some 4-bit signed digital representations.\n\n| Number | Normalized <br> number | Sign <br> magnitude | 1's <br> complement | Offset <br> binary | $\\mathbf{2} \\mathbf{s}$ <br> complement |\n| :---: | :---: | :---: | :---: | :---: | :---: |\n| +7 | $+7 / 8$ | 0111 | 0111 | 1111 | 0111 |\n| +6 | $+6 / 8$ | 0110 | 0110 | 1110 | 0110 |\n| +5 | $+5 / 8$ | 0101 | 0101 | 1101 | 0101 |\n| +4 | $+4 / 8$ | 0100 | 0100 | 1100 | 0100 |\n| +3 | $+3 / 8$ | 0011 | 0011 | 1011 | 0011 |\n| +2 | $+2 / 8$ | 0010 | 0010 | 1010 | 0010 |\n| +1 | $+1 / 8$ | 0001 | 0001 | 1001 | 0001 |\n| +0 | +0 | 0000 | 0000 | 1000 | 0000 |\n| $(-0)$ | $(-0)$ | $(1000)$ | $(11111)$ |  |  |\n| -1 | $-1 / 8$ | 1001 | 1110 | 0111 | 1111 |\n| -2 | $-2 / 8$ | 1010 | 1101 | 0110 | 1110 |\n| -3 | $-3 / 8$ | 1011 | 1100 | 0101 | 1101 |\n| -4 | $-4 / 8$ | 1100 | 1011 | 0100 | 1100 |\n| -5 | $-5 / 8$ | 1101 | 1010 | 0011 | 1011 |\n| -6 | $-6 / 8$ | 1110 | 1001 | 0010 | 1010 |\n| -7 | $-7 / 8$ | 1111 | 1000 | 0001 | 1001 |\n| -8 | $-8 / 8$ |  |  | 0000 | 1000 |\n\n1's Complement\n\nIn the 1's-complement system, negative numbers are depicted as the bitwise inverse of their positive equivalents. For example, 5 is represented as 0101, while -5 is 1010. It is important to note that this system also has dual representations for zero, thus representing only $2^{\\mathrm{N}}-1$ distinct numbers.\n\nOffset Binary\n\nThe offset-binary scheme is derived by assigning 0000 to the most negative value and incrementing from there, akin to the unipolar method. Essentially, this can be viewed as a unipolar system ranging from 0 to $2^{\\mathrm{N}}$, but with decimal values shifted by $2^{\\mathrm{N}-1}$, or equivalently, ranging from $-2^{\\mathrm{N}-1}$ to $2^{\\mathrm{N}-1}$. For example, in a 4-bit scenario, the offset-binary code for 5 is 1101, identical to the unipolar code for 13, since $13=5+2^{4-1}$. The offset-binary code for -5 corresponds to the unipolar code for 3, which is 0011. This system avoids redundancy, ensuring all sixteen numbers are uniquely represented. Additionally, it benefits from a straightforward relationship with the unipolar system through a simple offset.\n\nThe unipolar D/A converter relationship given in (15.2) can be easily adapted to the signed case using offset-binary representation as follows:\n\n$$\n\\begin{equation*}\n\\mathrm{V}_{\\text {out }}=\\mathrm{V}_{\\text {ref }}\\left(\\mathrm{b}_{1} 2^{-1}+\\mathrm{b}_{2} 2^{-2}+\\cdots+\\mathrm{b}_{\\mathrm{N}} 2^{-\\mathrm{N}}\\right)-0.5 \\mathrm{~V}_{\\text {ref }} \\tag{15.19}\n\\end{equation*}\n$$\n\nHere, the output signal is constrained within $\\pm 0.5 \\mathrm{~V}_{\\text {ref }}$.\n\n2's Complement\n\nThe 2's-complement representation is derived from the offset-binary number by simply inverting the MSB. In a 4-bit example, 5 is 0101 in 2's complement (matching sign magnitude and 1's complement), while -5 is 1011. It is worth noting that the 2's-complement code for negative numbers can also be achieved by adding 1 LSB to the corresponding 1's-complement code.\n\nThe primary advantage of 2's-complement coding lies in its ability to perform addition of both positive and negative numbers using standard addition, requiring no additional hardware. Furthermore, subtraction of two numbers, $A-B$, can be easily executed by inverting all bits of $B$ (forming the 1's-complement) and then adding this result to $A$ along with a single LSB to create the 2's-complement equivalent of -B. Adding a single LSB is straightforward in hardware by setting the carry-in bit high in the adder. Consequently, subtraction necessitates minimal extra hardware. Additionally, when summing multiple numbers using 2's-complement codes, no overflow hardware is needed as long as the final result remains within the digital code range, even if intermediate results exceed this range. These attributes make 2's-complement codes the preferred choice for signed number representation in arithmetic operations."
},
{
    "text": "In numerous applications, it is essential to design a converter capable of handling both positive and negative analog signals, necessitating digital representations for both positive and negative values. Typically, the analog signal is confined within $\\pm 0.5 \\mathrm{~V}_{\\text {ref }}$, ensuring its full-scale range matches that of the unipolar scenario. Common signed digital formats include sign magnitude, 1's complement, offset binary, and 2's complement, as illustrated in Table 15.1 for a 4-bit example. From Table 15.1, it is evident that all positive number representations are identical except in the offset-binary case, where the MSB is inverted.\n\nSign Magnitude\n\nFor negative numbers in the sign-magnitude format, all bits remain the same as their positive counterparts, except the MSB is inverted. For instance, the sign-magnitude representation of 5 is 0101, while for -5, it is 1101. However, this method results in two representations for zero, thus only $2^{N}-1$ numbers are effectively represented.\n\nTable 15.1 Some 4-bit signed digital representations.\n\n| Number | Normalized <br> number | Sign <br> magnitude | 1's <br> complement | Offset <br> binary | $\\mathbf{2} \\mathbf{s}$ <br> complement |\n| :---: | :---: | :---: | :---: | :---: | :---: |\n| +7 | $+7 / 8$ | 0111 | 0111 | 1111 | 0111 |\n| +6 | $+6 / 8$ | 0110 | 0110 | 1110 | 0110 |\n| +5 | $+5 / 8$ | 0101 | 0101 | 1101 | 0101 |\n| +4 | $+4 / 8$ | 0100 | 0100 | 1100 | 0100 |\n| +3 | $+3 / 8$ | 0011 | 0011 | 1011 | 0011 |\n| +2 | $+2 / 8$ | 0010 | 0010 | 1010 | 0010 |\n| +1 | $+1 / 8$ | 0001 | 0001 | 1001 | 0001 |\n| +0 | +0 | 0000 | 0000 | 1000 | 0000 |\n| $(-0)$ | $(-0)$ | $(1000)$ | $(11111)$ |  |  |\n| -1 | $-1 / 8$ | 1001 | 1110 | 0111 | 1111 |\n| -2 | $-2 / 8$ | 1010 | 1101 | 0110 | 1110 |\n| -3 | $-3 / 8$ | 1011 | 1100 | 0101 | 1101 |\n| -4 | $-4 / 8$ | 1100 | 1011 | 0100 | 1100 |\n| -5 | $-5 / 8$ | 1101 | 1010 | 0011 | 1011 |\n| -6 | $-6 / 8$ | 1110 | 1001 | 0010 | 1010 |\n| -7 | $-7 / 8$ | 1111 | 1000 | 0001 | 1001 |\n| -8 | $-8 / 8$ |  |  | 0000 | 1000 |\n\n1's Complement\n\nIn the 1's-complement system, negative numbers are depicted as the inverse of all bits of their positive equivalents. For example, 5 is represented as 0101, while -5 is 1010. It is important to note that this system also yields two representations for zero, thus only $2^{\\mathrm{N}}-1$ numbers are represented.\n\nOffset Binary\n\nThe offset-binary format is derived by assigning 0000 to the most negative number and incrementing from there, similar to the unipolar case. Essentially, this system can be viewed as a unipolar representation ranging from 0 to $2^{\\mathrm{N}}$, but with the decimal values shifted by $2^{\\mathrm{N}-1}$, or equivalently, ranging from $-2^{\\mathrm{N}-1}$ to $2^{\\mathrm{N}-1}$. For example, in a 4-bit scenario, the offset-binary code for 5 is the same as the unipolar code for 13, which is 1101, since $13=5+2^{4-1}$. The offset-binary code for -5 corresponds to the unipolar code for 3, which is 0011. Notably, the offset-binary system avoids redundancy, ensuring all sixteen numbers are uniquely represented. Additionally, this system benefits from its close relationship to the unipolar case through a simple offset.\n\nThe unipolar relationship for a D/A converter, as given in (15.2), can be readily adapted to the signed case using offset-binary representation as follows:\n\n$$\n\\begin{equation*}\n\\mathrm{V}_{\\text {out }}=\\mathrm{V}_{\\text {ref }}\\left(\\mathrm{b}_{1} 2^{-1}+\\mathrm{b}_{2} 2^{-2}+\\cdots+\\mathrm{b}_{\\mathrm{N}} 2^{-\\mathrm{N}}\\right)-0.5 \\mathrm{~V}_{\\text {ref }} \\tag{15.19}\n\\end{equation*}\n$$\n\nHere, the output signal is constrained within $\\pm 0.5 \\mathrm{~V}_{\\text {ref }}$.\n\n2's Complement\n\nThe 2's-complement format is derived from the offset-binary number by simply inverting the MSB. In a 4-bit example, 5 is represented as 0101 in 2's complement (identical to sign magnitude and 1's complement), while -5 is 1011. It is worth noting that the 2's-complement code for negative numbers can also be obtained by adding 1 LSB to the corresponding 1's-complement code.\n\nThe primary advantage of 2's-complement coding lies in its ability to perform addition of both positive and negative numbers using straightforward addition, without requiring additional hardware. Furthermore, subtraction of two numbers, $A-B$, can be easily executed by inverting all bits of $B$ (forming the 1's-complement equivalent) and then adding this result to $A$ while simultaneously adding a single LSB to create the 2's-complement equivalent of -B. Adding a single LSB is easily achieved in hardware by setting the carry-in bit high in the overall adder. Consequently, subtraction necessitates only minimal additional hardware. Moreover, when numerous numbers are summed using 2's-complement codes, no overflow hardware is needed, provided the final result remains within the digital code range (even if intermediate results exceed this range). These attributes make 2's-complement codes the preferred representation for signed numbers in arithmetic operations."
},
{
    "text": "In numerous applications, it is essential to design a converter capable of handling both positive and negative analog signals, necessitating digital representations for both positive and negative values. Typically, the analog signal is confined within $\\pm 0.5 \\mathrm{~V}_{\\text {ref }}$, ensuring its full-scale range matches that of the unipolar scenario. Common signed digital representations include sign magnitude, 1's complement, offset binary, and 2's complement, as illustrated in Table 15.1 for a 4-bit example. It is notable from Table 15.1 that all positive number representations are identical except in the offset-binary case, where the MSB is inverted.\n\nSign Magnitude\n\nFor negative numbers in the sign-magnitude system, all bits remain the same as their positive counterparts, except the MSB is inverted. For instance, the sign-magnitude representation for 5 is 0101, while for -5, it is 1101. However, this method results in two representations for zero, thereby limiting the number of representable values to $2^{N}-1$.\n\nTable 15.1 Some 4-bit signed digital representations.\n\n| Number | Normalized <br> number | Sign <br> magnitude | 1's <br> complement | Offset <br> binary | $\\mathbf{2} \\mathbf{s}$ <br> complement |\n| :---: | :---: | :---: | :---: | :---: | :---: |\n| +7 | $+7 / 8$ | 0111 | 0111 | 1111 | 0111 |\n| +6 | $+6 / 8$ | 0110 | 0110 | 1110 | 0110 |\n| +5 | $+5 / 8$ | 0101 | 0101 | 1101 | 0101 |\n| +4 | $+4 / 8$ | 0100 | 0100 | 1100 | 0100 |\n| +3 | $+3 / 8$ | 0011 | 0011 | 1011 | 0011 |\n| +2 | $+2 / 8$ | 0010 | 0010 | 1010 | 0010 |\n| +1 | $+1 / 8$ | 0001 | 0001 | 1001 | 0001 |\n| +0 | +0 | 0000 | 0000 | 1000 | 0000 |\n| $(-0)$ | $(-0)$ | $(1000)$ | $(11111)$ |  |  |\n| -1 | $-1 / 8$ | 1001 | 1110 | 0111 | 1111 |\n| -2 | $-2 / 8$ | 1010 | 1101 | 0110 | 1110 |\n| -3 | $-3 / 8$ | 1011 | 1100 | 0101 | 1101 |\n| -4 | $-4 / 8$ | 1100 | 1011 | 0100 | 1100 |\n| -5 | $-5 / 8$ | 1101 | 1010 | 0011 | 1011 |\n| -6 | $-6 / 8$ | 1110 | 1001 | 0010 | 1010 |\n| -7 | $-7 / 8$ | 1111 | 1000 | 0001 | 1001 |\n| -8 | $-8 / 8$ |  |  | 0000 | 1000 |\n\n1's Complement\n\nIn the 1's-complement representation, negative numbers are depicted as the bitwise complement of their positive equivalents. For example, 5 is represented as 0101, while -5 is 1010. It is important to note that this system also results in two representations for zero, thus limiting the number of representable values to $2^{\\mathrm{N}}-1$.\n\nOffset Binary\n\nThe offset-binary representation is derived by assigning 0000 to the most negative number and incrementing from there, similar to the unipolar case. Essentially, this system can be viewed as a unipolar representation ranging from 0 to $2^{\\mathrm{N}}$, but with the decimal values offset by $2^{\\mathrm{N}-1}$, or equivalently, ranging from $-2^{\\mathrm{N}-1}$ to $2^{\\mathrm{N}-1}$. For instance, the offset-binary code for 5 in a 4-bit scenario is the same as the unipolar code for 13, which is 1101, since $13=5+2^{4-1}$. The offset-binary code for -5 corresponds to the unipolar code for 3, which is 0011. This system avoids redundancy, ensuring all sixteen numbers are uniquely represented. Additionally, it benefits from a close relationship with the unipolar system through a simple offset.\n\nLastly, the unipolar relationship for a D/A converter given in (15.2) can be readily adapted to the signed case using offset-binary representation as\n\n$$\n\\begin{equation*}\n\\mathrm{V}_{\\text {out }}=\\mathrm{V}_{\\text {ref }}\\left(\\mathrm{b}_{1} 2^{-1}+\\mathrm{b}_{2} 2^{-2}+\\cdots+\\mathrm{b}_{\\mathrm{N}} 2^{-\\mathrm{N}}\\right)-0.5 \\mathrm{~V}_{\\text {ref }} \\tag{15.19}\n\\end{equation*}\n$$\n\nHere, the output signal is constrained within $\\pm 0.5 \\mathrm{~V}_{\\text {ref }}$.\n\n2's Complement\n\nThe 2's-complement representation is derived from the offset-binary number by simply inverting the MSB. In a 4-bit example, 5 is represented as 0101 in 2's complement (the same as in sign magnitude and 1's complement), while -5 is 1011. It is worth mentioning that the 2's-complement code for negative numbers can also be obtained by adding 1 LSB to the equivalent 1's-complement code.\n\nThe primary advantage of 2's-complement coding is that it facilitates straightforward addition of both positive and negative numbers without requiring additional hardware. Furthermore, subtraction of two numbers, $A-B$, can be easily executed by inverting all bits of $B$ (forming the 1's-complement equivalent) and then adding this result to $A$ along with a single LSB to create the 2's-complement equivalent of -B. Adding a single LSB is easily achieved in hardware by setting the carry-in bit high in the overall adder. Consequently, subtraction necessitates only minimal additional hardware. Moreover, when numerous numbers are added using 2's-complement codes, no overflow hardware is needed as long as the final result remains within the digital code range, even if intermediate results exceed this range. These attributes make 2's-complement codes the preferred representation for signed numbers in arithmetic operations."
},
{
    "text": "In numerous applications, it is essential to design a converter capable of handling both positive and negative analog signals, necessitating the use of both positive and negative digital representations. Typically, the analog signal is confined within $\\pm 0.5 \\mathrm{~V}_{\\text {ref }}$, ensuring its full-scale range matches that of the unipolar case. Common signed digital representations include sign magnitude, 1's complement, offset binary, and 2's complement, as illustrated in Table 15.1 for a 4-bit scenario. It is noteworthy from Table 15.1 that all positive number representations are identical except in the offset-binary case, where the MSB is inverted.\n\nSign Magnitude\n\nFor negative numbers in the sign-magnitude system, all bits remain the same as their positive counterparts, except the MSB is inverted. For instance, the sign-magnitude representation for 5 is 0101, while for -5, it is 1101. However, this method leads to two representations for zero, resulting in only $2^{N}-1$ unique numbers being represented.\n\nTable 15.1 Some 4-bit signed digital representations.\n\n| Number | Normalized <br> number | Sign <br> magnitude | 1's <br> complement | Offset <br> binary | $\\mathbf{2} \\mathbf{s}$ <br> complement |\n| :---: | :---: | :---: | :---: | :---: | :---: |\n| +7 | $+7 / 8$ | 0111 | 0111 | 1111 | 0111 |\n| +6 | $+6 / 8$ | 0110 | 0110 | 1110 | 0110 |\n| +5 | $+5 / 8$ | 0101 | 0101 | 1101 | 0101 |\n| +4 | $+4 / 8$ | 0100 | 0100 | 1100 | 0100 |\n| +3 | $+3 / 8$ | 0011 | 0011 | 1011 | 0011 |\n| +2 | $+2 / 8$ | 0010 | 0010 | 1010 | 0010 |\n| +1 | $+1 / 8$ | 0001 | 0001 | 1001 | 0001 |\n| +0 | +0 | 0000 | 0000 | 1000 | 0000 |\n| $(-0)$ | $(-0)$ | $(1000)$ | $(11111)$ |  |  |\n| -1 | $-1 / 8$ | 1001 | 1110 | 0111 | 1111 |\n| -2 | $-2 / 8$ | 1010 | 1101 | 0110 | 1110 |\n| -3 | $-3 / 8$ | 1011 | 1100 | 0101 | 1101 |\n| -4 | $-4 / 8$ | 1100 | 1011 | 0100 | 1100 |\n| -5 | $-5 / 8$ | 1101 | 1010 | 0011 | 1011 |\n| -6 | $-6 / 8$ | 1110 | 1001 | 0010 | 1010 |\n| -7 | $-7 / 8$ | 1111 | 1000 | 0001 | 1001 |\n| -8 | $-8 / 8$ |  |  | 0000 | 1000 |\n\n1's Complement\n\nIn the 1's-complement representation, negative numbers are depicted as the bitwise complement of their positive equivalents. For example, 5 is represented as 0101, while -5 is 1010. It is important to note that the 1's-complement system also exhibits two representations for zero, thereby accommodating only $2^{\\mathrm{N}}-1$ distinct numbers.\n\nOffset Binary\n\nThe offset-binary representation is derived by assigning 0000 to the most negative number and incrementing from there, akin to the unipolar case. Essentially, this system can be viewed as a unipolar representation ranging from 0 to $2^{\\mathrm{N}}$, but with the decimal values shifted by $2^{\\mathrm{N}-1}$, or equivalently, spanning from $-2^{\\mathrm{N}-1}$ to $2^{\\mathrm{N}-1}$. For example, the offset-binary code for 5 in a 4-bit context matches the unipolar code for 13, which is 1101, since $13=5+2^{4-1}$. The offset-binary code for -5 corresponds to the unipolar code for 3, which is 0011. Notably, the offset-binary system avoids redundancy, ensuring all sixteen numbers are uniquely represented. Additionally, this system benefits from its close relationship with the unipolar case through a simple offset.\n\nFinally, the unipolar relationship for a D/A converter, as given in (15.2), can be readily adapted to the signed case using offset-binary representation as follows:\n\n$$\n\\begin{equation*}\n\\mathrm{V}_{\\text {out }}=\\mathrm{V}_{\\text {ref }}\\left(\\mathrm{b}_{1} 2^{-1}+\\mathrm{b}_{2} 2^{-2}+\\cdots+\\mathrm{b}_{\\mathrm{N}} 2^{-\\mathrm{N}}\\right)-0.5 \\mathrm{~V}_{\\text {ref }} \\tag{15.19}\n\\end{equation*}\n$$\n\nHere, it is observed that the output signal is now constrained within $\\pm 0.5 \\mathrm{~V}_{\\text {ref }}$.\n\n2's Complement\n\nThe 2's-complement representation is derived from the offset-binary number by simply inverting the MSB. In a 4-bit example, 5 is represented as 0101 in 2's complement (the same as in sign magnitude and 1's complement), whereas -5 is 1011. It is worth mentioning that the 2's-complement code for negative numbers can also be obtained by adding 1 LSB to the corresponding 1's-complement code.\n\nThe primary advantage of 2's-complement coding lies in its ability to perform addition of both positive and negative numbers using straightforward addition, without requiring additional hardware. Furthermore, subtraction of two numbers, $A-B$, can be easily executed by complementing all bits of $B$ (forming the 1's-complement equivalent) and then adding this result to $A$ while simultaneously adding a single LSB to create the 2's-complement equivalent of -B. Adding a single LSB is easily achieved in hardware by setting the carry-in bit high in the overall adder. Consequently, subtraction necessitates only minimal additional hardware. Moreover, when numerous numbers are summed using 2's-complement codes, no overflow hardware is needed, provided the final result remains within the digital code range (even if intermediate results exceed this range). For these reasons, 2's-complement codes are the preferred representation for signed numbers in arithmetic operations."
},
{
    "text": "In numerous applications, it is essential to design a converter capable of handling both positive and negative analog signals, necessitating digital representations for both polarities. Typically, the analog signal is confined within $\\pm 0.5 \\mathrm{~V}_{\\text {ref }}$, ensuring its full-scale range matches that of the unipolar scenario. Common signed digital formats include sign magnitude, 1's complement, offset binary, and 2's complement, as illustrated in Table 15.1 for a 4-bit system. From Table 15.1, it is evident that all positive number representations are identical except in the offset-binary case, where the MSB is inverted.\n\nSign Magnitude\n\nFor negative numbers in the sign-magnitude system, all bits remain the same as their positive counterparts, except the MSB is flipped. For instance, the sign-magnitude representation of 5 is 0101, while -5 is represented as 1101. However, this method leads to two representations for zero, resulting in only $2^{N}-1$ unique numbers being represented.\n\nTable 15.1 Some 4-bit signed digital representations.\n\n| Number | Normalized <br> number | Sign <br> magnitude | 1's <br> complement | Offset <br> binary | $\\mathbf{2} \\mathbf{s}$ <br> complement |\n| :---: | :---: | :---: | :---: | :---: | :---: |\n| +7 | $+7 / 8$ | 0111 | 0111 | 1111 | 0111 |\n| +6 | $+6 / 8$ | 0110 | 0110 | 1110 | 0110 |\n| +5 | $+5 / 8$ | 0101 | 0101 | 1101 | 0101 |\n| +4 | $+4 / 8$ | 0100 | 0100 | 1100 | 0100 |\n| +3 | $+3 / 8$ | 0011 | 0011 | 1011 | 0011 |\n| +2 | $+2 / 8$ | 0010 | 0010 | 1010 | 0010 |\n| +1 | $+1 / 8$ | 0001 | 0001 | 1001 | 0001 |\n| +0 | +0 | 0000 | 0000 | 1000 | 0000 |\n| $(-0)$ | $(-0)$ | $(1000)$ | $(11111)$ |  |  |\n| -1 | $-1 / 8$ | 1001 | 1110 | 0111 | 1111 |\n| -2 | $-2 / 8$ | 1010 | 1101 | 0110 | 1110 |\n| -3 | $-3 / 8$ | 1011 | 1100 | 0101 | 1101 |\n| -4 | $-4 / 8$ | 1100 | 1011 | 0100 | 1100 |\n| -5 | $-5 / 8$ | 1101 | 1010 | 0011 | 1011 |\n| -6 | $-6 / 8$ | 1110 | 1001 | 0010 | 1010 |\n| -7 | $-7 / 8$ | 1111 | 1000 | 0001 | 1001 |\n| -8 | $-8 / 8$ |  |  | 0000 | 1000 |\n\n1's Complement\n\nIn the 1's-complement system, negative numbers are depicted as the bitwise inverse of their positive equivalents. For example, 5 is represented as 0101, while -5 is 1010. It is important to note that this system also has two representations for zero, thus accommodating only $2^{\\mathrm{N}}-1$ distinct numbers.\n\nOffset Binary\n\nThe offset-binary format is derived by assigning 0000 to the most negative value and incrementing from there, akin to the unipolar system. Essentially, this can be viewed as a unipolar system ranging from 0 to $2^{\\mathrm{N}}$, but with the decimal values shifted by $2^{\\mathrm{N}-1}$, or equivalently, ranging from $-2^{\\mathrm{N}-1}$ to $2^{\\mathrm{N}-1}$. For instance, in a 4-bit system, the offset-binary code for 5 is 1101, identical to the unipolar code for 13, since $13=5+2^{4-1}$. The offset-binary code for -5 is 0011, the same as the unipolar code for 3. This system avoids redundancy, ensuring all sixteen numbers are uniquely represented. Additionally, it benefits from a straightforward relationship with the unipolar system through a simple offset.\n\nThe unipolar D/A converter relationship given in (15.2) can be easily adapted to the signed case using offset-binary representation as:\n\n$$\n\\begin{equation*}\n\\mathrm{V}_{\\text {out }}=\\mathrm{V}_{\\text {ref }}\\left(\\mathrm{b}_{1} 2^{-1}+\\mathrm{b}_{2} 2^{-2}+\\cdots+\\mathrm{b}_{\\mathrm{N}} 2^{-\\mathrm{N}}\\right)-0.5 \\mathrm{~V}_{\\text {ref }} \\tag{15.19}\n\\end{equation*}\n$$\n\nHere, the output signal is constrained within $\\pm 0.5 \\mathrm{~V}_{\\text {ref }}$.\n\n2's Complement\n\nThe 2's-complement representation is derived from the offset-binary number by simply inverting the MSB. In a 4-bit example, 5 is 0101 in 2's complement (the same as in sign magnitude and 1's complement), while -5 is 1011. It is noteworthy that the 2's-complement code for negative numbers can also be obtained by adding 1 LSB to the corresponding 1's-complement code.\n\nThe primary advantage of 2's-complement coding lies in its ability to perform addition of both positive and negative numbers using standard addition, eliminating the need for additional hardware. Moreover, subtraction of two numbers, $A-B$, can be efficiently executed by inverting all bits of $B$ (forming the 1's-complement) and then adding this result to $A$ along with a single LSB to create the 2's-complement equivalent of -B. Adding a single LSB is easily achieved in hardware by setting the carry-in bit high in the adder. Consequently, subtraction requires minimal additional hardware. Furthermore, when numerous numbers are summed using 2's-complement codes, no overflow hardware is necessary as long as the final result remains within the digital code range, even if intermediate results exceed this range. These attributes make 2's-complement codes the preferred choice for signed number representation in arithmetic operations."
},
{
    "text": "In a $\\mathrm{D} / \\mathrm{A}$ converter, the offset error, denoted as $\\mathrm{E}_{\\mathrm{off}}$, is the output observed when the input code that should yield zero output is applied. Mathematically, this is expressed as:\n\n$$\n\\begin{equation*}\n\\mathrm{E}_{\\text {off }(\\mathrm{D} / \\mathrm{A})}=\\left.\\frac{\\mathrm{V}_{\\text {out }}}{\\mathrm{V}_{\\mathrm{LSB}}}\\right|_{0 \\ldots 0} \\tag{15.22}\n\\end{equation*}\n$$\n\nHere, the offset error is measured in LSBs. For an A/D converter, the offset error is the discrepancy of $\\mathrm{V}_{0 \\ldots 01}$ from 1/2 LSB, formulated as:\n\n$$\n\\begin{equation*}\n\\mathrm{E}_{\\mathrm{off}(\\mathrm{~A} / \\mathrm{D})}=\\frac{\\mathrm{V}_{0 \\ldots 01}}{\\mathrm{~V}_{\\mathrm{LSB}}}-\\frac{1}{2} \\mathrm{LSB} \\tag{15.23}\n\\end{equation*}\n$$\n\nThe gain error is the difference at full-scale between the ideal and actual responses after the offset error is nullified. For a $\\mathrm{D} / \\mathrm{A}$ converter, the gain error, $\\mathrm{E}_{\\text {gain }(\\mathrm{D} / \\mathrm{A})}$, in LSBs, is calculated by:\n\n$$\n\\begin{equation*}\n\\mathrm{E}_{\\text {gain }(\\mathrm{D} / \\mathrm{A})}=\\left(\\left.\\frac{\\mathrm{V}_{\\text {out }}}{\\mathrm{V}_{\\mathrm{LSB}}}\\right|_{1 \\ldots 1}-\\left.\\frac{\\mathrm{V}_{\\text {out }}}{\\mathrm{V}_{\\mathrm{LSB}}}\\right|_{0 \\ldots 0}\\right)-\\left(2^{\\mathrm{N}}-1\\right) \\tag{15.24}\n\\end{equation*}\n$$\n\nFor an $A / D$ converter, the corresponding gain error, $\\mathrm{E}_{\\text {gain }(\\mathrm{A} / \\mathrm{D})}$ (in LSBs), is determined by:\n\n$$\n\\begin{equation*}\nE_{g a i n(A / D)}=\\left(\\frac{V_{1 \\ldots 1}}{V_{\\text {LSB }}}-\\frac{V_{0 \\ldots 01}}{V_{\\text {LSB }}}\\right)-\\left(2^{N}-2\\right) \\tag{15.25}\n\\end{equation*}\n$$\n\nFig. 15.9 provides graphical representations of both gain and offset errors."
},
{
    "text": "In a $\\mathrm{D} / \\mathrm{A}$ converter, the offset error, $\\mathrm{E}_{\\mathrm{off}}$, is the output resulting from an input code that should yield zero output. Mathematically, it is expressed as:\n\n$$\n\\begin{equation*}\n\\mathrm{E}_{\\text {off }(\\mathrm{D} / \\mathrm{A})}=\\left.\\frac{\\mathrm{V}_{\\text {out }}}{\\mathrm{V}_{\\mathrm{LSB}}}\\right|_{0 \\ldots 0} \\tag{15.22}\n\\end{equation*}\n$$\n\nHere, the offset error is measured in LSBs. For an A/D converter, the offset error is the deviation of $\\mathrm{V}_{0 \\ldots 01}$ from 1/2 LSB, defined mathematically as:\n\n$$\n\\begin{equation*}\n\\mathrm{E}_{\\mathrm{off}(\\mathrm{~A} / \\mathrm{D})}=\\frac{\\mathrm{V}_{0 \\ldots 01}}{\\mathrm{~V}_{\\mathrm{LSB}}}-\\frac{1}{2} \\mathrm{LSB} \\tag{15.23}\n\\end{equation*}\n$$\n\nThe gain error is the discrepancy at full-scale between the ideal and actual curves after the offset error is nullified. For a $\\mathrm{D} / \\mathrm{A}$ converter, the gain error, $\\mathrm{E}_{\\text {gain }(\\mathrm{D} / \\mathrm{A})}$, in LSBs, is given by:\n\n$$\n\\begin{equation*}\n\\mathrm{E}_{\\text {gain }(\\mathrm{D} / \\mathrm{A})}=\\left(\\left.\\frac{\\mathrm{V}_{\\text {out }}}{\\mathrm{V}_{\\mathrm{LSB}}}\\right|_{1 \\ldots 1}-\\left.\\frac{\\mathrm{V}_{\\text {out }}}{\\mathrm{V}_{\\mathrm{LSB}}}\\right|_{0 \\ldots 0}\\right)-\\left(2^{\\mathrm{N}}-1\\right) \\tag{15.24}\n\\end{equation*}\n$$\n\nFor an $A / D$ converter, the corresponding gain error, $\\mathrm{E}_{\\text {gain }(\\mathrm{A} / \\mathrm{D})}$ (in LSBs), is:\n\n$$\n\\begin{equation*}\nE_{g a i n(A / D)}=\\left(\\frac{V_{1 \\ldots 1}}{V_{\\text {LSB }}}-\\frac{V_{0 \\ldots 01}}{V_{\\text {LSB }}}\\right)-\\left(2^{N}-2\\right) \\tag{15.25}\n\\end{equation*}\n$$\n\nFig. 15.9 provides graphical representations of these gain and offset errors."
},
{
    "text": "In a $\\mathrm{D} / \\mathrm{A}$ converter, the offset error, $\\mathrm{E}_{\\mathrm{off}}$, is defined as the output produced for an input code that should yield zero output, or mathematically,\n\n$$\n\\begin{equation*}\n\\mathrm{E}_{\\text {off }(\\mathrm{D} / \\mathrm{A})}=\\left.\\frac{\\mathrm{V}_{\\text {out }}}{\\mathrm{V}_{\\mathrm{LSB}}}\\right|_{0 \\ldots 0} \\tag{15.22}\n\\end{equation*}\n$$\n\nwhere the offset error is measured in LSBs. Similarly, for an A/D converter, the offset error is the deviation of $\\mathrm{V}_{0 \\ldots 01}$ from 1/2 LSB, expressed mathematically as,\n\n$$\n\\begin{equation*}\n\\mathrm{E}_{\\mathrm{off}(\\mathrm{~A} / \\mathrm{D})}=\\frac{\\mathrm{V}_{0 \\ldots 01}}{\\mathrm{~V}_{\\mathrm{LSB}}}-\\frac{1}{2} \\mathrm{LSB} \\tag{15.23}\n\\end{equation*}\n$$\n\nThe gain error is the difference at the full-scale value between the ideal and actual curves after the offset error has been nullified. For a $\\mathrm{D} / \\mathrm{A}$ converter, the gain error, $\\mathrm{E}_{\\text {gain }(\\mathrm{D} / \\mathrm{A})}$, in LSBs, is given by\n\n$$\n\\begin{equation*}\n\\mathrm{E}_{\\text {gain }(\\mathrm{D} / \\mathrm{A})}=\\left(\\left.\\frac{\\mathrm{V}_{\\text {out }}}{\\mathrm{V}_{\\mathrm{LSB}}}\\right|_{1 \\ldots 1}-\\left.\\frac{\\mathrm{V}_{\\text {out }}}{\\mathrm{V}_{\\mathrm{LSB}}}\\right|_{0 \\ldots 0}\\right)-\\left(2^{\\mathrm{N}}-1\\right) \\tag{15.24}\n\\end{equation*}\n$$\n\nFor an $A / D$ converter, the corresponding gain error, $\\mathrm{E}_{\\text {gain }(\\mathrm{A} / \\mathrm{D})}$ (in LSBs), is calculated as\n\n$$\n\\begin{equation*}\nE_{g a i n(A / D)}=\\left(\\frac{V_{1 \\ldots 1}}{V_{\\text {LSB }}}-\\frac{V_{0 \\ldots 01}}{V_{\\text {LSB }}}\\right)-\\left(2^{N}-2\\right) \\tag{15.25}\n\\end{equation*}\n$$\n\nGraphical representations of gain and offset errors are depicted in Fig. 15.9."
},
{
    "text": "In a $\\mathrm{D} / \\mathrm{A}$ converter, the offset error, denoted as $\\mathrm{E}_{\\mathrm{off}}$, is the output observed when the input code should ideally result in zero output. Mathematically, this is expressed as:\n\n$$\n\\begin{equation*}\n\\mathrm{E}_{\\text {off }(\\mathrm{D} / \\mathrm{A})}=\\left.\\frac{\\mathrm{V}_{\\text {out }}}{\\mathrm{V}_{\\mathrm{LSB}}}\\right|_{0 \\ldots 0} \\tag{15.22}\n\\end{equation*}\n$$\n\nHere, the offset error is measured in LSBs. For an A/D converter, the offset error is the discrepancy of $\\mathrm{V}_{0 \\ldots 01}$ from 1/2 LSB, which can be mathematically represented as:\n\n$$\n\\begin{equation*}\n\\mathrm{E}_{\\mathrm{off}(\\mathrm{~A} / \\mathrm{D})}=\\frac{\\mathrm{V}_{0 \\ldots 01}}{\\mathrm{~V}_{\\mathrm{LSB}}}-\\frac{1}{2} \\mathrm{LSB} \\tag{15.23}\n\\end{equation*}\n$$\n\nThe gain error is defined as the difference at full-scale between the ideal and actual response curves after the offset error has been nullified. For a $\\mathrm{D} / \\mathrm{A}$ converter, the gain error, $\\mathrm{E}_{\\text {gain }(\\mathrm{D} / \\mathrm{A})}$, measured in LSBs, is given by:\n\n$$\n\\begin{equation*}\n\\mathrm{E}_{\\text {gain }(\\mathrm{D} / \\mathrm{A})}=\\left(\\left.\\frac{\\mathrm{V}_{\\text {out }}}{\\mathrm{V}_{\\mathrm{LSB}}}\\right|_{1 \\ldots 1}-\\left.\\frac{\\mathrm{V}_{\\text {out }}}{\\mathrm{V}_{\\mathrm{LSB}}}\\right|_{0 \\ldots 0}\\right)-\\left(2^{\\mathrm{N}}-1\\right) \\tag{15.24}\n\\end{equation*}\n$$\n\nFor an $A / D$ converter, the corresponding gain error, $\\mathrm{E}_{\\text {gain }(\\mathrm{A} / \\mathrm{D})}$ (in LSBs), is calculated as:\n\n$$\n\\begin{equation*}\nE_{g a i n(A / D)}=\\left(\\frac{V_{1 \\ldots 1}}{V_{\\text {LSB }}}-\\frac{V_{0 \\ldots 01}}{V_{\\text {LSB }}}\\right)-\\left(2^{N}-2\\right) \\tag{15.25}\n\\end{equation*}\n$$\n\nVisual representations of both gain and offset errors are depicted in Fig. 15.9."
},
{
    "text": "In a $\\mathrm{D} / \\mathrm{A}$ converter, the offset error, $\\mathrm{E}_{\\mathrm{off}}$, is the output resulting from the input code that should yield zero output, expressed mathematically as:\n\n$$\n\\begin{equation*}\n\\mathrm{E}_{\\text {off }(\\mathrm{D} / \\mathrm{A})}=\\left.\\frac{\\mathrm{V}_{\\text {out }}}{\\mathrm{V}_{\\mathrm{LSB}}}\\right|_{0 \\ldots 0} \\tag{15.22}\n\\end{equation*}\n$$\n\nThis offset error is measured in LSBs. For an A/D converter, the offset error is the discrepancy of $\\mathrm{V}_{0 \\ldots 01}$ from 1/2 LSB, formulated as:\n\n$$\n\\begin{equation*}\n\\mathrm{E}_{\\mathrm{off}(\\mathrm{~A} / \\mathrm{D})}=\\frac{\\mathrm{V}_{0 \\ldots 01}}{\\mathrm{~V}_{\\mathrm{LSB}}}-\\frac{1}{2} \\mathrm{LSB} \\tag{15.23}\n\\end{equation*}\n$$\n\nThe gain error is the difference at full-scale between the ideal and actual responses after the offset error is zeroed. For a $\\mathrm{D} / \\mathrm{A}$ converter, the gain error, $\\mathrm{E}_{\\text {gain }(\\mathrm{D} / \\mathrm{A})}$, in LSBs, is:\n\n$$\n\\begin{equation*}\n\\mathrm{E}_{\\text {gain }(\\mathrm{D} / \\mathrm{A})}=\\left(\\left.\\frac{\\mathrm{V}_{\\text {out }}}{\\mathrm{V}_{\\mathrm{LSB}}}\\right|_{1 \\ldots 1}-\\left.\\frac{\\mathrm{V}_{\\text {out }}}{\\mathrm{V}_{\\mathrm{LSB}}}\\right|_{0 \\ldots 0}\\right)-\\left(2^{\\mathrm{N}}-1\\right) \\tag{15.24}\n\\end{equation*}\n$$\n\nFor an $A / D$ converter, the corresponding gain error, $\\mathrm{E}_{\\text {gain }(\\mathrm{A} / \\mathrm{D})}$, in LSBs, is:\n\n$$\n\\begin{equation*}\nE_{g a i n(A / D)}=\\left(\\frac{V_{1 \\ldots 1}}{V_{\\text {LSB }}}-\\frac{V_{0 \\ldots 01}}{V_{\\text {LSB }}}\\right)-\\left(2^{N}-2\\right) \\tag{15.25}\n\\end{equation*}\n$$\n\nFig. 15.9 illustrates the graphical representations of gain and offset errors."
},
{
    "text": "In a $\\mathrm{D} / \\mathrm{A}$ converter, the offset error, $\\mathrm{E}_{\\mathrm{off}}$, is defined as the output that results from the input code that should ideally yield zero output, expressed mathematically as:\n\n$$\n\\begin{equation*}\n\\mathrm{E}_{\\text {off }(\\mathrm{D} / \\mathrm{A})}=\\left.\\frac{\\mathrm{V}_{\\text {out }}}{\\mathrm{V}_{\\mathrm{LSB}}}\\right|_{0 \\ldots 0} \\tag{15.22}\n\\end{equation*}\n$$\n\nHere, the offset error is measured in LSBs. Similarly, for an A/D converter, the offset error is the deviation of $\\mathrm{V}_{0 \\ldots 01}$ from 1/2 LSB, formulated as:\n\n$$\n\\begin{equation*}\n\\mathrm{E}_{\\mathrm{off}(\\mathrm{~A} / \\mathrm{D})}=\\frac{\\mathrm{V}_{0 \\ldots 01}}{\\mathrm{~V}_{\\mathrm{LSB}}}-\\frac{1}{2} \\mathrm{LSB} \\tag{15.23}\n\\end{equation*}\n$$\n\nThe gain error is the discrepancy at the full-scale value between the ideal and actual curves after the offset error has been nullified. For a $\\mathrm{D} / \\mathrm{A}$ converter, the gain error, $\\mathrm{E}_{\\text {gain }(\\mathrm{D} / \\mathrm{A})}$, in LSBs, is represented by:\n\n$$\n\\begin{equation*}\n\\mathrm{E}_{\\text {gain }(\\mathrm{D} / \\mathrm{A})}=\\left(\\left.\\frac{\\mathrm{V}_{\\text {out }}}{\\mathrm{V}_{\\mathrm{LSB}}}\\right|_{1 \\ldots 1}-\\left.\\frac{\\mathrm{V}_{\\text {out }}}{\\mathrm{V}_{\\mathrm{LSB}}}\\right|_{0 \\ldots 0}\\right)-\\left(2^{\\mathrm{N}}-1\\right) \\tag{15.24}\n\\end{equation*}\n$$\n\nFor an $A / D$ converter, the corresponding gain error, $\\mathrm{E}_{\\text {gain }(\\mathrm{A} / \\mathrm{D})}$ (also in LSBs), is expressed as:\n\n$$\n\\begin{equation*}\nE_{g a i n(A / D)}=\\left(\\frac{V_{1 \\ldots 1}}{V_{\\text {LSB }}}-\\frac{V_{0 \\ldots 01}}{V_{\\text {LSB }}}\\right)-\\left(2^{N}-2\\right) \\tag{15.25}\n\\end{equation*}\n$$\n\nFig. 15.9 provides graphical depictions of gain and offset errors."
},
{
    "text": "In a $\\mathrm{D} / \\mathrm{A}$ converter, the offset error, $\\mathrm{E}_{\\mathrm{off}}$, is defined as the output that arises when the input code should yield zero output, or mathematically,\n\n$$\n\\begin{equation*}\n\\mathrm{E}_{\\text {off }(\\mathrm{D} / \\mathrm{A})}=\\left.\\frac{\\mathrm{V}_{\\text {out }}}{\\mathrm{V}_{\\mathrm{LSB}}}\\right|_{0 \\ldots 0} \\tag{15.22}\n\\end{equation*}\n$$\n\nwhere the offset error is measured in LSBs. Similarly, for an A/D converter, the offset error is defined as the deviation of $\\mathrm{V}_{0 \\ldots 01}$ from 1/2 LSB, or mathematically,\n\n$$\n\\begin{equation*}\n\\mathrm{E}_{\\mathrm{off}(\\mathrm{~A} / \\mathrm{D})}=\\frac{\\mathrm{V}_{0 \\ldots 01}}{\\mathrm{~V}_{\\mathrm{LSB}}}-\\frac{1}{2} \\mathrm{LSB} \\tag{15.23}\n\\end{equation*}\n$$\n\nThe gain error is defined as the discrepancy at the full-scale value between the ideal and actual curves once the offset error has been nullified. For a $\\mathrm{D} / \\mathrm{A}$ converter, the gain error, $\\mathrm{E}_{\\text {gain }(\\mathrm{D} / \\mathrm{A})}$, in LSBs, is expressed by\n\n$$\n\\begin{equation*}\n\\mathrm{E}_{\\text {gain }(\\mathrm{D} / \\mathrm{A})}=\\left(\\left.\\frac{\\mathrm{V}_{\\text {out }}}{\\mathrm{V}_{\\mathrm{LSB}}}\\right|_{1 \\ldots 1}-\\left.\\frac{\\mathrm{V}_{\\text {out }}}{\\mathrm{V}_{\\mathrm{LSB}}}\\right|_{0 \\ldots 0}\\right)-\\left(2^{\\mathrm{N}}-1\\right) \\tag{15.24}\n\\end{equation*}\n$$\n\nFor an $A / D$ converter, the corresponding gain error, $\\mathrm{E}_{\\text {gain }(\\mathrm{A} / \\mathrm{D})}$ (in LSBs), is given by\n\n$$\n\\begin{equation*}\nE_{g a i n(A / D)}=\\left(\\frac{V_{1 \\ldots 1}}{V_{\\text {LSB }}}-\\frac{V_{0 \\ldots 01}}{V_{\\text {LSB }}}\\right)-\\left(2^{N}-2\\right) \\tag{15.25}\n\\end{equation*}\n$$\n\nGraphical representations of gain and offset errors are depicted in Fig. 15.9."
},
{
    "text": "In a $\\mathrm{D} / \\mathrm{A}$ converter, the offset error, $\\mathrm{E}_{\\mathrm{off}}$, is defined as the output that arises when the input code should ideally yield zero output, or mathematically,\n\n$$\n\\begin{equation*}\n\\mathrm{E}_{\\text {off }(\\mathrm{D} / \\mathrm{A})}=\\left.\\frac{\\mathrm{V}_{\\text {out }}}{\\mathrm{V}_{\\mathrm{LSB}}}\\right|_{0 \\ldots 0} \\tag{15.22}\n\\end{equation*}\n$$\n\nwhere the offset error is expressed in LSB units. Similarly, for an A/D converter, the offset error is the discrepancy of $\\mathrm{V}_{0 \\ldots 01}$ from 1/2 LSB, or mathematically,\n\n$$\n\\begin{equation*}\n\\mathrm{E}_{\\mathrm{off}(\\mathrm{~A} / \\mathrm{D})}=\\frac{\\mathrm{V}_{0 \\ldots 01}}{\\mathrm{~V}_{\\mathrm{LSB}}}-\\frac{1}{2} \\mathrm{LSB} \\tag{15.23}\n\\end{equation*}\n$$\n\nThe gain error is defined as the difference at full-scale between the ideal and actual curves once the offset error has been nullified. For a $\\mathrm{D} / \\mathrm{A}$ converter, the gain error, $\\mathrm{E}_{\\text {gain }(\\mathrm{D} / \\mathrm{A})}$, in LSB units, is given by\n\n$$\n\\begin{equation*}\n\\mathrm{E}_{\\text {gain }(\\mathrm{D} / \\mathrm{A})}=\\left(\\left.\\frac{\\mathrm{V}_{\\text {out }}}{\\mathrm{V}_{\\mathrm{LSB}}}\\right|_{1 \\ldots 1}-\\left.\\frac{\\mathrm{V}_{\\text {out }}}{\\mathrm{V}_{\\mathrm{LSB}}}\\right|_{0 \\ldots 0}\\right)-\\left(2^{\\mathrm{N}}-1\\right) \\tag{15.24}\n\\end{equation*}\n$$\n\nFor an $A / D$ converter, the corresponding gain error, $\\mathrm{E}_{\\text {gain }(\\mathrm{A} / \\mathrm{D})}$ (in LSB units), is expressed as\n\n$$\n\\begin{equation*}\nE_{g a i n(A / D)}=\\left(\\frac{V_{1 \\ldots 1}}{V_{\\text {LSB }}}-\\frac{V_{0 \\ldots 01}}{V_{\\text {LSB }}}\\right)-\\left(2^{N}-2\\right) \\tag{15.25}\n\\end{equation*}\n$$\n\nFig. 15.9 provides graphical depictions of gain and offset errors."
},
{
    "text": "The precision of a converter is characterized by the discrepancy between the anticipated and the actual transfer responses. This precision encompasses offset, gain, and linearity deviations.\n\nThe term relative precision is occasionally employed and refers to the precision after offset and gain deviations have been corrected. It is also known as the maximum integral nonlinearity deviation, which will be discussed shortly, and will be referred to as such.\n\nPrecision can be conveyed as a percentage of the full-scale value, as the effective number of bits, or as a fraction of an Least Significant Bit (LSB). For instance, a 12-bit precision implies that the converter's deviation\nThe precision of a converter is determined\nThe precision of a converter is"
},
{
    "text": "The precision of a converter is characterized by the discrepancy between the anticipated and the actual transfer responses. This precision encompasses offset, gain, and linearity deviations.\n\nThe concept of relative precision is also employed, which refers to the precision after offset and gain deviations have been corrected. It is also known as the maximum integral nonlinearity deviation, a term we will utilize.\n\nPrecision can be conveyed as a percentage of the full-scale value error, the effective number of bits, or as a fraction of an LSB. For instance, a 12-bit precision suggests that the converter's error is less than the full-scale value divided by \\(2^{12}\\).\n\nIt's important to note that a converter may possess a 12-bit resolution but only 10-bit precision, or vice versa. Precision exceeding the resolution indicates that the converter's transfer response is meticulously controlled.\n\nA pivotal measure of precision is integral nonlinearity (INL), which specifies how much a converter's input-output relationship deviates from the ideal linear relationship.\n\nThe INL error, after eliminating offset and gain deviations, is defined as the deviation from a straight line. However, the choice of straight line can vary. A cautious measure uses the endpoints of the converter's transfer response, while an alternative involves finding the best-fit straight line. These definitions are depicted in Fig. 15.10.\n\nBoth DNL and INL are assessed at dc or very low input frequencies, referred to as measures of static nonlinearity.\n\nDNL error reflects the variation in analog step sizes from the ideal 1 LSB step. An ideal converter exhibits a maximum DNL of 0, while a converter with a 0.5 LSB DNL varies between 0.5 LSB and 1.5 LSB.\n\nMonotonicity in a D/A converter ensures the output only increases with input. A D/A converter is guaranteed to be monotonic if the maximum DNL is less than 1 LSB or the maximum INL is less than 0.5 LSB.\n\nFor A/D converters, the equivalent term to monotonicity is missing codes. A converter is ensured to have no missing codes if the maximum DNL is less than 1 LSB or the maximum INL is less than 0.5 LSB.\n\nConversion time in an A/D converter is the duration for a single measurement, while the maximum sampling rate is the inverse of this time. Some converters may have a high sampling rate but also significant latency.\n\nSettling time for a D/A converter is the time required to stabilize to a specified level, usually 0.5 LSB. The sampling rate is the rate at which samples can be continuously converted.\n\nSampling-time uncertainty, or aperture jitter, affects the accuracy of converters, especially at high input frequencies.\n\nDynamic range is the ratio of the maximum to minimum signal amplitudes a converter can handle. A common metric is the signal-to-noise and distortion ratio (SNDR), which can be expressed in dB or as an effective number of bits (N_eff).\n\nThe effective resolution bandwidth is the bandwidth over which the peak SNDR is within 3 dB of its best value or where N_eff is within 0.5 bits of its peak.\n\nIn some converters, the distortion level remains constant regardless of input signal level, while in others, it decreases with a decrease in input level, which is often a desirable trait.\n\n#### EXAMPLE 15.4\n\nFor a 3-bit D/A converter with a reference voltage of 4 V and given measured voltage values, the solution involves calculating offset and gain errors, INL and DNL errors, and effective number of bits for absolute and relative accuracy.\n\n#### EXAMPLE 15.5\n\nFor a 12-bit A/D converter with a full-scale sinusoidal waveform and specified power levels, the effective number of bits is determined using the SNDR."
},
{
    "text": "Converter precision is determined by the discrepancy between anticipated and actual transfer responses. This encompasses offset, gain, and linearity deviations. \n\nThe concept of relative precision also exists, referring to the precision after offset and gain deviations have been corrected. It is also known as the maximum integral nonlinearity error and will be referred to as such here.\n\nPrecision can be expressed as a percentage of the full-scale value, as the effective number of bits, or as a fraction of an least significant bit (LSB). For instance, a 12-bit precision implies that the converter's error is less than the full-scale value divided by $2^{12}$.\n\nIt's important to note that a converter may have 12-bit resolution with only 10-bit precision, or 10-bit resolution with 12-bit precision. An precision greater than the resolution indicates that the converter's transfer response is very precisely controlled (better than the number of bits of resolution).\n\nA crucial point: Integral nonlinearity (INL) is a common measure of precision that specifies the deviation of a converter's input-output relationship from the ideal, or least-squares fit, linear relationship.\n\nAfter both offset and gain errors have been removed, the integral nonlinearity (INL) error is defined as the deviation from a straight line. However, the choice of straight line is crucial. A conservative measure of nonlinearity uses the endpoints of the converter's transfer response to define the straight line. An alternative definition is to find the best-fit straight line such that the maximum difference (or perhaps the mean squared error) is minimized.\n\nBoth differential nonlinearity (DNL) and INL are measured at dc or very low input frequencies and are therefore referred to as measures of static nonlinearity.\n\nMonotonicity in a D/A converter means that the output always increases as the input increases. A converter is guaranteed to be monotonic if the maximum DNL error is less than 1 LSB.\n\nMissing codes in an A/D converter are the equivalent of monotonicity in a D/A converter. An A/D converter is guaranteed not to have any missing codes if the maximum DNL error is less than 1 LSB or if the maximum INL error is less than 0.5 LSB.\n\nThe conversion time in an A/D converter is the time taken for the converter to complete a single measurement, including the acquisition time of the input signal. The maximum sampling rate is the speed at which samples can be continuously converted and is typically the inverse of the conversion time.\n\nSettling time in a D/A converter is defined as the time it takes for the converter to settle to within a specified amount of the final value (usually 0.5 LSB). The sampling rate is the rate at which samples can be continuously converted and is typically the inverse of the settling time.\n\nSampling-time uncertainty, also known as aperture jitter, is a limitation in both A/D and D/A converters. It becomes a significant performance limitation at high input signal frequencies.\n\nDynamic range is a general term for the ratio of the maximum to minimum signal amplitudes that a converter can meaningfully process. A common metric quantifying dynamic range is the maximum achievable signal-to-noise and distortion ratio (SNDR).\n\nThe effective number of bits (Neff) is a performance metric that relates a converter's performance to that of an ideal quantizer. It is computed using the SNDR.\n\nThe effective resolution bandwidth specifies the bandwidth over which SNDR is within 3 dB of its highest value.\n\nIn some converters, the distortion level decreases as the input signal level decreases, which is often a desirable property.\n\n#### EXAMPLE 15.4\n\nConsider a 3-bit D/A converter with a reference voltage of 4 V and the following measured voltage values:\n\nFind the offset and gain errors in units of LSBs, the INL (endpoint) and DNL errors (in units of LSBs), the effective number of bits of absolute accuracy, and the effective number of bits of relative accuracy.\n\n#### Solution\n\nFor the offset error, subtract the measured offset voltage from the ideal offset voltage and divide by the LSB value. For the gain error, use the formula provided to calculate the error in LSBs.\n\nFor INL and DNL errors, first remove both offset and gain errors from the measured D/A values. Then, calculate the INL errors as the difference between the corrected values and the ideal values. For DNL errors, find the difference between adjacent corrected values.\n\nFor absolute accuracy, find the largest deviation between the measured values and ideal values and relate it to effective bits. For relative accuracy, use the INL errors found earlier and relate the maximum magnitude to effective bits.\n\n#### EXAMPLE 15.5\n\nA full-scale sinusoidal waveform is applied to a 12-bit A/D converter, and the output is digitally analyzed. If the fundamental has a normalized power of 1 W while the remaining power is $0.5 \\mu W$, what is the effective number of bits for the converter?\n\n#### Solution\n\nCalculate the SNDR using the provided formula. Then, substitute the SNDR value into the formula for Neff to find the effective number of bits."
},
{
    "text": "The precision of a converter is determined by comparing the anticipated and actual transfer responses, encompassing offset, gain, and linearity discrepancies.\n\nRelative precision is a term occasionally employed, referring to the precision after offset and gain discrepancies have been corrected. It is also known as the maximum integral nonlinearity error and will be referenced as such.\n\nPrecision can be quantified as a percentage of the full-scale value, as the effective number of bits, or as a fraction of an Least Significant Bit (LSB). For instance, a 12-bit precision indicates that the converter's error is less than the full-scale value divided by \\(2^{12}\\).\n\nIt is important to note that a converter may possess a 12-bit resolution but only 10-bit precision, or vice versa. An precision exceeding the resolution signifies that the converter's transfer response is exceptionally well-controlled.\n\nIntegral nonlinearity (INL) is a prevalent metric of precision, detailing the deviation of a converter's input-output relationship from the ideal linear relationship.\n\nDifferential nonlinearity (DNL) error refers to the variation in analog step sizes from the ideal 1 LSB step. An ideal converter maintains a maximum DNL of 0 across all digital values.\n\nMonotonicity in a D/A converter ensures that the output voltage consistently rises with an increasing input. A converter is guaranteed to be monotonic if the maximum DNL is less than 1 LSB.\n\nMissing codes in an A/D converter are analogous to monotonicity in a D/A converter. An A/D converter is guaranteed to be free of missing codes if the maximum DNL error is less than 1 LSB or the maximum INL error is less than 0.5 LSB.\n\nConversion time for an A/D converter is the duration required to complete a single measurement, including the acquisition time of the input signal. The maximum sampling rate is the frequency at which samples can be continuously converted and is generally the inverse of the conversion time.\n\nSettling time for a D/A converter is the time needed for the output to stabilize within a specified range of the final value. The sampling rate is the frequency at which samples can be continuously converted and is typically the inverse of the settling time.\n\nSampling-time uncertainty, or aperture jitter, affects both A/D and D/A converters and can be a significant limitation at high input signal frequencies.\n\nDynamic range is the ratio of the maximum to minimum signal amplitudes that a converter can process effectively. A common metric for dynamic range is the signal-to-noise and distortion ratio (SNDR), which is the ratio of the root mean square (rms) value of an input sinusoidal signal to the rms output noise plus distortion.\n\nEffective number of bits (Neff) is a metric that relates a converter's performance to that of an ideal quantizer. It is calculated using the SNDR and provides a way to express dynamic range.\n\nThe effective resolution bandwidth is the bandwidth over which a converter's peak SNDR is within 3 dB of its highest value, or equivalently, the bandwidth over which Neff is within 0.5 bits of its peak value.\n\nThe distortion level of some converters remains constant and is not dependent on the input signal level, while in others, it decreases as the input signal level decreases.\n\nThe examples provided demonstrate the calculation of offset and gain errors, INL and DNL errors, and the effective number of bits of absolute and relative accuracy for a 3-bit D/A converter. Another example calculates the effective number of bits for a 12-bit A/D converter based on the SNDR."
},
{
    "text": "The accuracy of a converter is defined as the discrepancy between the expected and actual transfer responses, encompassing offset, gain, and linearity errors. Relative accuracy, also known as maximum integral nonlinearity error, refers to the accuracy after offset and gain errors have been corrected.\n\nAccuracy can be expressed as a percentage of the full-scale value, the effective number of bits, or a fraction of an least significant bit (LSB). For instance, a 12-bit accuracy means the converter's error is less than the full-scale value divided by 2^12.\n\nIt's important to note that a converter may have 12-bit resolution with only 10-bit accuracy, or 10-bit resolution with 12-bit accuracy. An accuracy greater than the resolution indicates that the converter's transfer response is very precisely controlled.\n\nIntegral nonlinearity (INL) is a measure of accuracy that specifies the deviation of a converter's input-output relationship from the ideal linear relationship. After offset and gain errors have been removed, INL error is defined as the deviation from a straight line.\n\nDifferential nonlinearity (DNL) error refers to the variation in analog step sizes away from 1 LSB. An ideal converter has a maximum DNL of 0 for all digital values.\n\nMonotonicity in a D/A converter means the output always increases as the input increases. A converter is guaranteed to be monotonic if the maximum DNL error is less than 1 LSB or if the maximum INL error is less than 0.5 LSB.\n\nMissing codes in an A/D converter refer to the absence of any output codes. An A/D converter is guaranteed not to have any missing codes if the maximum DNL error is less than 1 LSB or if the maximum INL error is less than 0.5 LSB.\n\nA/D conversion time is the time taken for the converter to complete a single measurement, while the maximum sampling rate is the speed at which samples can be continuously converted. D/A settling time is the time it takes for the converter to settle to within a specified amount of the final value.\n\nSampling-time uncertainty, or aperture jitter, can be a significant performance limitation at high input signal frequencies. Dynamic range is the ratio of the maximum to minimum signal amplitudes that a converter can meaningfully process. It is often quantified by the maximum achievable signal-to-noise and distortion ratio (SNDR).\n\nThe effective number of bits (N_eff) is a performance metric that relates a converter's performance to that of an ideal quantizer. It can be calculated using the SNDR value.\n\nThe effective resolution bandwidth specifies the bandwidth over which a converter's peak SNDR is within 3 dB of its best value, or equivalently, the bandwidth over which N_eff is within 0.5 bits of its peak value.\n\nIn some converters, the distortion level remains at a fixed level and is not a function of the input signal level. However, in some converters, the distortion level decreases as the input signal level is decreased, which is often a desirable property."
},
{
    "text": "The precision of a converter is determined by the discrepancy between the anticipated and the actual transfer responses, encompassing offset, gain, and linearity deviations.\n\nA converter's relative precision is the term often employed to describe the accuracy after offset and gain deviations have been corrected. It is also known as the maximum integral nonlinearity error, which we will use hence\nI apologize for the confusion, but it seems there was an error in the previous response. I will now provide the rephrased text as requested:\n\n---\n\nThe precision of a converter is defined by the discrepancy between the anticipated and the actual transfer responses, encompassing offset, gain, and linearity deviations.\n\nA converter's relative precision is the term often employed to describe the accuracy after offset and gain deviations have been corrected. It is also known as the maximum integral nonlinearity error, which we will use"
},
{
    "text": "The precision of a converter is determined by the discrepancy between the anticipated and the actual transfer responses. This precision encompasses offset, gain, and linearity deviations.\n\nRelative precision is another term used, which refers to the precision after offset and gain deviations have been corrected. It is also known as the maximum integral nonlinearity error, a concept that will be elaborated upon shortly, and will be referred to as such hereafter.\n\nPrecision can be represented as a percentage of the full-scale value, as the effective number of bits, or as a fraction of the least significant bit (LSB). For instance, a 12-bit precision suggests that the converter's error is less than the full-scale value divided by \\(2^{12}\\).\n\nIt's important to note that a converter may have a 12-bit resolution with only 10-bit precision, or a 10-bit resolution with 12-bit precision. Precision exceeding the resolution indicates that the converter's transfer response is very precisely controlled, better than the number's.\n\nA crucial point to understand is that integral nonlinearity (INL) is a prevalent measure\nThe precision of a converter is determined by the discrepancy between the anticipated and the actual transfer responses. This precision encompasses offset, gain, and linearity deviations.\n\nRelative precision is another term used, which refers to the precision after offset and gain deviations have been corrected. It is also known as the maximum integral nonlinearity error, a concept that will be elaborated upon shortly, and will be referred to as such hereafter.\n\nPrecision can be represented as a percentage of the full-scale value, as the effective number of bits, or as a fraction of the least significant bit (LSB). For instance, a 12-bit precision suggests that the converter's error is less than the full-scale value divided by \\(2^{12}\\).\n\nIt's important to note that a converter may have a 12-bit resolution with only 10-bit precision, or a 10-bit resolution with 12-bit precision. Precision exceeding the resolution indicates that the converter's transfer response is very precisely controlled, better than the resolution suggests.\n\nA crucial point to understand is that integral nonlinearity (INL) is a common measure of precision that specifies the deviation of a converter's input-output relationship from the ideal, or least-squares fit, linear relationship.\n\nAfter both the offset and gain deviations have been removed, the integral nonlinearity (INL) deviation is defined as the deviation from a straight line. However, what straight line should be used? A conservative measure of nonlinearity is to use the endpoints of the converter's transfer response to define the straight line. An alternative definition is to find the best-fit straight line such that the maximum difference (or perhaps the mean squared error) is minimized. These two definitions are illustrated in Fig. 15.10. One should be aware that, in this book, we define INL values for each digital word (and thus these values can be plotted for a single converter), whereas others sometimes define the term \"INL\" as the maximum magnitude of the INL values (or equivalently, as the relative precision). Typically INL is measured by slowly sweeping the converter input over its full-scale range; hence it is a measure of the converter's precision only at low input signal frequencies.\n\nBoth DNL and INL are measured at dc or very low input frequencies. They are therefore referred to as measures of static nonlinearity.\n\nDifferential nonlinearity (DNL) deviation is defined as the variation in analog step sizes away from 1 LSB (typically, once gain and offset deviations have been removed). Thus, an ideal converter has its maximum differential nonlinearity of 0 for all digital values, whereas a converter with a maximum differential nonlinearity of 0.5 LSB has its step sizes varying from 0.5 LSB to 1.5 LSB. Once again, as in the INL case, we define DNL values for each digital word, whereas others sometimes refer to DNL as the maximum magnitude of the DNL values. Like INL, DNL is a measure of dc or low-frequency precision. Hence, both are referred to as measures of static nonlinearities.\n\nMonotonicity in a D/A converter is defined as the output always increasing as the input increases. In other words, the slope of the D/A converter's transfer response is of only one sign. If the maximum DNL deviation is less than 1 LSB, then a D/A converter is guaranteed to be monotonic. However, many monotonic converters may have a maximum DNL greater than 1 LSB. Similarly, a converter is guaranteed to be monotonic if the maximum INL is less than 0.5 LSB.\n\nMissing codes are the equivalent term for A/D converters. An A/D converter is guaranteed not to have any missing codes if the maximum DNL deviation is less than 1 LSB or if the maximum INL deviation is less than 0.5 LSB.\n\nA/D conversion time and sampling rate: In an A/D converter, the conversion time is the time taken for the converter to complete a single measurement, including the acquisition time of the input signal. The maximum sampling rate is the speed at which samples can be continuously converted and is typically the inverse of the conversion time. However, some converters have a significant latency between the input and the output due to pipelining or multiplexing, yet they still maintain a high sampling rate.\n\nD/A settling time and sampling rate: In a D/A converter, the settling time is defined as the time it takes for the converter to settle to within some specified amount of the final value (usually 0.5 LSB). The sampling rate is the rate at which samples can be continuously converted and is typically the inverse of the settling time.\n\nSampling-time uncertainty affects both A/D and D/A converters when their sampling instances are ill-defined. To quantify this uncertainty, also known as aperture jitter, for sinusoidal waveforms, consider a full-scale signal applied to an N-bit, signed, A/D converter with a certain frequency. The uncertainty is less of a problem near the peak values of the waveform but becomes significant at the zero-crossing where the rate of change is maximum.\n\nDynamic range is generally the ratio of the maximum to minimum signal amplitudes that a converter can meaningfully process. A common metric quantifying dynamic range is the maximum achievable signal-to-noise and distortion ratio (SNDR), specified as the ratio of the rms value of an input sinusoidal signal to the rms output noise plus the distortion measured when that same sinusoid is present at the output. Dynamic range can also be expressed as an effective number of bits (Neff) by computing the resolution of an ideal converter whose SQNR is exactly the same as the SNDR of the converter under test.\n\nThe effective resolution bandwidth specifies the band over which SNDR is within 3 dB of its highest value. This approach often results in a dynamic range measurement that is a function of the frequency of the sinusoidal input, providing a more realistic way of measuring the performance of a converter than extrapolating the nonlinearity performance found using dc inputs.\n\nFinally, it should be mentioned that the distortion level of some converters remains at a fixed level and is not a function of the input signal level. Thus, as the input signal level is decreased, the signal-to-distortion ratio decreases. This behavior occurs because the distortion level is often determined by component matching and thus is fixed once the converter is realized. However, in some converters, the distortion level decreases as the input signal level is decreased, which is often a desirable property to have. For example, most 1-bit oversampling converters have this desirable property since they do not rely on component matching and their distortion level is often a result of weak nonlinear effects at the input stage.\n\n#### EXAMPLE 15.4\n\nConsider a 3-bit D/A converter in which Vref = 4 V, with the following measured voltage values:\n\nFind the offset and gain deviations in units of LSBs, the INL (endpoint) and DNL deviations (in units of LSBs), the effective number of bits of absolute precision, and the effective number of bits of relative precision.\n\n#### Solution\n\nFirst, note that 1 LSB corresponds to Vref / 2^3 = 0.5 V.\n\n1. The offset deviation is found by dividing the measured offset voltage by 1 LSB, resulting in 0.022 LSB.\n2. The gain deviation is calculated using the formula provided, resulting in -0.04 LSB.\n\nFor INL and DNL deviations, offset and gain deviations are first removed from the measured D/A values. The offset-free, gain-free, scaled values are then used to calculate the INL and DNL deviations.\n\n3. The largest deviation between the measured values and ideal values corresponds to the absolute precision, which, in this case, is 8.5 bits.\n4. The relative precision is calculated using the INL deviations, resulting in 10.2 bits.\n\n#### EXAMPLE 15.5\n\nA full-scale sinusoidal waveform is applied to a 12-bit A/D converter, and the output is digitally analyzed. If the fundamental has a normalized power of 1 W while the remaining power is 0.5 μW, what is the effective number of bits for the converter?\n\n#### Solution\n\nThe signal-to-noise and distortion ratio (SNDR) is calculated from the given powers, resulting in 63 dB. Using this SNDR value, the effective number of bits (Neff) is determined to be 10.2 effective bits."
},
{
    "text": "The converter's precision is gauged by the discrepancy between anticipated and actual transfer responses, encapsulating offset, gain, and linearity discrepancies as absolute accuracy. Relative accuracy, also known as maximum integral nonlinearity error, is the measure of precision once offset and gain discrepancies are rectified.\n\nAccuracy can be conveyed as a percentage of the full-scale value error, by the effective number of bits, or as a fraction of the least significant bit (LSB). For instance, a 12-bit converter's error is less than the full-scale value divided by \\(2^{12}\\).\n\nThe distinction between resolution and accuracy must be recognized; a converter might have a 12-bit resolution but only 10-bit accuracy, or vice versa. An accuracy surpassing the resolution indicates an exceptionally controlled transfer response.\n\nIntegral nonlinearity (INL) is a prevalent accuracy metric, specifying the converter's input-output deviation from an ideal linear relationship. After offset and gain errors are adjusted, INL is the deviation from a straight line, which can be conservatively measured using endpoints or best-fit criteria.\n\nDifferential nonlinearity (DNL) measures the variation in analog step sizes from the ideal 1 LSB step. An ideal converter has a maximum DNL of 0; any deviation signifies a variation in step sizes.\n\nMonotonicity in a D/A converter ensures the output increases with input. If the maximum DNL error is less than 1 LSB, the converter is guaranteed monotonic. Similarly, a maximum INL less than 0.5 LSB ensures monotonicity.\n\nMissing codes in an A/D converter refer to outputs that should be present but are absent due to nonlinearity. A maximum DNL error less than 1 LSB or maximum INL error less than 0.5 LSB ensures no missing codes.\n\nConversion time in an A/D converter is the duration to complete a single measurement, while the sampling rate is the maximum frequency at which samples can be converted. Settling time in a D/A converter is the duration to stabilize to a specified precision, and the sampling rate is the inverse of this time.\n\nSampling-time uncertainty, or aperture jitter, affects converter accuracy, especially at high frequencies. It quantifies the converter's ability to precisely sample a signal at the correct time.\n\nDynamic range is the converter's capacity to process signals of varying amplitudes, often quantified by the signal-to-noise and distortion ratio (SNDR). The effective number of bits (Neff) can also express dynamic range, calculated based on SNDR.\n\nThe effective resolution bandwidth is the frequency range over which the converter maintains peak SNDR within 3 dB of its best value. This metric provides a realistic measure of converter performance at different frequencies.\n\nDistortion levels in some converters remain constant regardless of input signal level, while in others, they decrease with decreasing signal level, which is often a desirable trait.\n\nThe examples provided demonstrate the calculation of offset, gain, INL, DNL errors, and the determination of effective number of bits for both absolute and relative accuracy in a 3-bit D/A converter. Another example calculates the effective number of bits for a 12-bit A/D converter based on SNDR."
},
{
    "text": "- In Nyquist-rate converters, each input value directly corresponds to a specific output value. Oversampling converters enhance the signal-to-noise ratio (SNR) by functioning at a much higher rate than the input signal's Nyquist frequency and removing quantization noise that falls outside the signal's bandwidth. [p. 606]\n- Data converters convert between digital binary codes and analog voltages or currents. In a perfect converter, these binary codes align precisely with analog signal levels that are evenly spaced. [p. 607]\n- An ideal quantizer, when not overloaded, introduces quantization noise that is additive and less than half the magnitude of an LSB. [p. 609]\n- Quantization noise can be represented as a uniformly distributed random variable ranging from $-\\mathrm{LSB} / 2$ to $+\\mathrm{LSB} / 2$. For a sinusoidal input, this leads to a peak SNR of $6.02 \\mathrm{~N} + 1.76 \\mathrm{~dB}$ in an ideal N-bit converter. [p. 611]\n- Integral nonlinearity (INL) is a widely used metric for accuracy, indicating the extent to which a converter's input-output relationship deviates from the ideal or best-fit linear relationship. [p. 616]\n- Both differential nonlinearity (DNL) and INL are assessed at direct current (dc) or very low input frequencies, earning them the designation as measures of static nonlinearity. [p. 616]\n- Variability in a converter's sampling times, known as aperture jitter, can significantly impair performance at high input signal frequencies. [p. 617]\n- The primary metric for accuracy at high input signal frequencies is dynamic range, commonly quantified by the maximum signal-to-noise and distortion ratio (SNDR). This can be expressed in decibels or as an effective number of bits. A converter's effective resolution bandwidth defines the frequency range within which the SNDR remains within 3 dB of its peak value. [p. 618]"
},
{
    "text": "- In Nyquist-rate converters, each input value directly corresponds to a specific output value. Oversampling converters enhance the Signal-to-Noise Ratio (SNR) by functioning at speeds significantly higher than the input signal's Nyquist rate and by filtering out quantization noise that falls outside the signal's bandwidth. [p. 606]\n- Data converters convert between digital binary codes and analog voltages or currents. In a perfect converter, these binary codes align precisely with analog signal levels that are evenly spaced. [p. 607]\n- An ideal quantizer, when not overloaded, introduces quantization noise that is additive and less than half the magnitude of an LSB. [p. 609]\n- Quantization noise can be represented as a random variable uniformly spread between $-\\mathrm{LSB} / 2$ and $+\\mathrm{LSB} / 2$. For a sinusoidal input, this leads to a peak SNR of $6.02 \\mathrm{~N} + 1.76 \\mathrm{~dB}$ in an ideal N-bit converter. [p. 611]\n- Integral Nonlinearity (INL) is a widely-used metric for accuracy, indicating the extent to which a converter's input-output relationship deviates from the ideal or best-fit linear relationship. [p. 616]\n- Both Differential Nonlinearity (DNL) and INL are assessed at direct current (dc) or very low input frequencies, earning them the designation as measures of static nonlinearity. [p. 616]\n- Variability in a converter's sampling times, known as aperture jitter, can significantly impair performance at high input signal frequencies. [p. 617]\n- The primary metric for accuracy at high input signal frequencies is dynamic range, typically quantified by the maximum Signal-to-Noise and Distortion Ratio (SNDR). This can be expressed in decibels or as an effective number of bits. A converter's effective resolution bandwidth defines the frequency range within which the SNDR remains within 3 dB of its peak value. [p. 618]"
},
{
    "text": "- In Nyquist-rate converters, each input value directly corresponds to a specific output value. Oversampling converters enhance SNR by functioning at speeds significantly higher than the input signal's Nyquist rate and removing quantization noise beyond the signal's bandwidth. [p. 606]\n- Data converters convert between digital binary codes and analog voltages or currents. In an ideal scenario, these binary codes match analog signal levels that are uniformly spaced. [p. 607]\n- An ideal quantizer, when not overloaded, introduces quantization noise that is additive and less than half the magnitude of an LSB. [p. 609]\n- Quantization noise can be represented as a random variable uniformly spread between $-\\mathrm{LSB} / 2$ and $+\\mathrm{LSB} / 2$. For a sinusoidal input, this leads to a peak SNR of $6.02 \\mathrm{~N} + 1.76 \\mathrm{~dB}$ for an N-bit ideal converter. [p. 611]\n- Integral nonlinearity (INL) is a widely-used metric for accuracy, indicating the deviation of a converter's input-output relationship from the ideal or best-fit linear model. [p. 616]\n- Both DNL and INL are assessed at dc or very low input frequencies, categorizing them as measures of static nonlinearity. [p. 616]\n- The inconsistency in a converter's sampling times, known as aperture jitter, can significantly limit performance at high input signal frequencies. [p. 617]\n- The primary accuracy metric at high input signal frequencies is dynamic range, typically expressed by the maximum achievable signal-to-noise and distortion ratio (SNDR). This can be denoted in dB or as an effective number of bits. A converter's effective resolution bandwidth defines the frequency range where the SNDR remains within 3 dB of its peak value. [p. 618]"
},
{
    "text": "- In Nyquist-rate converters, each input value directly corresponds to a specific output value. Oversampling converters enhance the signal-to-noise ratio (SNR) by functioning at speeds significantly higher than the input signal's Nyquist rate and by filtering out quantization noise that falls outside the signal's bandwidth. [p. 606]\n- Data converters facilitate the conversion between digital binary codes and analog voltages or currents. In a perfect converter, the binary codes align precisely with analog signal levels that are evenly spaced. [p. 607]\n- An ideal quantizer, when not overloaded, introduces quantization noise that is additive and less than half the magnitude of an LSB. [p. 609]\n- Quantization noise can be represented as a random variable uniformly distributed between negative LSB/2 and positive LSB/2. For a sinusoidal input, this leads to a peak SNR of 6.02N + 1.76 dB in an ideal N-bit converter. [p. 611]\n- Integral nonlinearity (INL) is a widely used metric for accuracy, indicating the extent to which a converter's input-output relationship deviates from the ideal or best-fit linear relationship. [p. 616]\n- Both differential nonlinearity (DNL) and INL are assessed at direct current (dc) or very low input frequencies, earning them the designation as measures of static nonlinearity. [p. 616]\n- Variability in a converter's sampling times, known as aperture jitter, can significantly impair performance at high input signal frequencies. [p. 617]\n- The predominant metric for accuracy at high input signal frequencies is dynamic range, commonly quantified by the maximum achievable signal-to-noise and distortion ratio (SNDR). This can be expressed in decibels or as an effective number of bits. A converter's effective resolution bandwidth defines the frequency range within which the SNDR remains within 3 dB of its peak value. [p. 618]"
},
{
    "text": "- In Nyquist-rate converters, each input value directly corresponds to a specific output value. Oversampling converters enhance SNR by functioning significantly faster than the input signal's Nyquist rate and filtering out quantization noise beyond the signal bandwidth. [p. 606]\n- Data converters convert between digital binary codes and analog voltages or currents. In an optimal converter, the binary codes map to analog signal levels that are exactly evenly spaced. [p. 607]\n- An ideal quantizer, when not overloaded, introduces quantization noise that is additive and less than half an LSB in magnitude. [p. 609]\n- Quantization noise can be represented as a random variable uniformly distributed from $-\\mathrm{LSB} / 2$ to $+\\mathrm{LSB} / 2$. For a sinusoidal input, this leads to a peak SNR of $6.02 \\mathrm{~N} + 1.76 \\mathrm{~dB}$ for an ideal N-bit converter. [p. 611]\n- Integral nonlinearity (INL) is a widely-used metric for accuracy, indicating the deviation of a converter's input-output relationship from the ideal or best-fit linear relationship. [p. 616]\n- Both DNL and INL are assessed at dc or very low input frequencies, hence they are known as measures of static nonlinearity. [p. 616]\n- Variability in a converter's sampling times, termed aperture jitter, can significantly limit performance at high input signal frequencies. [p. 617]\n- The primary metric for accuracy at high input signal frequencies is dynamic range, typically expressed by the maximum achievable signal-to-noise and distortion ratio (SNDR). This can be stated in dB or as an effective number of bits. A converter's effective resolution bandwidth defines the frequency range where SNDR remains within 3 dB of its peak value. [p. 618]"
},
{
    "text": "- In Nyquist-rate converters, each input value directly corresponds to a specific output value. Oversampling converters enhance the Signal-to-Noise Ratio (SNR) by functioning at speeds significantly higher than the input signal's Nyquist rate and filtering out quantization noise that falls outside the signal's bandwidth. [p. 606]\n- Data converters facilitate the conversion between digital binary codes and analog voltages or currents. In a perfect converter, the binary codes accurately represent analog signal levels that are evenly spaced. [p. 607]\n- An ideal quantizer, when not overloaded, introduces quantization noise that is additive and less than half the magnitude of an LSB. [p. 609]\n- Quantization noise can be represented as a random variable uniformly distributed between negative LSB/2 and positive LSB/2. For a sinusoidal input, this leads to a peak SNR of 6.02N + 1.76 dB in an ideal N-bit converter. [p. 611]\n- Integral Nonlinearity (INL) is a widely-used metric for accuracy, indicating the extent to which a converter's input-output relationship deviates from the ideal or best-fit linear relationship. [p. 616]\n- Both Differential Nonlinearity (DNL) and INL are assessed at direct current (dc) or very low input frequencies, earning them the designation as measures of static nonlinearity. [p. 616]\n- Variability in a converter's sampling times, known as aperture jitter, can significantly limit performance at high input signal frequencies. [p. 617]\n- The primary metric for accuracy at high input signal frequencies is dynamic range, typically quantified by the maximum achievable Signal-to-Noise and Distortion Ratio (SNDR). This can be expressed in decibels or as an effective number of bits. A converter's effective resolution bandwidth defines the frequency range within which the SNDR remains within 3 dB of its peak value. [p. 618]"
},
{
    "text": "- In Nyquist-rate converters, each input value directly corresponds to a specific output value. Oversampling converters enhance SNR by functioning significantly faster than the input signal's Nyquist rate and removing quantization noise outside the signal's bandwidth. [p. 606]\n- Data converters convert between digital binary codes and analog voltages or currents. In a perfect converter, the binary codes align exactly with analog signal levels that are uniformly spaced. [p. 607]\n- An ideal quantizer, when not overloaded, introduces quantization noise that is additive and less than half an LSB in magnitude. [p. 609]\n- Quantization noise can be represented as a random variable uniformly distributed from $-\\mathrm{LSB} / 2$ to $+\\mathrm{LSB} / 2$. For a sinusoidal input, this leads to a peak SNR of $6.02 \\mathrm{~N} + 1.76 \\mathrm{~dB}$ in an ideal N-bit converter. [p. 611]\n- Integral nonlinearity (INL) is a widely-used metric for accuracy, indicating the extent to which a converter's input-output relationship deviates from the ideal or best-fit linear relationship. [p. 616]\n- Both DNL and INL are assessed at dc or very low input frequencies, hence they are considered indicators of static nonlinearity. [p. 616]\n- Variability in a converter's sampling times, known as aperture jitter, can significantly impair performance at high input signal frequencies. [p. 617]\n- The primary metric for accuracy at high input signal frequencies is dynamic range, typically measured by the maximum achievable signal-to-noise and distortion ratio (SNDR). This can be expressed in dB or as an effective number of bits. A converter's effective resolution bandwidth defines the frequency range where the SNDR remains within 3 dB of its peak value. [p. 618]"
},
{
    "text": "- In Nyquist-rate converters, each input value directly corresponds to a specific output value. Oversampling converters enhance SNR by functioning significantly faster than the input signal's Nyquist rate and filtering out quantization noise beyond the signal's bandwidth. [p. 606]\n- Data converters convert between digital binary codes and analog voltages or currents. In an ideal scenario, these binary codes align perfectly with analog signal levels that are evenly spaced. [p. 607]\n- An ideal quantizer, when not overloaded, introduces quantization noise that is additive and less than half the magnitude of an LSB. [p. 609]\n- Quantization noise can be represented as a random variable uniformly distributed from $-\\mathrm{LSB} / 2$ to $+\\mathrm{LSB} / 2$. For a sinusoidal input, this leads to a peak SNR of $6.02 \\mathrm{~N} + 1.76 \\mathrm{~dB}$ in an ideal N-bit converter. [p. 611]\n- Integral nonlinearity (INL) is a widely-used metric for accuracy, indicating the deviation of a converter's input-output relationship from the ideal or best-fit linear model. [p. 616]\n- Both DNL and INL are assessed at dc or very low input frequencies, earning them the designation as measures of static nonlinearity. [p. 616]\n- Aperture jitter, which is the uncertainty in a converter's sampling times, can significantly impair performance at high input signal frequencies. [p. 617]\n- The primary metric for accuracy at high input signal frequencies is dynamic range, typically quantified by the maximum achievable signal-to-noise and distortion ratio (SNDR). This can be expressed in dB or as an effective number of bits. A converter's effective resolution bandwidth defines the frequency range where the SNDR remains within 3 dB of its peak value. [p. 618]"
}
]