[

{
    "text": "Key Point: Decoder-based D/A converters function by generating a set of analog reference levels and selecting one via appropriate switches dictated by an input digital code.\n\nOne of the earliest integrated MOS 8-bit D/A converters relied on choosing a specific tap from a segmented resistor string using a switch network [Hamadé, 1978]. ${ }^{1}$ This switch network was configured in a tree-like decoder, similar to the 3-bit D/A converter depicted in Fig. 16.1. Note that there exists precisely one low-impedance path between the resistor string and the buffer input, determined by the digital input word, $\\mathrm{B}_{\\text {in }}$. In a CMOS design, transmission gates might replace n-channel switches. However, using only n-channel pass transistors allows for a compact layout of the transistor-tree decoder, as no contacts are needed within the tree. Moreover, an n-channel-only approach is comparable in speed to a CMOS transmission-gate implementation; the extra drain and source capacitance to ground in transmission gates is counterbalanced by the reduced switch resistance due to the parallel combination of p-channel and n-channel transistors. Additionally, transmission-gate implementations can operate closer to the positive voltage supply.\n\nWith the resistor-string method, assuming the buffer's offset voltage is independent of its input voltage, the D/A converter ensures monotonicity because any tap on the resistor string will have a lower voltage than its upper neighbor. The accuracy of this D/A converter hinges on the matching precision of R in the resistor string. While this precision depends on the resistor type, polysilicon resistors can achieve approximately 10 bits of accuracy.\n\nThe primary speed limitation is the delay through the switch network. In a multiplying D/A converter, the delay through the resistor string also becomes a significant factor since $\\mathrm{V}_{\\text {ref }}$ acts as a second input signal. A practical method for estimating settling-time behavior in RC-type circuits (those with only real-axis poles) is the zero-value time-constant approach detailed in Section 4.2.4 [Sedra, 1991].\n\n[^0]image_name:Fig. 16.1 Resistor-string 3-bit D/A converter with a transmission-gate, tree-like decoder\ndescription:The circuit is a 3-bit digital-to-analog converter (DAC) using a resistor string and transmission gate tree-like decoder. The switches are controlled by the digital inputs b1, b2, and b3, and their complements. The buffer provides low output impedance for driving loads.\n\nFig. 16.1 Resistor-string 3-bit D/A converter with a transmission-gate, tree-like decoder.\n\nSpecifically, the dominant high-frequency time constant is calculated as the sum of individual time constants from each capacitance when all other capacitances are considered open circuits. To determine the individual time constant for a specific capacitance, independent voltage sources are replaced with ground (independent current sources are opened), and the resistance seen by that capacitor is identified.\n\n#### EXAMPLE 16.1\n\nDemonstrate that the time constant for a network of $n$ resistors, each of size $R$ in series, with capacitive loading $C$ at each node (see Fig. 16.2), is approximately $\\tau=R C\\left(n^{2} / 2\\right)$. Determine the settling time required for the output to reach 0.1 percent of its final value.\n\n#### Solution\n\nThe zero-value time constant for the first capacitor on the left is simply RC. The second capacitor from the left has an individual time constant of 2 RC, and so on. Thus, the dominant high-frequency time constant, $\\tau$, is approximated as\n\n$$\n\\tau \\cong R C(1+2+\\cdots+n)\n$$\n\nThe sum from 1 to $n$ equals $n(n+1) / 2$, and for a large $n$, the dominant time constant\nimage_name:Fig. 16.2 Estimating the time constant for n resistors and capacitors in series.\ndescription:The diagram labeled \"Fig. 16.2 Estimating the time constant for n resistors and capacitors in series\" illustrates a series circuit composed of multiple resistors (R) and capacitors (C). The circuit is shown as a chain of resistor-capacitor pairs connected in series, with the number of pairs represented by 'n'. The input voltage \\( V_{in} \\) is a step function, starting at \\( V_p \\) at time \\( t = 0 \\), indicating that the input voltage suddenly jumps to \\( V_p \\) at the initial moment.\n\nOn the right side of the diagram, the output voltage \\( V_{out} \\) is depicted as an increasing curve, which suggests an exponential charging behavior typical of RC circuits. The graph shows \\( V_{out} \\) rising from zero towards its final value, following the equation \\( V_{out} \\approx (1 - e^{-t/\\tau}) V_p \\), where \\( \\tau \\) is the time constant.\n\nThe time constant \\( \\tau \\) for this series configuration is estimated as \\( \\tau \\approx RC \\left( \\frac{n^2}{2} \\right) \\), which is derived from the sum of the individual time constants for each RC pair. This formula accounts for the cumulative effect of the resistors and capacitors in series, emphasizing that the overall time constant increases with the square of the number of pairs, \\( n^2 \\), divided by 2.\n\nIn summary, the diagram provides a visual representation of the step response of a series RC circuit with multiple stages, highlighting how the time constant is influenced by the number of resistor-capacitor pairs in the circuit. The exponential rise of \\( V_{out} \\) is a key feature, demonstrating the typical behavior of an RC charging circuit over time.\n\nFig. 16.2 Estimating the time constant for n resistors and capacitors in series.\ncan be estimated by\n\n$$\n\\tau \\cong \\operatorname{RC}\\left(\\frac{\\mathrm{n}^{2}}{2}\\right)\n$$\n\nUsing this time constant to estimate the output voltage charging behavior, we have\n\n$$\n\\mathrm{V}_{\\text {out }} \\cong\\left(1-\\mathrm{e}^{-(t / \\tau)}\\right) \\mathrm{V}_{\\mathrm{p}}\n$$\n\nThus, for $\\mathrm{V}_{\\text {out }}$ to reach $0.999 \\mathrm{~V}_{\\mathrm{p}}$, approximately $7 \\tau$ is required.\n\nIn a higher-speed design, logic can be employed for the decoder, with a single bus connected to a single resistor-string node, as shown in Fig. 16.3. This approach occupies more area for the decoder and results in substantial capacitive loading on the single bus due to the $2^{\\mathrm{N}}$ transistors' junctions connected to it. However, if the digital decoder is pipelined, the D/A converter can achieve moderate speed."
},
{
    "text": "Key Point: Decoder-based D/A converters function by generating a set of analog reference levels and selecting one via appropriate switches determined by an input digital code.\n\nOne of the initial integrated MOS 8-bit D/A converters relied on choosing a specific tap from a segmented resistor string using a switch network [Hamadé, 1978]. ${ }^{1}$ This switch network was arranged in a tree-like decoder, similar to the 3-bit D/A converter depicted in Fig. 16.1. Note that there will always be exactly one low-impedance path between the resistor string and the buffer input, dictated by the digital input word, $\\mathrm{B}_{\\text {in }}$. In a CMOS design, transmission gates might be employed instead of n-channel switches. However, when solely n-channel pass transistors are used, the transistor-tree decoder can be compactly laid out due to the absence of contacts in the tree. Additionally, an n-channel-only approach is not significantly slower than a CMOS transmission-gate implementation; the latter has extra drain and source capacitance to ground, but this is balanced by the reduced switch resistance from the parallel combination of p-channel and n-channel transistors. Furthermore, a transmission-gate implementation can operate closer to the positive voltage supply.\n\nWith a resistor-string method, assuming the buffer's offset voltage is independent of its input voltage, the D/A converter ensures monotonicity because any tap on the resistor string will have a lower voltage than its adjacent upper tap. The accuracy of this D/A converter hinges on the matching precision of R in the resistor string. While this resistor-matching precision depends on the resistor type, using polysilicon resistors can achieve approximately 10 bits of accuracy.\n\nThe primary speed limitation is the delay through the switch network. In a multiplying D/A, the delay through the resistor string also becomes a significant delay source since $\\mathrm{V}_{\\text {ref }}$ acts as a second input signal. A practical method for estimating settling-time behavior in RC-type circuits (those with only real-axis poles) is the zero-value time-constant approach detailed in Section 4.2.4 [Sedra, 1991].\n\n[^0]image_name:Fig. 16.1 Resistor-string 3-bit D/A converter with a transmission-gate, tree-like decoder\ndescription:The circuit is a 3-bit digital-to-analog converter (DAC) utilizing a resistor string and transmission gate tree-like decoder. The switches are controlled by the digital inputs b1, b2, and b3, and their complements. The buffer provides low output impedance for driving loads.\n\nFig. 16.1 Resistor-string 3-bit D/A converter with a transmission-gate, tree-like decoder.\n\nSpecifically, the dominant high-frequency time constant is calculated as the sum of individual time constants from each capacitance when all other capacitances are set to zero (i.e., replaced with open circuits). To determine the individual time constant for a specific capacitance, independent voltage sources are replaced with ground (independent current sources are opened), and the resistance seen by that capacitor is identified.\n\n#### EXAMPLE 16.1\n\nDemonstrate that the time constant for a network of $n$ resistors, each of size $R$ in series, with capacitive loading $C$ at each node (see Fig. 16.2), is given by $\\tau=R C\\left(n^{2} / 2\\right)$. How much settling time is required for the output to reach 0.1 percent of its final value?\n\n#### Solution\n\nThe zero-value time-constant for the first capacitor on the left is simply RC. The second capacitor from the left has an individual time constant of 2 RC, and so on. Thus, the dominant high-frequency time constant, $\\tau$, is estimated as\n\n$$\n\\tau \\cong R C(1+2+\\cdots+n)\n$$\n\nThe sum from 1 to $n$ equals $n(n+1) / 2$, and for a large $n$, the dominant time constant\nimage_name:Fig. 16.2 Estimating the time constant for n resistors and capacitors in series.\ndescription:The diagram labeled \"Fig. 16.2 Estimating the time constant for n resistors and capacitors in series\" illustrates a series circuit composed of multiple resistors (R) and capacitors (C). The circuit is shown as a chain of resistor-capacitor pairs connected in series, with the number of pairs represented by 'n'. The input voltage \\( V_{in} \\) is a step function, starting at \\( V_p \\) at time \\( t = 0 \\), indicating that the input voltage suddenly jumps to \\( V_p \\) at the initial moment.\n\nOn the right side of the diagram, the output voltage \\( V_{out} \\) is depicted as an increasing curve, which suggests an exponential charging behavior typical of RC circuits. The graph shows \\( V_{out} \\) rising from zero towards its final value, following the equation \\( V_{out} \\approx (1 - e^{-t/\\tau}) V_p \\), where \\( \\tau \\) is the time constant.\n\nThe time constant \\( \\tau \\) for this series configuration is estimated as \\( \\tau \\approx RC \\left( \\frac{n^2}{2} \\right) \\), which is derived from the sum of the individual time constants for each RC pair. This formula accounts for the cumulative effect of the resistors and capacitors in series, emphasizing that the overall time constant increases with the square of the number of pairs, \\( n^2 \\), divided by 2.\n\nIn summary, the diagram provides a visual representation of the step response of a series RC circuit with multiple stages, highlighting how the time constant is influenced by the number of resistor-capacitor pairs in the circuit. The exponential rise of \\( V_{out} \\) is a key feature, demonstrating the typical behavior of an RC charging circuit over time.\n\nFig. 16.2 Estimating the time constant for n resistors and capacitors in series.\ncan be approximated by\n\n$$\n\\tau \\cong \\operatorname{RC}\\left(\\frac{\\mathrm{n}^{2}}{2}\\right)\n$$\n\nUsing this time constant to estimate the output voltage charging behavior, we get\n\n$$\n\\mathrm{V}_{\\text {out }} \\cong\\left(1-\\mathrm{e}^{-(t / \\tau)}\\right) \\mathrm{V}_{\\mathrm{p}}\n$$\n\nThus, for $\\mathrm{V}_{\\text {out }}$ to reach $0.999 \\mathrm{~V}_{\\mathrm{p}}$, a time of approximately $7 \\tau$ is necessary.\n\nIn a higher-speed implementation, logic can be employed for the decoder, with a single bus connected to a single resistor-string node, as shown in Fig. 16.3. This method requires more area for the decoder and results in significant capacitive loading on the single bus due to the $2^{\\mathrm{N}}$ transistors' junctions connected to it. However, if the digital decoder is pipelined, the D/A can achieve moderate speed."
},
{
    "text": "Key Point: Decoder-based D/A converters function by generating a set of analog reference levels and selecting one via appropriate switches determined by an input digital code.\n\nOne of the initial integrated MOS 8-bit D/A converters relied on selecting a specific tap from a segmented resistor string using a switch network [Hamadé, 1978]. ${ }^{1}$ This switch network was configured in a tree-like decoder, similar to the 3-bit D/A converter depicted in Fig. 16.1. Note that there exists precisely one low-impedance path between the resistor string and the buffer input, dictated by the digital input word, $\\mathrm{B}_{\\text {in }}$. In a CMOS design, transmission gates might replace n-channel switches. However, employing only n-channel pass transistors allows for a compact transistor-tree decoder layout, as no contacts are needed within the tree. Moreover, an n-channel-only approach offers comparable speed to a CMOS transmission-gate implementation; while transmission gates introduce extra drain and source capacitance to ground, this is counterbalanced by the reduced switch resistance due to the parallel combination of p-channel and n-channel transistors. Additionally, transmission-gate implementations can operate closer to the positive voltage supply.\n\nWith a resistor-string approach, assuming the buffer's offset voltage is independent of its input voltage, the D/A converter ensures monotonicity, as any tap on the resistor string will have a lower voltage than its adjacent upper tap. The accuracy of this D/A converter hinges on the matching precision of R in the resistor string. Although this precision depends on the resistor type, polysilicon resistors can achieve up to approximately 10 bits of accuracy.\n\nThe primary speed limitation is the delay through the switch network. In a multiplying D/A converter, the delay through the resistor string also becomes a significant delay factor, as $\\mathrm{V}_{\\text {ref }}$ acts as a secondary input signal. A practical method for estimating settling-time behavior in RC-type circuits (those with only real-axis poles) is the zero-value time-constant approach detailed in Section 4.2.4 [Sedra, 1991].\n\n[^0]image_name:Fig. 16.1 Resistor-string 3-bit D/A converter with a transmission-gate, tree-like decoder\ndescription:The circuit is a 3-bit digital-to-analog converter (DAC) utilizing a resistor string and a transmission gate tree-like decoder. The switches are controlled by digital inputs b1, b2, and b3, along with their complements. The buffer provides low output impedance for driving loads.\n\nFig. 16.1 Resistor-string 3-bit D/A converter with a transmission-gate, tree-like decoder.\n\nSpecifically, the dominant high-frequency time constant is calculated as the sum of individual time constants from each capacitance when all other capacitances are considered open circuits. To determine the individual time constant for a specific capacitance, independent voltage sources are replaced with ground (independent current sources are opened), and the resistance seen by that capacitor is identified.\n\n#### EXAMPLE 16.1\n\nDemonstrate that the time constant for a network of $n$ resistors, each of size $R$ in series, with capacitive loading $C$ at each node (refer to Fig. 16.2), is given by $\\tau=R C\\left(n^{2} / 2\\right)$. How much settling time is required for the output to reach 0.1 percent of its final value?\n\n#### Solution\n\nThe zero-value time constant for the first capacitor on the left is simply RC. The second capacitor from the left has an individual time constant of 2 RC, and so forth. Thus, the dominant high-frequency time constant, $\\tau$, is approximated as\n\n$$\n\\tau \\cong R C(1+2+\\cdots+n)\n$$\n\nThe sum from 1 to $n$ equals $n(n+1) / 2$, and for a large $n$, the dominant time constant\nimage_name:Fig. 16.2 Estimating the time constant for n resistors and capacitors in series.\ndescription:The diagram labeled \"Fig. 16.2 Estimating the time constant for n resistors and capacitors in series\" illustrates a series circuit comprising multiple resistors (R) and capacitors (C). The circuit is depicted as a chain of resistor-capacitor pairs connected in series, with the number of pairs denoted by 'n'. The input voltage \\( V_{in} \\) is a step function, initiating at \\( V_p \\) at time \\( t = 0 \\), indicating a sudden jump to \\( V_p \\) at the initial moment.\n\nOn the right side of the diagram, the output voltage \\( V_{out} \\) is shown as an increasing curve, indicative of the exponential charging behavior typical of RC circuits. The graph depicts \\( V_{out} \\) rising from zero towards its final value, adhering to the equation \\( V_{out} \\approx (1 - e^{-t/\\tau}) V_p \\), where \\( \\tau \\) is the time constant.\n\nThe time constant \\( \\tau \\) for this series configuration is estimated as \\( \\tau \\approx RC \\left( \\frac{n^2}{2} \\right) \\), derived from the sum of the individual time constants for each RC pair. This formula accounts for the cumulative effect of the resistors and capacitors in series, emphasizing that the overall time constant increases with the square of the number of pairs, \\( n^2 \\), divided by 2.\n\nIn summary, the diagram provides a visual representation of the step response of a series RC circuit with multiple stages, highlighting how the time constant is influenced by the number of resistor-capacitor pairs in the circuit. The exponential rise of \\( V_{out} \\) is a key feature, demonstrating the typical behavior of an RC charging circuit over time.\n\nFig. 16.2 Estimating the time constant for n resistors and capacitors in series.\ncan be estimated by\n\n$$\n\\tau \\cong \\operatorname{RC}\\left(\\frac{\\mathrm{n}^{2}}{2}\\right)\n$$\n\nUsing this time constant to estimate the output voltage charging behavior, we obtain\n\n$$\n\\mathrm{V}_{\\text {out }} \\cong\\left(1-\\mathrm{e}^{-(t / \\tau)}\\right) \\mathrm{V}_{\\mathrm{p}}\n$$\n\nThus, for $\\mathrm{V}_{\\text {out }}$ to reach $0.999 \\mathrm{~V}_{\\mathrm{p}}$, approximately $7 \\tau$ is required.\n\nIn a higher-speed implementation, logic can be employed for the decoder, with a single bus connected to a single resistor-string node, as shown in Fig. 16.3. This method necessitates more area for the decoder and results in substantial capacitive loading on the single bus due to the connection of $2^{\\mathrm{N}}$ transistors' junctions. However, if the digital decoder is pipelined, the D/A converter can achieve moderate speed."
},
{
    "text": "Key Point: Decoder-based D/A converters function by generating a set of analog reference levels and selecting one via appropriate switches dictated by an input digital code.\n\nOne of the earliest integrated MOS 8-bit D/A converters relied on choosing a specific tap from a segmented resistor string using a switch network [Hamadé, 1978]. ${ }^{1}$ This switch network was arranged in a tree-like decoder, akin to the 3-bit D/A converter depicted in Fig. 16.1. Note that there exists precisely one low-impedance path between the resistor string and the buffer input, determined by the digital input word, $\\mathrm{B}_{\\text {in }}$. In a CMOS design, transmission gates might replace n-channel switches. However, employing only n-channel pass transistors allows for a compact transistor-tree decoder layout, as no contacts are needed within the tree. Additionally, an n-channel-only approach is comparable in speed to a CMOS transmission-gate implementation; the extra drain and source capacitance to ground in transmission gates is balanced by the reduced switch resistance due to the parallel combination of p-channel and n-channel transistors. Furthermore, transmission-gate implementations can operate closer to the positive voltage supply.\n\nWith a resistor-string method, assuming the buffer's offset voltage is independent of its input voltage, the D/A converter ensures monotonicity, as any resistor string tap must have a lower voltage than its adjacent upper tap. The accuracy of this D/A converter hinges on the matching precision of R in the resistor string. While this precision depends on the resistor type, polysilicon resistors can achieve approximately 10 bits of accuracy.\n\nThe primary speed limitation is the delay through the switch network. In a multiplying D/A converter, the delay through the resistor string also becomes a significant factor, as $\\mathrm{V}_{\\text {ref }}$ acts as a second input signal. A valuable technique for estimating settling-time behavior in RC-type circuits (those with only real-axis poles) is the zero-value time-constant approach detailed in Section 4.2.4 [Sedra, 1991].\n\n[^0]image_name:Fig. 16.1 Resistor-string 3-bit D/A converter with a transmission-gate, tree-like decoder\ndescription:The circuit is a 3-bit digital-to-analog converter (DAC) utilizing a resistor string and a transmission gate tree-like decoder. The switches are controlled by digital inputs b1, b2, and b3, along with their complements. The buffer provides low output impedance for driving loads.\n\nFig. 16.1 Resistor-string 3-bit D/A converter with a transmission-gate, tree-like decoder.\n\nSpecifically, the dominant high-frequency time constant is calculated as the sum of individual time constants from each capacitance when all other capacitances are treated as open circuits. To determine the individual time constant for a specific capacitance, independent voltage sources are replaced with ground (independent current sources are opened), and the resistance seen by that capacitor is identified.\n\n#### EXAMPLE 16.1\n\nDemonstrate that the time constant for a network of $n$ resistors, each of size $R$ in series, with capacitive loading $C$ at each node (see Fig. 16.2), is given by $\\tau=R C\\left(n^{2} / 2\\right)$. How much settling time is required for the output to reach 0.1 percent of its final value?\n\n#### Solution\n\nThe zero-value time constant for the first capacitor on the left is simply RC. The second capacitor from the left has an individual time constant of 2 RC, and so forth. Thus, the dominant high-frequency time constant, $\\tau$, is estimated as\n\n$$\n\\tau \\cong R C(1+2+\\cdots+n)\n$$\n\nThe sum from 1 to $n$ equals $n(n+1) / 2$, and for a large $n$, the dominant time constant\nimage_name:Fig. 16.2 Estimating the time constant for n resistors and capacitors in series.\ndescription:The diagram labeled \"Fig. 16.2 Estimating the time constant for n resistors and capacitors in series\" illustrates a series circuit composed of multiple resistors (R) and capacitors (C). The circuit is shown as a chain of resistor-capacitor pairs connected in series, with the number of pairs represented by 'n'. The input voltage \\( V_{in} \\) is a step function, starting at \\( V_p \\) at time \\( t = 0 \\), indicating that the input voltage suddenly jumps to \\( V_p \\) at the initial moment.\n\nOn the right side of the diagram, the output voltage \\( V_{out} \\) is depicted as an increasing curve, suggesting an exponential charging behavior typical of RC circuits. The graph shows \\( V_{out} \\) rising from zero towards its final value, following the equation \\( V_{out} \\approx (1 - e^{-t/\\tau}) V_p \\), where \\( \\tau \\) is the time constant.\n\nThe time constant \\( \\tau \\) for this series configuration is estimated as \\( \\tau \\approx RC \\left( \\frac{n^2}{2} \\right) \\), derived from the sum of the individual time constants for each RC pair. This formula accounts for the cumulative effect of the resistors and capacitors in series, emphasizing that the overall time constant increases with the square of the number of pairs, \\( n^2 \\), divided by 2.\n\nIn summary, the diagram provides a visual representation of the step response of a series RC circuit with multiple stages, highlighting how the time constant is influenced by the number of resistor-capacitor pairs in the circuit. The exponential rise of \\( V_{out} \\) is a key feature, demonstrating the typical behavior of an RC charging circuit over time.\n\nFig. 16.2 Estimating the time constant for n resistors and capacitors in series.\ncan be approximated by\n\n$$\n\\tau \\cong \\operatorname{RC}\\left(\\frac{\\mathrm{n}^{2}}{2}\\right)\n$$\n\nUsing this time constant to estimate the output voltage charging behavior, we get\n\n$$\n\\mathrm{V}_{\\text {out }} \\cong\\left(1-\\mathrm{e}^{-(t / \\tau)}\\right) \\mathrm{V}_{\\mathrm{p}}\n$$\n\nThus, for $\\mathrm{V}_{\\text {out }}$ to reach $0.999 \\mathrm{~V}_{\\mathrm{p}}$, approximately $7 \\tau$ is required.\n\nIn a higher-speed design, logic can be employed for the decoder, with a single bus connected to a single resistor-string node, as shown in Fig. 16.3. This method occupies more area for the decoder and results in significant capacitive loading on the single bus due to the $2^{\\mathrm{N}}$ transistors' junctions connected to it. However, if the digital decoder is pipelined, the D/A converter can achieve moderate speed."
},
{
    "text": "Key Point: Decoder-based D/A converters function by generating a set of analog reference levels and selecting one via appropriate switches activated by an input digital code.\n\nOne of the earliest integrated MOS 8-bit D/A converters relied on choosing a specific tap from a segmented resistor string using a switch network [Hamadé, 1978]. ${ }^{1}$ This switch network was arranged in a tree-like decoder, similar to the 3-bit D/A converter depicted in Fig. 16.1. Note that there is exactly one low-impedance path between the resistor string and the buffer input, determined by the digital input word, $\\mathrm{B}_{\\text {in }}$. In a CMOS design, transmission gates might replace n-channel switches. However, using only n-channel pass transistors allows for a compact transistor-tree decoder layout, as no contacts are needed in the tree. Additionally, an n-channel-only approach is not significantly slower than a CMOS transmission-gate implementation; the extra drain and source capacitance in transmission gates is balanced by the reduced switch resistance due to the parallel combination of p-channel and n-channel transistors. Moreover, transmission-gate implementations can operate closer to the positive voltage supply.\n\nWith a resistor-string method, assuming the buffer's offset voltage is independent of its input voltage, the D/A converter ensures monotonicity because any tap on the resistor string will have a lower voltage than its upper neighbor. The accuracy of this D/A converter hinges on the matching precision of R in the resistor string. While this precision depends on the resistor type, polysilicon resistors can achieve up to approximately 10 bits of accuracy.\n\nThe primary speed limitation is the delay through the switch network. In a multiplying D/A converter, the delay through the resistor string also becomes a significant delay source since $\\mathrm{V}_{\\text {ref }}$ acts as a second input signal. A practical method for estimating settling-time behavior in RC-type circuits (those with only real-axis poles) is the zero-value time-constant approach detailed in Section 4.2.4 [Sedra, 1991].\n\n[^0]image_name:Fig. 16.1 Resistor-string 3-bit D/A converter with a transmission-gate, tree-like decoder\ndescription:The circuit is a 3-bit digital-to-analog converter (DAC) utilizing a resistor string and a transmission-gate tree-like decoder. The switches are controlled by digital inputs b1, b2, and b3, along with their complements. The buffer provides low output impedance for driving loads.\n\nFig. 16.1 Resistor-string 3-bit D/A converter with a transmission-gate, tree-like decoder.\n\nSpecifically, the dominant high-frequency time constant is calculated as the sum of individual time constants from each capacitance when all other capacitances are considered open circuits. To determine the individual time constant for a specific capacitance, independent voltage sources are replaced with ground (independent current sources are opened), and the resistance seen by that capacitor is identified.\n\n#### EXAMPLE 16.1\n\nDemonstrate that the time constant for a network of $n$ resistors, each of size $R$ in series, with capacitive loading $C$ at each node (refer to Fig. 16.2), is given by $\\tau=R C\\left(n^{2} / 2\\right)$. How much settling time is required for the output to reach 0.1 percent of its final value?\n\n#### Solution\n\nThe zero-value time constant for the first capacitor on the left is simply RC. The second capacitor from the left has an individual time constant of 2 RC, and so on. Thus, the dominant high-frequency time constant, $\\tau$, is approximated as\n\n$$\n\\tau \\cong R C(1+2+\\cdots+n)\n$$\n\nThe sum from 1 to $n$ equals $n(n+1) / 2$, and for a large $n$, the dominant time constant\nimage_name:Fig. 16.2 Estimating the time constant for n resistors and capacitors in series.\ndescription:The diagram labeled \"Fig. 16.2 Estimating the time constant for n resistors and capacitors in series\" illustrates a series circuit comprising multiple resistors (R) and capacitors (C). The circuit is shown as a chain of resistor-capacitor pairs connected in series, with the number of pairs denoted by 'n'. The input voltage \\( V_{in} \\) is a step function, starting at \\( V_p \\) at time \\( t = 0 \\), indicating a sudden jump to \\( V_p \\) at the initial moment.\n\nOn the right side of the diagram, the output voltage \\( V_{out} \\) is depicted as an increasing curve, typical of exponential charging behavior in RC circuits. The graph shows \\( V_{out} \\) rising from zero towards its final value, following the equation \\( V_{out} \\approx (1 - e^{-t/\\tau}) V_p \\), where \\( \\tau \\) is the time constant.\n\nThe time constant \\( \\tau \\) for this series configuration is estimated as \\( \\tau \\approx RC \\left( \\frac{n^2}{2} \\right) \\), derived from the sum of the individual time constants for each RC pair. This formula accounts for the cumulative effect of the resistors and capacitors in series, emphasizing that the overall time constant increases with the square of the number of pairs, \\( n^2 \\), divided by 2.\n\nIn summary, the diagram visually represents the step response of a series RC circuit with multiple stages, highlighting how the time constant is influenced by the number of resistor-capacitor pairs. The exponential rise of \\( V_{out} \\) is a key feature, demonstrating the typical behavior of an RC charging circuit over time.\n\nFig. 16.2 Estimating the time constant for n resistors and capacitors in series.\ncan be estimated by\n\n$$\n\\tau \\cong \\operatorname{RC}\\left(\\frac{\\mathrm{n}^{2}}{2}\\right)\n$$\n\nUsing this time constant to estimate the output voltage charging behavior, we have\n\n$$\n\\mathrm{V}_{\\text {out }} \\cong\\left(1-\\mathrm{e}^{-(t / \\tau)}\\right) \\mathrm{V}_{\\mathrm{p}}\n$$\n\nThus, for $\\mathrm{V}_{\\text {out }}$ to reach $0.999 \\mathrm{~V}_{\\mathrm{p}}$, approximately $7 \\tau$ is required.\n\nIn a higher-speed design, logic can be employed for the decoder, with a single bus connected to a single resistor-string node, as shown in Fig. 16.3. This approach occupies more area for the decoder and results in significant capacitive loading on the single bus due to the $2^{\\mathrm{N}}$ transistors' junctions connected to it. However, if the digital decoder is pipelined, the D/A converter can achieve moderate speed."
},
{
    "text": "Key Point: Decoder-based D/A converters function by generating a set of analog reference levels and selecting one via appropriate switches activated by an input digital code.\n\nOne of the earliest integrated MOS 8-bit D/A converters relied on selecting a specific tap from a segmented resistor string using a switch network [Hamadé, 1978]. ${ }^{1}$ This switch network was configured in a tree-like decoder, similar to the 3-bit D/A converter depicted in Fig. 16.1. Note that there exists precisely one low-impedance path between the resistor string and the buffer input, determined by the digital input word, $\\mathrm{B}_{\\text {in }}$. In a CMOS design, transmission gates might replace n-channel switches. However, when solely n-channel pass transistors are employed, the transistor-tree decoder can be compactly laid out due to the absence of contacts in the tree. Additionally, an n-channel-only approach is not significantly slower than a CMOS transmission-gate implementation; the extra drain and source capacitance to ground in transmission gates is counterbalanced by the reduced switch resistance from the parallel combination of p-channel and n-channel transistors. Moreover, a transmission-gate implementation can operate closer to the positive voltage supply.\n\nWith a resistor-string method, assuming the buffer's offset voltage is independent of its input voltage, the D/A converter ensures monotonicity because any tap on the resistor string will have a lower voltage than its adjacent upper tap. The accuracy of this D/A converter hinges on the matching precision of R in the resistor string. While this precision depends on the resistor type, using polysilicon resistors can achieve approximately 10 bits of accuracy.\n\nThe primary speed limitation is the delay through the switch network. In a multiplying D/A converter, the delay through the resistor string also becomes a significant delay source since $\\mathrm{V}_{\\text {ref }}$ acts as a second input signal. A valuable technique for estimating settling-time behavior in RC-type circuits (circuits with only real-axis poles) is the zero-value time-constant approach detailed in Section 4.2.4 [Sedra, 1991].\n\n[^0]image_name:Fig. 16.1 Resistor-string 3-bit D/A converter with a transmission-gate, tree-like decoder\ndescription:The circuit is a 3-bit digital-to-analog converter (DAC) utilizing a resistor string and a transmission gate tree-like decoder. The switches are controlled by digital inputs b1, b2, and b3, along with their complements. The buffer provides low output impedance for driving loads.\n\nFig. 16.1 Resistor-string 3-bit D/A converter with a transmission-gate, tree-like decoder.\n\nSpecifically, the dominant high-frequency time constant is calculated as the sum of individual time constants from each capacitance when all other capacitances are considered open circuits. To determine the individual time constant for a specific capacitance, independent voltage sources are replaced with ground (independent current sources are opened), and the resistance seen by that capacitor is identified.\n\n#### EXAMPLE 16.1\n\nDemonstrate that the time constant for a network of $n$ resistors, each of size $R$ in series, with capacitive loading $C$ at each node (see Fig. 16.2), is given by $\\tau=R C\\left(n^{2} / 2\\right)$. Determine the settling time required for the output to reach 0.1 percent of its final value.\n\n#### Solution\n\nThe zero-value time constant for the first capacitor on the left is simply RC. The second capacitor from the left has an individual time constant of 2 RC, and so on. Thus, the dominant high-frequency time constant, $\\tau$, is estimated as\n\n$$\n\\tau \\cong R C(1+2+\\cdots+n)\n$$\n\nThe sum from 1 to $n$ equals $n(n+1) / 2$, and for a large $n$, the dominant time constant\nimage_name:Fig. 16.2 Estimating the time constant for n resistors and capacitors in series.\ndescription:The diagram labeled \"Fig. 16.2 Estimating the time constant for n resistors and capacitors in series\" illustrates a series circuit comprising multiple resistors (R) and capacitors (C). The circuit is shown as a chain of resistor-capacitor pairs connected in series, with the number of pairs denoted by 'n'. The input voltage \\( V_{in} \\) is a step function, starting at \\( V_p \\) at time \\( t = 0 \\), indicating a sudden jump to \\( V_p \\) at the initial moment.\n\nOn the right side of the diagram, the output voltage \\( V_{out} \\) is depicted as an increasing curve, typical of exponential charging behavior in RC circuits. The graph shows \\( V_{out} \\) rising from zero towards its final value, following the equation \\( V_{out} \\approx (1 - e^{-t/\\tau}) V_p \\), where \\( \\tau \\) is the time constant.\n\nThe time constant \\( \\tau \\) for this series configuration is estimated as \\( \\tau \\approx RC \\left( \\frac{n^2}{2} \\right) \\), derived from the sum of the individual time constants for each RC pair. This formula accounts for the cumulative effect of the resistors and capacitors in series, emphasizing that the overall time constant increases with the square of the number of pairs, \\( n^2 \\), divided by 2.\n\nIn summary, the diagram visually represents the step response of a series RC circuit with multiple stages, highlighting how the time constant is influenced by the number of resistor-capacitor pairs. The exponential rise of \\( V_{out} \\) demonstrates the typical behavior of an RC charging circuit over time.\n\nFig. 16.2 Estimating the time constant for n resistors and capacitors in series.\ncan be approximated by\n\n$$\n\\tau \\cong \\operatorname{RC}\\left(\\frac{\\mathrm{n}^{2}}{2}\\right)\n$$\n\nUsing this time constant to estimate the output voltage charging behavior, we have\n\n$$\n\\mathrm{V}_{\\text {out }} \\cong\\left(1-\\mathrm{e}^{-(t / \\tau)}\\right) \\mathrm{V}_{\\mathrm{p}}\n$$\n\nThus, for $\\mathrm{V}_{\\text {out }}$ to reach $0.999 \\mathrm{~V}_{\\mathrm{p}}$, approximately $7 \\tau$ is required.\n\nIn a higher-speed implementation, logic can be employed for the decoder, with a single bus connected to a single resistor-string node, as shown in Fig. 16.3. This method occupies more area for the decoder and results in significant capacitive loading on the single bus due to the $2^{\\mathrm{N}}$ transistors' junctions connected to it. However, if the digital decoder is pipelined, the D/A converter can achieve moderate speed."
},
{
    "text": "Key Point: Decoder-based D/A converters function by generating a set of analog reference levels and selecting one via appropriate switches determined by an input digital code.\n\nOne of the earliest integrated MOS 8-bit D/A converters relied on choosing a specific tap from a segmented resistor string using a switch network [Hamadé, 1978]. ${ }^{1}$ This switch network was arranged in a tree-like decoder, similar to the 3-bit D/A converter depicted in Fig. 16.1. Note that there will always be exactly one low-impedance path between the resistor string and the buffer input, dictated by the digital input word, $\\mathrm{B}_{\\text {in }}$. In a CMOS design, transmission gates might replace n-channel switches. However, using only n-channel pass transistors allows for a compact layout of the transistor-tree decoder, as no contacts are needed within the tree. Moreover, an n-channel-only approach is comparable in speed to a CMOS transmission-gate implementation; while transmission gates have additional drain and source capacitance to ground, this is balanced by the reduced switch resistance due to the parallel combination of p-channel and n-channel transistors. Additionally, transmission-gate implementations can operate closer to the positive voltage supply.\n\nWith the resistor-string method, assuming the buffer's offset voltage is independent of its input voltage, the D/A converter ensures monotonicity because any tap on the resistor string will have a lower voltage than its adjacent upper tap. The accuracy of this D/A converter hinges on the matching precision of R in the resistor string. Although this precision depends on the resistor type, polysilicon resistors can achieve up to approximately 10 bits of accuracy.\n\nThe primary speed limitation is the delay through the switch network. In a multiplying D/A converter, the delay through the resistor string also becomes a significant delay source since $\\mathrm{V}_{\\text {ref }}$ acts as a second input signal. A valuable technique for estimating settling-time behavior in RC-type circuits (those with only real-axis poles) is the zero-value time-constant approach detailed in Section 4.2.4 [Sedra, 1991].\n\n[^0]image_name:Fig. 16.1 Resistor-string 3-bit D/A converter with a transmission-gate, tree-like decoder\ndescription:The circuit is a 3-bit digital-to-analog converter (DAC) utilizing a resistor string and a transmission gate tree-like decoder. The switches are controlled by digital inputs b1, b2, and b3, along with their complements. The buffer provides low output impedance for driving loads.\n\nFig. 16.1 Resistor-string 3-bit D/A converter with a transmission-gate, tree-like decoder.\n\nSpecifically, the dominant high-frequency time constant is calculated as the sum of individual time constants from each capacitance when all other capacitances are considered open circuits. To determine the individual time constant for a specific capacitance, independent voltage sources are replaced with ground (independent current sources are opened), and the resistance seen by that capacitor is identified.\n\n#### EXAMPLE 16.1\n\nDemonstrate that the time constant for a network of $n$ resistors, each of size $R$ in series, with capacitive loading $C$ at each node (see Fig. 16.2), is approximately $\\tau=R C\\left(n^{2} / 2\\right)$. How much settling time is required for the output to reach 0.1 percent of its final value?\n\n#### Solution\n\nThe zero-value time constant for the first capacitor on the left is simply RC. The second capacitor from the left has an individual time constant of 2 RC, and so on. Thus, the dominant high-frequency time constant, $\\tau$, is estimated as\n\n$$\n\\tau \\cong R C(1+2+\\cdots+n)\n$$\n\nThe sum from 1 to $n$ equals $n(n+1) / 2$, and for a large $n$, the dominant time constant\nimage_name:Fig. 16.2 Estimating the time constant for n resistors and capacitors in series.\ndescription:The diagram labeled \"Fig. 16.2 Estimating the time constant for n resistors and capacitors in series\" illustrates a series circuit comprising multiple resistors (R) and capacitors (C). The circuit is depicted as a chain of resistor-capacitor pairs connected in series, with the number of pairs indicated by 'n'. The input voltage \\( V_{in} \\) is a step function, starting at \\( V_p \\) at time \\( t = 0 \\), indicating a sudden jump to \\( V_p \\) at the initial moment.\n\nOn the right side of the diagram, the output voltage \\( V_{out} \\) is shown as an increasing curve, representing the exponential charging behavior typical of RC circuits. The graph depicts \\( V_{out} \\) rising from zero towards its final value, following the equation \\( V_{out} \\approx (1 - e^{-t/\\tau}) V_p \\), where \\( \\tau \\) is the time constant.\n\nThe time constant \\( \\tau \\) for this series configuration is estimated as \\( \\tau \\approx RC \\left( \\frac{n^2}{2} \\right) \\), derived from the sum of the individual time constants for each RC pair. This formula accounts for the cumulative effect of the resistors and capacitors in series, emphasizing that the overall time constant increases with the square of the number of pairs, \\( n^2 \\), divided by 2.\n\nIn summary, the diagram visually represents the step response of a series RC circuit with multiple stages, highlighting how the time constant is influenced by the number of resistor-capacitor pairs in the circuit. The exponential rise of \\( V_{out} \\) is a key feature, demonstrating the typical behavior of an RC charging circuit over time.\n\nFig. 16.2 Estimating the time constant for n resistors and capacitors in series.\ncan be approximated by\n\n$$\n\\tau \\cong \\operatorname{RC}\\left(\\frac{\\mathrm{n}^{2}}{2}\\right)\n$$\n\nUsing this time constant to estimate the output voltage charging behavior, we have\n\n$$\n\\mathrm{V}_{\\text {out }} \\cong\\left(1-\\mathrm{e}^{-(t / \\tau)}\\right) \\mathrm{V}_{\\mathrm{p}}\n$$\n\nThus, for $\\mathrm{V}_{\\text {out }}$ to reach $0.999 \\mathrm{~V}_{\\mathrm{p}}$, approximately $7 \\tau$ is required.\n\nIn a higher-speed design, logic can be employed for the decoder, with a single bus connected to a single resistor-string node, as shown in Fig. 16.3. This method occupies more area for the decoder and results in significant capacitive loading on the single bus due to the $2^{\\mathrm{N}}$ transistors' junctions connected to it. However, if the digital decoder is pipelined, the D/A converter can achieve moderate speed."
},
{
    "text": "Key Point: Decoder-based D/A converters function by generating a set of analog reference levels and selecting one via appropriate switches determined by an input digital code.\n\nOne of the earliest integrated MOS 8-bit D/A converters relied on choosing a specific tap from a segmented resistor string using a switch network [Hamadé, 1978]. ${ }^{1}$ This switch network was configured in a tree-like decoder, similar to the 3-bit D/A converter depicted in Fig. 16.1. Note that there is exactly one low-impedance path between the resistor string and the buffer input, dictated by the digital input word, $\\mathrm{B}_{\\text {in }}$. In CMOS designs, transmission gates might be employed instead of n-channel switches. However, when only n-channel pass transistors are utilized, the transistor-tree decoder can be very compactly laid out due to the absence of contacts in the tree. Moreover, an n-channel-only approach is not significantly slower than a CMOS transmission-gate implementation; the extra drain and source capacitance to ground in transmission gates is counterbalanced by the reduced switch resistance from the parallel combination of p-channel and n-channel transistors. Additionally, transmission-gate implementations can operate closer to the positive voltage supply.\n\nWith the resistor-string method, assuming the buffer's offset voltage is independent of its input voltage, the D/A converter ensures monotonicity because any tap on the resistor string will have a lower voltage than its adjacent upper tap. The accuracy of this D/A converter hinges on the matching precision of R in the resistor string. While this resistor-matching precision depends on the resistor type, using polysilicon resistors can achieve approximately 10 bits of accuracy.\n\nThe primary speed limitation is the delay through the switch network. In a multiplying D/A converter, the delay through the resistor string also becomes a significant delay source since $\\mathrm{V}_{\\text {ref }}$ acts as a second input signal. A practical method for estimating settling-time behavior in RC-type circuits (those with only real-axis poles) is the zero-value time-constant approach detailed in Section 4.2.4 [Sedra, 1991].\n\n[^0]image_name:Fig. 16.1 Resistor-string 3-bit D/A converter with a transmission-gate, tree-like decoder\ndescription:The circuit is a 3-bit digital-to-analog converter (DAC) using a resistor string and transmission gate tree-like decoder. The switches are controlled by the digital inputs b1, b2, and b3, and their complements. The buffer provides low output impedance for driving loads.\n\nFig. 16.1 Resistor-string 3-bit D/A converter with a transmission-gate, tree-like decoder.\n\nSpecifically, the dominant high-frequency time constant is calculated as the sum of individual time constants due to each capacitance when all other capacitances are considered open circuits. To determine the individual time constant for a specific capacitance, independent voltage sources are replaced with ground (independent current sources are opened), and the resistance seen by that capacitor is identified.\n\n#### EXAMPLE 16.1\n\nDemonstrate that the time constant for a network of $n$ resistors, each of size $R$ in series, with capacitive loading $C$ at each node (refer to Fig. 16.2), is given by $\\tau=R C\\left(n^{2} / 2\\right)$. How much settling time is required for the output to reach 0.1 percent of its final value?\n\n#### Solution\n\nThe zero-value time-constant for the first capacitor on the left is simply RC. The second capacitor from the left has an individual time constant of 2 RC, and so on. Thus, the dominant high-frequency time constant, $\\tau$, is approximated as\n\n$$\n\\tau \\cong R C(1+2+\\cdots+n)\n$$\n\nThe sum from 1 to $n$ can be shown to equal $n(n+1) / 2$, and for a large $n$, the dominant time constant\nimage_name:Fig. 16.2 Estimating the time constant for n resistors and capacitors in series.\ndescription:The diagram labeled \"Fig. 16.2 Estimating the time constant for n resistors and capacitors in series\" illustrates a series circuit composed of multiple resistors (R) and capacitors (C). The circuit is shown as a chain of resistor-capacitor pairs connected in series, with the number of pairs represented by 'n'. The input voltage \\( V_{in} \\) is a step function, starting at \\( V_p \\) at time \\( t = 0 \\), indicating that the input voltage suddenly jumps to \\( V_p \\) at the initial moment.\n\nOn the right side of the diagram, the output voltage \\( V_{out} \\) is depicted as an increasing curve, suggesting an exponential charging behavior typical of RC circuits. The graph shows \\( V_{out} \\) rising from zero towards its final value, following the equation \\( V_{out} \\approx (1 - e^{-t/\\tau}) V_p \\), where \\( \\tau \\) is the time constant.\n\nThe time constant \\( \\tau \\) for this series configuration is estimated as \\( \\tau \\approx RC \\left( \\frac{n^2}{2} \\right) \\), which is derived from the sum of the individual time constants for each RC pair. This formula accounts for the cumulative effect of the resistors and capacitors in series, emphasizing that the overall time constant increases with the square of the number of pairs, \\( n^2 \\), divided by 2.\n\nIn summary, the diagram provides a visual representation of the step response of a series RC circuit with multiple stages, highlighting how the time constant is influenced by the number of resistor-capacitor pairs in the circuit. The exponential rise of \\( V_{out} \\) is a key feature, demonstrating the typical behavior of an RC charging circuit over time.\n\nFig. 16.2 Estimating the time constant for n resistors and capacitors in series.\nis approximated by\n\n$$\n\\tau \\cong \\operatorname{RC}\\left(\\frac{\\mathrm{n}^{2}}{2}\\right)\n$$\n\nUsing this time constant to estimate the output voltage charging behavior, we get\n\n$$\n\\mathrm{V}_{\\text {out }} \\cong\\left(1-\\mathrm{e}^{-(t / \\tau)}\\right) \\mathrm{V}_{\\mathrm{p}}\n$$\n\nThus, for $\\mathrm{V}_{\\text {out }}$ to reach $0.999 \\mathrm{~V}_{\\mathrm{p}}$, approximately $7 \\tau$ is required.\n\nIn higher-speed implementations, logic can be employed for the decoder, with a single bus connected to a single resistor-string node, as illustrated in Fig. 16.3. This method occupies more area for the decoder and results in significant capacitive loading on the single bus due to the $2^{\\mathrm{N}}$ transistors' junctions connected to it. However, if the digital decoder is pipelined, the D/A converter can achieve moderate speed."
},
{
    "text": "To minimize digital decoding and substantial capacitive loading, a folded resistor-string $D / A$ converter can be employed, as depicted in Fig. 16.4 [Abrial, 1988]. This method simplifies decoding to resemble that of a digital memory, thereby decreasing the overall decoding area. In this 4-bit example, the most significant bits, $\\left\\{b_{1}, b_{2}\\right\\}$, select the single word line (keeping others low), linking a block of four adjacent resistor nodes to the four-bit lines. The bit-line decoder then connects one of these bit lines to the output buffer. Note that the total number of transistor junctions on the output line is now $2 \\sqrt{2^{\\mathrm{N}}}$, as one set of transistors connects directly to the output line and another to the selected bit line. For a 10-bit converter, this method results in a capacitive load of 64 junctions, compared to 1,024 junctions with the digital-decoding approach in Fig. 16.3. However, the speed increase does not match this significant ratio, as raising a word line requires all bit lines to shift to new voltage levels, not just the one connected to the output buffer."
},
{
    "text": "To minimize digital decoding and substantial capacitive loading, a folded resistor-string $D / A$ converter can be employed, as depicted in Fig. 16.4 [Abrial, 1988]. This method aligns the decoding process closely with that of a digital memory, thereby shrinking the overall decoding area. In this 4-bit illustration, the most significant bits, $\\left\\{b_{1}, b_{2}\\right\\}$, identify the solitary word line to be activated (with all others remaining inactive). This action links a cluster of four contiguous resistor nodes to the four-bit lines. Subsequently, one of these bit lines is routed to the output buffer via the bit-line decoder. It is noteworthy that the cumulative number of transistor junctions on the output line now stands at $2 \\sqrt{2^{\\mathrm{N}}}$, due to one set of transistors directly tied to the output line and another set linked to the selected bit line. Consequently, for a 10-bit converter, this technique results in a capacitive load of 64 junctions, in contrast to 1,024 junctions when utilizing the digital-decoding method illustrated in Fig. 16.3. However, the enhancement in speed does not proportionally match this significant reduction, as elevating a word line necessitates adjusting all bit lines to new voltage levels—beyond just the one connected to the output buffer."
},
{
    "text": "To minimize digital decoding and substantial capacitive loading, a folded resistor-string $D / A$ converter can be employed, as depicted in Fig. 16.4 [Abrial, 1988]. This method aligns the decoding process closely with that of a digital memory, thereby shrinking the overall decoding area. In this 4-bit illustration, the most significant bits, $\\left\\{b_{1}, b_{2}\\right\\}$, identify the solitary word line to be activated (with all others remaining inactive). This action links a cluster of four contiguous resistor nodes to the four-bit lines. Subsequently, one of these bit lines is routed to the output buffer via the bit-line decoder. It is noteworthy that the cumulative number of transistor junctions on the output line now stands at $2 \\sqrt{2^{\\mathrm{N}}}$, due to one set of transistors directly tied to the output line and another set linked to the selected bit line. Consequently, for a 10-bit converter, this technique results in a capacitive load of 64 junctions, in contrast to 1,024 junctions when utilizing the digital-decoding method illustrated in Fig. 16.3. However, the enhancement in speed does not proportionally match this significant reduction, as elevating a word line necessitates adjusting all bit lines to new voltage levels—beyond just the one connected to the output buffer."
},
{
    "text": "To minimize digital decoding and substantial capacitive loading, a folded resistor-string $D / A$ converter can be employed, as depicted in Fig. 16.4 [Abrial, 1988]. This method aligns the decoding process closely with that of a digital memory, thereby shrinking the overall decoding area. In this 4-bit illustration, the most significant bits, $\\left\\{b_{1}, b_{2}\\right\\}$, identify the solitary word line to be activated (with all others remaining inactive). This action links a cluster of four contiguous resistor nodes to the four-bit lines. Subsequently, one of these bit lines is routed to the output buffer via the bit-line decoder. It is noteworthy that the cumulative number of transistor junctions on the output line is now $2 \\sqrt{2^{\\mathrm{N}}}$, attributed to one set of transistors directly connected to the output line and another set linked to the selected bit line. Consequently, for a 10-bit converter, this technique results in a capacitive load of 64 junctions, in contrast to 1,024 junctions when utilizing the digital-decoding method illustrated in Fig. 16.3. However, the speed enhancement does not proportionally match this significant reduction, as elevating a word line necessitates adjusting all bit lines to new voltage levels—beyond just the one connected to the output buffer."
},
{
    "text": "To minimize digital decoding and substantial capacitive loading, a folded resistor-string $D / A$ converter can be employed, as illustrated in Fig. 16.4 [Abrial, 1988]. This method renders the decoding process akin to that of a digital memory, thereby decreasing the overall decoding area. In this 4-bit example, the most significant bits, $\\left\\{b_{1}, b_{2}\\right\\}$, identify the solitary word line to be activated (with all others remaining inactive). This action links a cluster of four contiguous resistor nodes to the four-bit lines. Subsequently, one of these bit lines is connected to the output buffer via the bit-line decoder. It is noteworthy that the cumulative number of transistor junctions on the output line is now $2 \\sqrt{2^{\\mathrm{N}}}$, as one set of transistors directly connects to the output line and another set links to the selected bit line. Consequently, for a 10-bit converter, this technique results in a capacitive load of 64 junctions, in contrast to 1,024 junctions when utilizing the digital-decoding method depicted in Fig. 16.3. However, the enhancement in speed does not correspond to this significant ratio, because when a word line is activated, all bit lines must be adjusted to new voltage levels—不仅仅是 the single bit line connected to the output buffer."
},
{
    "text": "To minimize digital decoding and substantial capacitive loading, a folded resistor-string $D / A$ converter can be employed, as depicted in Fig. 16.4 [Abrial, 1988]. This method aligns decoding closely with that of a digital memory, thereby shrinking the overall decoding area. In this 4-bit illustration, the most significant bits, $\\left\\{b_{1}, b_{2}\\right\\}$, select the solitary word line (keeping others low). This action links a cluster of four neighboring resistor nodes to the four-bit lines. Subsequently, one bit line is routed to the output buffer via the bit-line decoder. Observe that the cumulative count of transistor junctions on the output line now stands at $2 \\sqrt{2^{\\mathrm{N}}}$, due to one set of transistors directly connected to the output line and another to the selected bit line. Consequently, a 10-bit converter under this scheme would bear a capacitive load of 64 junctions, compared to 1,024 junctions with the digital-decoding method shown in Fig. 16.3. However, the speed enhancement does not match this significant ratio, as elevating a word line necessitates adjusting all bit lines to new voltage levels—not solely the one linked to the output buffer."
},
{
    "text": "To minimize digital decoding and substantial capacitive loading, a folded resistor-string $D / A$ converter can be employed, as depicted in Fig. 16.4 [Abrial, 1988]. This method aligns decoding closely with that of a digital memory, thereby shrinking the overall decoding area. In this 4-bit illustration, the most significant bits, $\\left\\{b_{1}, b_{2}\\right\\}$, select the solitary word line (with all others remaining low). This action links a cluster of four contiguous resistor nodes to the four-bit lines. Subsequently, one of these bit lines is routed to the output buffer via the bit-line decoder. Note that the cumulative number of transistor junctions on the output line is now $2 \\sqrt{2^{\\mathrm{N}}}$, due to one set of transistors directly connected to the output line and another set linked to the selected bit line. Consequently, for a 10-bit converter, this method results in a capacitive load of 64 junctions, compared to 1,024 junctions with the digital-decoding technique shown in Fig. 16.3. However, the speed enhancement does not match this significant ratio, as activating a word line necessitates adjusting all bit lines to new voltage levels, not just the one connected to the output buffer."
},
{
    "text": "To minimize digital decoding and substantial capacitive loading, a folded resistor-string $D / A$ converter can be employed, as depicted in Fig. 16.4 [Abrial, 1988]. This method simplifies decoding akin to that of a digital memory, thereby decreasing the overall decoding area. In this 4-bit example, the most significant bits, $\\left\\{b_{1}, b_{2}\\right\\}$, select the solitary word line (keeping others low), linking a block of four contiguous resistor nodes to the four-bit lines. Subsequently, one of these bit lines is connected to the output buffer via the bit-line decoder. Note that the total count of transistor junctions on the output line is now $2 \\sqrt{2^{\\mathrm{N}}}$, as one set of transistors directly connects to the output line and another to the selected bit line. For a 10-bit converter, this method results in a capacitive load of 64 junctions, compared to 1,024 junctions with the digital-decoding method in Fig. 16.3. However, the speed enhancement does not match this significant ratio, since activating a word line necessitates adjusting all bit lines to new voltage levels, not just the one linked to the output buffer."
},
{
    "text": "In this variant, a secondary tapped resistor string is linked between buffers, with their inputs being two neighboring nodes of the primary resistor string, as depicted in Fig. 16.5 [Holloway, 1984]. In the illustrated 6-bit instance, the three\nimage_name:Fig. 16.3 Resistor-string 3-bit D/A converter with digital decoding\ndescription:This circuit is a 3-bit digital-to-analog converter (DAC) utilizing a resistor string and a 3 to 1 of 8 decoder. The resistors are uniformly sized and connected between Vref and GND. The decoder picks one of the 8 taps on the resistor string based on the 3-bit input (b1, b2, b3). The chosen voltage is buffered by an operational amplifier to generate the output Vout.\n\nFig. 16.3 Resistor-string 3-bit D/A converter with digital decoding.\n\nMSBs decide which two adjacent nodes of the first resistor string are connected to the two intermediate buffers. The secondary resistor string linearly interpolates between the two neighboring voltages from the primary resistor string. Ultimately, the output is governed by the lower LSBs, where additional logic must consider that sometimes the top intermediate buffer has the higher voltage, while at other times it has the lower voltage. This method necessitates only $2 \\times 2^{\\mathrm{N} / 2}$ resistors, rendering it appropriate for higher-resolution, low-power applications. This technique also ensures monotonicity, provided the opamps have matched, voltage-insensitive offset voltages. However, the opamps must be swift and low noise, achievable through a BiCMOS process. Another noteworthy aspect is that, since the secondary resistor string is employed to decode only the lower-order bits, the matching requirements for the second resistor string are significantly less stringent than those for the first string.\n\n#### EXAMPLE 16.2\n\nSuppose the first resistor string of a 10-bit, multiple-R-string D/A converter must match to 0.1 percent, and that the first string implements the top 4 bits. What is the matching requirement for the second resistor string, which implements the lower 6 bits?\n\n#### Solution\n\nErrors in the first resistor string directly correspond to errors in the overall D/A output. However, since the second resistor string constitutes the lower LSB bits (6 bits in this case), errors in the matching of these resistors\nimage_name:Fig. 16.4\ndescription:The circuit is a 4-bit folded resistor-string digital-to-analog converter (DAC). It includes a 2 to 1 of 4 decoder for the top 2 bits (b1, b2) and another 2 to 1 of 4 decoder for the lower 2 bits (b3, b4). The resistors are arranged in a matrix to create word and bit lines, controlled by the decoders. The output is amplified by an operational amplifier to produce Vout.\n\nFig. 16.4 A 4-bit folded resistor-string D/A converter.\nresult in an error only in the LSB portion of the output voltage. Consequently, the second resistor string needs to match only to\n\n$$\n\\begin{equation*}\n2^{4} \\times 0.1 \\%=1.6 \\% \\tag{16.1}\n\\end{equation*}\n$$"
},
{
    "text": "In this variation, a secondary tapped resistor string is linked between buffers, with their inputs being two neighboring nodes of the primary resistor string, as depicted in Fig. 16.5 [Holloway, 1984]. In the illustrated 6-bit example, the three\nimage_name:Fig. 16.3 Resistor-string 3-bit D/A converter with digital decoding\ndescription:This circuit is a 3-bit digital-to-analog converter (DAC) utilizing a resistor string and a 3 to 1 of 8 decoder. The resistors are uniformly sized and connected between Vref and GND. The decoder chooses one of the 8 taps on the resistor string based on the 3-bit input (b1, b2, b3). The chosen voltage is buffered by an operational amplifier to generate the output Vout.\n\nFig. 16.3 Resistor-string 3-bit D/A converter with digital decoding.\n\nMSBs dictate which two adjacent nodes of the primary resistor string are connected to the two intermediate buffers. The secondary resistor string linearly interpolates between the two neighboring voltages from the primary resistor string. Ultimately, the output is determined by the lower LSBs, where additional logic must consider that sometimes the top intermediate buffer has the higher voltage, while at other times it has the lower voltage. This method requires only $2 \\times 2^{\\mathrm{N} / 2}$ resistors, making it appropriate for higher-resolution, low-power applications. This technique also ensures monotonicity, provided the opamps have matched, voltage-insensitive offset voltages. However, the opamps must be swift and low noise, which can be accomplished using a BiCMOS process. Another noteworthy point is that, since the secondary resistor string is employed to decode only the lower-order bits, the matching requirements for the secondary resistor string are significantly less stringent than those for the primary string.\n\n#### EXAMPLE 16.2\n\nSuppose the primary resistor string of a 10-bit, multiple-R-string D/A converter must match to 0.1 percent, and that the primary string implements the top 4 bits. What is the matching requirement for the secondary resistor string, which implements the lower 6 bits?\n\n#### Solution\n\nErrors in the primary resistor string directly correspond to errors in the overall D/A output. However, since the secondary resistor string constitutes the lower LSB bits (6 bits in this instance), errors in the matching of these resistors\nimage_name:Fig. 16.4\ndescription:The circuit is a 4-bit folded resistor-string digital-to-analog converter (DAC). It comprises a 2 to 1 of 4 decoder for the top 2 bits (b1, b2) and another 2 to 1 of 4 decoder for the lower 2 bits (b3, b4). The resistors are arranged in a matrix to form word and bit lines, controlled by the decoders. The output is amplified by an operational amplifier to produce Vout.\n\nFig. 16.4 A 4-bit folded resistor-string D/A converter.\nresult in an error solely in the LSB portion of the output voltage. Consequently, the secondary resistor string needs to match only to\n\n$$\n\\begin{equation*}\n2^{4} \\times 0.1 \\%=1.6 \\% \\tag{16.1}\n\\end{equation*}\n$$"
},
{
    "text": "In this variant, a secondary tapped resistor string is linked between buffers whose inputs are two neighboring nodes of the primary resistor string, as depicted in Fig. 16.5 [Holloway, 1984]. In the illustrated 6-bit example, the three\nimage_name:Fig. 16.3 Resistor-string 3-bit D/A converter with digital decoding\ndescription:This circuit is a 3-bit digital-to-analog converter (DAC) utilizing a resistor string and a 3 to 1 of 8 decoder. The resistors are uniformly sized and connected between Vref and GND. The decoder chooses one of the 8 taps on the resistor string based on the 3-bit input (b1, b2, b3). The chosen voltage is buffered by an operational amplifier to generate the output Vout.\n\nFig. 16.3 Resistor-string 3-bit D/A converter with digital decoding.\n\nMSBs determine which two adjacent nodes of the primary resistor string are connected to the two intermediate buffers. The secondary resistor string linearly interpolates between the two neighboring voltages from the primary resistor string. Ultimately, the output is governed by the lower LSBs, where additional logic must consider that sometimes the top intermediate buffer has the higher voltage, while at other times it has the lower voltage. This method necessitates only $2 \\times 2^{\\mathrm{N} / 2}$ resistors, rendering it appropriate for higher-resolution, low-power applications. This method also ensures monotonicity, provided the opamps have matched, voltage-insensitive offset voltages. However, the opamps must be swift and low noise, achievable through a BiCMOS process. Another noteworthy aspect is that, since the secondary resistor string is employed to decode only the lower-order bits, the matching requirements for the secondary resistor string are significantly less stringent than those for the primary string.\n\n#### EXAMPLE 16.2\n\nSuppose the primary resistor string of a 10-bit, multiple-R-string D/A converter must match to 0.1 percent, and that the primary string implements the top 4 bits. What is the matching requirement for the secondary resistor string, which implements the lower 6 bits?\n\n#### Solution\n\nErrors in the primary resistor string directly correspond to errors in the overall D/A output. However, since the secondary resistor string constitutes the lower LSB bits (6 bits in this instance), errors in the matching of these resistors\nimage_name:Fig. 16.4\ndescription:The circuit is a 4-bit folded resistor-string digital-to-analog converter (DAC). It comprises a 2 to 1 of 4 decoder for the top 2 bits (b1, b2) and another 2 to 1 of 4 decoder for the lower 2 bits (b3, b4). The resistors are arranged in a matrix to form word and bit lines, controlled by the decoders. The output is amplified by an operational amplifier to produce Vout.\n\nFig. 16.4 A 4-bit folded resistor-string D/A converter.\nresult in an error only in the LSB portion of the output voltage. Consequently, the secondary resistor string needs to match only to\n\n$$\n\\begin{equation*}\n2^{4} \\times 0.1 \\%=1.6 \\% \\tag{16.1}\n\\end{equation*}\n$$"
},
{
    "text": "In this variant, a secondary tapped resistor string is linked between buffers, with their inputs being two neighboring nodes of the primary resistor string, as depicted in Fig. 16.5 [Holloway, 1984]. In the illustrated 6-bit example, the three\nimage_name:Fig. 16.3 Resistor-string 3-bit D/A converter with digital decoding\ndescription:This circuit is a 3-bit digital-to-analog converter (DAC) utilizing a resistor string and a 3 to 1 of 8 decoder. The resistors are uniformly sized and connected between Vref and GND. The decoder picks one of the 8 taps on the resistor string based on the 3-bit input (b1, b2, b3). The chosen voltage is buffered by an operational amplifier to generate the output Vout.\n\nFig. 16.3 Resistor-string 3-bit D/A converter with digital decoding.\n\nMSBs select which two adjacent nodes of the primary resistor string are connected to the two intermediate buffers. The secondary resistor string linearly interpolates between the two neighboring voltages from the primary resistor string. Ultimately, the output is governed by the lower LSBs, where additional logic must consider that sometimes the top intermediate buffer has the higher voltage, while at other times it has the lower voltage. This method necessitates only $2 \\times 2^{\\mathrm{N} / 2}$ resistors, rendering it appropriate for higher-resolution, low-power applications. This technique also ensures monotonicity, provided the opamps have matched, voltage-insensitive offset voltages. However, the opamps must be swift and low noise, achievable through a BiCMOS process. Another noteworthy aspect is that, since the secondary resistor string is employed to decode only the lower-order bits, the matching requirements for the secondary resistor string are significantly less stringent than those for the primary string.\n\n#### EXAMPLE 16.2\n\nSuppose the primary resistor string of a 10-bit, multiple-R-string D/A converter must match to 0.1 percent, and that the primary string implements the top 4 bits. What is the matching requirement for the secondary resistor string, which implements the lower 6 bits?\n\n#### Solution\n\nErrors in the primary resistor string directly correspond to errors in the overall D/A output. However, since the secondary resistor string constitutes the lower LSB bits (6 bits in this instance), errors in the matching of these resistors\nimage_name:Fig. 16.4\ndescription:The circuit is a 4-bit folded resistor-string digital-to-analog converter (DAC). It comprises a 2 to 1 of 4 decoder for the top 2 bits (b1, b2) and another 2 to 1 of 4 decoder for the lower 2 bits (b3, b4). The resistors are arranged in a matrix to form word and bit lines, controlled by the decoders. The output is amplified by an operational amplifier to produce Vout.\n\nFig. 16.4 A 4-bit folded resistor-string D/A converter.\nresult in an error only in the LSB portion of the output voltage. Consequently, the secondary resistor string needs to match only to\n\n$$\n\\begin{equation*}\n2^{4} \\times 0.1 \\%=1.6 \\% \\tag{16.1}\n\\end{equation*}\n$$"
},
{
    "text": "In this configuration, a secondary tapped resistor string is linked between buffers whose inputs are connected to two neighboring nodes of the primary resistor string, as depicted in Fig. 16.5 [Holloway, 1984]. In the illustrated 6-bit example, the three\nimage_name:Fig. 16.3 Resistor-string 3-bit D/A converter with digital decoding\ndescription:This circuit is a 3-bit digital-to-analog converter (DAC) utilizing a resistor string and a 3 to 1 of 8 decoder. The resistors are uniformly sized and connected between Vref and GND. The decoder picks one of the 8 taps on the resistor string based on the 3-bit input (b1, b2, b3). The chosen voltage is then buffered by an operational amplifier to generate the output Vout.\n\nFig. 16.3 Resistor-string 3-bit D/A converter with digital decoding.\n\nMSBs decide which two adjacent nodes of the primary resistor string are connected to the two intermediate buffers. The secondary resistor string linearly interpolates between the two neighboring voltages from the primary resistor string. Ultimately, the output is influenced by the lower LSBs, where additional logic must consider that sometimes the top intermediate buffer has the higher voltage, while at other times it has the lower voltage. This method necessitates only $2 \\times 2^{\\mathrm{N} / 2}$ resistors, rendering it appropriate for higher-resolution, low-power applications. This technique also ensures monotonicity, provided the opamps have matched, voltage-insensitive offset voltages. However, the opamps must be swift and low noise, which can be accomplished using a BiCMOS process. Another important aspect is that, since the secondary resistor string is employed to decode only the lower-order bits, the matching requirements for the secondary resistor string are significantly less stringent than those for the primary string.\n\n#### EXAMPLE 16.2\n\nSuppose the primary resistor string of a 10-bit, multiple-R-string D/A converter must match to 0.1 percent, and that the primary string implements the top 4 bits. What is the matching requirement for the secondary resistor string, which implements the lower 6 bits?\n\n#### Solution\n\nErrors in the primary resistor string directly correspond to errors in the overall D/A output. However, since the secondary resistor string constitutes the lower LSB bits (6 bits in this instance), errors in the matching of these resistors\nimage_name:Fig. 16.4\ndescription:The circuit is a 4-bit folded resistor-string digital-to-analog converter (DAC). It includes a 2 to 1 of 4 decoder for the top 2 bits (b1, b2) and another 2 to 1 of 4 decoder for the lower 2 bits (b3, b4). The resistors are organized in a matrix to create word and bit lines, controlled by the decoders. The output is amplified by an operational amplifier to produce Vout.\n\nFig. 16.4 A 4-bit folded resistor-string D/A converter.\nresult in an error only in the LSB portion of the output voltage. Consequently, the secondary resistor string needs to match only to\n\n$$\n\\begin{equation*}\n2^{4} \\times 0.1 \\%=1.6 \\% \\tag{16.1}\n\\end{equation*}\n$$"
},
{
    "text": "In this variant, a secondary tapped resistor string is linked between buffers, with their inputs being two neighboring nodes of the primary resistor string, as depicted in Fig. 16.5 [Holloway, 1984]. In the illustrated 6-bit example, the three\nimage_name:Fig. 16.3 Resistor-string 3-bit D/A converter with digital decoding\ndescription:This circuit is a 3-bit digital-to-analog converter (DAC) utilizing a resistor string and a 3 to 1 of 8 decoder. The resistors are uniformly sized and connected between Vref and GND. The decoder chooses one of the 8 taps on the resistor string based on the 3-bit input (b1, b2, b3). The chosen voltage is buffered by an operational amplifier to generate the output Vout.\n\nFig. 16.3 Resistor-string 3-bit D/A converter with digital decoding.\n\nMSBs dictate which two adjacent nodes of the primary resistor string are connected to the two intermediate buffers. The secondary resistor string linearly interpolates between the two neighboring voltages from the primary resistor string. Ultimately, the output is determined by the lower LSBs, where additional logic must consider that sometimes the top intermediate buffer has the higher voltage, while at other times it has the lower voltage. This method necessitates only $2 \\times 2^{\\mathrm{N} / 2}$ resistors, rendering it appropriate for higher-resolution, low-power applications. This technique also ensures monotonicity, provided the opamps have matched, voltage-insensitive offset voltages. However, the opamps must be swift and low noise, which can be accomplished using a BiCMOS process. Another noteworthy point is that, since the secondary resistor string is employed to decode only the lower-order bits, the matching requirements for the secondary resistor string are significantly less stringent than those for the primary string.\n\n#### EXAMPLE 16.2\n\nSuppose the primary resistor string of a 10-bit, multiple-R-string, D/A converter must match to 0.1 percent, and that the primary string implements the top 4 bits. What is the matching requirement for the secondary resistor string, which implements the lower 6 bits?\n\n#### Solution\n\nErrors in the primary resistor string directly correspond to errors in the overall D/A output. However, since the secondary resistor string constitutes the lower LSB bits (6 bits in this instance), errors in the matching of these resistors\nimage_name:Fig. 16.4\ndescription:The circuit is a 4-bit folded resistor-string digital-to-analog converter (DAC). It comprises a 2 to 1 of 4 decoder for the top 2 bits (b1, b2) and another 2 to 1 of 4 decoder for the lower 2 bits (b3, b4). The resistors are arranged in a matrix to form word and bit lines, controlled by the decoders. The output is amplified by an operational amplifier to produce Vout.\n\nFig. 16.4 A 4-bit folded resistor-string D/A converter.\nresult in an error only in the LSB portion of the output voltage. Consequently, the secondary resistor string needs to match only to\n\n$$\n\\begin{equation*}\n2^{4} \\times 0.1 \\%=1.6 \\% \\tag{16.1}\n\\end{equation*}\n$$"
},
{
    "text": "In this configuration, a secondary tapped resistor string is linked between buffers, with their inputs being two neighboring nodes of the primary resistor string, as depicted in Fig. 16.5 [Holloway, 1984]. In the illustrated 6-bit instance, the three\nimage_name:Fig. 16.3 Resistor-string 3-bit D/A converter with digital decoding\ndescription:This circuit is a 3-bit digital-to-analog converter (DAC) utilizing a resistor string and a 3 to 1 of 8 decoder. The resistors are uniformly sized and connected between Vref and GND. The decoder chooses one of the 8 taps on the resistor string based on the 3-bit input (b1, b2, b3). The chosen voltage is buffered by an operational amplifier to generate the output Vout.\n\nFig. 16.3 Resistor-string 3-bit D/A converter with digital decoding.\n\nMSBs dictate which two adjacent nodes of the primary resistor string are connected to the two intermediate buffers. The secondary resistor string performs linear interpolation between the two neighboring voltages from the primary resistor string. Ultimately, the output is governed by the lower LSBs, where additional logic must consider that sometimes the top intermediate buffer has the higher voltage, while at other times it has the lower voltage. This method necessitates only $2 \\times 2^{\\mathrm{N} / 2}$ resistors, rendering it appropriate for higher-resolution, low-power applications. This technique also ensures monotonicity, provided the opamps have matched, voltage-insensitive offset voltages. However, the opamps must be swift and low noise, achievable through a BiCMOS process. Another noteworthy aspect is that, since the secondary resistor string is employed to decode only the lower-order bits, the matching requirements for the secondary resistor string are significantly less stringent than those for the primary string.\n\n#### EXAMPLE 16.2\n\nSuppose the primary resistor string of a 10-bit, multiple-R-string D/A converter must match to 0.1 percent, and that the primary string implements the top 4 bits. What is the matching requirement for the secondary resistor string, which implements the lower 6 bits?\n\n#### Solution\n\nErrors in the primary resistor string directly correspond to errors in the overall D/A output. However, since the secondary resistor string constitutes the lower LSB bits (6 bits in this scenario), errors in the matching of these resistors\nimage_name:Fig. 16.4\ndescription:The circuit is a 4-bit folded resistor-string digital-to-analog converter (DAC). It comprises a 2 to 1 of 4 decoder for the top 2 bits (b1, b2) and another 2 to 1 of 4 decoder for the lower 2 bits (b3, b4). The resistors are arranged in a matrix to form word and bit lines, controlled by the decoders. The output is amplified by an operational amplifier to produce Vout.\n\nFig. 16.4 A 4-bit folded resistor-string D/A converter.\nresult in an error solely in the LSB portion of the output voltage. Consequently, the secondary resistor string needs to match only to\n\n$$\n\\begin{equation*}\n2^{4} \\times 0.1 \\%=1.6 \\% \\tag{16.1}\n\\end{equation*}\n$$"
},
{
    "text": "In this configuration, a secondary tapped resistor string is linked between buffers, with their inputs being two neighboring nodes of the primary resistor string, as depicted in Fig. 16.5 [Holloway, 1984]. In the illustrated 6-bit example, the three\nimage_name:Fig. 16.3 Resistor-string 3-bit D/A converter with digital decoding\ndescription:This circuit is a 3-bit digital-to-analog converter (DAC) utilizing a resistor string and a 3 to 1 of 8 decoder. The resistors are uniformly sized and connected between Vref and GND. The decoder chooses one of the 8 taps on the resistor string based on the 3-bit input (b1, b2, b3). The chosen voltage is buffered by an operational amplifier to generate the output Vout.\n\nFig. 16.3 Resistor-string 3-bit D/A converter with digital decoding.\n\nMSBs select which two adjacent nodes of the primary resistor string are connected to the two intermediate buffers. The secondary resistor string linearly interpolates between the two neighboring voltages from the primary resistor string. Ultimately, the output is determined by the lower LSBs, where additional logic must consider that sometimes the top intermediate buffer has the higher voltage, while at other times it has the lower voltage. This method necessitates only $2 \\times 2^{\\mathrm{N} / 2}$ resistors, making it appropriate for higher-resolution, low-power applications. This technique also ensures monotonicity, provided the opamps have matched, voltage-insensitive offset voltages. However, the opamps must be swift and low noise, achievable through a BiCMOS process. Another noteworthy point is that, since the secondary resistor string is used to decode only the lower-order bits, the matching requirements for the secondary resistor string are significantly less stringent than those for the primary string.\n\n#### EXAMPLE 16.2\n\nSuppose the primary resistor string of a 10-bit, multiple-R-string D/A converter must match to 0.1 percent, and that the primary string implements the top 4 bits. What is the matching requirement for the secondary resistor string, which implements the lower 6 bits?\n\n#### Solution\n\nErrors in the primary resistor string directly correspond to errors in the overall D/A output. However, since the secondary resistor string constitutes the lower LSB bits (6 bits in this instance), errors in the matching of these resistors\nimage_name:Fig. 16.4\ndescription:The circuit is a 4-bit folded resistor-string digital-to-analog converter (DAC). It comprises a 2 to 1 of 4 decoder for the top 2 bits (b1, b2) and another 2 to 1 of 4 decoder for the lower 2 bits (b3, b4). The resistors are arranged in a matrix to form word and bit lines, controlled by the decoders. The output is amplified by an operational amplifier to produce Vout.\n\nFig. 16.4 A 4-bit folded resistor-string D/A converter.\nresult in an error only in the LSB portion of the output voltage. Consequently, the secondary resistor string needs to match only to\n\n$$\n\\begin{equation*}\n2^{4} \\times 0.1 \\%=1.6 \\% \\tag{16.1}\n\\end{equation*}\n$$"
},
{
    "text": "In scenarios necessitating negative output voltages, the lower end of the resistor string can be linked to $-\\mathrm{V}_{\\text {ref }}$. This setup demands a negative power supply, and crafting a dual power supply with precisely matched voltages is complex, as any mismatch will cause an offset error. Numerous studies on D/A converters presume the availability of $-\\mathrm{V}_{\\text {ret }}$ without detailing its acquisition. Obtaining it off-chip significantly escalates costs. One feasible approach is employing a switched-capacitor gain amplifier, as depicted in Fig. 16.6, where a negative output can be achieved by altering the clock phases of the input switches, effectively creating an inverting amplifier [Martin, 1987]. Another method involves sensing the center tap of the resistor string and adjusting $-\\mathrm{V}_{\\text {ref }}$ to ensure the center tap voltage equals zero volts.\n\nimage_name: Fig. 16.5 Multiple R-string 6-bit D/A converter.\ndescription: This circuit represents a 6-bit D/A converter configured with a multiple R-string setup. It incorporates two operational amplifiers and a series of equally sized resistors to transform a digital signal into an analog output.\n\nFig. 16.5 Multiple R-string 6-bit D/A converter."
},
{
    "text": "In scenarios necessitating negative output voltages, the resistor string's base can be linked to $-\\mathrm{V}_{\\text {ref }}$. This setup demands a negative power source, and crafting a dual power supply with precisely matched voltages is complex, as any mismatch introduces offset errors. Numerous D/A converter studies presume the availability of $-\\mathrm{V}_{\\text {ret }}$ without detailing its acquisition. Obtaining it externally significantly increases costs. One approach involves a switched-capacitor gain amplifier, depicted in Fig. 16.6, where altering the input switch clock phases achieves a negative output, effectively creating an inverting amplifier [Martin, 1987]. Another method is to monitor the resistor string's center tap and adjust $-\\mathrm{V}_{\\text {ref }}$ to set the center tap voltage to zero volts.\nimage_name:Fig. 16.5 Multiple R-string 6-bit D/A converter.\ndescription:The depicted circuit is a 6-bit D/A converter employing a multiple R-string design. It incorporates two operational amplifiers and a series of equally sized resistors to transform a digital signal into an analog output.\n\nFig. 16.5 Multiple R-string 6-bit D/A converter."
},
{
    "text": "In scenarios necessitating negative output voltages, the resistor string's lower end can be linked to $-\\mathrm{V}_{\\text {ref }}$. This setup demands a negative power supply, and crafting a dual power supply with precisely matched voltages is complex, as any mismatch leads to offset errors. Numerous studies on D/A converters presume the availability of $-\\mathrm{V}_{\\text {ret }}$ without detailing its acquisition. Obtaining it off-chip significantly escalates costs. One approach involves employing a switched-capacitor gain amplifier, as depicted in Fig. 16.6, where altering the input switch clock phases enables a negative output, effectively creating an inverting amplifier [Martin, 1987]. Another method is to monitor the resistor string's center tap and adjust $-\\mathrm{V}_{\\text {ref }}$ to ensure the center tap voltage equals zero volts.\nimage_name:Fig. 16.5 Multiple R-string 6-bit D/A converter.\ndescription:The depicted circuit is a 6-bit D/A converter employing a multiple R-string arrangement. It features two operational amplifiers and a series of equally sized resistors to transform a digital signal into an analog output.\n\nFig. 16.5 Multiple R-string 6-bit D/A converter."
},
{
    "text": "In scenarios necessitating negative output voltages, the lower end of the resistor string can be linked to $-\\mathrm{V}_{\\text {ref }}$. This setup demands a negative power supply, and constructing a dual power supply with precisely matched voltages is complex, as any mismatch will cause an offset error. Numerous studies on D/A converters presume the availability of $-\\mathrm{V}_{\\text {ret }}$ without detailing its acquisition. Obtaining it off-chip significantly increases costs. One solution involves using a switched-capacitor gain amplifier, as depicted in Fig. 16.6, where a negative output can be achieved by altering the clock phases of the input switches, effectively creating an inverting amplifier [Martin, 1987]. Another approach is to monitor the center tap of the resistor string and adjust $-\\mathrm{V}_{\\text {ref }}$ to ensure the center tap voltage equals zero volts.\n\nimage_name: Fig. 16.5 Multiple R-string 6-bit D/A converter.\ndescription: The depicted circuit is a 6-bit D/A converter employing a multiple R-string configuration. It incorporates two operational amplifiers and a series of equal-sized resistors to transform a digital signal into an analog output.\n\nFig. 16.5 Multiple R-string 6-bit D/A converter."
},
{
    "text": "In scenarios where negative output voltages are necessary, the lower end of the resistor string can be linked to $-\\mathrm{V}_{\\text{ref}}$. This setup demands a negative power supply, and crafting a dual power supply with precisely matched voltages is complex, as any mismatch will cause an offset error. Numerous papers on D/A converters presume the availability of $-\\mathrm{V}_{\\text{ref}}$ without detailing its derivation. Obtaining it off-chip significantly increases costs. One approach is to employ a switched-capacitor gain amplifier, as illustrated in Fig. 16.6, where a negative output can be achieved by altering the clock phases of the input switches, effectively creating an inverting amplifier [Martin, 1987]. Another method involves sensing the center tap of the resistor string and adjusting $-\\mathrm{V}_{\\text{ref}}$ to set the center tap voltage to zero volts.\nimage_name:Fig. 16.5 Multiple R-string 6-bit D/A converter.\ndescription:This circuit is a 6-bit D/A converter featuring a multiple R-string configuration. It includes two operational amplifiers and a series of equal-sized resistors to transform a digital signal into an analog output.\n\nFig. 16.5 Multiple R-string 6-bit D/A converter."
},
{
    "text": "In scenarios necessitating negative output voltages, the lower end of the resistor string can be linked to $-\\mathrm{V}_{\\text {ref }}$. This setup demands a negative power supply, and constructing a dual power supply with precisely matched voltages is complex, as any mismatch will cause an offset error. Numerous studies on D/A converters presume the availability of $-\\mathrm{V}_{\\text {ret }}$ without detailing its acquisition. Obtaining it off-chip significantly increases costs. One feasible approach is employing a switched-capacitor gain amplifier, as illustrated in Fig. 16.6, where a negative output can be achieved by altering the clock phases of the input switches, effectively creating an inverting amplifier [Martin, 1987]. Another option is to monitor the center tap of the resistor string and adjust $-\\mathrm{V}_{\\text {ref }}$ to set the center tap voltage to zero volts.\nimage_name:Fig. 16.5 Multiple R-string 6-bit D/A converter.\ndescription:The depicted circuit is a 6-bit D/A converter configured with a multiple R-string design. It incorporates two operational amplifiers and a series of equal-sized resistors to transform a digital signal into an analog output.\n\nFig. 16.5 Multiple R-string 6-bit D/A converter."
},
{
    "text": "In scenarios necessitating negative output voltages, the lower end of the resistor string can be linked to $-\\mathrm{V}_{\\text {ref }}$. This setup demands a negative power supply, and crafting a dual power supply with precisely matched voltages is complex, as any mismatch leads to offset errors. Numerous studies on D/A converters presuppose the availability of $-\\mathrm{V}_{\\text {ret }}$ without detailing its derivation. Obtaining it off-chip substantially increases costs. One approach involves employing a switched-capacitor gain amplifier, as depicted in Fig. 16.6, where altering the clock phases of the input switches enables a negative output, effectively creating an inverting amplifier [Martin, 1987]. Another method is to monitor the center tap of the resistor string and adjust $-\\mathrm{V}_{\\text {ref }}$ to ensure the center tap voltage equals zero volts.\n\nimage_name:Fig. 16.5 Multiple R-string 6-bit D/A converter.\ndescription:This circuit represents a 6-bit D/A converter configured with a multiple R-string design. It incorporates two operational amplifiers and a series of equally sized resistors to transform a digital signal into an analog output.\n\nFig. 16.5 Multiple R-string 6-bit D/A converter."
},
{
    "text": "In scenarios necessitating negative output voltages, the lower end of the resistor string can be linked to $-\\mathrm{V}_{\\text {ref }}$. This setup demands a negative power supply, and crafting a dual power supply with precisely matched voltages is complex, as any mismatch will introduce an offset error. Numerous studies on D/A converters presuppose the availability of $-\\mathrm{V}_{\\text {ref }}$ without detailing its derivation. Obtaining it off-chip significantly escalates costs. One feasible approach is employing a switched-capacitor gain amplifier, as depicted in Fig. 16.6, where a negative output can be achieved by altering the clock phases of the input switches to function as an inverting amplifier [Martin, 1987]. Another method involves sensing the midpoint of the resistor string and adjusting $-\\mathrm{V}_{\\text {ref }}$ to set the midpoint voltage to zero volts.\nimage_name:Fig. 16.5 Multiple R-string 6-bit D/A converter.\ndescription:The depicted circuit is a 6-bit D/A converter configured with a multiple R-string arrangement. It incorporates two operational amplifiers and a series of identically sized resistors to transform a digital signal into an analog output.\n\nFig. 16.5 Multiple R-string 6-bit D/A converter."
},
{
    "text": "Key Point: Binary-scaled D/A converters integrate binary-weighted circuit elements (such as currents, resistors, capacitors, etc.) under digital control to produce an analog output. These methods are typically hardware-efficient but can exhibit notable nonlinearities.\n\nThe prevalent method for implementing at least a part of D/A converters involves combining a suitable set of signals that are related in a binary manner. This binary array of signals can be currents (in resistor or current-based methods), although binary-weighted arrays of charge are also frequently employed. This section initially covers resistor-based approaches, followed by charge redistribution and current mode techniques. Monotonicity is not assured in these schemes because entirely different sets of components are used to convert adjacent digital code words into analog voltages or currents, leading to significant Differential Non-Linearity (DNL) when substantial parts of the binary-weighted array are activated or deactivated. For instance, the largest mismatch effect in a binary-array converter typically occurs when the Most Significant Bit (MSB) changes, causing the highest DNL at that point."
},
{
    "text": "Key Point: Binary-scaled D/A converters integrate binary-weighted circuit elements (such as currents, resistors, capacitors, etc.) under digital control to produce an analog output. These methods are typically hardware-efficient but can exhibit substantial nonlinearities.\n\nThe prevalent method for implementing at least a part of D/A converters involves combining a suitable set of signals that are related in a binary manner. This binary array of signals can be currents (in resistor or current-based methods), although binary-weighted arrays of charge are also frequently employed. In this section, resistor-based techniques are initially explored, followed by charge redistribution and current mode methods. Monotonicity is not assured in these schemes because entirely different sets of components are used to convert adjacent digital code words into analog voltages or currents, leading to significant DNL, especially when large segments of the binary-weighted array are activated or deactivated. For instance, the most pronounced mismatch effect in a binary-array converter typically occurs when the MSB changes, causing the highest DNL at that point."
},
{
    "text": "Key Point: Binary-scaled D/A converters integrate binary-weighted circuit elements (such as currents, resistors, capacitors, etc.) under digital control to produce an analog value. These methods are typically hardware-efficient but can exhibit notable nonlinearities.\n\nThe prevalent method for implementing at least a part of D/A converters involves combining a suitable set of signals that are related in a binary manner. This binary array of signals can be currents (in resistor or current-based methods), though binary-weighted arrays of charge are also frequently employed. In this section, resistor-based methods are initially explored, followed by charge redistribution and current mode techniques. Monotonicity is not assured in these schemes because entirely different sets of components are used to convert adjacent digital code words into analog voltages or currents, leading to significant DNL, especially when large segments of the binary-weighted array are activated or deactivated. For instance, the most substantial mismatch effect in a binary-array converter typically occurs when the MSB changes, causing the highest DNL at that point."
},
{
    "text": "Key Point: Binary-scaled D/A converters integrate binary-weighted circuit elements (such as currents, resistors, capacitors, etc.) under digital control to produce an analog output. These methods are typically hardware-efficient but can exhibit substantial nonlinearities.\n\nThe prevalent method for implementing at least a part of D/A converters involves combining a suitable set of signals that are binary-related. This binary array of signals can be currents (in resistor or current-based methods), though binary-weighted arrays of charge are also frequently employed. This section initially covers resistor-based approaches, followed by charge redistribution and current mode techniques. Monotonicity is not assured in these schemes because entirely different sets of components are used to convert adjacent digital code words into analog voltages or currents, leading to significant Differential Non-Linearity (DNL) when large sections of the binary-weighted array are activated or deactivated. For instance, the most pronounced mismatch effect in a binary-array converter typically occurs when the Most Significant Bit (MSB) changes, causing the highest DNL at that point."
},
{
    "text": "Key Point: Binary-scaled D/A converters utilize binary-weighted circuit elements (such as currents, resistors, capacitors, etc.) under digital control to produce an analog output. While these methods are typically hardware-efficient, they can experience notable nonlinearities.\n\nThe prevalent method for implementing at least a part of D/A converters involves combining a suitable set of signals that are binary-related. This binary array can consist of currents (in resistor or current-based methods), though binary-weighted arrays of charge are also frequently employed. This section initially covers resistor-based techniques, followed by charge redistribution and current mode methods. Monotonicity is not assured in these schemes due to the use of entirely different component sets for converting adjacent digital code words into analog voltages or currents, leading to significant DNL, especially when substantial parts of the binary-weighted array are activated or deactivated. For instance, the most pronounced mismatch in a binary-array converter typically occurs when the MSB changes, causing the highest DNL at this point."
},
{
    "text": "Key Point: Binary-scaled D/A converters integrate binary-weighted circuit elements (such as currents, resistors, capacitors, etc.) under digital control to produce an analog output. These methods are typically hardware-efficient but can exhibit substantial nonlinearities.\n\nThe prevalent method for implementing at least a part of D/A converters involves combining a suitable set of signals that are related in a binary manner. This binary array of signals can be currents (in resistor or current-based methods), although binary-weighted arrays of charge are also frequently employed. This section initially covers resistor-based approaches, followed by charge redistribution and current mode techniques. Monotonicity is not assured in these schemes because entirely different sets of components are used to convert adjacent digital code words into analog voltages or currents, leading to significant Differential Non-Linearity (DNL) when large segments of the binary-weighted array are activated or deactivated. For instance, the most pronounced mismatch effect in a binary-array converter typically occurs when the Most Significant Bit (MSB) changes, causing the highest DNL at that point."
},
{
    "text": "Key Point: Binary-scaled D/A converters integrate binary-weighted circuit elements (such as currents, resistors, capacitors, etc.) under digital control to produce an analog value. These methods are typically hardware-efficient but can exhibit substantial nonlinearities.\n\nThe prevalent method for implementing at least part of D/A converters involves combining a suitable set of signals that are related in a binary manner. This binary array of signals can be currents (in resistor or current-based methods), although binary-weighted arrays of charge are also frequently employed. In this section, resistor-based methods are initially explored, followed by charge redistribution and current mode techniques. Monotonicity is not assured in these schemes because entirely different sets of components are used to convert adjacent digital code words into analog voltages or currents, leading to significant DNL, especially when large segments of the binary-weighted array are activated or deactivated. For instance, the most pronounced mismatch effect in a binary-array converter typically occurs when the MSB changes, causing the highest DNL at this point."
},
{
    "text": "Key Point: Binary-scaled D/A converters integrate binary-weighted circuit elements (such as currents, resistors, capacitors) under digital control to produce an analog output. These methods are typically hardware-efficient but can exhibit substantial nonlinearities.\n\nThe prevalent method for implementing at least a part of D/A converters involves blending a suitable set of signals that are interconnected in a binary manner. This binary arrangement of signals can consist of currents (in resistor or current-based methods), although binary-weighted arrays of charge are also frequently employed. This section initially covers resistor-based techniques, followed by charge redistribution and current mode methods. Monotonicity is not assured in these schemes because entirely different sets of components are used to convert adjacent digital code words into analog voltages or currents, leading to significant DNL, especially when large segments of the binary-weighted array are activated or deactivated. For instance, the most pronounced mismatch in a binary-array converter typically occurs when the MSB changes, causing the highest DNL at that point."
},
{
    "text": "Binary-weighted resistor converters are widely used in bipolar technology, enabling the utilization of bipolar differential pairs for current switching. The fundamental design of a 4-bit converter is illustrated in Fig. 16.7.\n\nWhen $b_{i}$ is 1, the current flowing to the $i$th resistor originates from the virtual ground of the opamp; otherwise, it originates from the ground. Consequently, we derive the following:\n\n$$\n\\begin{align*}\nV_{\\text {out }} & =-R_{F} V_{\\text {ref }}\\left(-\\frac{b_{1}}{2 R}-\\frac{b_{2}}{4 R}-\\frac{b_{3}}{8 R}-\\ldots\\right) \\\\\n& =\\left(\\frac{R_{F}}{R} V_{\\text {ref }}\\right) B_{\\text {in }} \\tag{16.2}\n\\end{align*}\n$$\n\nwhere\n\n$$\n\\begin{equation*}\nB_{i n}=b_{1} 2^{-1}+b_{2} 2^{-2}+b_{3} 2^{-3}+\\cdots \\tag{16.3}\n\\end{equation*}\n$$\n\nimage_name:Fig. 16.6\ndescription:A switched-capacitor gain amplifier circuit employs an op-amp to generate a signed output from a unipolar DAC output. The bit b1 functions as the sign bit.\n\nFig. 16.6 Employing an SC gain amplifier to achieve a signed output from a unipolar (positive) D/A converter output: a high $b_{1}$ results in a negative output.\nimage_name:Fig. 16.7 Binary-weighted 4-bit resistor D/A converter.\ndescription:The circuit comprises a binary-weighted 4-bit resistor D/A converter. It incorporates switches governed by bits b1 to b4 to connect resistors 2R, 4R, 8R, and 16R to a reference voltage -Vref, creating a weighted sum at the op-amp's input. The op-amp then amplifies this sum to yield the output voltage Vout. The feedback resistor RF determines the op-amp's gain.\n\nFig. 16.7 Binary-weighted 4-bit resistor D/A converter.\n\nDespite its advantage of requiring a minimal number of resistors and switches, this method has certain drawbacks. The resistor and current ratios are approximately $2^{\\mathrm{N}}$, which can be substantial depending on N. This significant current ratio necessitates scaling the switches to ensure equal voltage drops across them for varying current levels. Additionally, monotonicity is not assured. Lastly, as discussed on page 633, this method is susceptible to glitches during high-speed operation."
},
{
    "text": "Binary-weighted resistor converters are widely used in bipolar technology, enabling the utilization of bipolar differential pairs for current switching. The fundamental design of a 4-bit converter is illustrated in Fig. 16.7.\n\nWhen $b_{i}$ is 1, the current flowing to the $i$th resistor originates from the virtual ground of the opamp; otherwise, it originates from the ground. Consequently, we derive:\n\n$$\n\\begin{align*}\nV_{\\text {out }} & =-R_{F} V_{\\text {ref }}\\left(-\\frac{b_{1}}{2 R}-\\frac{b_{2}}{4 R}-\\frac{b_{3}}{8 R}-\\ldots\\right) \\\\\n& =\\left(\\frac{R_{F}}{R} V_{\\text {ref }}\\right) B_{\\text {in }} \\tag{16.2}\n\\end{align*}\n$$\n\nwhere\n\n$$\n\\begin{equation*}\nB_{i n}=b_{1} 2^{-1}+b_{2} 2^{-2}+b_{3} 2^{-3}+\\cdots \\tag{16.3}\n\\end{equation*}\n$$\n\nimage_name:Fig. 16.6\ndescription:The circuit features a switched-capacitor gain amplifier employing an op-amp to generate a signed output from a unipolar DAC output. The bit b1 functions as the sign bit.\n\nFig. 16.6 Utilizing an SC gain amplifier to achieve a signed output from a unipolar (positive) D/A converter output: a high $b_{1}$ results in a negative output.\nimage_name:Fig. 16.7 Binary-weighted 4-bit resistor D/A converter.\ndescription:The circuit comprises a binary-weighted 4-bit resistor D/A converter. It employs switches governed by bits b1 to b4 to link resistors 2R, 4R, 8R, and 16R to a reference voltage -Vref, creating a weighted sum at the op-amp's input. The op-amp then amplifies this sum to yield the output voltage Vout. The feedback resistor RF determines the op-amp's gain.\n\nFig. 16.7 Binary-weighted 4-bit resistor D/A converter.\n\nDespite not necessitating a large number of resistors or switches, this method has certain drawbacks. The resistor and current ratios are approximately $2^{\\mathrm{N}}$, which can be substantial depending on N. This significant current ratio demands that the switches be scaled to ensure equal voltage drops across them for diverse current levels. Additionally, monotonicity is not assured. Lastly, as discussed on page 633, this approach is susceptible to glitches during high-speed operation."
},
{
    "text": "Binary-weighted resistor converters are favored in bipolar technology, enabling the use of bipolar differential pairs as current switches. The fundamental design for a 4-bit converter is illustrated in Fig. 16.7.\n\nWhen $b_{i}$ is 1, the current to the $i$th resistor originates from the virtual ground of the opamp; otherwise, it originates from the ground. Consequently, we obtain\n\n$$\n\\begin{align*}\nV_{\\text {out }} & =-R_{F} V_{\\text {ref }}\\left(-\\frac{b_{1}}{2 R}-\\frac{b_{2}}{4 R}-\\frac{b_{3}}{8 R}-\\ldots\\right) \\\\\n& =\\left(\\frac{R_{F}}{R} V_{\\text {ref }}\\right) B_{\\text {in }} \\tag{16.2}\n\\end{align*}\n$$\n\nwhere\n\n$$\n\\begin{equation*}\nB_{i n}=b_{1} 2^{-1}+b_{2} 2^{-2}+b_{3} 2^{-3}+\\cdots \\tag{16.3}\n\\end{equation*}\n$$\n\nimage_name:Fig. 16.6\ndescription:A switched-capacitor gain amplifier circuit using an op-amp to generate a signed output from a unipolar DAC output, with bit b1 serving as the sign bit.\n\nFig. 16.6 Utilizing an SC gain amplifier to achieve a signed output from a unipolar (positive) D/A converter output: a high $b_{1}$ results in a negative output.\nimage_name:Fig. 16.7 Binary-weighted 4-bit resistor D/A converter.\ndescription:The circuit comprises a binary-weighted 4-bit resistor D/A converter. It employs switches governed by bits b1 to b4 to link resistors 2R, 4R, 8R, and 16R to a reference voltage -Vref, creating a weighted sum at the op-amp's input. The op-amp then amplifies this sum to yield the output voltage Vout. The feedback resistor RF determines the op-amp's gain.\n\nFig. 16.7 Binary-weighted 4-bit resistor D/A converter.\n\nDespite not needing a large number of resistors or switches, this method has certain drawbacks. The resistor and current ratios are approximately $2^{\\mathrm{N}}$, which can be substantial depending on N. This significant current ratio necessitates that the switches also be scaled to ensure equal voltage drops across them for diverse current levels. Additionally, monotonicity is not assured. Lastly, as detailed on page 633, this method is susceptible to glitches during high-speed operation."
},
{
    "text": "Binary-weighted resistor converters are favored in bipolar technology, enabling the use of bipolar differential pairs as current switches. The fundamental design for a 4-bit converter is illustrated in Fig. 16.7.\n\nWhen $b_{i}$ is 1, the current to the $i$th resistor originates from the virtual ground of the opamp; otherwise, it flows from the ground. Consequently, we derive:\n\n$$\n\\begin{align*}\nV_{\\text {out }} & =-R_{F} V_{\\text {ref }}\\left(-\\frac{b_{1}}{2 R}-\\frac{b_{2}}{4 R}-\\frac{b_{3}}{8 R}-\\ldots\\right) \\\\\n& =\\left(\\frac{R_{F}}{R} V_{\\text {ref }}\\right) B_{\\text {in }} \\tag{16.2}\n\\end{align*}\n$$\n\nwhere\n\n$$\n\\begin{equation*}\nB_{i n}=b_{1} 2^{-1}+b_{2} 2^{-2}+b_{3} 2^{-3}+\\cdots \\tag{16.3}\n\\end{equation*}\n$$\n\nimage_name:Fig. 16.6\ndescription:The circuit consists of a switched-capacitor gain amplifier employing an op-amp to generate a signed output from a unipolar DAC output. The bit b1 serves as the sign bit.\n\nFig. 16.6 Utilizing an SC gain amplifier to achieve a signed output from a unipolar (positive) D/A converter output: a high $b_{1}$ results in a negative output.\nimage_name:Fig. 16.7 Binary-weighted 4-bit resistor D/A converter.\ndescription:The circuit is a binary-weighted 4-bit resistor D/A converter. It employs switches governed by bits b1 to b4 to connect resistors 2R, 4R, 8R, and 16R to a reference voltage -Vref, creating a weighted sum at the op-amp's input. The op-amp then amplifies this sum to yield the output voltage Vout. The feedback resistor RF determines the op-amp's gain.\n\nFig. 16.7 Binary-weighted 4-bit resistor D/A converter.\n\nWhile this method does not necessitate a large number of resistors or switches, it has certain drawbacks. The resistor and current ratios are approximately $2^{\\mathrm{N}}$, which can be substantial depending on N. This significant current ratio demands that the switches be scaled to ensure equal voltage drops across them for varying current levels. Additionally, monotonicity is not assured. Lastly, this method is susceptible to glitches during high-speed operation, as detailed on page 633."
},
{
    "text": "Binary-weighted resistor converters are favored in bipolar technology, enabling the use of bipolar differential pairs as current switches. The fundamental design for a 4-bit converter is depicted in Fig. 16.7.\n\nWhen $b_{i}$ equals 1, the current to the $i$th resistor is sourced from the virtual ground of the opamp; otherwise, it originates from ground. Consequently, we derive:\n\n$$\n\\begin{align*}\nV_{\\text {out }} & =-R_{F} V_{\\text {ref }}\\left(-\\frac{b_{1}}{2 R}-\\frac{b_{2}}{4 R}-\\frac{b_{3}}{8 R}-\\ldots\\right) \\\\\n& =\\left(\\frac{R_{F}}{R} V_{\\text {ref }}\\right) B_{\\text {in }} \\tag{16.2}\n\\end{align*}\n$$\n\nwhere\n\n$$\n\\begin{equation*}\nB_{i n}=b_{1} 2^{-1}+b_{2} 2^{-2}+b_{3} 2^{-3}+\\cdots \\tag{16.3}\n\\end{equation*}\n$$\n\nimage_name:Fig. 16.6\ndescription:The circuit features a switched-capacitor gain amplifier employing an op-amp to generate a signed output from a unipolar DAC output. The bit b1 serves as the sign bit.\n\nFig. 16.6 Employing an SC gain amplifier to achieve a signed output from a unipolar (positive) D/A converter output: a high $b_{1}$ results in a negative output.\nimage_name:Fig. 16.7 Binary-weighted 4-bit resistor D/A converter.\ndescription:The circuit is a binary-weighted 4-bit resistor D/A converter. It employs switches governed by bits b1 to b4 to link resistors 2R, 4R, 8R, and 16R to a reference voltage -Vref, creating a weighted sum at the op-amp's input. The op-amp then amplifies this sum to yield the output voltage Vout. The feedback resistor RF determines the op-amp's gain.\n\nFig. 16.7 Binary-weighted 4-bit resistor D/A converter.\n\nDespite its minimal requirement for resistors and switches, this method has certain drawbacks. The resistor and current ratios are approximately $2^{\\mathrm{N}}$, which can be substantial depending on N. This significant current ratio necessitates scaling the switches to ensure equal voltage drops across them for varying current levels. Additionally, monotonicity is not assured. Lastly, as discussed on page 633, this method is susceptible to glitches during high-speed operation."
},
{
    "text": "Binary-weighted resistor converters are widely used in bipolar technology, enabling the utilization of bipolar differential pairs as current switches. The fundamental design of a 4-bit converter is illustrated in Fig. 16.7.\n\nWhen $b_{i}$ is 1, the current flowing to the $i$th resistor originates from the virtual ground of the opamp; otherwise, it originates from the ground. Consequently, we derive:\n\n$$\n\\begin{align*}\nV_{\\text {out }} & =-R_{F} V_{\\text {ref }}\\left(-\\frac{b_{1}}{2 R}-\\frac{b_{2}}{4 R}-\\frac{b_{3}}{8 R}-\\ldots\\right) \\\\\n& =\\left(\\frac{R_{F}}{R} V_{\\text {ref }}\\right) B_{\\text {in }} \\tag{16.2}\n\\end{align*}\n$$\n\nwhere\n\n$$\n\\begin{equation*}\nB_{i n}=b_{1} 2^{-1}+b_{2} 2^{-2}+b_{3} 2^{-3}+\\cdots \\tag{16.3}\n\\end{equation*}\n$$\n\nimage_name:Fig. 16.6\ndescription:This circuit is a switched-capacitor gain amplifier that employs an op-amp to generate a signed output from a unipolar DAC output. The bit b1 serves as the sign bit.\n\nFig. 16.6 Utilizing an SC gain amplifier to produce a signed output from a unipolar (positive) D/A converter output: a high $b_{1}$ results in a negative output.\nimage_name:Fig. 16.7 Binary-weighted 4-bit resistor D/A converter.\ndescription:The circuit depicted is a binary-weighted 4-bit resistor D/A converter. It employs switches governed by bits b1 to b4 to connect resistors 2R, 4R, 8R, and 16R to a reference voltage -Vref, creating a weighted sum at the op-amp's input. The op-amp then amplifies this sum to generate the output voltage Vout. The feedback resistor RF determines the op-amp's gain.\n\nFig. 16.7 Binary-weighted 4-bit resistor D/A converter.\n\nDespite not necessitating a large number of resistors or switches, this method has certain drawbacks. The resistor and current ratios are approximately $2^{\\mathrm{N}}$, which can be substantial depending on N. This significant current ratio demands that the switches be scaled to ensure equal voltage drops across them for diverse current levels. Additionally, monotonicity is not assured. Lastly, as discussed on page 633, this method is susceptible to glitches during high-speed operation."
},
{
    "text": "Binary-weighted resistor converters are widely used in bipolar technology, enabling the utilization of bipolar differential pairs as current switches. The fundamental design for a 4-bit converter is illustrated in Fig. 16.7.\n\nWhen $b_{i}$ equals 1, the current to the $i$th resistor is sourced from the virtual ground of the opamp; otherwise, it originates from the ground. Consequently, we obtain\n\n$$\n\\begin{align*}\nV_{\\text {out }} & =-R_{F} V_{\\text {ref }}\\left(-\\frac{b_{1}}{2 R}-\\frac{b_{2}}{4 R}-\\frac{b_{3}}{8 R}-\\ldots\\right) \\\\\n& =\\left(\\frac{R_{F}}{R} V_{\\text {ref }}\\right) B_{\\text {in }} \\tag{16.2}\n\\end{align*}\n$$\n\nwhere\n\n$$\n\\begin{equation*}\nB_{i n}=b_{1} 2^{-1}+b_{2} 2^{-2}+b_{3} 2^{-3}+\\cdots \\tag{16.3}\n\\end{equation*}\n$$\n\nimage_name:Fig. 16.6\ndescription:The circuit depicts a switched-capacitor gain amplifier that employs an op-amp to generate a signed output from a unipolar DAC output. The bit b1 functions as the sign bit.\n\nFig. 16.6 Employing an SC gain amplifier to derive a signed output from a unipolar (positive) D/A converter output: a high $b_{1}$ results in a negative output.\nimage_name:Fig. 16.7 Binary-weighted 4-bit resistor D/A converter.\ndescription:The circuit represents a binary-weighted 4-bit resistor D/A converter. It incorporates switches governed by bits b1 to b4 to link resistors 2R, 4R, 8R, and 16R to a reference voltage -Vref, creating a weighted sum at the op-amp's input. The op-amp then amplifies this sum to yield the output voltage Vout. The feedback resistor RF determines the op-amp's gain.\n\nFig. 16.7 Binary-weighted 4-bit resistor D/A converter.\n\nDespite not necessitating a large number of resistors or switches, this method has certain drawbacks. The resistor and current ratios are approximately $2^{\\mathrm{N}}$, which can be substantial depending on N. This significant current ratio demands that the switches also be scaled to ensure uniform voltage drops across them for diverse current levels. Additionally, monotonicity is not assured. Lastly, as discussed on page 633, this approach is susceptible to glitches during high-speed operation."
},
{
    "text": "Binary-weighted resistor converters are favored in bipolar technology, enabling the use of bipolar differential pairs as current switches. The fundamental design for a 4-bit converter is illustrated in Fig. 16.7.\n\nWhen $b_{i}$ equals 1, the current to the $i$th resistor is sourced from the virtual ground of the opamp; otherwise, it originates from ground. Consequently, we derive:\n\n$$\n\\begin{align*}\nV_{\\text {out }} & =-R_{F} V_{\\text {ref }}\\left(-\\frac{b_{1}}{2 R}-\\frac{b_{2}}{4 R}-\\frac{b_{3}}{8 R}-\\ldots\\right) \\\\\n& =\\left(\\frac{R_{F}}{R} V_{\\text {ref }}\\right) B_{\\text {in }} \\tag{16.2}\n\\end{align*}\n$$\n\nwhere\n\n$$\n\\begin{equation*}\nB_{i n}=b_{1} 2^{-1}+b_{2} 2^{-2}+b_{3} 2^{-3}+\\cdots \\tag{16.3}\n\\end{equation*}\n$$\n\nimage_name:Fig. 16.6\ndescription:The circuit features a switched-capacitor gain amplifier employing an op-amp to generate a signed output from a unipolar DAC output. The bit b1 serves as the sign bit.\n\nFig. 16.6 Employing an SC gain amplifier to produce a signed output from a unipolar (positive) D/A converter output: a high $b_{1}$ results in a negative output.\nimage_name:Fig. 16.7 Binary-weighted 4-bit resistor D/A converter.\ndescription:The circuit comprises a binary-weighted 4-bit resistor D/A converter. It utilizes switches governed by bits b1 to b4 to link resistors 2R, 4R, 8R, and 16R to a reference voltage -Vref, creating a weighted sum at the op-amp's input. The op-amp then amplifies this sum to yield the output voltage Vout. The feedback resistor RF determines the op-amp's gain.\n\nFig. 16.7 Binary-weighted 4-bit resistor D/A converter.\n\nDespite its minimal requirement for resistors and switches, this method has certain drawbacks. The resistor and current ratios reach $2^{\\mathrm{N}}$, which can be substantial depending on N. This significant current ratio necessitates scaling the switches to ensure uniform voltage drops across them despite varying current levels. Additionally, monotonicity is not assured. Lastly, as detailed on page 633, this approach is susceptible to glitches during high-speed operation."
},
{
    "text": "A widely favored architecture for D/A converters employs R-2R ladders. These ladders are advantageous for generating binary-weighted currents using a minimal number of components and a resistance ratio of merely 2, irrespective of the bit count, N.\n\nExamine the R-2R ladder network depicted in Fig. 16.9. Analysis yields:\n\n$$\n\\begin{gather*}\nR_{4}^{\\prime}=2 R \\\\\nR_{4}=2 R \\| 2 R=R  \\tag{16.4}\\\\\nR_{3}^{\\prime}=R+R_{4}=2 R \\\\\nR_{3}=2 R \\| R_{3}^{\\prime}=R\n\\end{gather*}\n$$\n\nimage_name:Fig. 16.8 Reduced-resistance-ratio 4-bit D/A converter.\ndescription:This depicts a reduced-resistance-ratio 4-bit D/A converter utilizing an R-2R ladder network. The switches b1 to b4 manage the binary inputs, with resistors forming the ladder network. An op-amp is employed to sum the currents and produce the output voltage Vout. The reference voltage is -Vref.\n\nFig. 16.8 Reduced-resistance-ratio 4-bit D/A converter.\nimage_name:Fig. 16.9 R-2R resistance ladder\ndescription:Illustrated is an R-2R ladder network within a 4-bit digital-to-analog converter (DAC). Resistors create the ladder network, and current sources (I1 to I4) correspond to the binary inputs. The reference voltage is Vref, and the ladder network divides this voltage to generate the analog output.\n\nFig. 16.9 R-2R resistance ladder.\nand so forth. Consequently, $\\mathbf{R}_{\\mathbf{i}}^{\\prime}=2 \\mathrm{R}$ for all i. This outcome establishes the following current relationships:\n\n$$\n\\begin{equation*}\nI_{1}=\\frac{V_{\\text {ref }}}{2 R} \\tag{16.5}\n\\end{equation*}\n$$\n\nAdditionally, the voltage at node 2 is half that of node 1, resulting in\n\n$$\n\\begin{equation*}\nI_{2}=\\frac{V_{\\text {ref }}}{4 R} \\tag{16.6}\n\\end{equation*}\n$$\n\nAt node 3, the voltage halves again, thus\n\n$$\n\\begin{equation*}\nI_{3}=\\frac{V_{\\text {ref }}}{8 R} \\tag{16.7}\n\\end{equation*}\n$$\n\nand so on.\nHence, the R-2R ladder can achieve binary-weighted currents using only a single resistor size. (The $2 R$ resistors are constructed from two $R$ resistors to enhance matching characteristics.) Consequently, this R-2R method typically offers both reduced size and improved accuracy compared to a binary-sized approach.\n\nA 4-bit D/A converter employing an R-2R ladder is illustrated in Fig. 16.10. For this R-2R-based circuit, we observe that\n\nKey Point: R-2R ladder D/A converters generate binary-weighted currents without requiring a full set of binary-weighted resistors. Instead, only 2:1 component ratios are necessary, significantly economizing on high-resolution converters.\n\n$$\n\\begin{equation*}\nI_{r}=V_{\\text {ref }} /(2 R) \\tag{16.8}\n\\end{equation*}\n$$\n\nand\n\n$$\n\\begin{equation*}\nV_{\\text {out }}=R_{F} \\sum_{i=1}^{N} \\frac{b_{i} I_{r}}{2^{i-1}}=V_{\\text {ref }}\\left(\\frac{R_{F}}{R}\\right) \\sum_{i=1}^{N} \\frac{b_{i}}{2^{i}} \\tag{16.9}\n\\end{equation*}\n$$\n\nHowever, as previously noted, despite the reduced resistance ratio, the current ratio through the switches remains substantial, necessitating the scaling of switch sizes to handle the varying current levels. One method to mitigate this current ratio is shown in Fig. 16.11, where equal currents flow through all switches. Nevertheless, this setup is generally slower due to voltage swings at the internal nodes of the R-2R ladder (unlike in Fig. 16.10, where internal nodes maintain fixed voltages).\n\nimage_name:Fig. 16.10 4-bit R-2R based D/A converter\ndescription:This shows a 4-bit R-2R ladder digital-to-analog converter. The circuit utilizes switches governed by binary inputs (b1, b2, b3, b4) to determine the current path through the R-2R ladder network, converting the digital input into an analog output voltage (Vout). The operational amplifier provides the requisite gain and buffering for the output.\n\nFig. 16.10 4-bit R-2R based D/A converter."
},
{
    "text": "A highly favored architecture for D/A converters employs R-2R ladders. These ladders are advantageous for generating binary-weighted currents using a minimal number of components and a resistance ratio of just 2, irrespective of the bit count, N.\n\nExamine the R-2R ladder network depicted in Fig. 16.9. Analysis yields:\n\n$$\n\\begin{gather*}\nR_{4}^{\\prime}=2 R \\\\\nR_{4}=2 R \\| 2 R=R  \\tag{16.4}\\\\\nR_{3}^{\\prime}=R+R_{4}=2 R \\\\\nR_{3}=2 R \\| R_{3}^{\\prime}=R\n\\end{gather*}\n$$\n\nimage_name:Fig. 16.8 Reduced-resistance-ratio 4-bit D/A converter.\ndescription:This depicts a reduced-resistance-ratio 4-bit D/A converter utilizing an R-2R ladder network. Binary inputs are managed by switches b1 to b4, with resistors forming the ladder network. An op-amp sums the currents and produces the output voltage Vout. The reference voltage is -Vref.\n\nFig. 16.8 Reduced-resistance-ratio 4-bit D/A converter.\nimage_name:Fig. 16.9 R-2R resistance ladder\ndescription:Illustrated is an R-2R ladder network within a 4-bit digital-to-analog converter (DAC). Resistors configure the ladder network, and current sources (I1 to I4) correspond to binary inputs. The reference voltage is Vref, and the ladder network fractionates this voltage to generate the analog output.\n\nFig. 16.9 R-2R resistance ladder.\nand so forth. Consequently, $\\mathbf{R}_{\\mathbf{i}}^{\\prime}=2 \\mathrm{R}$ for all i. This outcome establishes the following current relationships:\n\n$$\n\\begin{equation*}\nI_{1}=\\frac{V_{\\text {ref }}}{2 R} \\tag{16.5}\n\\end{equation*}\n$$\n\nAdditionally, the voltage at node 2 is half that of node 1, resulting in\n\n$$\n\\begin{equation*}\nI_{2}=\\frac{V_{\\text {ref }}}{4 R} \\tag{16.6}\n\\end{equation*}\n$$\n\nAt node 3, the voltage halves again, thus\n\n$$\n\\begin{equation*}\nI_{3}=\\frac{V_{\\text {ref }}}{8 R} \\tag{16.7}\n\\end{equation*}\n$$\n\nand so on.\nHence, the R-2R ladder can achieve binary-weighted currents using only one resistor size. ( Resistors of size $2 R$ are constructed from two resistors of size R to enhance matching characteristics.) Consequently, this R-2R method typically offers both reduced size and improved accuracy compared to a binary-sized approach.\n\nA 4-bit D/A converter employing an R-2R ladder is illustrated in Fig. 16.10. For this R-2R-based circuit, we observe that\n\nKey Point: $R$-2R ladder D/A converters generate binary-weighted currents without requiring a full set of binary-weighted resistors. Instead, only 2:1 component ratios are necessary, significantly economizing on components for high-resolution converters.\n\n$$\n\\begin{equation*}\nI_{r}=V_{\\text {ref }} /(2 R) \\tag{16.8}\n\\end{equation*}\n$$\n\nand\n\n$$\n\\begin{equation*}\nV_{\\text {out }}=R_{F} \\sum_{i=1}^{N} \\frac{b_{i} I_{r}}{2^{i-1}}=V_{\\text {ref }}\\left(\\frac{R_{F}}{R}\\right) \\sum_{i=1}^{N} \\frac{b_{i}}{2^{i}} \\tag{16.9}\n\\end{equation*}\n$$\n\nHowever, as previously noted, despite the reduced resistance ratio, the current ratio through the switches remains substantial, necessitating switch scaling to handle varying current levels. One method to mitigate this current ratio is shown in Fig. 16.11, where equal currents flow through all switches. Nevertheless, this setup is generally slower due to voltage swings at the internal nodes of the R-2R ladder (unlike Fig. 16.10, where internal nodes maintain constant voltages).\nimage_name:Fig. 16.10 4-bit R-2R based D/A converter\ndescription:This figure shows a 4-bit R-2R ladder digital-to-analog converter. The circuit uses switches governed by binary inputs (b1, b2, b3, b4) to determine the current path through the R-2R ladder network, converting the digital input into an analog output voltage (Vout). The operational amplifier provides the required gain and buffering for the output.\n\nFig. 16.10 4-bit R-2R based D/A converter."
},
{
    "text": "A highly favored architecture for D/A converters employs R-2R ladders. These ladders are advantageous for generating binary-weighted currents using a minimal number of components, with a resistance ratio of merely 2, irrespective of the bit count, N.\n\nExamine the R-2R ladder network depicted in Fig. 16.9. Analysis yields:\n\n$$\n\\begin{gather*}\nR_{4}^{\\prime}=2 R \\\\\nR_{4}=2 R \\| 2 R=R  \\tag{16.4}\\\\\nR_{3}^{\\prime}=R+R_{4}=2 R \\\\\nR_{3}=2 R \\| R_{3}^{\\prime}=R\n\\end{gather*}\n$$\n\nimage_name:Fig. 16.8 Reduced-resistance-ratio 4-bit D/A converter.\ndescription:This depicts a 4-bit D/A converter with a reduced-resistance-ratio utilizing an R-2R ladder network. Binary inputs are managed by switches b1 to b4, and resistors configure the ladder network. An op-amp sums the currents and delivers the output voltage Vout, with -Vref as the reference voltage.\n\nFig. 16.8 Reduced-resistance-ratio 4-bit D/A converter.\nimage_name:Fig. 16.9 R-2R resistance ladder\ndescription:Illustrated is an R-2R ladder network within a 4-bit digital-to-analog converter (DAC). Resistors create the ladder network, and current sources (I1 to I4) correspond to binary inputs. Vref serves as the reference voltage, and the ladder partitions this voltage to generate the analog output.\n\nFig. 16.9 R-2R resistance ladder.\nand so forth. Consequently, $\\mathbf{R}_{\\mathbf{i}}^{\\prime}=2 \\mathrm{R}$ for all i. This outcome establishes the following current relationships:\n\n$$\n\\begin{equation*}\nI_{1}=\\frac{V_{\\text {ref }}}{2 R} \\tag{16.5}\n\\end{equation*}\n$$\n\nAdditionally, the voltage at node 2 is half that of node 1, resulting in\n\n$$\n\\begin{equation*}\nI_{2}=\\frac{V_{\\text {ref }}}{4 R} \\tag{16.6}\n\\end{equation*}\n$$\n\nAt node 3, the voltage halves again, thus\n\n$$\n\\begin{equation*}\nI_{3}=\\frac{V_{\\text {ref }}}{8 R} \\tag{16.7}\n\\end{equation*}\n$$\n\nand so on.\nHence, the R-2R ladder can achieve binary-weighted currents using just a single resistor size. (Resistors of size $2 R$ are constructed from two resistors of size R to enhance matching characteristics.) Consequently, this R-2R method typically offers both a smaller footprint and greater accuracy compared to a binary-sized approach.\n\nA 4-bit D/A converter utilizing an R-2R ladder is illustrated in Fig. 16.10. For this R-2R-based circuit, we observe that\n\nKey Point: R-2R ladder D/A converters generate binary-weighted currents without requiring a full set of binary-weighted resistors. Instead, only 2:1 component ratios are necessary, significantly reducing costs for high-resolution converters.\n\n$$\n\\begin{equation*}\nI_{r}=V_{\\text {ref }} /(2 R) \\tag{16.8}\n\\end{equation*}\n$$\n\nand\n\n$$\n\\begin{equation*}\nV_{\\text {out }}=R_{F} \\sum_{i=1}^{N} \\frac{b_{i} I_{r}}{2^{i-1}}=V_{\\text {ref }}\\left(\\frac{R_{F}}{R}\\right) \\sum_{i=1}^{N} \\frac{b_{i}}{2^{i}} \\tag{16.9}\n\\end{equation*}\n$$\n\nHowever, as previously noted, despite the reduced resistance ratio, the current ratio through the switches remains substantial, necessitating switch size scaling to handle the varying current levels. One method to mitigate this current ratio is shown in Fig. 16.11, where uniform currents flow through all switches. Nevertheless, this setup is generally slower due to voltage swings at the internal nodes of the R-2R ladder (unlike in Fig. 16.10, where internal nodes maintain fixed voltages).\n\nimage_name:Fig. 16.10 4-bit R-2R based D/A converter\ndescription:This shows a 4-bit R-2R ladder digital-to-analog converter. The circuit employs switches governed by binary inputs (b1, b2, b3, b4) to determine the current path through the R-2R ladder network, converting digital input into analog output voltage (Vout). The operational amplifier provides the required gain and buffering for the output.\n\nFig. 16.10 4-bit R-2R based D/A converter."
},
{
    "text": "A highly favored architecture for D/A converters employs R-2R ladders. These ladders are effective for generating binary-weighted currents using a minimal number of components and maintain a resistance ratio of just 2, regardless of the bit count, N.\n\nExamine the R-2R ladder network depicted in Fig. 16.9. Analysis yields:\n\n$$\n\\begin{gather*}\nR_{4}^{\\prime}=2 R \\\\\nR_{4}=2 R \\| 2 R=R  \\tag{16.4}\\\\\nR_{3}^{\\prime}=R+R_{4}=2 R \\\\\nR_{3}=2 R \\| R_{3}^{\\prime}=R\n\\end{gather*}\n$$\n\nimage_name:Fig. 16.8 Reduced-resistance-ratio 4-bit D/A converter.\ndescription:This illustrates a 4-bit D/A converter with a reduced-resistance-ratio utilizing an R-2R ladder network. The binary inputs are managed by switches b1 to b4, and the resistors constitute the ladder network. An operational amplifier is used to sum the currents and produce the output voltage Vout. The reference voltage is -Vref.\n\nFig. 16.8 Reduced-resistance-ratio 4-bit D/A converter.\nimage_name:Fig. 16.9 R-2R resistance ladder\ndescription:This circuit represents an R-2R ladder network employed in a 4-bit digital-to-analog converter (DAC). The resistors form a ladder structure, and the current sources (I1 to I4) correspond to the binary inputs. The reference voltage is Vref, and the ladder network divides this voltage to generate the analog output.\n\nFig. 16.9 R-2R resistance ladder.\nand so forth. Consequently, $\\mathbf{R}_{\\mathbf{i}}^{\\prime}=2 \\mathrm{R}$ for all i. This outcome establishes the following current relationships:\n\n$$\n\\begin{equation*}\nI_{1}=\\frac{V_{\\text {ref }}}{2 R} \\tag{16.5}\n\\end{equation*}\n$$\n\nAdditionally, the voltage at node 2 is half of that at node 1, resulting in\n\n$$\n\\begin{equation*}\nI_{2}=\\frac{V_{\\text {ref }}}{4 R} \\tag{16.6}\n\\end{equation*}\n$$\n\nAt node 3, the voltage halves again, hence\n\n$$\n\\begin{equation*}\nI_{3}=\\frac{V_{\\text {ref }}}{8 R} \\tag{16.7}\n\\end{equation*}\n$$\n\nand so on.\nThus, the R-2R ladder can generate binary-weighted currents using only a single resistor size. (The $2 R$ resistors are constructed from two $R$ resistors to enhance matching characteristics.) Consequently, this R-2R method typically offers both reduced size and improved accuracy compared to a binary-sized approach.\n\nA 4-bit D/A converter utilizing an R-2R ladder is illustrated in Fig. 16.10. For this R-2R-based circuit, we observe that\n\nKey Point: R-2R ladder D/A converters produce binary-weighted currents without requiring a full set of binary-weighted resistors. Instead, only 2:1 component ratios are necessary, which significantly reduces costs for high-resolution converters.\n\n$$\n\\begin{equation*}\nI_{r}=V_{\\text {ref }} /(2 R) \\tag{16.8}\n\\end{equation*}\n$$\n\nand\n\n$$\n\\begin{equation*}\nV_{\\text {out }}=R_{F} \\sum_{i=1}^{N} \\frac{b_{i} I_{r}}{2^{i-1}}=V_{\\text {ref }}\\left(\\frac{R_{F}}{R}\\right) \\sum_{i=1}^{N} \\frac{b_{i}}{2^{i}} \\tag{16.9}\n\\end{equation*}\n$$\n\nHowever, as previously noted, despite the reduced resistance ratio, the current ratio through the switches remains substantial, necessitating the scaling of switch sizes to handle the varying current levels. One method to mitigate this current ratio is shown in Fig. 16.11, where equal currents flow through all switches. Nevertheless, this setup is generally slower due to voltage swings at the internal nodes of the R-2R ladder (unlike in Fig. 16.10, where internal nodes maintain constant voltages).\n\nimage_name:Fig. 16.10 4-bit R-2R based D/A converter\ndescription:This depicts a 4-bit R-2R ladder digital-to-analog converter. The circuit employs switches controlled by binary inputs (b1, b2, b3, b4) to determine the current path through the R-2R ladder network, converting the digital input into an analog output voltage (Vout). The operational amplifier provides the necessary gain and buffering for the output.\n\nFig. 16.10 4-bit R-2R based D/A converter."
},
{
    "text": "A highly favored architecture for D/A converters employs R-2R ladders. These ladders are advantageous for generating binary-weighted currents using a minimal number of components and a resistance ratio of merely 2, regardless of the bit count, N.\n\nExamine the R-2R ladder network depicted in Fig. 16.9. Analysis yields:\n\n$$\n\\begin{gather*}\nR_{4}^{\\prime}=2 R \\\\\nR_{4}=2 R \\| 2 R=R  \\tag{16.4}\\\\\nR_{3}^{\\prime}=R+R_{4}=2 R \\\\\nR_{3}=2 R \\| R_{3}^{\\prime}=R\n\\end{gather*}\n$$\n\nimage_name:Fig. 16.8 Reduced-resistance-ratio 4-bit D/A converter.\ndescription:This depicts a reduced-resistance-ratio 4-bit D/A converter utilizing an R-2R ladder network. The switches b1 to b4 manage the binary inputs, and the resistors constitute the ladder network. An op-amp is employed to sum the currents and produce the output voltage Vout. The reference voltage is -Vref.\n\nFig. 16.8 Reduced-resistance-ratio 4-bit D/A converter.\nimage_name:Fig. 16.9 R-2R resistance ladder\ndescription:This circuit represents an R-2R ladder network employed in a 4-bit digital-to-analog converter (DAC). The resistors create a ladder network, and the current sources (I1 to I4) correspond to the binary inputs. The reference voltage is Vref, and the ladder network divides this voltage to generate the analog output.\n\nFig. 16.9 R-2R resistance ladder.\nand so forth. Consequently, $\\mathbf{R}_{\\mathbf{i}}^{\\prime}=2 \\mathrm{R}$ for all i. This outcome establishes the following current relationships:\n\n$$\n\\begin{equation*}\nI_{1}=\\frac{V_{\\text {ref }}}{2 R} \\tag{16.5}\n\\end{equation*}\n$$\n\nAdditionally, the voltage at node 2 is half of that at node 1, resulting in\n\n$$\n\\begin{equation*}\nI_{2}=\\frac{V_{\\text {ref }}}{4 R} \\tag{16.6}\n\\end{equation*}\n$$\n\nAt node 3, the voltage halves again, leading to\n\n$$\n\\begin{equation*}\nI_{3}=\\frac{V_{\\text {ref }}}{8 R} \\tag{16.7}\n\\end{equation*}\n$$\n\nand so on.\nThus, the R-2R ladder can achieve binary-weighted currents using only one resistor size. (The $2 R$ resistors are constructed from two R resistors to enhance matching characteristics.) Consequently, the R-2R method typically offers both reduced size and improved accuracy compared to a binary-sized approach.\n\nA 4-bit D/A converter utilizing an R-2R ladder is illustrated in Fig. 16.10. For this R-2R-based circuit, we observe that\n\nKey Point: R-2R ladder D/A converters generate binary-weighted currents without requiring a full set of binary-weighted resistors. Instead, only 2:1 component ratios are necessary, providing significant savings for high-resolution converters.\n\n$$\n\\begin{equation*}\nI_{r}=V_{\\text {ref }} /(2 R) \\tag{16.8}\n\\end{equation*}\n$$\n\nand\n\n$$\n\\begin{equation*}\nV_{\\text {out }}=R_{F} \\sum_{i=1}^{N} \\frac{b_{i} I_{r}}{2^{i-1}}=V_{\\text {ref }}\\left(\\frac{R_{F}}{R}\\right) \\sum_{i=1}^{N} \\frac{b_{i}}{2^{i}} \\tag{16.9}\n\\end{equation*}\n$$\n\nHowever, as previously noted, despite the reduced resistance ratio, the current ratio through the switches remains substantial, necessitating the scaling of switch sizes to accommodate the varying current levels. One method to mitigate this current ratio is shown in Fig. 16.11, where equal currents flow through all switches. Nevertheless, this setup is generally slower due to voltage swings at the internal nodes of the R-2R ladder (unlike in Fig. 16.10, where internal nodes maintain fixed voltages).\nimage_name:Fig. 16.10 4-bit R-2R based D/A converter\ndescription:This shows a 4-bit R-2R ladder digital-to-analog converter. The circuit employs switches governed by binary inputs (b1, b2, b3, b4) to determine the current path through the R-2R ladder network, converting the digital input into an analog output voltage (Vout). The operational amplifier provides the required gain and buffering for the output.\n\nFig. 16.10 4-bit R-2R based D/A converter."
},
{
    "text": "A highly favored architecture for D/A converters employs R-2R ladders. These ladders are effective for generating binary-weighted currents with a minimal number of components and a resistance ratio of just 2, regardless of the bit count, N.\n\nExamine the R-2R ladder network depicted in Fig. 16.9. Analysis yields:\n\n$$\n\\begin{gather*}\nR_{4}^{\\prime}=2 R \\\\\nR_{4}=2 R \\| 2 R=R  \\tag{16.4}\\\\\nR_{3}^{\\prime}=R+R_{4}=2 R \\\\\nR_{3}=2 R \\| R_{3}^{\\prime}=R\n\\end{gather*}\n$$\n\nimage_name:Fig. 16.8 Reduced-resistance-ratio 4-bit D/A converter.\ndescription:This depicts a reduced-resistance-ratio 4-bit D/A converter utilizing an R-2R ladder network. The switches b1 to b4 manage the binary inputs, with resistors forming the ladder network. An op-amp is used for summing currents and producing the output voltage Vout. The reference voltage is -Vref.\n\nFig. 16.8 Reduced-resistance-ratio 4-bit D/A converter.\nimage_name:Fig. 16.9 R-2R resistance ladder\ndescription:This circuit illustrates an R-2R ladder network employed in a 4-bit digital-to-analog converter (DAC). Resistors create a ladder network, and current sources (I1 to I4) correspond to the binary inputs. The reference voltage is Vref, and the ladder divides this voltage to generate the analog output.\n\nFig. 16.9 R-2R resistance ladder.\nand so forth. Hence, $\\mathbf{R}_{\\mathbf{i}}^{\\prime}=2 \\mathrm{R}$ for all i. This outcome leads to the following current relationships:\n\n$$\n\\begin{equation*}\nI_{1}=\\frac{V_{\\text {ref }}}{2 R} \\tag{16.5}\n\\end{equation*}\n$$\n\nAdditionally, the voltage at node 2 is half that of node 1, resulting in\n\n$$\n\\begin{equation*}\nI_{2}=\\frac{V_{\\text {ref }}}{4 R} \\tag{16.6}\n\\end{equation*}\n$$\n\nAt node 3, the voltage halves again, thus\n\n$$\n\\begin{equation*}\nI_{3}=\\frac{V_{\\text {ref }}}{8 R} \\tag{16.7}\n\\end{equation*}\n$$\n\nand so on.\nConsequently, the R-2R ladder can generate binary-weighted currents using only a single resistor size. (The $2 R$ resistors are constructed from two resistors of size R to enhance matching properties.) Therefore, the R-2R method typically offers both reduced size and improved accuracy compared to a binary-sized approach.\n\nA 4-bit D/A converter utilizing an R-2R ladder is illustrated in Fig. 16.10. For this R-2R-based circuit, we observe that\n\nKey Point: R-2R ladder D/A converters produce binary-weighted currents without requiring a full set of binary-weighted resistors. Instead, only 2:1 component ratios are necessary, significantly reducing costs for high-resolution converters.\n\n$$\n\\begin{equation*}\nI_{r}=V_{\\text {ref }} /(2 R) \\tag{16.8}\n\\end{equation*}\n$$\n\nand\n\n$$\n\\begin{equation*}\nV_{\\text {out }}=R_{F} \\sum_{i=1}^{N} \\frac{b_{i} I_{r}}{2^{i-1}}=V_{\\text {ref }}\\left(\\frac{R_{F}}{R}\\right) \\sum_{i=1}^{N} \\frac{b_{i}}{2^{i}} \\tag{16.9}\n\\end{equation*}\n$$\n\nHowever, as previously noted, despite the reduced resistance ratio, the current ratio through the switches remains substantial, necessitating switch scaling to handle varying current levels. One method to mitigate this current ratio is shown in Fig. 16.11, where equal currents flow through all switches. Nevertheless, this setup is generally slower due to voltage swings at the internal nodes of the R-2R ladder (unlike in Fig. 16.10, where internal nodes maintain fixed voltages).\n\nimage_name:Fig. 16.10 4-bit R-2R based D/A converter\ndescription:This represents a 4-bit R-2R ladder digital-to-analog converter. The circuit employs switches controlled by binary inputs (b1, b2, b3, b4) to direct the current path through the R-2R ladder network, converting the digital input into an analog output voltage (Vout). An operational amplifier provides the necessary gain and buffering for the output.\n\nFig. 16.10 4-bit R-2R based D/A converter."
},
{
    "text": "A widely-used architecture for D/A converters employs R-2R ladders. These ladders are advantageous for generating binary-weighted currents with a minimal number of components and a resistance ratio of just 2, regardless of the bit count, N.\n\nExamine the R-2R ladder network depicted in Fig. 16.9. Analysis yields:\n\n$$\n\\begin{gather*}\nR_{4}^{\\prime}=2 R \\\\\nR_{4}=2 R \\| 2 R=R  \\tag{16.4}\\\\\nR_{3}^{\\prime}=R+R_{4}=2 R \\\\\nR_{3}=2 R \\| R_{3}^{\\prime}=R\n\\end{gather*}\n$$\n\nimage_name:Fig. 16.8 Reduced-resistance-ratio 4-bit D/A converter.\ndescription:This illustrates a reduced-resistance-ratio 4-bit D/A converter utilizing an R-2R ladder network. Binary inputs are managed by switches b1 to b4, with resistors forming the ladder network. An op-amp sums the currents and delivers the output voltage Vout. The reference voltage is -Vref.\n\nFig. 16.8 Reduced-resistance-ratio 4-bit D/A converter.\nimage_name:Fig. 16.9 R-2R resistance ladder\ndescription:This circuit features an R-2R ladder network in a 4-bit digital-to-analog converter (DAC). Resistors create the ladder network, and current sources (I1 to I4) correspond to binary inputs. The reference voltage is Vref, and the ladder divides this voltage to produce the analog output.\n\nFig. 16.9 R-2R resistance ladder.\nand so forth. Consequently, $\\mathbf{R}_{\\mathbf{i}}^{\\prime}=2 \\mathrm{R}$ for all i. This leads to the following current relationships:\n\n$$\n\\begin{equation*}\nI_{1}=\\frac{V_{\\text {ref }}}{2 R} \\tag{16.5}\n\\end{equation*}\n$$\n\nAdditionally, the voltage at node 2 is half that at node 1, resulting in\n\n$$\n\\begin{equation*}\nI_{2}=\\frac{V_{\\text {ref }}}{4 R} \\tag{16.6}\n\\end{equation*}\n$$\n\nAt node 3, the voltage halves again, thus\n\n$$\n\\begin{equation*}\nI_{3}=\\frac{V_{\\text {ref }}}{8 R} \\tag{16.7}\n\\end{equation*}\n$$\n\nand so on.\nTherefore, the R-2R ladder can achieve binary-weighted currents using only a single resistor size. (Resistors of size $2 R$ are constructed from two resistors of size R to enhance matching properties.) Consequently, the R-2R method typically offers both reduced size and improved accuracy compared to a binary-sized approach.\n\nA 4-bit D/A converter utilizing an R-2R ladder is presented in Fig. 16.10. For this R-2R-based circuit, we observe that\n\nKey Point: $R$-2R ladder D/A converters generate binary-weighted currents without requiring a full set of binary-weighted resistors. Instead, only 2:1 component ratios are necessary, significantly economizing for high-resolution converters.\n\n$$\n\\begin{equation*}\nI_{r}=V_{\\text {ref }} /(2 R) \\tag{16.8}\n\\end{equation*}\n$$\n\nand\n\n$$\n\\begin{equation*}\nV_{\\text {out }}=R_{F} \\sum_{i=1}^{N} \\frac{b_{i} I_{r}}{2^{i-1}}=V_{\\text {ref }}\\left(\\frac{R_{F}}{R}\\right) \\sum_{i=1}^{N} \\frac{b_{i}}{2^{i}} \\tag{16.9}\n\\end{equation*}\n$$\n\nHowever, as previously noted, despite the reduced resistance ratio, the current ratio through the switches remains substantial, necessitating switch scaling to handle varying current levels. One method to mitigate this current ratio is illustrated in Fig. 16.11, where equal currents flow through all switches. Nevertheless, this setup is generally slower due to voltage swings at the internal nodes of the R-2R ladder (unlike in Fig. 16.10, where internal nodes maintain constant voltages).\nimage_name:Fig. 16.10 4-bit R-2R based D/A converter\ndescription:This shows a 4-bit R-2R ladder digital-to-analog converter. The circuit employs switches governed by binary inputs (b1, b2, b3, b4) to determine the current path through the R-2R ladder network, converting the digital input into an analog output voltage (Vout). An operational amplifier provides the required gain and buffering for the output.\n\nFig. 16.10 4-bit R-2R based D/A converter."
},
{
    "text": "A highly favored architecture for D/A converters employs R-2R ladders. These ladders are advantageous for generating binary-weighted currents with a minimal number of components and a resistance ratio of just 2, regardless of the bit count, N.\n\nExamine the R-2R ladder network depicted in Fig. 16.9. Analysis yields:\n\n$$\n\\begin{gather*}\nR_{4}^{\\prime}=2 R \\\\\nR_{4}=2 R \\| 2 R=R  \\tag{16.4}\\\\\nR_{3}^{\\prime}=R+R_{4}=2 R \\\\\nR_{3}=2 R \\| R_{3}^{\\prime}=R\n\\end{gather*}\n$$\n\nimage_name:Fig. 16.8 Reduced-resistance-ratio 4-bit D/A converter.\ndescription:This illustrates a 4-bit D/A converter with a reduced-resistance-ratio using an R-2R ladder network. The binary inputs are managed by switches b1 to b4, and the resistors configure the ladder network. An op-amp is utilized for summing the currents and generating the output voltage Vout. The reference voltage is -Vref.\n\nFig. 16.8 Reduced-resistance-ratio 4-bit D/A converter.\nimage_name:Fig. 16.9 R-2R resistance ladder\ndescription:This circuit represents an R-2R ladder network in a 4-bit digital-to-analog converter (DAC). The resistors create a ladder network, and the current sources (I1 to I4) correspond to the binary inputs. The reference voltage is Vref, and the ladder partitions this voltage to produce the analog output.\n\nFig. 16.9 R-2R resistance ladder.\nand so forth. Consequently, $\\mathbf{R}_{\\mathbf{i}}^{\\prime}=2 \\mathrm{R}$ for all i. This outcome establishes the following current relationships:\n\n$$\n\\begin{equation*}\nI_{1}=\\frac{V_{\\text {ref }}}{2 R} \\tag{16.5}\n\\end{equation*}\n$$\n\nAdditionally, the voltage at node 2 is half that of node 1, resulting in\n\n$$\n\\begin{equation*}\nI_{2}=\\frac{V_{\\text {ref }}}{4 R} \\tag{16.6}\n\\end{equation*}\n$$\n\nAt node 3, the voltage halves again, hence\n\n$$\n\\begin{equation*}\nI_{3}=\\frac{V_{\\text {ref }}}{8 R} \\tag{16.7}\n\\end{equation*}\n$$\n\nand so on.\nThus, the R-2R ladder enables the acquisition of binary-weighted currents using only a single resistor size. (The $2 R$ resistors are constructed from two resistors of size R to enhance matching properties.) Consequently, this R-2R method typically offers both reduced size and improved accuracy compared to a binary-sized approach.\n\nA 4-bit D/A converter utilizing an R-2R ladder is presented in Fig. 16.10. For this R-2R-based circuit, we observe that\n\nKey Point: R-2R ladder D/A converters generate binary-weighted currents without requiring a full set of binary-weighted resistors. Instead, only 2:1 component ratios are necessary, yielding significant savings for high-resolution converters.\n\n$$\n\\begin{equation*}\nI_{r}=V_{\\text {ref }} /(2 R) \\tag{16.8}\n\\end{equation*}\n$$\n\nand\n\n$$\n\\begin{equation*}\nV_{\\text {out }}=R_{F} \\sum_{i=1}^{N} \\frac{b_{i} I_{r}}{2^{i-1}}=V_{\\text {ref }}\\left(\\frac{R_{F}}{R}\\right) \\sum_{i=1}^{N} \\frac{b_{i}}{2^{i}} \\tag{16.9}\n\\end{equation*}\n$$\n\nHowever, as previously noted, despite the reduction in resistance ratio, the current ratio through the switches remains substantial, necessitating the scaling of switch sizes to accommodate the varying current levels. One method to mitigate this current ratio is illustrated in Fig. 16.11, where equal currents flow through all switches. Nevertheless, this setup is generally slower due to voltage swings at the internal nodes of the R-2R ladder (unlike in Fig. 16.10, where internal nodes maintain fixed voltages).\n\nimage_name:Fig. 16.10 4-bit R-2R based D/A converter\ndescription:This shows a 4-bit R-2R ladder digital-to-analog converter. The circuit employs switches governed by binary inputs (b1, b2, b3, b4) to determine the current path through the R-2R ladder network, converting the digital input into an analog output voltage (Vout). The operational amplifier provides the essential gain and buffering for the output.\n\nFig. 16.10 4-bit R-2R based D/A converter."
},
{
    "text": "Key Point: Charge-redistribution switched-capacitor D/A converters sample a fixed reference voltage onto a binary-weighted capacitor array, with the effective capacitance governed by the input digital code. This sampled charge is then utilized in a switched-capacitor gain stage to generate the analog output voltage.\n\nThe fundamental concept involves substituting the input capacitor of an SC gain amplifier with a programmable capacitor array (PCA) consisting of binary-weighted capacitors, as illustrated in Fig. 16.12. Similar to the SC gain amplifier, this circuit is immune to opamp input offset voltage, 1/f noise, and finite amplifier gain. Additionally, an extra sign bit can be implemented by swapping the clock phases (indicated in parentheses) for the input switches.\n\nIt is important to note that, akin to the SC gain amplifier, precisely crafted clock waveforms are essential to reduce the voltage dependency of clock feed-through, and a deglitching capacitor should be employed. Furthermore, the digital codes should only be altered when the input side of the capacitors is connected to ground, making the switching time contingent on the sign bit, which introduces additional digital complexity.\n\nimage_name: Fig. 16.11 R-2R ladder D/A converter\ndescription: This circuit represents an R-2R ladder D/A converter, which transforms digital signals into analog output via resistors and current sources. An operational amplifier is utilized to buffer the output.\n\nFig. 16.11 R-2R ladder D/A converter featuring equal currents through the switches.\nimage_name: Fig. 16.12 Binary-array charge-redistribution D/A converter\ndescription: The circuit depicted is a binary-array charge-redistribution D/A converter. It employs capacitors and switches to convert a digital signal into an analog voltage output. An operational amplifier is used to buffer the output, with the capacitors arranged in a binary-weighted configuration to facilitate charge redistribution.\n\nFig. 16.12 Binary-array charge-redistribution D/A converter."
},
{
    "text": "Key Point: Charge-redistribution switched-capacitor D/A converters sample a fixed reference voltage onto a binary-weighted capacitor array, with the effective capacitance dictated by the input digital code. The captured charge is subsequently applied to a switched-capacitor gain stage, generating the analog output voltage.\n\nThe fundamental concept involves substituting the input capacitor of an SC gain amplifier with a programmable capacitor array (PCA) comprising binary-weighted capacitors, as illustrated in Fig. 16.12. Like the SC gain amplifier, this circuit is immune to opamp input offset voltage, 1/f noise, and finite amplifier gain. Additionally, an extra sign bit can be implemented by swapping the clock phases (indicated in parentheses) for the input switches.\n\nIt's important to note that, similar to the SC gain amplifier, meticulously crafted clock waveforms are essential to reduce the voltage dependency of clock feed-through, and a deglitching capacitor should be employed. Furthermore, digital codes should only be altered when the input side of the capacitors is connected to ground, making the switching time contingent on the sign bit, which introduces additional digital complexity.\n\nimage_name: Fig. 16.11 R-2R ladder D/A converter\ndescription: The circuit depicted is an R-2R ladder D/A converter, which transforms digital signals into analog output using resistors and current sources. An operational amplifier is utilized to buffer the output.\n\nFig. 16.11 R-2R ladder D/A converter featuring equal currents through the switches.\nimage_name: Fig. 16.12 Binary-array charge-redistribution D/A converter\ndescription: This circuit is a binary-array charge-redistribution D/A converter. It employs capacitors and switches to convert a digital signal into an analog voltage output. An operational amplifier is used for output buffering. The capacitors are arranged in a binary-weighted manner to facilitate charge redistribution.\n\nFig. 16.12 Binary-array charge-redistribution D/A converter."
},
{
    "text": "Key Point: Charge-redistribution switched-capacitor D/A converters sample a fixed reference voltage onto a binary-weighted capacitor array, with the effective capacitance dictated by the input digital code. This sampled charge is then utilized in a switched-capacitor gain stage to generate the analog output voltage.\n\nThe fundamental concept involves substituting the input capacitor of an SC gain amplifier with a programmable capacitor array (PCA) composed of binary-weighted capacitors, as depicted in Fig. 16.12. Like the SC gain amplifier, this circuit is immune to opamp input offset voltage, 1/f noise, and finite amplifier gain. Additionally, an extra sign bit can be implemented by swapping the clock phases (indicated in parentheses) for the input switches.\n\nIt is important to note that, similar to the SC gain amplifier, precisely crafted clock waveforms are essential to reduce the voltage dependency of clock feed-through, and a deglitching capacitor should be incorporated. Furthermore, digital codes should only be altered when the input side of the capacitors is connected to ground, making the switching time reliant on the sign bit, which introduces additional digital complexity.\n\nimage_name: Fig. 16.11 R-2R ladder D/A converter\ndescription: This circuit is an R-2R ladder D/A converter, which transforms digital signals into analog output using resistors and current sources. An operational amplifier is employed to buffer the output.\n\nFig. 16.11 R-2R ladder D/A converter featuring equal currents through the switches.\nimage_name: Fig. 16.12 Binary-array charge-redistribution D/A converter\ndescription: The circuit represents a binary-array charge-redistribution D/A converter. It employs capacitors and switches to convert a digital signal into an analog voltage output. An operational amplifier is used for output buffering, and the capacitors are arranged in a binary-weighted manner to facilitate charge redistribution.\n\nFig. 16.12 Binary-array charge-redistribution D/A converter."
},
{
    "text": "Key Point: Charge-redistribution switched-capacitor D/A converters sample a fixed reference voltage onto a binary-weighted capacitor array, with the effective capacitance dictated by the input digital code. The sampled charge is then utilized in a switched-capacitor gain stage to generate the analog output voltage.\n\nThe fundamental concept involves substituting the input capacitor of an SC gain amplifier with a programmable capacitor array (PCA) consisting of binary-weighted capacitors, as depicted in Fig. 16.12. Like the SC gain amplifier, this circuit is immune to opamp input offset voltage, 1/f noise, and finite amplifier gain. Additionally, an extra sign bit can be implemented by swapping the clock phases (indicated in parentheses) for the input switches.\n\nIt is important to note that, similar to the SC gain amplifier, precisely crafted clock waveforms are essential to reduce the voltage dependency of clock feed-through, and a deglitching capacitor should be incorporated. Furthermore, digital code changes should only occur when the input side of the capacitors is grounded, making the switching time contingent on the sign bit, which introduces additional digital complexity.\n\nimage_name: Fig. 16.11 R-2R ladder D/A converter\ndescription: This circuit represents an R-2R ladder D/A converter, which transforms digital signals into analog output via resistors and current sources. An operational amplifier is employed to buffer the output.\n\nFig. 16.11 R-2R ladder D/A converter featuring equal currents through the switches.\nimage_name: Fig. 16.12 Binary-array charge-redistribution D/A converter\ndescription: This circuit is a binary-array charge-redistribution D/A converter. It employs capacitors and switches to convert digital signals into analog voltage output. An operational amplifier is used for output buffering, and the capacitors are arranged in a binary-weighted manner to facilitate charge redistribution.\n\nFig. 16.12 Binary-array charge-redistribution D/A converter."
},
{
    "text": "Key Point: Charge-redistribution switched-capacitor D/A converters sample a fixed reference voltage onto a binary-weighted capacitor array, with the effective capacitance dictated by the input digital code. This sampled charge is then utilized in a switched-capacitor gain stage to generate the analog output voltage.\n\nThe fundamental concept involves substituting the input capacitor of an SC gain amplifier with a programmable capacitor array (PCA) consisting of binary-weighted capacitors, as illustrated in Fig. 16.12. Like the SC gain amplifier, this circuit is immune to opamp input offset voltage, 1/f noise, and finite amplifier gain. Additionally, an extra sign bit can be implemented by swapping the clock phases (indicated in parentheses) for the input switches.\n\nIt is important to note that, similar to the SC gain amplifier, precisely generated clock waveforms are essential to reduce the voltage dependency of clock feed-through, and a deglitching capacitor should be employed. Furthermore, digital codes should only be altered when the input side of the capacitors is connected to ground, making the switching time contingent on the sign bit, which introduces additional digital complexity.\n\n**Fig. 16.11 R-2R ladder D/A converter**: This circuit is an R-2R ladder D/A converter that transforms digital signals into analog output using resistors and current sources, with an operational amplifier buffering the output.\n\n**Fig. 16.11 R-2R ladder D/A converter with equal currents through the switches**.\n\n**Fig. 16.12 Binary-array charge-redistribution D/A converter**: This circuit is a binary-array charge-redistribution D/A converter that employs capacitors and switches to convert a digital signal into an analog voltage output. The operational amplifier buffers the output, and the capacitors are arranged in a binary-weighted configuration for charge redistribution.\n\n**Fig. 16.12 Binary-array charge-redistribution D/A converter**."
},
{
    "text": "Key Point: Charge-redistribution switched-capacitor D/A converters sample a fixed reference voltage onto a binary-weighted capacitor array, with the effective capacitance dictated by the input digital code. This sampled charge is then transferred to a switched-capacitor gain stage, generating the analog output voltage.\n\nThe fundamental concept involves substituting the input capacitor of an SC gain amplifier with a programmable capacitor array (PCA) consisting of binary-weighted capacitors, as depicted in Fig. 16.12. Like the SC gain amplifier, this circuit is immune to opamp input offset voltage, 1/f noise, and finite amplifier gain. Additionally, an extra sign bit can be implemented by swapping the clock phases (indicated in parentheses) for the input switches.\n\nIt's important to note that, similar to the SC gain amplifier, precise clock waveforms are essential to reduce the voltage dependency of clock feed-through, and a deglitching capacitor should be employed. Furthermore, digital codes should only be altered when the input side of the capacitors is connected to ground, making the switching time reliant on the sign bit, which introduces additional digital complexity.\nimage_name:Fig. 16.11 R-2R ladder D/A converter\ndescription:This circuit represents an R-2R ladder D/A converter, which transforms digital signals into analog output using resistors and current sources. An operational amplifier is utilized to buffer the output.\n\nFig. 16.11 R-2R ladder D/A converter featuring equal currents through the switches.\nimage_name:Fig. 16.12 Binary-array charge-redistribution D/A converter\ndescription:The circuit is a binary-array charge-redistribution D/A converter, employing capacitors and switches to convert digital signals into an analog voltage output. An operational amplifier is used for output buffering. The capacitors are arranged in a binary-weighted manner to facilitate charge redistribution.\n\nFig. 16.12 Binary-array charge-redistribution D/A converter."
},
{
    "text": "Key Point: Charge-redistribution switched-capacitor D/A converters sample a fixed reference voltage onto a binary-weighted capacitor array, with the effective capacitance governed by the input digital code. This sampled charge is then utilized in a switched-capacitor gain stage to generate the analog output voltage.\n\nThe fundamental concept involves substituting the input capacitor of an SC gain amplifier with a programmable capacitor array (PCA) consisting of binary-weighted capacitors, as depicted in Fig. 16.12. Like the SC gain amplifier, this circuit is immune to opamp input offset voltage, 1/f noise, and finite amplifier gain. Additionally, an extra sign bit can be implemented by swapping the clock phases (indicated in parentheses) for the input switches.\n\nIt is important to note that, similar to the SC gain amplifier, precise clock waveforms are essential to reduce the voltage dependency of clock feed-through, and a deglitching capacitor should be employed. Furthermore, digital codes should only be altered when the input side of the capacitors is connected to ground, making the switching time contingent on the sign bit, which introduces additional digital complexity.\n\nimage_name: Fig. 16.11 R-2R ladder D/A converter\ndescription: This circuit represents an R-2R ladder D/A converter, which transforms digital signals into analog output using resistors and current sources. An operational amplifier is employed to buffer the output.\n\nFig. 16.11 R-2R ladder D/A converter featuring equal currents through the switches.\nimage_name: Fig. 16.12 Binary-array charge-redistribution D/A converter\ndescription: The circuit is a binary-array charge-redistribution D/A converter that employs capacitors and switches to convert a digital signal into an analog voltage output. An operational amplifier is used for output buffering. The capacitors are arranged in a binary-weighted manner to facilitate charge redistribution.\n\nFig. 16.12 Binary-array charge-redistribution D/A converter."
},
{
    "text": "Key Point: Charge-redistribution switched-capacitor D/A converters sample a fixed reference voltage onto a binary-weighted capacitor array, with its effective capacitance dictated by the input digital code. This sampled charge is then used in a switched-capacitor gain stage to generate the analog output voltage.\n\nThe fundamental concept involves substituting the input capacitor of an SC gain amplifier with a programmable capacitor array (PCA) consisting of binary-weighted capacitors, as depicted in Fig. 16.12. Like the SC gain amplifier, this circuit is immune to opamp input offset voltage, 1/f noise, and finite amplifier gain. Additionally, an extra sign bit can be implemented by swapping the clock phases (indicated in parentheses) for the input switches.\n\nIt is important to note that, similar to the SC gain amplifier, precise clock waveforms are essential to reduce the voltage dependency of clock feed-through, and a deglitching capacitor should be incorporated. Furthermore, digital codes should only be altered when the input side of the capacitors is connected to ground, making the switching time contingent on the sign bit, which introduces additional digital complexity.\nimage_name:Fig. 16.11 R-2R ladder D/A converter\ndescription:This circuit is an R-2R ladder D/A converter, designed to transform digital signals into analog output using resistors and current sources. An operational amplifier is employed to buffer the output.\n\nFig. 16.11 R-2R ladder D/A converter featuring equal currents through the switches.\nimage_name:Fig. 16.12 Binary-array charge-redistribution D/A converter\ndescription:The circuit is a binary-array charge-redistribution D/A converter, which employs capacitors and switches to convert digital signals into analog voltage output. An operational amplifier is used for output buffering. The capacitors are arranged in a binary-weighted manner to facilitate charge redistribution.\n\nFig. 16.12 Binary-array charge-redistribution D/A converter."
},
{
    "text": "Glitches pose a significant constraint during high-speed operation for converters incorporating digital logic, $\\left\\{\\mathrm{b}_{1}, \\mathrm{~b}_{2}, \\ldots, \\mathrm{~b}_{\\mathrm{N}}\\right\\}$, directly tied to switching signals. These glitches primarily arise from disparate delays encountered when switching various signals. For instance, when the digital input code transitions from $0111 \\ldots 1$ to $1000 \\ldots 0$, all $\\mathrm{N}-1$ LSBs deactivate while the MSB activates. However, it's possible that the currents from the LSB switches may cease slightly before the MSB current, causing the current to momentarily drop to zero. Conversely, if the LSB switches deactivate slightly after the MSB current, the current will briefly spike to its maximum value. In either scenario, a glitch manifests at the output unless these delays are precisely aligned, which is improbable due to the differing currents in the branches. This glitch phenomenon is depicted in Fig. 16.14.\n\nThe impact of glitch disturbances can be mitigated by restricting the bandwidth (achieved by placing a capacitor across the resistor $R_{f}$ in Fig. 16.14), though this method decelerates the circuit. Another technique involves employing a sample and hold mechanism on the output signal. Ultimately, the most prevalent method to diminish glitches is to convert some or all of the digital word from a binary code to a thermometer code, as elaborated subsequently."
},
{
    "text": "Glitches pose a significant constraint during high-speed operation for converters incorporating digital logic, $\\left\\{\\mathrm{b}_{1}, \\mathrm{~b}_{2}, \\ldots, \\mathrm{~b}_{\\mathrm{N}}\\right\\}$, directly tied to switching signals. These glitches primarily arise from varying delays encountered when switching different signals. For instance, when the digital input code transitions from $0111 \\ldots 1$ to $1000 \\ldots 0$, all $\\mathrm{N}-1$ LSBs deactivate while the MSB activates. However, it's possible that the currents from the LSB switches may deactivate slightly before the MSB current, causing the current to momentarily drop to zero. Conversely, if the LSB switches deactivate slightly after the MSB current, the current will temporarily spike to its maximum value. In either scenario, a glitch emerges at the output unless these delays are precisely aligned, which is improbable due to the differing currents in the branches. This glitch phenomenon is depicted in Fig. 16.14.\n\nThe impact of glitches can be mitigated by restricting the bandwidth (by adding a capacitor across the resistor $R_{f}$ in Fig. 16.14), though this method decelerates the circuit. Another technique involves employing a sample and hold mechanism on the output signal. The most widely adopted method to minimize glitches is to convert some or all of the digital word from a binary code to a thermometer code, as detailed subsequently."
},
{
    "text": "Glitches pose a significant constraint during high-speed operation in converters featuring digital logic, $\\left\\{\\mathrm{b}_{1}, \\mathrm{~b}_{2}, \\ldots, \\mathrm{~b}_{\\mathrm{N}}\\right\\}$, directly linked to switching signals. These glitches primarily arise from varying delays encountered when switching different signals. For instance, when the digital input code transitions from $0111 \\ldots 1$ to $1000 \\ldots 0$, all $\\mathrm{N}-1$ LSBs deactivate while the MSB activates. However, it's possible that the currents from the LSB switches may cease slightly before the MSB current, causing the current to momentarily drop to zero. Conversely, if the LSB switches\nimage_name:Fig. 16.13 Binary-weighted current-mode D/A converter\ndescription:This circuit is a binary-weighted current-mode digital-to-analog converter (DAC). It employs current sources weighted by binary values and an operational amplifier to convert digital signals into analog output.\n\nFig. 16.13 Binary-weighted current-mode D/A converter.\nimage_name:I1\ndescription:The graph is a time-domain waveform depicting the behavior of currents in a binary-weighted current-mode digital-to-analog converter (DAC). It comprises three separate plots, each showing a step change in current over time (t).\n\n1. **Type of Graph and Function:**\n- The graph type is a time-domain waveform, illustrating current versus time.\n\n2. **Axes Labels and Units:**\n- The horizontal axis is labeled 't' for time.\n- The vertical axes are labeled 'I1', 'I2', and 'I1 + I2', representing various current values.\n\n3. **Overall Behavior and Trends:**\n- Each plot exhibits step function behavior, where the current abruptly increases to a specific level and remains constant.\n- **I1 Plot:** The current I1 initiates at zero and steps up to a higher constant value.\n- **I2 Plot:** The current I2 also starts at zero and steps up, but appears slightly delayed compared to I1.\n- **I1 + I2 Plot:** This plot shows the combined effect of I1 and I2, with the current stepping up to a value equal to the sum of I1 and I2.\n\n4. **Key Features and Technical Details:**\n- The step change in each current signifies digital switching actions typical in DACs.\n- The plots illustrate how the MSB current (I1) and the sum of LSB currents (I2) interact.\n- The delay between the step changes in I1 and I2 can result in glitches if not properly synchronized.\n\n5. **Annotations and Specific Data Points:**\n- No numerical values or specific annotations are provided, but the step nature of the plots is evident.\n\nThis graph is essential for comprehending the timing and synchronization challenges in binary-weighted DACs, as any timing mismatch can lead to glitches in the output signal.\nimage_name:I2\ndescription:The diagram comprises three time-domain waveforms and a circuit schematic. Each waveform is plotted with time \\( t \\) on the horizontal axis and current on the vertical axis. The currents are represented as \\( I_1 \\), \\( I_2 \\), and \\( I_1 + I_2 \\).\n\n1. **Waveform for \\( I_1 \\):**\n- The first graph displays a step function for the current \\( I_1 \\). It starts at zero and steps up to a constant positive value at a specific time.\n- The waveform features a sharp transition from zero to the positive value, indicating a sudden increase in current.\n\n2. **Waveform for \\( I_2 \\):**\n- The second graph also shows a step function for the current \\( I_2 \\). Like \\( I_1 \\), it starts at zero and steps up to a constant positive value.\n- The timing of the step may differ slightly from \\( I_1 \\), which is vital for analyzing glitches in DACs.\n\n3. **Waveform for \\( I_1 + I_2 \\):**\n- The third graph presents the sum of \\( I_1 \\) and \\( I_2 \\). It starts at zero and steps up to a value that is the sum of the two individual currents.\n- The waveform reflects the combined effect of the two step inputs, highlighting potential glitches due to timing mismatches.\n\n4. **Circuit Schematic:**\n- The right side of the diagram depicts a binary-weighted current-mode DAC circuit.\n- It includes two current sources labeled \\( I_1 \\) and \\( I_2 \\), which feed into an operational amplifier (OpAmp) circuit.\n- The OpAmp is configured with a feedback resistor \\( R_f \\), and the output voltage \\( V_{out} \\) is derived from the OpAmp's output.\n\nThis diagram aids in analyzing glitches in the DAC output resulting from timing mismatches between \\( I_1 \\) and \\( I_2 \\). Glitches occur when the transition times of \\( I_1 \\) and \\( I_2 \\) do not perfectly align, causing a temporary deviation in the output current and thus the output voltage.\nimage_name:I1 + I2\ndescription:The diagram includes three time-domain waveforms labeled \\(I_1\\), \\(I_2\\), and \\(I_1 + I_2\\), along with a schematic of a binary-weighted current-mode digital-to-analog converter (DAC). Each waveform is plotted against time \\(t\\) on the horizontal axis, with current on the vertical axis.\n\n1. **\\(I_1\\) Waveform:**\n- **Type:** Step function.\n- **Behavior:** The waveform begins at zero and steps up to a constant positive value, remaining stable thereafter.\n- **Axes:** The vertical axis represents current \\(I_1\\), and the horizontal axis represents time \\(t\\).\n\n2. **\\(I_2\\) Waveform:**\n- **Type:** Step function.\n- **Behavior:** Similar to \\(I_1\\), this waveform starts at zero and steps up to a constant positive value, but the step timing is slightly delayed compared to \\(I_1\\).\n- **Axes:** The vertical axis represents current \\(I_2\\), and the horizontal axis represents time \\(t\\).\n\n3. **\\(I_1 + I_2\\) Waveform:**\n- **Type:** Composite step function.\n- **Behavior:** This waveform merges the effects of \\(I_1\\) and \\(I_2\\). It initially follows \\(I_1\\), stepping up from zero, and then increases further when \\(I_2\\) steps up, resulting in a higher final current level.\n- **Axes:** The vertical axis represents the combined current \\(I_1 + I_2\\), and the horizontal axis represents time \\(t\\).\n\n4. **Schematic:**\n- The schematic on the right shows a DAC circuit with current sources \\(I_1\\) and \\(I_2\\) feeding into an operational amplifier (OpAmp) with a feedback resistor \\(R_f\\). The output voltage \\(V_{out}\\) is taken from the OpAmp's output.\n\n**Overall Behavior and Trends:**\n- The waveforms depict the step changes in current as each binary-weighted current source is activated. The combination of \\(I_1\\) and \\(I_2\\) into \\(I_1 + I_2\\) demonstrates how the DAC produces a higher current output when both sources are active.\n\n**Key Features:**\n- The step changes in \\(I_1\\) and \\(I_2\\) are crucial for understanding how glitches can occur if the timing of these steps is not perfectly synchronized, as described in the context.\nimage_name:Binary-weighted current-mode D/A converter\ndescription:This circuit is a binary-weighted current-mode digital-to-analog converter (DAC). It utilizes current sources weighted by binary values and an operational amplifier to convert digital signals into analog output. The diagram also illustrates glitches that arise due to timing mismatches between the MSB and LSB currents.\n\nFig. 16.14 Glitches. $\\mathrm{I}_{1}$ represents the MSB current, and $\\mathrm{I}_{2}$ represents the sum of the $\\mathrm{N}-1 \\mathrm{LSB}$ currents. Here, the MSB current turns off slightly early, causing a glitch of zero current.\ndeactivate slightly after the MSB current, the current will temporarily spike to its maximum value. In either scenario, a glitch occurs at the output unless these delays are precisely matched, which is improbable due to the differing currents in the branches. This glitch phenomenon is depicted in Fig. 16.14.\n\nThe impact of glitch disturbances can be mitigated by limiting the bandwidth (by placing a capacitor across the resistor $R_{f}$ in Fig. 16.14), although this method slows down the circuit. Another approach is to employ a sample and hold mechanism on the output signal. The most prevalent method to reduce glitches is to convert some or all of the digital word from a binary code to a thermometer code, as discussed subsequently."
},
{
    "text": "Glitches pose a significant constraint during high-speed operation for converters with digital logic, $\\left\\{\\mathrm{b}_{1}, \\mathrm{~b}_{2}, \\ldots, \\mathrm{~b}_{\\mathrm{N}}\\right\\}$, directly tied to switching signals. These glitches primarily arise from varying delays encountered when switching different signals. For instance, when the digital input code shifts from $0111 \\ldots 1$ to $1000 \\ldots 0$, all $\\mathrm{N}-1$ LSBs deactivate while the MSB activates. However, it's possible that the currents from the LSB switches may turn off marginally before the MSB current, causing the current to momentarily drop to zero. Conversely, if the LSB switches turn off slightly after the MSB current, the current will briefly spike to its maximum value. In either scenario, a glitch manifests at the output unless these delays are precisely aligned, which is improbable due to the differing currents in the branches. This glitch phenomenon is depicted in Fig. 16.14.\n\nThe impact of glitch disturbances can be mitigated by constraining the bandwidth (by adding a capacitor across the resistor $R_{f}$ in Fig. 16.14), though this method decelerates the circuit. Another technique involves employing a sample and hold on the output signal. The most prevalent method to minimize glitches is to convert some or all of the digital word from a binary code to a thermometer code, as elaborated in the following discussion."
},
{
    "text": "Glitches pose a significant constraint during high-speed operations in converters incorporating digital logic, $\\left\\{\\mathrm{b}_{1}, \\mathrm{~b}_{2}, \\ldots, \\mathrm{~b}_{\\mathrm{N}}\\right\\}$, directly linked to switching signals. These glitches primarily arise from disparate delays encountered when switching various signals. For instance, when the digital input code transitions from $0111 \\ldots 1$ to $1000 \\ldots 0$, all $\\mathrm{N}-1$ LSBs deactivate while the MSB activates. However, it's possible that the LSB currents may deactivate marginally before the MSB current, causing the current to momentarily drop to zero. Conversely, if the LSB currents\nimage_name:Fig. 16.13 Binary-weighted current-mode D/A converter\ndescription:This circuit represents a binary-weighted current-mode digital-to-analog converter (DAC). It employs current sources with binary-weighted values and an operational amplifier to transform digital signals into analog outputs.\n\nFig. 16.13 Binary-weighted current-mode D/A converter.\nimage_name:I1\ndescription:The graph depicts a time-domain waveform showing the behavior of currents in a binary-weighted current-mode digital-to-analog converter (DAC). It comprises three distinct plots, each illustrating a step change in current over time (t).\n\n1. **Type of Graph and Function:**\n- The graph is a time-domain waveform, depicting current versus time.\n\n2. **Axes Labels and Units:**\n- The horizontal axis is marked 't', indicating time.\n- The vertical axes are labeled 'I1', 'I2', and 'I1 + I2', representing various current values.\n\n3. **Overall Behavior and Trends:**\n- Each plot exhibits step function behavior, where the current abruptly rises to a specific level and remains constant.\n- **I1 Plot:** The current I1 initiates at zero and steps up to a higher constant value.\n- **I2 Plot:** The current I2 also begins at zero and steps up, but appears slightly delayed relative to I1.\n- **I1 + I2 Plot:** This plot displays the combined effect of I1 and I2, with the current stepping up to a value equal to their sum.\n\n4. **Key Features and Technical Details:**\n- The step change in each current signifies digital switching actions typical in DACs.\n- The plots illustrate the interaction between the MSB current (I1) and the sum of LSB currents (I2).\n- The delay between the step changes in I1 and I2 can result in glitches if not properly synchronized.\n\n5. **Annotations and Specific Data Points:**\n- No numerical values or specific annotations are provided, but the step nature of the plots is evident.\n\nThis graph is essential for comprehending the timing and synchronization challenges in binary-weighted DACs, as any timing mismatch can lead to glitches in the output signal.\nimage_name:I2\ndescription:The diagram features three time-domain waveforms and a circuit schematic. Each waveform is plotted with time \\( t \\) on the horizontal axis and current on the vertical axis. The currents are denoted as \\( I_1 \\), \\( I_2 \\), and \\( I_1 + I_2 \\).\n\n1. **Waveform for \\( I_1 \\):**\n- The first graph shows a step function for the current \\( I_1 \\). It starts at zero and steps up to a constant positive value at a specific time.\n- The waveform is characterized by a sharp transition from zero to the positive value, indicating a sudden increase in current.\n\n2. **Waveform for \\( I_2 \\):**\n- The second graph also illustrates a step function for the current \\( I_2 \\). Like \\( I_1 \\), it starts at zero and steps up to a constant positive value.\n- The timing of the step may differ slightly from \\( I_1 \\), which is crucial for analyzing glitches in DACs.\n\n3. **Waveform for \\( I_1 + I_2 \\):**\n- The third graph shows the sum of \\( I_1 \\) and \\( I_2 \\). It starts at zero and steps up to a value that is the sum of the two individual currents.\n- The waveform reflects the combined effect of the two step inputs, highlighting any potential glitches due to timing mismatches.\n\n4. **Circuit Schematic:**\n- The right side of the diagram illustrates a binary-weighted current-mode DAC circuit.\n- It includes two current sources labeled \\( I_1 \\) and \\( I_2 \\), which feed into an operational amplifier (OpAmp) circuit.\n- The OpAmp is configured with a feedback resistor \\( R_f \\), and the output voltage \\( V_{out} \\) is taken from the OpAmp's output.\n\nThis diagram is utilized to analyze glitches in the DAC output resulting from timing mismatches between \\( I_1 \\) and \\( I_2 \\). Glitches occur when the transition times of \\( I_1 \\) and \\( I_2 \\) do not perfectly align, causing a temporary deviation in the output current and thus the output voltage.\nimage_name:I1 + I2\ndescription:The diagram comprises three time-domain waveforms labeled \\(I_1\\), \\(I_2\\), and \\(I_1 + I_2\\), along with a schematic of a binary-weighted current-mode digital-to-analog converter (DAC). Each waveform is plotted against time \\(t\\) on the horizontal axis, with current on the vertical axis.\n\n1. **\\(I_1\\) Waveform:**\n- **Type:** Step function.\n- **Behavior:** The waveform starts at zero and steps up to a constant positive value, remaining steady thereafter.\n- **Axes:** The vertical axis represents current \\(I_1\\), and the horizontal axis represents time \\(t\\).\n\n2. **\\(I_2\\) Waveform:**\n- **Type:** Step function.\n- **Behavior:** Similar to \\(I_1\\), this waveform begins at zero and steps up to a constant positive value, but the timing of this step is slightly delayed compared to \\(I_1\\).\n- **Axes:** The vertical axis represents current \\(I_2\\), and the horizontal axis represents time \\(t\\).\n\n3. **\\(I_1 + I_2\\) Waveform:**\n- **Type:** Composite step function.\n- **Behavior:** This waveform combines the effects of \\(I_1\\) and \\(I_2\\). It initially follows \\(I_1\\), stepping up from zero, and then increases further when \\(I_2\\) steps up, resulting in a higher final current level.\n- **Axes:** The vertical axis represents the combined current \\(I_1 + I_2\\), and the horizontal axis represents time \\(t\\).\n\n4. **Schematic:**\n- The schematic on the right shows a DAC circuit with current sources \\(I_1\\) and \\(I_2\\) feeding into an operational amplifier (OpAmp) with a feedback resistor \\(R_f\\). The output voltage \\(V_{out}\\) is taken from the OpAmp's output.\n\n**Overall Behavior and Trends:**\n- The waveforms depict the step changes in current as each binary-weighted current source is activated. The combination of \\(I_1\\) and \\(I_2\\) into \\(I_1 + I_2\\) demonstrates how the DAC generates a higher current output when both sources are active.\n\n**Key Features:**\n- The step changes in \\(I_1\\) and \\(I_2\\) are crucial for understanding how glitches can occur if the timing of these steps is not perfectly synchronized, as described in the context.\nimage_name:Binary-weighted current-mode D/A converter\ndescription:This circuit depicts a binary-weighted current-mode digital-to-analog converter (DAC). It utilizes current sources with binary-weighted values and an operational amplifier to convert digital signals into analog outputs. The diagram also illustrates glitches that arise due to timing mismatches between the MSB and LSB currents.\n\nFig. 16.14 Glitches. $\\mathrm{I}_{1}$ denotes the MSB current, and $\\mathrm{I}_{2}$ represents the sum of the $\\mathrm{N}-1 \\mathrm{LSB}$ currents. Here, the MSB current deactivates slightly early, causing a glitch of zero current.\ndeactivate slightly after the MSB current, the current will temporarily surge to its maximum value. In either scenario, a glitch manifests at the output unless these two delays are precisely matched, which is highly improbable due to the differing currents in the branches. This glitch phenomenon is depicted in Fig. 16.14.\n\nThe glitch disturbance can be mitigated by restricting the bandwidth (by placing a capacitor across the resistor $R_{f}$ in Fig. 16.14), although this method slows down the circuit. Another technique is to employ a sample and hold on the output signal. Ultimately, the most prevalent method to reduce glitches is to convert some or all of the digital word from a binary code to a thermometer code, as discussed subsequently."
},
{
    "text": "Glitches pose a significant constraint during high-speed operation for converters featuring digital logic, $\\left\\{\\mathrm{b}_{1}, \\mathrm{~b}_{2}, \\ldots, \\mathrm{~b}_{\\mathrm{N}}\\right\\}$, directly tied to switching signals. These glitches primarily stem from varying delays encountered when switching different signals. For instance, when the digital input code transitions from $0111 \\ldots 1$ to $1000 \\ldots 0$, all $\\mathrm{N}-1$ LSBs deactivate while the MSB activates. However, it's possible that the currents from the LSB switches may cease slightly before the MSB current, causing the current to momentarily drop to zero. Conversely, if the LSB switches\nimage_name:Fig. 16.13 Binary-weighted current-mode D/A converter\ndescription:This circuit is a binary-weighted current-mode digital-to-analog converter (DAC). It employs current sources weighted by binary values and an operational amplifier to convert digital signals into analog output.\n\nFig. 16.13 Binary-weighted current-mode D/A converter.\nimage_name:I1\ndescription:The graph depicts a time-domain waveform showing the behavior of currents in a binary-weighted current-mode digital-to-analog converter (DAC). It comprises three separate plots, each illustrating a step change in current over time (t).\n\n1. **Type of Graph and Function:**\n- The graph is a time-domain waveform, displaying current versus time.\n\n2. **Axes Labels and Units:**\n- The horizontal axis is marked 't' for time.\n- The vertical axes are labeled 'I1', 'I2', and 'I1 + I2', indicating different current values.\n\n3. **Overall Behavior and Trends:**\n- Each plot exhibits step function behavior, where the current abruptly rises to a specific level and remains steady.\n- **I1 Plot:** The current I1 initiates at zero and steps up to a higher constant value.\n- **I2 Plot:** The current I2 also starts at zero and steps up, albeit with a slight delay compared to I1.\n- **I1 + I2 Plot:** This plot shows the combined impact of I1 and I2, with the current stepping up to a value equivalent to the sum of I1 and I2.\n\n4. **Key Features and Technical Details:**\n- The step change in each current signifies digital switching actions typical in DACs.\n- The plots highlight the interaction between the MSB current (I1) and the sum of LSB currents (I2).\n- The delay between the step changes in I1 and I2 can lead to glitches if not properly synchronized.\n\n5. **Annotations and Specific Data Points:**\n- No numerical values or specific annotations are provided, but the step nature of the plots is evident.\n\nThis graph is essential for comprehending the timing and synchronization challenges in binary-weighted DACs, as any timing mismatch can result in glitches in the output signal.\nimage_name:I2\ndescription:The diagram includes three time-domain waveforms and a circuit schematic. Each waveform plots time \\( t \\) on the horizontal axis and current on the vertical axis, represented as \\( I_1 \\), \\( I_2 \\), and \\( I_1 + I_2 \\).\n\n1. **Waveform for \\( I_1 \\):**\n- The first graph displays a step function for the current \\( I_1 \\). It starts at zero and steps up to a constant positive value at a specific time.\n- The waveform features a sharp transition from zero to the positive value, indicating a sudden increase in current.\n\n2. **Waveform for \\( I_2 \\):**\n- The second graph also shows a step function for the current \\( I_2 \\). Like \\( I_1 \\), it starts at zero and steps up to a constant positive value.\n- The timing of the step may differ slightly from \\( I_1 \\), which is vital for analyzing glitches in DACs.\n\n3. **Waveform for \\( I_1 + I_2 \\):**\n- The third graph illustrates the sum of \\( I_1 \\) and \\( I_2 \\). It starts at zero and steps up to a value that is the sum of the two individual currents.\n- The waveform reflects the combined effect of the two step inputs, highlighting potential glitches due to timing mismatches.\n\n4. **Circuit Schematic:**\n- The right side of the diagram depicts a binary-weighted current-mode DAC circuit.\n- It includes two current sources labeled \\( I_1 \\) and \\( I_2 \\), feeding into an operational amplifier (OpAmp) circuit.\n- The OpAmp is configured with a feedback resistor \\( R_f \\), and the output voltage \\( V_{out} \\) is derived from the OpAmp's output.\n\nThis diagram aids in analyzing glitches in the DAC output caused by timing mismatches between \\( I_1 \\) and \\( I_2 \\). Glitches arise when the transition times of \\( I_1 \\) and \\( I_2 \\) do not align perfectly, causing temporary deviations in the output current and thus the output voltage.\nimage_name:I1 + I2\ndescription:The diagram features three time-domain waveforms labeled \\(I_1\\), \\(I_2\\), and \\(I_1 + I_2\\), along with a schematic of a binary-weighted current-mode digital-to-analog converter (DAC). Each waveform is plotted against time \\(t\\) on the horizontal axis, with current on the vertical axis.\n\n1. **\\(I_1\\) Waveform:**\n- **Type:** Step function.\n- **Behavior:** The waveform begins at zero and steps up to a constant positive value, remaining constant thereafter.\n- **Axes:** The vertical axis denotes current \\(I_1\\), and the horizontal axis denotes time \\(t\\).\n\n2. **\\(I_2\\) Waveform:**\n- **Type:** Step function.\n- **Behavior:** Similar to \\(I_1\\), this waveform starts at zero and steps up to a constant positive value, but its timing is slightly delayed compared to \\(I_1\\).\n- **Axes:** The vertical axis represents current \\(I_2\\), and the horizontal axis represents time \\(t\\).\n\n3. **\\(I_1 + I_2\\) Waveform:**\n- **Type:** Composite step function.\n- **Behavior:** This waveform merges the effects of \\(I_1\\) and \\(I_2\\). It initially follows \\(I_1\\), stepping up from zero, and then increases further when \\(I_2\\) steps up, resulting in a higher final current level.\n- **Axes:** The vertical axis indicates the combined current \\(I_1 + I_2\\), and the horizontal axis indicates time \\(t\\).\n\n4. **Schematic:**\n- The schematic on the right shows a DAC circuit with current sources \\(I_1\\) and \\(I_2\\) feeding into an operational amplifier (OpAmp) with a feedback resistor \\(R_f\\). The output voltage \\(V_{out}\\) is taken from the OpAmp's output.\n\n**Overall Behavior and Trends:**\n- The waveforms demonstrate the step changes in current as each binary-weighted current source is activated. The combination of \\(I_1\\) and \\(I_2\\) into \\(I_1 + I_2\\) shows how the DAC produces a higher current output when both sources are active.\n\n**Key Features:**\n- The step changes in \\(I_1\\) and \\(I_2\\) are crucial for understanding how glitches can occur if the timing of these steps is not perfectly synchronized, as explained in the context.\nimage_name:Binary-weighted current-mode D/A converter\ndescription:This circuit is a binary-weighted current-mode digital-to-analog converter (DAC). It utilizes current sources weighted by binary values and an operational amplifier to convert digital signals into analog output. The diagram also illustrates glitches arising from timing mismatches between the MSB and LSB currents.\n\nFig. 16.14 Glitches. $\\mathrm{I}_{1}$ denotes the MSB current, and $\\mathrm{I}_{2}$ represents the sum of the $\\mathrm{N}-1 \\mathrm{LSB}$ currents. Here, the MSB current turns off slightly early, causing a glitch of zero current.\nturn off slightly after the MSB current, the current will temporarily spike to its maximum value. In either scenario, a glitch occurs at the output unless these two delays are precisely matched, which is improbable due to the different currents in the branches. This glitch phenomenon is depicted in Fig. 16.14.\n\nThe glitch disturbance can be mitigated by limiting the bandwidth (by placing a capacitor across the resistor $R_{f}$ in Fig. 16.14), although this method slows down the circuit. Another approach is to use a sample and hold on the output signal. The most prevalent method to reduce glitches is to convert some or all of the digital word from a binary code to a thermometer code, as discussed subsequently."
},
{
    "text": "Glitches pose a significant constraint during high-speed operation for converters featuring digital logic, $\\left\\{\\mathrm{b}_{1}, \\mathrm{~b}_{2}, \\ldots, \\mathrm{~b}_{\\mathrm{N}}\\right\\}$, directly tied to switching signals. These glitches primarily stem from varying delays encountered when switching different signals. For instance, when the digital input code transitions from $0111 \\ldots 1$ to $1000 \\ldots 0$, all $\\mathrm{N}-1$ LSBs deactivate while the MSB activates. However, it's possible that the currents from the LSB switches may cease slightly before the MSB current, causing the current to momentarily drop to zero. Conversely, if the LSB switches\nimage_name:Fig. 16.13 Binary-weighted current-mode D/A converter\ndescription:This circuit is a binary-weighted current-mode digital-to-analog converter (DAC). It employs current sources weighted by binary values and an operational amplifier to transform digital signals into analog output.\n\nFig. 16.13 Binary-weighted current-mode D/A converter.\nimage_name:I1\ndescription:The graph is a time-domain waveform depicting the behavior of currents in a binary-weighted current-mode digital-to-analog converter (DAC). It comprises three separate plots, each showing a step change in current over time (t).\n\n1. **Type of Graph and Function:**\n- The graph type is a time-domain waveform, illustrating current versus time.\n\n2. **Axes Labels and Units:**\n- The horizontal axis is labeled 't' for time.\n- The vertical axes are labeled 'I1', 'I2', and 'I1 + I2', representing various current values.\n\n3. **Overall Behavior and Trends:**\n- Each plot exhibits step function behavior, where the current abruptly rises to a specific level and remains constant.\n- **I1 Plot:** The current I1 initiates at zero and steps up to a higher constant value.\n- **I2 Plot:** The current I2 also begins at zero and steps up, but appears slightly delayed relative to I1.\n- **I1 + I2 Plot:** This plot displays the combined effect of I1 and I2, with the current stepping up to a value equivalent to the sum of I1 and I2.\n\n4. **Key Features and Technical Details:**\n- The step change in each current signifies a digital switching action typical in DACs.\n- The plots illustrate the interaction between the MSB current (I1) and the sum of LSB currents (I2).\n- The delay between the step changes in I1 and I2 can result in glitches if not properly synchronized.\n\n5. **Annotations and Specific Data Points:**\n- No numerical values or specific annotations are provided, but the step nature of the plots is evident.\n\nThis graph is essential for comprehending the timing and synchronization challenges in binary-weighted DACs, as any timing mismatch can lead to glitches in the output signal.\nimage_name:I2\ndescription:The diagram comprises three time-domain waveforms and a circuit schematic. Each waveform is plotted with time \\( t \\) on the horizontal axis and current on the vertical axis. The currents are denoted as \\( I_1 \\), \\( I_2 \\), and \\( I_1 + I_2 \\).\n\n1. **Waveform for \\( I_1 \\):**\n- The first graph depicts a step function for the current \\( I_1 \\). It starts at zero and steps up to a constant positive value at a specific time.\n- The waveform features a sharp transition from zero to the positive value, indicating a sudden increase in current.\n\n2. **Waveform for \\( I_2 \\):**\n- The second graph also shows a step function for the current \\( I_2 \\). Like \\( I_1 \\), it starts at zero and steps up to a constant positive value.\n- The timing of the step may differ slightly from \\( I_1 \\), which is vital for analyzing glitches in DACs.\n\n3. **Waveform for \\( I_1 + I_2 \\):**\n- The third graph presents the sum of \\( I_1 \\) and \\( I_2 \\). It starts at zero and steps up to a value that is the sum of the two individual currents.\n- The waveform reflects the combined effect of the two step inputs, highlighting potential glitches due to timing mismatches.\n\n4. **Circuit Schematic:**\n- The right side of the diagram depicts a binary-weighted current-mode DAC circuit.\n- It includes two current sources labeled \\( I_1 \\) and \\( I_2 \\), which feed into an operational amplifier (OpAmp) circuit.\n- The OpAmp is configured with a feedback resistor \\( R_f \\), and the output voltage \\( V_{out} \\) is derived from the OpAmp's output.\n\nThis diagram aids in analyzing glitches in the DAC output resulting from timing mismatches between \\( I_1 \\) and \\( I_2 \\). Glitches occur when the transition times of \\( I_1 \\) and \\( I_2 \\) do not perfectly align, causing a temporary deviation in the output current and thus the output voltage.\nimage_name:I1 + I2\ndescription:The diagram includes three time-domain waveforms labeled \\(I_1\\), \\(I_2\\), and \\(I_1 + I_2\\), along with a schematic of a binary-weighted current-mode digital-to-analog converter (DAC). Each waveform is plotted against time \\(t\\) on the horizontal axis, with current on the vertical axis.\n\n1. **\\(I_1\\) Waveform:**\n- **Type:** Step function.\n- **Behavior:** The waveform begins at zero and steps up to a constant positive value, remaining stable thereafter.\n- **Axes:** The vertical axis represents current \\(I_1\\), and the horizontal axis represents time \\(t\\).\n\n2. **\\(I_2\\) Waveform:**\n- **Type:** Step function.\n- **Behavior:** Similar to \\(I_1\\), this waveform starts at zero and steps up to a constant positive value, but the timing of this step is slightly delayed compared to \\(I_1\\).\n- **Axes:** The vertical axis represents current \\(I_2\\), and the horizontal axis represents time \\(t\\).\n\n3. **\\(I_1 + I_2\\) Waveform:**\n- **Type:** Composite step function.\n- **Behavior:** This waveform merges the effects of \\(I_1\\) and \\(I_2\\). It initially follows \\(I_1\\), stepping up from zero, and then increases further when \\(I_2\\) steps up, resulting in a higher final current level.\n- **Axes:** The vertical axis represents the combined current \\(I_1 + I_2\\), and the horizontal axis represents time \\(t\\).\n\n4. **Schematic:**\n- The schematic on the right shows a DAC circuit with current sources \\(I_1\\) and \\(I_2\\) feeding into an operational amplifier (OpAmp) with a feedback resistor \\(R_f\\). The output voltage \\(V_{out}\\) is taken from the OpAmp's output.\n\n**Overall Behavior and Trends:**\n- The waveforms demonstrate the step changes in current as each binary-weighted current source is activated. The combination of \\(I_1\\) and \\(I_2\\) into \\(I_1 + I_2\\) shows how the DAC produces a higher current output when both sources are active.\n\n**Key Features:**\n- The step changes in \\(I_1\\) and \\(I_2\\) are crucial for understanding how glitches can arise if the timing of these steps is not perfectly synchronized, as described in the context.\nimage_name:Binary-weighted current-mode D/A converter\ndescription:This circuit is a binary-weighted current-mode digital-to-analog converter (DAC). It utilizes current sources weighted by binary values and an operational amplifier to convert digital signals into analog output. The diagram also illustrates glitches that arise due to timing mismatches between the MSB and LSB currents.\n\nFig. 16.14 Glitches. $\\mathrm{I}_{1}$ represents the MSB current, and $\\mathrm{I}_{2}$ represents the sum of the $\\mathrm{N}-1 \\mathrm{LSB}$ currents. Here, the MSB current turns off slightly early, causing a glitch of zero current.\ndeactivate slightly after the MSB current, the current will temporarily spike to its maximum value. In either scenario, a glitch occurs at the output unless these two delays are precisely matched, which is highly improbable due to the different currents in the branches. This glitch phenomenon is depicted in Fig. 16.14.\n\nThe impact of glitch disturbances can be mitigated by limiting the bandwidth (by placing a capacitor across the resistor $R_{f}$ in Fig. 16.14), although this method slows down the circuit. Another approach is to implement a sample and hold on the output signal. The most widely adopted method to reduce glitches is to convert some or all of the digital word from a binary code to a thermometer code, as discussed subsequently."
},
{
    "text": "Glitches pose a significant constraint during high-speed operation for converters featuring digital logic, $\\left\\{\\mathrm{b}_{1}, \\mathrm{~b}_{2}, \\ldots, \\mathrm{~b}_{\\mathrm{N}}\\right\\}$, directly tied to switching signals. These glitches primarily stem from varying delays encountered when switching different signals. For instance, when the digital input code shifts from $0111 \\ldots 1$ to $1000 \\ldots 0$, all $\\mathrm{N}-1$ LSBs deactivate while the MSB activates. However, it's possible that the currents from the LSB switches may cease slightly before the MSB current, causing the current to momentarily drop to zero. Conversely, if the LSB switches\nimage_name:Fig. 16.13 Binary-weighted current-mode D/A converter\ndescription:This circuit is a binary-weighted current-mode digital-to-analog converter (DAC). It employs current sources weighted by binary values and an operational amplifier to transform digital signals into analog output.\n\nFig. 16.13 Binary-weighted current-mode D/A converter.\nimage_name:I1\ndescription:The graph depicts a time-domain waveform showing the behavior of currents in a binary-weighted current-mode digital-to-analog converter (DAC). It comprises three separate plots, each illustrating a step change in current over time (t).\n\n1. **Type of Graph and Function:**\n- The graph type is a time-domain waveform, depicting current versus time.\n\n2. **Axes Labels and Units:**\n- The horizontal axis is labeled 't', indicating time.\n- The vertical axes are labeled 'I1', 'I2', and 'I1 + I2', representing various current values.\n\n3. **Overall Behavior and Trends:**\n- Each plot exhibits step function behavior, where the current abruptly rises to a specific level and remains constant.\n- **I1 Plot:** The current I1 initiates at zero and steps up to a higher constant value.\n- **I2 Plot:** The current I2 also begins at zero and steps up, but appears slightly delayed compared to I1.\n- **I1 + I2 Plot:** This plot displays the combined effect of I1 and I2, with the current stepping up to a value equal to the sum of I1 and I2.\n\n4. **Key Features and Technical Details:**\n- The step change in each current signifies a digital switching action typical in DACs.\n- The plots demonstrate the interaction between the MSB current (I1) and the sum of LSB currents (I2).\n- The delay between the step changes in I1 and I2 can result in glitches if not properly synchronized.\n\n5. **Annotations and Specific Data Points:**\n- No numerical values or specific annotations are provided, but the step nature of the plots is evident.\n\nThis graph is essential for understanding the timing and synchronization challenges in binary-weighted DACs, as any timing mismatch can lead to glitches in the output signal.\nimage_name:I2\ndescription:The diagram features three time-domain waveforms and a circuit schematic. Each waveform is plotted with time \\( t \\) on the horizontal axis and current on the vertical axis. The currents are denoted as \\( I_1 \\), \\( I_2 \\), and \\( I_1 + I_2 \\).\n\n1. **Waveform for \\( I_1 \\):**\n- The first graph illustrates a step function for the current \\( I_1 \\). It starts at zero and steps up to a constant positive value at a specific time.\n- The waveform is characterized by a sharp transition from zero to the positive value, indicating a sudden increase in current.\n\n2. **Waveform for \\( I_2 \\):**\n- The second graph also shows a step function for the current \\( I_2 \\). Like \\( I_1 \\), it starts at zero and steps up to a constant positive value.\n- The timing of the step may differ slightly from \\( I_1 \\), which is critical for analyzing glitches in DACs.\n\n3. **Waveform for \\( I_1 + I_2 \\):**\n- The third graph presents the sum of \\( I_1 \\) and \\( I_2 \\). It starts at zero and steps up to a value that is the sum of the two individual currents.\n- The waveform reflects the combined effect of the two step inputs, highlighting potential glitches due to timing mismatches.\n\n4. **Circuit Schematic:**\n- The right side of the diagram illustrates a binary-weighted current-mode DAC circuit.\n- It includes two current sources labeled \\( I_1 \\) and \\( I_2 \\), which feed into an operational amplifier (OpAmp) circuit.\n- The OpAmp is configured with a feedback resistor \\( R_f \\), and the output voltage \\( V_{out} \\) is derived from the OpAmp's output.\n\nThis diagram aids in analyzing glitches in the DAC output caused by timing mismatches between \\( I_1 \\) and \\( I_2 \\). Glitches occur when the transition times of \\( I_1 \\) and \\( I_2 \\) do not perfectly align, causing a temporary deviation in the output current and thus the output voltage.\nimage_name:I1 + I2\ndescription:The diagram includes three time-domain waveforms labeled \\(I_1\\), \\(I_2\\), and \\(I_1 + I_2\\), along with a schematic of a binary-weighted current-mode digital-to-analog converter (DAC). Each waveform is plotted against time \\(t\\) on the horizontal axis, with current on the vertical axis.\n\n1. **\\(I_1\\) Waveform:**\n- **Type:** Step function.\n- **Behavior:** The waveform begins at zero and steps up to a constant positive value, remaining steady thereafter.\n- **Axes:** The vertical axis represents current \\(I_1\\), and the horizontal axis represents time \\(t\\).\n\n2. **\\(I_2\\) Waveform:**\n- **Type:** Step function.\n- **Behavior:** Similar to \\(I_1\\), this waveform starts at zero and steps up to a constant positive value, but the timing of this step is slightly delayed compared to \\(I_1\\).\n- **Axes:** The vertical axis represents current \\(I_2\\), and the horizontal axis represents time \\(t\\).\n\n3. **\\(I_1 + I_2\\) Waveform:**\n- **Type:** Composite step function.\n- **Behavior:** This waveform merges the effects of \\(I_1\\) and \\(I_2\\). It initially follows \\(I_1\\), stepping up from zero, and then increases further when \\(I_2\\) steps up, resulting in a higher final current level.\n- **Axes:** The vertical axis represents the combined current \\(I_1 + I_2\\), and the horizontal axis represents time \\(t\\).\n\n4. **Schematic:**\n- The schematic on the right depicts a DAC circuit with current sources \\(I_1\\) and \\(I_2\\) feeding into an operational amplifier (OpAmp) with a feedback resistor \\(R_f\\). The output voltage \\(V_{out}\\) is taken from the OpAmp's output.\n\n**Overall Behavior and Trends:**\n- The waveforms illustrate the step changes in current as each binary-weighted current source is activated. The combination of \\(I_1\\) and \\(I_2\\) into \\(I_1 + I_2\\) demonstrates how the DAC generates a higher current output when both sources are active.\n\n**Key Features:**\n- The step changes in \\(I_1\\) and \\(I_2\\) are crucial for understanding how glitches can occur if the timing of these steps is not perfectly synchronized, as described in the context.\nimage_name:Binary-weighted current-mode D/A converter\ndescription:This circuit is a binary-weighted current-mode digital-to-analog converter (DAC). It utilizes current sources weighted by binary values and an operational amplifier to convert digital signals into analog output. The diagram also illustrates glitches that arise due to timing mismatches between the MSB and LSB currents.\n\nFig. 16.14 Glitches. $\\mathrm{I}_{1}$ represents the MSB current, and $\\mathrm{I}_{2}$ represents the sum of the $\\mathrm{N}-1 \\mathrm{LSB}$ currents. Here, the MSB current turns off slightly early, causing a glitch of zero current.\nturn off slightly after the MSB current, the current will temporarily spike to its maximum value. In either scenario, a glitch occurs at the output unless these delays are precisely matched, which is highly improbable due to the different currents in the branches. This glitch phenomenon is depicted in Fig. 16.14.\n\nTo mitigate the glitch disturbance, one can limit the bandwidth (by adding a capacitor across the resistor $R_{f}$ in Fig. 16.14), though this method slows down the circuit. Another approach is to employ a sample and hold mechanism on the output signal. The most prevalent method to reduce glitches is to alter some or all of the digital word from a binary code to a thermometer code, as discussed subsequently."
},
{
    "text": "Key Point: Thermometer-code converters utilize an array of $2 \\mathrm{~N}-1$ unitary, equally-sized signal elements. A digital thermometer code selects the requisite number of these unitary signal elements, summing them to generate the analog output with assured monotonicity and superior static linearity compared to binary-weighted converters.\n\nAn alternative approach to implementing a $\\mathrm{D} / \\mathrm{A}$ converter involves digitally converting the input value into a thermometer-code equivalent. A thermometer code differs from a binary code in that it uses $2^{\\mathrm{N}}-1$ digital inputs to represent $2^{\\mathrm{N}}$ distinct digital values. Clearly, a thermometer code is not the most compact representation, as a binary code necessitates only N digital inputs to represent $2^{\\mathrm{N}}$ input values. Nonetheless, as we will discuss, a thermometer-based converter offers advantages over its binary counterpart, including lower DNL errors, guaranteed monotonicity, and diminished glitching noise.\n\nIn a thermometer-code representation, the count of 1s signifies the decimal value. For instance, with a 3-bit binary input, the decimal value 4 is binary coded as 100, whereas its thermometer equivalent is 0001111. The codes for the remaining values in this 3-bit example are depicted in Table 16.1.\n\nOne technique to realize a $\\mathrm{D} / \\mathrm{A}$ converter using a thermometer-code input is to construct $2^{\\mathrm{N}}-1$ equal-sized resistors and switches connected to the virtual ground of an opamp, as illustrated in Fig. 16.15. Note that monotonicity is ensured here because, when the binary input increments to the next higher number, one additional digital value in the thermometer code becomes high, drawing more current from the virtual ground and causing the opamp output to rise (never fall). This is not inherently the case for a binary-array D/A converter, as mismatches between elements might cause the output to decrease even when the digital input value increases.\n\nTable 16.1 Thermometer-code representations for 3-bit binary values.\n\n| Decimal | Binary |  |  | Thermometer Code |  |  |  |  |  |  |\n| :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: |\n|  | $b_{1}$ | $b_{2}$ | $b_{3}$ | $d_{1}$ | $\\mathrm{d}_{2}$ | $d_{3}$ | $d_{4}$ | $d_{5}$ | $d_{6}$ | $\\mathrm{d}_{7}$ |\n| 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 |\n| 1 | 0 | 0 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 1 |\n| 2 | 0 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 1 | 1 |\n| 3 | 0 | 1 | 1 | 0 | 0 | 0 | 0 | 1 | 1 | 1 |\n| 4 | 1 | 0 | 0 | 0 | 0 | 0 | 1 | 1 | 1 | 1 |\n| 5 | 1 | 0 | 1 | 0 | 0 | 1 | 1 | 1 | 1 | 1 |\n| 6 | 1 | 1 | 0 | 0 | 1 | 1 | 1 | 1 | 1 | 1 |\n| 7 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 |\n\nSignificantly, a D/A converter based on a thermometer code substantially reduces glitches compared to binary-array methods, as resistor banks are not swapped at slightly different times when the output should change by just 1 LSB. It is also pertinent to mention that latches can be employed in the binary-to-thermometer code conversion to eliminate glitches in the digital thermometer-code words, and pipelining can be utilized to sustain high throughput speed.\n\nIt is noteworthy that employing a thermometer code does not expand the size of the analog circuitry relative to a binary-weighted approach. In a 3-bit binary-weighted approach, resistor values of $R, 2 R$, and $4 R$ are required, totaling $7 R$. This total resistance matches that of the 3-bit thermometer-code approach shown in Fig. 16.15. Since resistors on an integrated circuit are created using an area proportional to their size, each method demands equivalent area (disregarding interconnect). The same rationale applies to demonstrate that the total area required by the transistor switches is identical, as transistors in binary-weighted designs are typically size-scaled to accommodate varying current densities. In a thermometer-code approach, all transistor switches are of equal size since they conduct equal currents. Lastly, it should be noted that a thermometer-code charge-redistribution D/A can also be implemented, as shown in Fig. 16.16.\n\nFig. 16.15 A 3-bit thermometer-based D/A converter.\nThis circuit is a 3-bit thermometer-based D/A converter. It employs a binary-to-thermometer code conversion to control switches linked to resistors, forming a resistor ladder network. The output is processed through an operational amplifier to produce the analog output voltage Vout.\n\nFig. 16.16 Thermometer-code charge-redistribution D/A converter.\nThis configuration is a thermometer-code charge-redistribution D/A converter. It utilizes a network of capacitors and switches for digital-to-analog conversion. The capacitors are charged and discharged in a sequence dictated by the thermometer code, and an operational amplifier processes the resulting voltage to generate the analog output Vout. The top capacitors are connected to ground, and the bottom capacitors are connected to Vref."
},
{
    "text": "Key Point: Thermometer-code converters utilize an array of $2 \\mathrm{~N}-1$ unitary, equally-sized signal quantities. A digital thermometer code selects the requisite number of these unitary signal quantities, summing them to generate the analog output with assured monotonicity and superior static linearity compared to binary-weighted converters.\n\nAn alternative method for implementing a $\\mathrm{D} / \\mathrm{A}$ converter involves digitally recoding the input value into a thermometer-code equivalent. A thermometer code differs from a binary code in that it uses $2^{\\mathrm{N}}-1$ digital inputs to represent $2^{\\mathrm{N}}$ distinct digital values. Clearly, a thermometer code is not the most compact representation, as a binary code requires only N digital inputs to represent $2^{\\mathrm{N}}$ values. However, as we will discuss, a thermometer-based converter offers advantages over its binary counterpart, such as minimal DNL errors, guaranteed monotonicity, and reduced glitching noise.\n\nIn a thermometer-code representation, the number of 1s corresponds to the decimal value. For instance, with a 3-bit binary input, the decimal value 4 is binary-coded as 100, whereas its thermometer equivalent is 0001111. The codes for the remaining values in this 3-bit example are depicted in Table 16.1.\n\nOne approach to realizing a $\\mathrm{D} / \\mathrm{A}$ converter using a thermometer-code input is to construct $2^{\\mathrm{N}}-1$ equal-sized resistors and switches connected to the virtual ground of an opamp, as illustrated in Fig. 16.15. Note that monotonicity is ensured here because, when the binary input increments to the next higher number, an additional digital value in the thermometer code activates, drawing more current from the virtual ground and causing the opamp output to increase (never decrease). This is not always the case for a binary-array D/A converter, where mismatches between elements may result in a lower output despite an increase in the digital input value.\n\nTable 16.1 Thermometer-code representations for 3-bit binary values.\n\n| Decimal | Binary |  |  | Thermometer Code |  |  |  |  |  |  |\n| :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: |\n|  | $b_{1}$ | $b_{2}$ | $b_{3}$ | $d_{1}$ | $\\mathrm{d}_{2}$ | $d_{3}$ | $d_{4}$ | $d_{5}$ | $d_{6}$ | $\\mathrm{d}_{7}$ |\n| 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 |\n| 1 | 0 | 0 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 1 |\n| 2 | 0 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 1 | 1 |\n| 3 | 0 | 1 | 1 | 0 | 0 | 0 | 0 | 1 | 1 | 1 |\n| 4 | 1 | 0 | 0 | 0 | 0 | 0 | 1 | 1 | 1 | 1 |\n| 5 | 1 | 0 | 1 | 0 | 0 | 1 | 1 | 1 | 1 | 1 |\n| 6 | 1 | 1 | 0 | 0 | 1 | 1 | 1 | 1 | 1 | 1 |\n| 7 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 |\n\nSignificantly, a D/A converter based on a thermometer code substantially reduces glitches compared to binary-array methods, as resistor banks are never switched at slightly different times when the output should change by only 1 LSB. It is also noteworthy that latches can be employed in the binary-to-thermometer code conversion to eliminate glitches in the digital thermometer-code words, and pipelining can be used to sustain high throughput speeds.\n\nAdditionally, it is interesting to observe that using a thermometer code does not increase the size of the analog circuitry compared to a binary-weighted approach. In a 3-bit binary-weighted approach, resistor values of $R, 2R$, and $4R$ are required, totaling $7R$. This total resistance is identical to that of the 3-bit thermometer-code approach shown in Fig. 16.15. Since resistors on an integrated circuit are created using an area proportional to their size, both approaches demand the same area (excluding interconnect). A similar argument applies to the total area required by the transistor switches, as transistors in binary-weighted designs are usually size-scaled to accommodate varying current densities. In a thermometer-code approach, all transistor switches are of equal size since they conduct equal currents. Lastly, it should be noted that a thermometer-code charge-redistribution D/A can also be implemented, as shown in Fig. 16.16.\n\nimage_name:Fig. 16.15 A 3-bit thermometer-based D/A converter.\ndescription:This depicts a 3-bit thermometer-based D/A converter. The circuit employs a binary-to-thermometer code conversion to manage switches linked to resistors, forming a resistor ladder network. The output is processed through an operational amplifier to produce the analog output voltage Vout.\n\nFig. 16.15 A 3-bit thermometer-based D/A converter.\nimage_name:Fig. 16.16 Thermometer-code charge-redistribution D/A converter\ndescription:This circuit illustrates a thermometer-code charge-redistribution D/A converter. It utilizes a network of capacitors and switches for digital-to-analog conversion. The capacitors are charged and discharged in a sequence dictated by the thermometer code, and an operational amplifier processes the resulting voltage to generate the analog output Vout. The top capacitors are connected to ground, and the bottom capacitors are connected to Vref.\n\nFig. 16.16 Thermometer-code charge-redistribution D/A converter."
},
{
    "text": "Key Point: Thermometer-code converters utilize an array of $2 \\mathrm{~N}-1$ unitary, equally-sized signal quantities. A digital thermometer code selects the appropriate number of these unitary signal quantities, summing them to generate an analog output that ensures monotonicity and offers superior static linearity compared to binary-weighted converters.\n\nAnother approach to implementing a $\\mathrm{D} / \\mathrm{A}$ converter involves digitally recoding the input value into a thermometer-code equivalent. A thermometer code differs from a binary code by having $2^{\\mathrm{N}}-1$ digital inputs to represent $2^{\\mathrm{N}}$ distinct digital values. Clearly, a thermometer code is not the most compact representation, as a binary code requires only N digital inputs to represent $2^{\\mathrm{N}}$ values. However, as we will discuss, a thermometer-based converter offers several advantages over its binary counterpart, including low DNL errors, guaranteed monotonicity, and reduced glitching noise.\n\nIn a thermometer-code representation, the number of 1s corresponds to the decimal value. For instance, with a 3-bit binary input, the decimal value 4 is binary coded as 100, whereas its thermometer equivalent is 0001111. The codes for the remaining values in this 3-bit example are depicted in Table 16.1.\n\nOne technique to realize a $\\mathrm{D} / \\mathrm{A}$ converter using a thermometer-code input is to construct $2^{\\mathrm{N}}-1$ equal-sized resistors and switches connected to the virtual ground of an opamp, as illustrated in Fig. 16.15. Note that monotonicity is ensured here because, when the binary input increments to the next higher number, an additional digital value in the thermometer code switches to high, drawing more current from the virtual ground and causing the opamp output to increase (never decrease). This is not always true for a binary-array D/A converter, where mismatches between elements can cause the output to decrease even when the digital input value rises.\n\nTable 16.1 Thermometer-code representations for 3-bit binary values.\n\n| Decimal | Binary |  |  | Thermometer Code |  |  |  |  |  |  |\n| :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: |\n|  | $b_{1}$ | $b_{2}$ | $b_{3}$ | $d_{1}$ | $\\mathrm{d}_{2}$ | $d_{3}$ | $d_{4}$ | $d_{5}$ | $d_{6}$ | $\\mathrm{d}_{7}$ |\n| 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 |\n| 1 | 0 | 0 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 1 |\n| 2 | 0 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 1 | 1 |\n| 3 | 0 | 1 | 1 | 0 | 0 | 0 | 0 | 1 | 1 | 1 |\n| 4 | 1 | 0 | 0 | 0 | 0 | 0 | 1 | 1 | 1 | 1 |\n| 5 | 1 | 0 | 1 | 0 | 0 | 1 | 1 | 1 | 1 | 1 |\n| 6 | 1 | 1 | 0 | 0 | 1 | 1 | 1 | 1 | 1 | 1 |\n| 7 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 |\n\nSignificantly, a D/A converter based on a thermometer code substantially reduces glitches compared to binary-array methods, as resistor banks are not exchanged at slightly different times when the output should change by only 1 LSB. It is also worth noting that latches can be employed in the binary-to-thermometer code conversion to eliminate glitches in the digital thermometer-code words, and pipelining can be used to maintain high throughput speed.\n\nAdditionally, it is interesting to observe that using a thermometer code does not increase the size of the analog circuitry compared to a binary-weighted approach. In a 3-bit binary-weighted approach, resistor values of $R, 2R$, and $4R$ are required, totaling $7R$. This total resistance is identical to that of the 3-bit thermometer-code approach shown in Fig. 16.15. Since resistors on an integrated circuit are created using an area proportional to their size, both approaches require the same area (neglecting interconnect). The same logic applies to the total area needed for transistor switches, as transistors in binary-weighted designs are usually size-scaled to accommodate varying current densities. In a thermometer-code approach, all transistor switches are of equal size since they handle equal currents. Lastly, it should be noted that a thermometer-code charge-redistribution D/A can also be implemented, as shown in Fig. 16.16.\n\nFig. 16.15 A 3-bit thermometer-based D/A converter.\nimage_name:Fig. 16.15 A 3-bit thermometer-based D/A converter.\ndescription:This depicts a 3-bit thermometer-based D/A converter. The circuit employs a binary-to-thermometer code conversion to control switches linked to resistors, forming a resistor ladder network. The output is processed through an operational amplifier to produce the analog output voltage Vout.\n\nFig. 16.16 Thermometer-code charge-redistribution D/A converter.\nimage_name:Fig. 16.16 Thermometer-code charge-redistribution D/A converter\ndescription:This circuit illustrates a thermometer-code charge-redistribution D/A converter. It utilizes a network of capacitors and switches for digital-to-analog conversion. The capacitors are charged and discharged according to the thermometer code sequence, and an operational amplifier processes the resulting voltage to yield the analog output Vout. The top capacitors are connected to ground, and the bottom capacitors are linked to Vref."
},
{
    "text": "Key Point: Thermometer-code converters utilize a series of $2 \\mathrm{~N}-1$ unitary, equally sized signal units. A digital thermometer code selects the requisite number of these unitary signal units, summing them to generate an analog output that ensures monotonicity and offers superior static linearity compared to binary-weighted converters.\n\nAnother approach to implementing a $\\mathrm{D} / \\mathrm{A}$ converter involves digitally converting the input value into a thermometer-code equivalent. A thermometer code differs from a binary code in that it employs $2^{\\mathrm{N}}-1$ digital inputs to represent $2^{\\mathrm{N}}$ distinct digital values. Clearly, a thermometer code is not the most compact representation, as a binary code necessitates only N digital inputs to represent $2^{\\mathrm{N}}$ input values. Nevertheless, as we will discuss, a thermometer-based converter offers advantages over its binary counterpart, including lower DNL errors, assured monotonicity, and diminished glitching noise.\n\nIn a thermometer-code representation, the count of 1s signifies the decimal value. For instance, with a 3-bit binary input, the decimal value 4 is binary coded as 100, whereas its thermometer equivalent is 0001111. The codes for the remaining values in this 3-bit example are depicted in Table 16.1.\n\nOne technique to realize a $\\mathrm{D} / \\mathrm{A}$ converter using a thermometer-code input involves constructing $2^{\\mathrm{N}}-1$ equal-sized resistors and switches connected to the virtual ground of an opamp, as illustrated in Fig. 16.15. Note that monotonicity is assured in this setup because, when the binary input increments to the next higher number, an additional digital value in the thermometer code switches to high, drawing more current from the virtual ground and causing the opamp output to rise (never fall). This behavior is not guaranteed in a binary-array D/A converter, where mismatches between elements might cause the output to decrease even when the digital input value increases.\n\nTable 16.1 Thermometer-code representations for 3-bit binary values.\n\n| Decimal | Binary |  |  | Thermometer Code |  |  |  |  |  |  |\n| :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: |\n|  | $b_{1}$ | $b_{2}$ | $b_{3}$ | $d_{1}$ | $\\mathrm{d}_{2}$ | $d_{3}$ | $d_{4}$ | $d_{5}$ | $d_{6}$ | $\\mathrm{d}_{7}$ |\n| 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 |\n| 1 | 0 | 0 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 1 |\n| 2 | 0 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 1 | 1 |\n| 3 | 0 | 1 | 1 | 0 | 0 | 0 | 0 | 1 | 1 | 1 |\n| 4 | 1 | 0 | 0 | 0 | 0 | 0 | 1 | 1 | 1 | 1 |\n| 5 | 1 | 0 | 1 | 0 | 0 | 1 | 1 | 1 | 1 | 1 |\n| 6 | I | 1 | 0 | 0 | 1 | 1 | 1 | 到 | 1 | 1 |\n| 7 | 1 | 1 | 1 |  | 1 | 1 | 到 | 到 | 1 | 1 |\n\nSignificantly, a D/A converter based on a thermometer code substantially reduces glitches compared to binary-array methods, as resistor banks are never swapped at slightly different times when the output should change by just 1 LSB. It is also noteworthy that latches can be employed in the binary-to-thermometer code conversion to eliminate glitches in the digital thermometer-code words, and pipelining can be utilized to sustain high throughput speed.\n\nAdditionally, it is pertinent to observe that employing a thermometer code does not expand the size of the analog circuitry relative to a binary-weighted approach. In a 3-bit binary-weighted approach, resistor values of $R, 2 R$, and $4 R$ are required, summing to a total resistance of $7 R$. This total resistance matches that of the 3-bit thermometer-code approach shown in Fig. 16.15. Since resistors on an integrated circuit are created using an area proportional to their size, both approaches demand equivalent area (disregarding interconnect). The same rationale applies to demonstrate that the total area required by the transistor switches is identical, as transistors in binary-weighted designs are typically size-scaled to accommodate varying current densities. In a thermometer-code approach, all transistor switches are of equal size since they conduct equal currents. Lastly, it should be noted that a thermometer-code charge-redistribution D/A can also be implemented, as shown in Fig. 16.16.\n\nimage_name:Fig. 16.15 A 3-bit thermometer-based D/A converter.\ndescription:This diagram illustrates a 3-bit thermometer-based D/A converter. The circuit employs a binary-to-thermometer code conversion to manage switches linked to resistors, forming a resistor ladder network. The output is processed through an operational amplifier to produce the analog output voltage Vout.\n\nFig. 16.15 A 3-bit thermometer-based D/A converter.\nimage_name:Fig. 16.16 Thermometer-code charge-redistribution D/A converter\ndescription:This schematic represents a thermometer-code charge-redistribution D/A converter. It utilizes a network of capacitors and switches for digital-to-analog conversion. The capacitors are charged and discharged in a sequence dictated by the thermometer code, and an operational amplifier processes the resulting voltage to yield the analog output Vout. The top capacitors are connected to ground, and the bottom capacitors are linked to Vref.\n\nFig. 16.16 Thermometer-code charge-redistribution D/A converter."
},
{
    "text": "Key Point: Thermometer-code converters utilize a set of $2 \\mathrm{~N}-1$ unitary, equally-sized signal elements. A digital thermometer code selects the necessary number of these unitary signal elements, summing them to generate an analog output that ensures monotonicity and exhibits superior static linearity compared to binary-weighted converters.\n\nAn alternative approach to implementing a $\\mathrm{D} / \\mathrm{A}$ converter involves digitally converting the input value into a thermometer-code equivalent. A thermometer code differs from a binary code in that it requires $2^{\\mathrm{N}}-1$ digital inputs to represent $2^{\\mathrm{N}}$ distinct digital values. Clearly, a thermometer code is not the most efficient representation, as a binary code needs only N digital inputs to represent $2^{\\mathrm{N}}$ values. Nonetheless, as we will discuss, a thermometer-based converter offers several advantages over its binary counterpart, such as lower DNL errors, guaranteed monotonicity, and reduced glitching noise.\n\nIn a thermometer-code representation, the decimal value is indicated by the count of 1s. For instance, with a 3-bit binary input, the decimal value 4 is binary-coded as 100, whereas its thermometer equivalent is 0001111. The codes for the remaining values in this 3-bit example are depicted in Table 16.1.\n\nOne technique to implement a $\\mathrm{D} / \\mathrm{A}$ converter using a thermometer-code input involves constructing $2^{\\mathrm{N}}-1$ equal-sized resistors and switches connected to the virtual ground of an opamp, as illustrated in Fig. 16.15. It is important to note that monotonicity is assured in this setup because, when the binary input increments to the next higher value, an additional digital value in the thermometer code activates, drawing more current from the virtual ground and causing the opamp output to rise (never fall). This behavior is not guaranteed in a binary-array D/A converter, where mismatches between elements can result in a lower output despite an increase in the digital input value.\n\nTable 16.1 Thermometer-code representations for 3-bit binary values.\n\n| Decimal | Binary |  |  | Thermometer Code |  |  |  |  |  |  |\n| :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: |\n|  | $b_{1}$ | $b_{2}$ | $b_{3}$ | $d_{1}$ | $\\mathrm{d}_{2}$ | $d_{3}$ | $d_{4}$ | $d_{5}$ | $d_{6}$ | $\\mathrm{d}_{7}$ |\n| 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 |\n| 1 | 0 | 0 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 1 |\n| 2 | 0 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 1 | 1 |\n| 3 | 0 | 1 | 1 | 0 | 0 | 0 | 0 | 1 | 1 | 1 |\n| 4 | 1 | 0 | 0 | 0 | 0 | 0 | 1 | 1 | 1 | 1 |\n| 5 | 1 | 0 | 1 | 0 | 0 | 1 | 1 | 1 | 1 | 1 |\n| 6 | 1 | 1 | 0 | 0 | 1 | 1 | 1 | 1 | 1 | 1 |\n| 7 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 |\n\nSignificantly, a D/A converter based on a thermometer code substantially reduces glitches compared to binary-array methods, as resistor banks are not exchanged at slightly different times when the output should change by only 1 LSB. It is also worth noting that latches can be employed in the binary-to-thermometer code conversion to eliminate glitches in the digital thermometer-code words, and pipelining can be utilized to sustain high throughput speeds.\n\nAdditionally, it is noteworthy that using a thermometer code does not enlarge the analog circuitry compared to a binary-weighted approach. In a 3-bit binary-weighted method, resistor values of $R, 2 R$, and $4 R$ are required, totaling $7 R$. This total resistance matches that of the 3-bit thermometer-code approach shown in Fig. 16.15. Since resistors on an integrated circuit are created using an area proportional to their size, both approaches demand equivalent area (disregarding interconnect). The same rationale applies to show that the total area required by the transistor switches is similar, as transistors in binary-weighted designs are typically size-scaled to accommodate varying current densities. In a thermometer-code approach, all transistor switches are of equal size since they conduct equal currents. Lastly, it should be noted that a thermometer-code charge-redistribution D/A can also be implemented, as shown in Fig. 16.16.\n\nimage_name:Fig. 16.15 A 3-bit thermometer-based D/A converter.\ndescription:This is a 3-bit thermometer-based D/A converter. The circuit employs a binary-to-thermometer code conversion to control switches linked to resistors, forming a resistor ladder network. The output is processed through an operational amplifier to produce the analog output voltage Vout.\n\nFig. 16.15 A 3-bit thermometer-based D/A converter.\nimage_name:Fig. 16.16 Thermometer-code charge-redistribution D/A converter\ndescription:This circuit is a thermometer-code charge-redistribution D/A converter. It utilizes a network of capacitors and switches to execute digital-to-analog conversion. The capacitors are charged and discharged in a sequence dictated by the thermometer code, and an operational amplifier processes the resulting voltage to generate the analog output Vout. The top capacitors are connected to ground, and the bottom capacitors are connected to Vref.\n\nFig. 16.16 Thermometer-code charge-redistribution D/A converter."
},
{
    "text": "Key Point: Thermometer-code converters utilize an array of $2 \\mathrm{~N}-1$ unitary, equally-sized signal quantities. A digital thermometer code selects the appropriate number of these unitary signal quantities, summing them to generate the analog output with assured monotonicity and superior static linearity compared to binary-weighted converters.\n\nAnother approach to implementing a $\\mathrm{D} / \\mathrm{A}$ converter involves digitally recoding the input value into a thermometer-code equivalent. A thermometer code differs from a binary code in that it requires $2^{\\mathrm{N}}-1$ digital inputs to represent $2^{\\mathrm{N}}$ distinct digital values. Clearly, a thermometer code is not the most compact representation, as a binary code needs only N digital inputs to represent $2^{\\mathrm{N}}$ input values. However, as we will discuss, a thermometer-based converter offers advantages over its binary counterpart, such as lower DNL errors, guaranteed monotonicity, and reduced glitching noise.\n\nIn a typical thermometer-code representation, the number of 1s corresponds to the decimal value. For instance, with a 3-bit binary input, the decimal value 4 is binary coded as 100, whereas its thermometer equivalent is 0001111. The codes for the remaining values in this 3-bit example are depicted in Table 16.1.\n\nOne technique to realize a $\\mathrm{D} / \\mathrm{A}$ converter using a thermometer-code input involves constructing $2^{\\mathrm{N}}-1$ equal-sized resistors and switches connected to the virtual ground of an opamp, as illustrated in Fig. 16.15. Note that monotonicity is ensured here because, when the binary input increments to the next higher number, one additional digital value in the thermometer code activates, drawing more current from the virtual ground and causing the opamp output to increase (never decrease). This behavior is not guaranteed in a binary-array D/A converter, where mismatches between elements might cause the output to decrease even when the digital input value rises.\n\nTable 16.1 Thermometer-code representations for 3-bit binary values.\n\n| Decimal | Binary |  |  | Thermometer Code |  |  |  |  |  |  |\n| :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: |\n|  | $b_{1}$ | $b_{2}$ | $b_{3}$ | $d_{1}$ | $\\mathrm{d}_{2}$ | $d_{3}$ | $d_{4}$ | $d_{5}$ | $d_{6}$ | $\\mathrm{d}_{7}$ |\n| 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 |\n| 1 | 0 | 0 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 1 |\n| 2 | 0 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 1 | 1 |\n| 3 | 0 | 1 | 1 | 0 | 0 | 0 | 0 | 1 | 1 | 1 |\n| 4 | 1 | 0 | 0 | 0 | 0 | 0 | 1 | 1 | 1 | 1 |\n| 5 | 1 | 0 | 1 | 0 | 0 | 1 | 1 | 1 | 1 | 1 |\n| 6 | 1 | 1 | 0 | 0 | 1 | 1 | 1 | 1 | 1 | 1 |\n| 7 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 |\n\nSignificantly, a D/A converter based on a thermometer code substantially reduces glitches compared to binary-array methods, as resistor banks are not exchanged at slightly different times when the output should change by only 1 LSB. It is also worth noting that latches can be employed in the binary-to-thermometer code conversion to eliminate glitches in the digital thermometer-code words, and pipelining can be used to sustain high throughput speeds.\n\nAdditionally, it is noteworthy that using a thermometer code does not increase the size of the analog circuitry compared to a binary-weighted approach. In a 3-bit binary-weighted approach, resistor values of $R, 2R$, and $4R$ are required, summing to a total resistance of $7R$. This total resistance is identical to that of the 3-bit thermometer-code approach shown in Fig. 16.15. Since resistors on an integrated circuit are created using an area proportional to their size, both approaches demand the same area (disregarding interconnect). The same rationale applies to show that the total area required by the transistor switches is equivalent, as transistors in binary-weighted designs are typically size-scaled to accommodate varying current densities. In a thermometer-code approach, all transistor switches are of equal size since they conduct equal currents. Lastly, it should be noted that a thermometer-code charge-redistribution D/A can also be implemented, as shown in Fig. 16.16.\n\nimage_name: Fig. 16.15 A 3-bit thermometer-based D/A converter.\ndescription: This depicts a 3-bit thermometer-based D/A converter. The circuit employs a binary-to-thermometer code conversion to control switches linked to resistors, forming a resistor ladder network. The output is processed through an operational amplifier to produce the analog output voltage Vout.\n\nFig. 16.15 A 3-bit thermometer-based D/A converter.\nimage_name: Fig. 16.16 Thermometer-code charge-redistribution D/A converter\ndescription: This circuit represents a thermometer-code charge-redistribution D/A converter. It utilizes a network of capacitors and switches for digital-to-analog conversion. The capacitors are charged and discharged in a sequence dictated by the thermometer code, and an operational amplifier processes the resulting voltage to yield the analog output Vout. The top capacitors are connected to ground, and the bottom capacitors are connected to Vref.\n\nFig. 16.16 Thermometer-code charge-redistribution D/A converter."
},
{
    "text": "Key Point: Thermometer-code converters utilize a set of $2 \\mathrm{~N}-1$ unitary, equally-sized signal elements. A digital thermometer code selects the necessary quantity of these unitary signal elements, summing them to generate an analog output that ensures monotonicity and exhibits superior static linearity compared to binary-weighted converters.\n\nAn alternative approach for implementing a $\\mathrm{D} / \\mathrm{A}$ converter involves digitally converting the input value into a thermometer-code equivalent. A thermometer code differs from a binary code in that it employs $2^{\\mathrm{N}}-1$ digital inputs to represent $2^{\\mathrm{N}}$ distinct digital values. Clearly, a thermometer code is not the most compact representation, as a binary code requires only N digital inputs to represent $2^{\\mathrm{N}}$ values. Nevertheless, as we will discuss, a thermometer-based converter offers several advantages over its binary counterpart, including lower DNL errors, guaranteed monotonicity, and reduced glitching noise.\n\nIn a thermometer-code representation, the decimal value is indicated by the number of 1s. For instance, with a 3-bit binary input, the decimal value 4 is represented in binary as 100, whereas its thermometer-code equivalent is 0001111. The codes for the remaining values in this 3-bit example are depicted in Table 16.1.\n\nOne technique to implement a $\\mathrm{D} / \\mathrm{A}$ converter using a thermometer-code input involves constructing $2^{\\mathrm{N}}-1$ equal-sized resistors and switches connected to the virtual ground of an operational amplifier, as illustrated in Fig. 16.15. Note that monotonicity is assured in this setup because, when the binary input increments to the next higher number, an additional digital value in the thermometer code activates, drawing more current from the virtual ground and ensuring the opamp output increases (never decreases). This is not inherently the case for a binary-array D/A converter, where mismatches between elements might cause the output to decrease despite an increase in the digital input value.\n\nTable 16.1 Thermometer-code representations for 3-bit binary values.\n\n| Decimal | Binary |  |  | Thermometer Code |  |  |  |  |  |  |\n| :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: |\n|  | $b_{1}$ | $b_{2}$ | $b_{3}$ | $d_{1}$ | $\\mathrm{d}_{2}$ | $d_{3}$ | $d_{4}$ | $d_{5}$ | $d_{6}$ | $\\mathrm{d}_{7}$ |\n| 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 |\n| 1 | 0 | 0 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 1 |\n| 2 | 0 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 1 | 1 |\n| 3 | 0 | 1 | 1 | 0 | 0 | 0 | 0 | 1 | 1 | 1 |\n| 4 | 1 | 0 | 0 | 0 | 0 | 0 | 1 | 1 | 1 | 1 |\n| 5 | 1 | 0 | 1 | 0 | 0 | 1 | 1 | 1 | 1 | 1 |\n| 6 | 1 | 1 | 0 | 0 | 1 | 1 | 1 | 1 | 1 | 1 |\n| 7 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 |\n\nSignificantly, a D/A converter based on a thermometer code substantially reduces glitches compared to binary-array methods, as resistor banks are not exchanged at slightly different times when the output should change by only 1 LSB. It is also noteworthy that latches can be employed in the binary-to-thermometer code conversion to eliminate glitches in the digital thermometer-code words, and pipelining can be utilized to sustain high throughput speeds.\n\nAdditionally, it is pertinent to observe that using a thermometer code does not expand the size of the analog circuitry relative to a binary-weighted approach. In a 3-bit binary-weighted method, resistor values of $R, 2R$, and $4R$ are required, totaling $7R$. This total resistance matches that of the 3-bit thermometer-code approach shown in Fig. 16.15. Since resistors on an integrated circuit are created using an area proportional to their size, both approaches demand equivalent area (disregarding interconnect). A similar argument demonstrates that the total area required for transistor switches is the same, as transistors in binary-weighted designs are typically size-scaled to accommodate varying current densities. In a thermometer-code approach, all transistor switches are of equal size since they conduct equal currents. Lastly, it should be noted that a thermometer-code charge-redistribution D/A converter can also be implemented, as depicted in Fig. 16.16.\n\nimage_name:Fig. 16.15 A 3-bit thermometer-based D/A converter.\ndescription:This is a 3-bit thermometer-based D/A converter. The circuit employs a binary-to-thermometer code conversion to control switches linked to resistors, forming a resistor ladder network. The output is processed through an operational amplifier to produce the analog output voltage Vout.\n\nFig. 16.15 A 3-bit thermometer-based D/A converter.\nimage_name:Fig. 16.16 Thermometer-code charge-redistribution D/A converter\ndescription:This circuit is a thermometer-code charge-redistribution D/A converter. It utilizes a network of capacitors and switches for digital-to-analog conversion. The capacitors are charged and discharged according to the thermometer code sequence, and an operational amplifier processes the resulting voltage to generate the analog output Vout. The top capacitors are grounded, while the bottom capacitors are connected to Vref.\n\nFig. 16.16 Thermometer-code charge-redistribution D/A converter."
},
{
    "text": "Key Point: Thermometer-code converters utilize an array of $2 \\mathrm{~N}-1$ unitary, equally-sized signal quantities. A digital thermometer code selects the appropriate number of these unitary signal quantities, summing them to produce an analog output that guarantees monotonicity and exhibits superior static linearity compared to binary-weighted converters.\n\nAnother approach to implementing a $\\mathrm{D} / \\mathrm{A}$ converter involves digitally recoding the input value into a thermometer-code equivalent. A thermometer code differs from a binary code in that it requires $2^{\\mathrm{N}}-1$ digital inputs to represent $2^{\\mathrm{N}}$ distinct digital values. Clearly, a thermometer code is not the most efficient representation, as a binary code needs only N digital inputs to represent $2^{\\mathrm{N}}$ values. However, as we will discuss, a thermometer-based converter offers advantages over its binary counterpart, such as lower DNL errors, guaranteed monotonicity, and reduced glitching noise.\n\nIn a thermometer-code representation, the number of 1s corresponds to the decimal value. For instance, with a 3-bit binary input, the decimal value 4 is binary coded as 100, whereas its thermometer equivalent is 0001111. The codes for other values in this 3-bit example are presented in Table 16.1.\n\nOne technique to realize a $\\mathrm{D} / \\mathrm{A}$ converter using a thermometer-code input involves constructing $2^{\\mathrm{N}}-1$ equal-sized resistors and switches connected to the virtual ground of an opamp, as depicted in Fig. 16.15. Note that monotonicity is ensured here because, when the binary input increments, one additional digital value in the thermometer code becomes high, drawing more current from the virtual ground and causing the opamp output to increase (never decrease). This behavior is not guaranteed in a binary-array D/A converter, where mismatches between elements can result in a lower output despite an increase in the digital input value.\n\nTable 16.1 Thermometer-code representations for 3-bit binary values.\n\n| Decimal | Binary |  |  | Thermometer Code |  |  |  |  |  |  |\n| :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: |\n|  | $b_{1}$ | $b_{2}$ | $b_{3}$ | $d_{1}$ | $\\mathrm{d}_{2}$ | $d_{3}$ | $d_{4}$ | $d_{5}$ | $d_{6}$ | $\\mathrm{d}_{7}$ |\n| 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 |\n| 1 | 0 | 0 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 1 |\n| 2 | 0 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 1 | 1 |\n| 3 | 0 | 1 | 1 | 0 | 0 | 0 | 0 | 1 | 1 | 1 |\n| 4 | 1 | 0 | 0 | 0 | 0 | 0 | 1 | 1 | 1 | 1 |\n| 5 | 1 | 0 | 1 | 0 | 0 | 1 | 1 | 1 | 1 | 1 |\n| 6 | 1 | 1 | 0 | 0 | 1 | 1 | 1 | 1 | 1 | 1 |\n| 7 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 |\n\nSignificantly, a D/A converter based on a thermometer code substantially reduces glitches compared to binary-array methods, as resistor banks are not exchanged at slightly different times when the output should change by only 1 LSB. Additionally, latches can be employed in the binary-to-thermometer code conversion to eliminate glitches in the digital thermometer-code words, and pipelining can be used to sustain high throughput speeds.\n\nIt is also noteworthy that using a thermometer code does not increase the size of the analog circuitry compared to a binary-weighted approach. In a 3-bit binary-weighted approach, resistor values of $R, 2R$, and $4R$ are required, totaling $7R$. This total resistance is identical to that of the 3-bit thermometer-code approach shown in Fig. 16.15. Since resistors on an integrated circuit are created using an area proportional to their size, both approaches require the same area (disregarding interconnect). The same rationale applies to the total area needed for transistor switches, as transistors in binary-weighted designs are typically size-scaled to accommodate varying current densities. In a thermometer-code approach, all transistor switches are of equal size since they conduct equal currents. Lastly, it should be noted that a thermometer-code charge-redistribution D/A converter can also be implemented, as illustrated in Fig. 16.16.\n\nFig. 16.15 A 3-bit thermometer-based D/A converter.\nThis figure depicts a 3-bit thermometer-based D/A converter. The circuit employs a binary-to-thermometer code conversion to control switches linked to resistors, forming a resistor ladder network. The output is processed through an operational amplifier to generate the analog output voltage Vout.\n\nFig. 16.16 Thermometer-code charge-redistribution D/A converter.\nThis circuit represents a thermometer-code charge-redistribution D/A converter. It utilizes a network of capacitors and switches for digital-to-analog conversion. The capacitors are charged and discharged in a sequence dictated by the thermometer code, and an operational amplifier processes the resulting voltage to produce the analog output Vout. The top capacitors are connected to ground, and the bottom capacitors are connected to Vref."
},
{
    "text": "A thermometer-code-based current-mode D/A converter, depicted in Fig. 16.17, has served as the foundation for numerous designs (refer to [Miki, 1986; Chi, 1986; and Letham, 1987]). In this setup, thermometer-code decoders are employed for both row and column decoding, ensuring inherent monotonicity and favorable DNL errors. Current is directed to the output when both the row and column lines of a cell are at a high state. Additionally, in high-speed scenarios, the output is directly connected to an off-chip $50-\\Omega$ or $75-\\Omega$ resistor, instead of an output opamp. It is important to note that cascode current sources are utilized to minimize variations in the current source due to fluctuations in the output signal, $\\mathrm{V}_{\\text {out }}$.\n\nAttention must be given to the precise timing of the edges of $\\mathrm{d}_{\\mathrm{i}}$ and $\\overline{\\mathrm{d}}_{\\mathrm{i}}$. If both logic levels are high concurrently, $\\mathrm{V}_{\\text {out }}$ is shorted to ground. Conversely, if both logic levels are low simultaneously, the drain of $Q_{3}$ is pulled low, causing the circuit to respond more slowly. To eliminate the need for two logic driving levels, the gate of $Q_{2}$ should be connected to a dc bias voltage, as detailed in the subsequent approach.\n\nThe diagram illustrates a thermometer-code current-mode Digital-to-Analog Converter (DAC) system, comprising the following key components:\n\n1. **Current Sources:**\n   - Multiple identical current sources are arranged in parallel, each connected to a switch controlled by a logic signal, ensuring uniform current distribution.\n\n2. **Current Switch (Q1 and Q2):**\n   - Transistors Q1 and Q2 constitute a current switch that routes current to either the output or ground, based on the logic levels of control signals \\( \\overline{d_i} \\) and \\( d_i \\).\n\n3. **Cascode Current Source (Q3 and Q4):**\n   - Transistors Q3 and Q4 are configured as a cascode current source to enhance output impedance and reduce current variations due to output voltage \\( V_{out} \\) changes.\n\n4. **Logic Control Signals:**\n   - The signals \\( \\overline{d_i} \\) and \\( d_i \\) are essential for the current switch's operation and must be precisely timed to prevent short-circuiting the output or pulling the drain of Q3 low.\n\n5. **Bias Voltages:**\n   - Bias voltages are applied to the gates of Q3 and Q4 to ensure the proper functioning of the cascode current source.\n\n6. **Decoders (Row and Column):**\n   - The system includes row and column decoders that select active current sources in the array based on the input digital code.\n\n7. **I-Source Array:**\n   - The I-Source array is a matrix of current sources that are selectively activated by the decoders.\n\n8. **Output Voltage \\( V_{out} \\):**\n   - The output voltage is derived from the node where the current sources connect, influenced by the selected current paths through the row and column decoders.\n\n**Flow of Information:**\n   - The digital input code is processed by the row and column decoders to activate specific current sources in the I-Source array.\n   - The selected current sources direct current through the current switch formed by Q1 and Q2.\n   - The cascode current source, formed by Q3 and Q4, ensures stable output by maintaining high output impedance.\n   - The output voltage \\( V_{out} \\) is generated based on the combined effect of the activated current sources and the logic control signals.\n\n**Overall System Function:**\nThe primary role of this system is to convert a thermometer-coded digital input into an analog output voltage. Precise current switching and cascode stabilization are crucial for achieving accurate and stable DAC performance, especially in high-speed and high-precision applications.\n\nFig. 16.17 Thermometer-code current-mode D/A converter. $\\mathrm{Q}_{1}$ and $\\mathrm{Q}_{2}$ form the current switch, while $\\mathrm{Q}_{3}$ and $\\mathrm{Q}_{4}$ implement the cascode current source."
},
{
    "text": "A thermometer-code-based current-mode D/A converter, depicted in Fig. 16.17, has served as the foundation for numerous designs (refer to [Miki, 1986; Chi, 1986; and Letham, 1987]). In this setup, thermometer-code decoders are employed for both row and column decoding, ensuring inherent monotonicity and favorable DNL errors. Current is directed to the output when both the row and column lines of a cell are at a high state. Additionally, in high-speed scenarios, the output is directly connected to an off-chip $50-\\Omega$ or $75-\\Omega$ resistor, rather than an output opamp. It is important to note that cascode current sources are utilized to minimize variations in current sources due to fluctuations in the output signal, $\\mathrm{V}_{\\text {out }}$.\n\nThe precise timing of the edges of $\\mathrm{d}_{\\mathrm{i}}$ and $\\overline{\\mathrm{d}}_{\\mathrm{i}}$ is crucial. If both logic levels are high simultaneously, $\\mathrm{V}_{\\text {out }}$ is shorted to ground. Conversely, if both logic levels are low at the same time, the drain of $Q_{3}$ is pulled low, causing the circuit to respond more slowly. To eliminate the need for two logic driving levels, the gate of $Q_{2}$ should be connected to a dc bias voltage, as detailed in the subsequent approach.\n\nFig. 16.17 illustrates a thermometer-code current-mode D/A converter. $\\mathrm{Q}_{1}$ and $\\mathrm{Q}_{2}$ constitute the current switch, while $\\mathrm{Q}_{3}$ and $\\mathrm{Q}_{4}$ form the cascode current source. The circuit comprises multiple identical current sources arranged in parallel, each connected to a switch controlled by logic signals. These current sources ensure uniform current distribution. The current switch, formed by Q1 and Q2, directs current to the output or ground based on the logic levels of $\\overline{d_i}$ and $d_i$. The cascode current source, implemented by Q3 and Q4, enhances output impedance and reduces current variation due to output voltage changes. Precisely timed logic control signals $\\overline{d_i}$ and $d_i$ are essential to prevent short-circuiting the output or pulling the drain of Q3 low. Bias voltages are applied to the gates of Q3 and Q4 for proper cascode operation. Row and column decoders select active current sources based on the input digital code, ensuring accurate and stable DAC performance in high-speed and high-precision applications."
},
{
    "text": "A thermometer-code-based current-mode D/A converter, depicted in Fig. 16.17, has served as the foundation for numerous designs (refer to [Miki, 1986; Chi, 1986; and Letham, 1987]). In this setup, thermometer-code decoders are employed for both row and column decoding, ensuring inherent monotonicity and favorable DNL errors. Current is directed to the output when both the row and column lines of a cell are at a high state. Additionally, in high-speed scenarios, the output is directly connected to an off-chip $50-\\Omega$ or $75-\\Omega$ resistor, instead of an output opamp. It is important to note that cascode current sources are utilized to minimize variations in the current source due to fluctuations in the output signal, $\\mathrm{V}_{\\text {out }}$.\n\nAttention must be given to the precise timing of the edges of $\\mathrm{d}_{\\mathrm{i}}$ and $\\overline{\\mathrm{d}}_{\\mathrm{i}}$. If both logic levels are high concurrently, $\\mathrm{V}_{\\text {out }}$ is shorted to ground. Conversely, if both logic levels are low simultaneously, the drain of $Q_{3}$ is pulled low, causing the circuit to respond more slowly. To eliminate the need for two logic driving levels, the gate of $Q_{2}$ should be connected to a dc bias voltage, as detailed in the subsequent approach.\n\nThe circuit depicted in Fig. 16.17 is a thermometer-code current-mode D/A converter. Q1 and Q2 constitute a current switch, while Q3 and Q4 form a cascode current source. All current sources are of equal value. The circuit utilizes row and column decoders to select the current sources within the array.\n\nThe diagram illustrates a thermometer-code current-mode Digital-to-Analog Converter (DAC) system, comprising the following key components:\n\n1. **Current Sources:**\n   - Numerous identical current sources are arranged in parallel, each connected to a switch controlled by a logic signal, ensuring consistent current distribution.\n\n2. **Current Switch (Q1 and Q2):**\n   - Transistors Q1 and Q2 create a current switch that routes current to either the output or ground, based on the logic levels of control signals \\( \\overline{d_i} \\) and \\( d_i \\).\n\n3. **Cascode Current Source (Q3 and Q4):**\n   - Transistors Q3 and Q4 are configured as a cascode current source to enhance output impedance and reduce current variations due to changes in \\( V_{out} \\).\n\n4. **Logic Control Signals:**\n   - The signals \\( \\overline{d_i} \\) and \\( d_i \\) are essential for the current switch's operation and must be precisely timed to prevent short-circuiting the output or pulling the drain of Q3 low.\n\n5. **Bias Voltages:**\n   - Bias voltages are applied to the gates of Q3 and Q4 to ensure proper functioning of the cascode current source.\n\n6. **Decoders (Row and Column):**\n   - The system includes row and column decoders that select active current sources in the array based on the input digital code.\n\n7. **I-Source Array:**\n   - The I-Source array is a matrix of current sources that are selectively activated by the decoders.\n\n8. **Output Voltage \\( V_{out} \\):**\n   - The output voltage is derived from the node where the current sources connect, influenced by the selected current paths through the decoders.\n\n**Flow of Information:**\n   - The digital input code is processed by the row and column decoders to activate specific current sources in the I-Source array.\n   - The selected current sources direct current through the current switch formed by Q1 and Q2.\n   - The cascode current source, formed by Q3 and Q4, ensures stable output by maintaining high output impedance.\n   - The output voltage \\( V_{out} \\) is generated based on the combined effect of the activated current sources and logic control signals.\n\n**Overall System Function:**\n   - The primary role of this system is to convert a thermometer-coded digital input into an analog output voltage. Precise current switching and cascode stabilization are crucial for accurate and stable DAC performance, especially in high-speed and high-precision applications.\n\nFig. 16.17 illustrates a thermometer-code current-mode D/A converter, where $\\mathrm{Q}_{1}$ and $\\mathrm{Q}_{2}$ form the current switch, and $\\mathrm{Q}_{3}$ and $\\mathrm{Q}_{4}$ implement the cascode current source."
},
{
    "text": "A thermometer-code-based current-mode D/A converter, depicted in Fig. 16.17, has served as the foundation for numerous designs (refer to [Miki, 1986; Chi, 1986; and Letham, 1987]). In this setup, thermometer-code decoders are employed for both row and column decoding, ensuring inherent monotonicity and favorable DNL errors. Current is directed to the output when both the row and column lines of a cell are active. Additionally, in high-speed scenarios, the output is directly connected to an off-chip $50-\\Omega$ or $75-\\Omega$ resistor, instead of an output opamp. It is important to note that cascode current sources are utilized to minimize variations in the current source due to fluctuations in the output signal, $\\mathrm{V}_{\\text {out }}$.\n\nThe precise timing of the edges of $\\mathrm{d}_{\\mathrm{i}}$ and $\\overline{\\mathrm{d}}_{\\mathrm{i}}$ is crucial. If both logic levels are high simultaneously, $\\mathrm{V}_{\\text {out }}$ gets shorted to ground. Conversely, if both are low at the same time, the drain of $Q_{3}$ is pulled low, causing the circuit to respond more slowly. To eliminate the need for two logic driving levels, the gate of $Q_{2}$ should be connected to a dc bias voltage, as detailed in the subsequent approach.\n\nThe circuit depicted in Fig. 16.17 is a thermometer-code current-mode D/A converter. Q1 and Q2 constitute the current switch, while Q3 and Q4 form the cascode current source. All current sources have equal values. The circuit utilizes row and column decoders to select the appropriate current sources from the array.\n\nThe diagram illustrates a thermometer-code current-mode Digital-to-Analog Converter (DAC) system, comprising the following key components:\n\n1. **Current Sources:**\n   - Multiple identical current sources are arranged in parallel, each connected to a switch controlled by a logic signal, ensuring uniform current distribution.\n\n2. **Current Switch (Q1 and Q2):**\n   - Transistors Q1 and Q2 create a current switch that routes current to the output or ground based on the logic levels of control signals \\( \\overline{d_i} \\) and \\( d_i \\).\n\n3. **Cascode Current Source (Q3 and Q4):**\n   - Transistors Q3 and Q4 are configured as a cascode current source to enhance output impedance and reduce current variations due to output voltage changes \\( V_{out} \\).\n\n4. **Logic Control Signals:**\n   - The signals \\( \\overline{d_i} \\) and \\( d_i \\) are essential for the current switch operation and must be precisely timed to prevent short-circuiting the output or pulling the drain of Q3 low.\n\n5. **Bias Voltages:**\n   - Bias voltages are applied to the gates of Q3 and Q4 to ensure proper functioning of the cascode current source.\n\n6. **Decoders (Row and Column):**\n   - The system includes row and column decoders that select active current sources based on the input digital code.\n\n7. **I-Source Array:**\n   - The I-Source array is a matrix of current sources that are selectively activated by the decoders.\n\n8. **Output Voltage \\( V_{out} \\):**\n   - The output voltage is derived from the node where the current sources connect, influenced by the selected current paths through the decoders.\n\n**Flow of Information:**\n   - The digital input code is processed by the row and column decoders to activate specific current sources in the I-Source array.\n   - The selected current sources direct current through the current switch formed by Q1 and Q2.\n   - The cascode current source, formed by Q3 and Q4, ensures stable output by maintaining high output impedance.\n   - The output voltage \\( V_{out} \\) is generated based on the combined effect of the activated current sources and logic control signals.\n\n**Overall System Function:**\nThe primary role of this system is to convert a thermometer-coded digital input into an analog output voltage. Precise current switching and cascode stabilization are critical for achieving accurate and stable DAC performance, essential for high-speed and high-precision applications.\n\nFig. 16.17 illustrates a thermometer-code current-mode D/A converter, where $\\mathrm{Q}_{1}$ and $\\mathrm{Q}_{2}$ form the current switch, and $\\mathrm{Q}_{3}$ and $\\mathrm{Q}_{4}$ implement the cascode current source."
},
{
    "text": "A thermometer-code-based current-mode D/A converter, depicted in Fig. 16.17, has served as the foundation for numerous designs (refer to [Miki, 1986; Chi, 1986; and Letham, 1987]). In this setup, thermometer-code decoders are employed for both row and column decoding, ensuring inherent monotonicity and favorable DNL errors. Current is directed to the output when both the row and column lines of a cell are active. Additionally, in high-speed scenarios, the output is directly connected to an off-chip $50-\\Omega$ or $75-\\Omega$ resistor, instead of an output opamp. It's important to note that cascode current sources are utilized to minimize variations in the current source due to fluctuations in the output signal, $\\mathrm{V}_{\\text {out }}$.\n\nThe precise timing of the edges of $\\mathrm{d}_{\\mathrm{i}}$ and $\\overline{\\mathrm{d}}_{\\mathrm{i}}$ is crucial. If both logic levels are high simultaneously, $\\mathrm{V}_{\\text {out }}$ gets shorted to ground. Conversely, if both are low at the same time, the drain of $Q_{3}$ is pulled low, causing the circuit to respond more slowly. To eliminate the need for two logic driving levels, the gate of $Q_{2}$ should be connected to a dc bias voltage, as detailed in the subsequent approach.\n\nimage_name: Fig. 16.17 Thermometer-code current-mode D/A converter\ndescription:\n[\nname: Q1, type: NMOS, ports: {S: GND, D: Vout, G: di_bar}\nname: Q2, type: NMOS, ports: {S: GND, D: Vout, G: Vb}\nname: Q3, type: NMOS, ports: {S: Vout, D: GND, G: di}\nname: Q4, type: NMOS, ports: {S: Vout, D: GND, G: Vb}\nname: Current Sources, type: CurrentSource, ports: {Np: Vout, Nn: GND}\n]\nextrainfo: The circuit is a thermometer-code current-mode D/A converter. Q1 and Q2 constitute a current switch, while Q3 and Q4 form a cascode current source. All current sources have equal values. The circuit employs row and column decoders to select current sources within the array.\n\nimage_name:\ndescription: The illustration depicts a thermometer-code current-mode Digital-to-Analog Converter (DAC) system. It primarily comprises the following elements:\n\n1. **Current Sources:**\n- Numerous identical current sources are arranged in parallel, each connected to a switch controlled by a logic signal. These sources ensure uniform current distribution throughout the circuit.\n\n2. **Current Switch (Q1 and Q2):**\n- Transistors Q1 and Q2 create a current switch that routes current either to the output or to ground, based on the logic levels of the control signals \\( \\overline{d_i} \\) and \\( d_i \\).\n\n3. **Cascode Current Source (Q3 and Q4):**\n- Transistors Q3 and Q4 are configured as a cascode current source to enhance output impedance and reduce current variations due to changes in the output voltage \\( V_{out} \\).\n\n4. **Logic Control Signals:**\n- The signals \\( \\overline{d_i} \\) and \\( d_i \\) are essential for the operation of the current switch and must be precisely timed to prevent short-circuiting the output to ground or pulling the drain of Q3 low.\n\n5. **Bias Voltages:**\n- Bias voltages are applied to the gates of Q3 and Q4 to ensure proper functioning of the cascode current source.\n\n6. **Decoders (Row and Column):**\n- The system includes row and column decoders that select active current sources in the array based on the input digital code.\n\n7. **I-Source Array:**\n- The I-Source array is a matrix of current sources that are selectively activated by the decoders.\n\n8. **Output Voltage \\( V_{out} \\):**\n- The output voltage is derived from the node where the current sources are connected, influenced by the selected current paths through the row and column decoders.\n\nFlow of Information:\n- The digital input code is processed by the row and column decoders to activate specific current sources in the I-Source array.\n- The selected current sources direct current through the current switch formed by Q1 and Q2.\n- The cascode current source, formed by Q3 and Q4, ensures stable output by maintaining high output impedance.\n- The output voltage \\( V_{out} \\) is generated based on the combined effect of the activated current sources and the logic control signals.\n\nOverall System Function:\nThe main function of this system is to convert a thermometer-coded digital input into an analog output voltage. Precise control of current switching and cascode stabilization ensures accurate and stable DAC operation, which is vital for high-speed and high-precision applications.\n\nFig. 16.17 Thermometer-code current-mode D/A converter. $\\mathrm{Q}_{1}$ and $\\mathrm{Q}_{2}$ form the current switch, while $\\mathrm{Q}_{3}$ and $\\mathrm{Q}_{4}$ implement a cascode current source."
},
{
    "text": "A thermometer-code-based current-mode D/A converter, depicted in Fig. 16.17, has served as the foundation for numerous designs (refer to [Miki, 1986; Chi, 1986; and Letham, 1987]). In this setup, thermometer-code decoders are employed for both row and column decoding, ensuring inherent monotonicity and favorable DNL errors. Current is directed to the output when both the row and column lines of a cell are at a high state. Additionally, in high-speed scenarios, the output is directly connected to an off-chip $50-\\Omega$ or $75-\\Omega$ resistor, instead of an output opamp. It is important to note that cascode current sources are utilized to minimize variations in the current source due to fluctuations in the output signal, $\\mathrm{V}_{\\text {out }}$.\n\nThe precise timing of the edges of $\\mathrm{d}_{\\mathrm{i}}$ and $\\overline{\\mathrm{d}}_{\\mathrm{i}}$ is crucial. If both logic levels are high concurrently, $\\mathrm{V}_{\\text {out }}$ is shorted to ground. Conversely, if both logic levels are low simultaneously, the drain of $Q_{3}$ is pulled low, causing the circuit to respond more slowly. To eliminate the need for two logic driving levels, the gate of $Q_{2}$ should be connected to a dc bias voltage, as detailed in the subsequent approach.\n\nThe circuit depicted in Fig. 16.17 is a thermometer-code current-mode D/A converter. Q1 and Q2 constitute a current switch, while Q3 and Q4 form a cascode current source. All current sources have equal values. The circuit utilizes row and column decoders to select the current sources within the array.\n\nThe diagram illustrates a thermometer-code current-mode Digital-to-Analog Converter (DAC) system, comprising the following key components:\n\n1. **Current Sources:**\n   - Multiple identical current sources are arranged in parallel, each connected to a switch controlled by a logic signal, ensuring uniform current distribution.\n\n2. **Current Switch (Q1 and Q2):**\n   - Transistors Q1 and Q2 create a current switch that directs current to the output or ground based on the logic levels of control signals \\( \\overline{d_i} \\) and \\( d_i \\).\n\n3. **Cascode Current Source (Q3 and Q4):**\n   - Transistors Q3 and Q4 are configured as a cascode current source to enhance output impedance and reduce current variation due to output voltage changes \\( V_{out} \\).\n\n4. **Logic Control Signals:**\n   - The signals \\( \\overline{d_i} \\) and \\( d_i \\) are essential for the current switch's operation and must be precisely timed to prevent short-circuiting the output or pulling the drain of Q3 low.\n\n5. **Bias Voltages:**\n   - Bias voltages are applied to the gates of Q3 and Q4 to ensure proper cascode current source operation.\n\n6. **Decoders (Row and Column):**\n   - The system includes row and column decoders that select active current sources in the array based on the input digital code.\n\n7. **I-Source Array:**\n   - The I-Source array is a matrix of current sources activated by the decoders.\n\n8. **Output Voltage \\( V_{out} \\):**\n   - The output voltage is derived from the node where the current sources connect, influenced by the selected current paths through the decoders.\n\n**Flow of Information:**\n   - The digital input code is processed by the row and column decoders to activate specific current sources.\n   - The selected current sources direct current through the Q1 and Q2 current switch.\n   - The Q3 and Q4 cascode current source maintains stable output by providing high output impedance.\n   - The output voltage \\( V_{out} \\) is generated based on the combined effect of the activated current sources and logic control signals.\n\n**Overall System Function:**\n   - The system's primary role is to convert a thermometer-coded digital input into an analog output voltage. Precise current switching and cascode stabilization ensure accurate and stable DAC performance, vital for high-speed and high-precision applications.\n\nFig. 16.17 illustrates a thermometer-code current-mode D/A converter. $\\mathrm{Q}_{1}$ and $\\mathrm{Q}_{2}$ form the current switch, while $\\mathrm{Q}_{3}$ and $\\mathrm{Q}_{4}$ implement the cascode current source."
},
{
    "text": "A thermometer-code-based current-mode D/A converter, depicted in Fig. 16.17, has served as the foundation for numerous designs (refer to [Miki, 1986; Chi, 1986; and Letham, 1987]). In this setup, thermometer-code decoders are employed for both row and column decoding, ensuring inherent monotonicity and favorable DNL errors. Current is directed to the output when both the row and column lines of a cell are at a high state. Additionally, in high-speed scenarios, the output is directly connected to an off-chip $50-\\Omega$ or $75-\\Omega$ resistor, instead of an output opamp. It is important to note that cascode current sources are utilized to mitigate variations in the current source due to fluctuations in the output signal, $\\mathrm{V}_{\\text {out }}$.\n\nThe precise timing of the edges of $\\mathrm{d}_{\\mathrm{i}}$ and $\\overline{\\mathrm{d}}_{\\mathrm{i}}$ is crucial. If both logic levels are high simultaneously, $\\mathrm{V}_{\\text {out }}$ is shorted to ground. Conversely, if both logic levels are low at the same time, the drain of $Q_{3}$ is pulled low, causing the circuit to respond more slowly. To eliminate the need for two logic driving levels, the gate of $Q_{2}$ should be connected to a dc bias voltage, as outlined in the subsequent method.\n\n---\n\nThe diagram illustrates a thermometer-code current-mode Digital-to-Analog Converter (DAC) system, comprising the following key components:\n\n1. **Current Sources:**\n   - Multiple identical current sources are arranged in parallel, each connected to a switch controlled by a logic signal, ensuring uniform current distribution.\n\n2. **Current Switch (Q1 and Q2):**\n   - Transistors Q1 and Q2 constitute a current switch that routes current to either the output or ground, based on the logic levels of control signals \\( \\overline{d_i} \\) and \\( d_i \\).\n\n3. **Cascode Current Source (Q3 and Q4):**\n   - Transistors Q3 and Q4 are configured as a cascode current source to enhance output impedance and minimize current variation due to output voltage \\( V_{out} \\) changes.\n\n4. **Logic Control Signals:**\n   - The signals \\( \\overline{d_i} \\) and \\( d_i \\) are essential for the current switch's operation and must be precisely timed to prevent short-circuiting the output or pulling the drain of Q3 low.\n\n5. **Bias Voltages:**\n   - Bias voltages are applied to the gates of Q3 and Q4 to ensure the proper functioning of the cascode current source.\n\n6. **Decoders (Row and Column):**\n   - The system includes row and column decoders that select active current sources in the array based on the input digital code.\n\n7. **I-Source Array:**\n   - The I-Source array is a matrix of current sources that are selectively activated by the decoders.\n\n8. **Output Voltage \\( V_{out} \\):**\n   - The output voltage is derived from the node where the current sources connect, influenced by the selected current paths through the row and column decoders.\n\n**Flow of Information:**\n   - The digital input code is processed by the row and column decoders to activate specific current sources in the I-Source array.\n   - The selected current sources direct current through the current switch formed by Q1 and Q2.\n   - The cascode current source, formed by Q3 and Q4, ensures stable output by maintaining high output impedance.\n   - The output voltage \\( V_{out} \\) is generated based on the combined effect of the activated current sources and logic control signals.\n\n**Overall System Function:**\nThe primary role of this system is to convert a thermometer-coded digital input into an analog output voltage. Precise current switching and cascode stabilization are essential for achieving accurate and stable DAC performance, particularly in high-speed and high-precision applications.\n\nFig. 16.17 Thermometer-code current-mode D/A converter. $\\mathrm{Q}_{1}$ and $\\mathrm{Q}_{2}$ form the current switch, while $\\mathrm{Q}_{3}$ and $\\mathrm{Q}_{4}$ implement a cascode current source."
},
{
    "text": "A thermometer-code-based current-mode D/A converter, depicted in Fig. 16.17, serves as the foundation for numerous designs (refer to [Miki, 1986; Chi, 1986; and Letham, 1987]). In this setup, thermometer-code decoders are employed for both row and column decoding, ensuring inherent monotonicity and favorable DNL errors. Current is directed to the output when both the row and column lines of a cell are active. Additionally, in high-speed scenarios, the output is directly connected to an off-chip $50-\\Omega$ or $75-\\Omega$ resistor, instead of an output opamp. It is important to note that cascode current sources are utilized to minimize variations in the current source due to fluctuations in the output signal, $\\mathrm{V}_{\\text {out }}$.\n\nThe precise timing of the edges of $\\mathrm{d}_{\\mathrm{i}}$ and $\\overline{\\mathrm{d}}_{\\mathrm{i}}$ is crucial. If both logic levels are high concurrently, $\\mathrm{V}_{\\text {out }}$ is shorted to ground. Conversely, if both logic levels are low simultaneously, the drain of $Q_{3}$ is pulled low, causing the circuit to respond more slowly. To eliminate the need for two logic driving levels, the gate of $Q_{2}$ should be connected to a dc bias voltage, as detailed in the subsequent approach.\n\nThe circuit depicted in Fig. 16.17 is a thermometer-code current-mode D/A converter. Q1 and Q2 constitute a current switch, while Q3 and Q4 form a cascode current source. All current sources have equal values. The circuit utilizes row and column decoders to select current sources within the array.\n\nThe diagram illustrates a thermometer-code current-mode Digital-to-Analog Converter (DAC) system, comprising the following key components:\n\n1. **Current Sources:**\n   - Multiple identical current sources are arranged in parallel, each connected to a switch controlled by a logic signal, ensuring uniform current distribution.\n\n2. **Current Switch (Q1 and Q2):**\n   - Transistors Q1 and Q2 create a current switch that routes current to either the output or ground, based on the logic levels of control signals \\( \\overline{d_i} \\) and \\( d_i \\).\n\n3. **Cascode Current Source (Q3 and Q4):**\n   - Transistors Q3 and Q4 are configured as a cascode current source to enhance output impedance and reduce current variation due to output voltage changes \\( V_{out} \\).\n\n4. **Logic Control Signals:**\n   - The signals \\( \\overline{d_i} \\) and \\( d_i \\) are essential for the current switch's operation and must be precisely timed to prevent short-circuiting the output or pulling the drain of Q3 low.\n\n5. **Bias Voltages:**\n   - Bias voltages are applied to the gates of Q3 and Q4 to ensure proper cascode current source operation.\n\n6. **Decoders (Row and Column):**\n   - The system includes row and column decoders that select active current sources in the array based on the input digital code.\n\n7. **I-Source Array:**\n   - The I-Source array is a matrix of current sources that are selectively activated by the decoders.\n\n8. **Output Voltage \\( V_{out} \\):**\n   - The output voltage is derived from the node where the current sources connect, influenced by the selected current paths through the row and column decoders.\n\n**Flow of Information:**\n   - The digital input code is processed by the row and column decoders to activate specific current sources in the I-Source array.\n   - The selected current sources direct current through the current switch formed by Q1 and Q2.\n   - The cascode current source, formed by Q3 and Q4, ensures stable output by maintaining high output impedance.\n   - The output voltage \\( V_{out} \\) is generated based on the combined effect of the activated current sources and logic control signals.\n\n**Overall System Function:**\nThe primary role of this system is to convert a thermometer-coded digital input into an analog output voltage. Precise current switching and cascode stabilization are essential for accurate and stable DAC performance, particularly in high-speed and high-precision applications.\n\nFig. 16.17 illustrates a thermometer-code current-mode D/A converter. $\\mathrm{Q}_{1}$ and $\\mathrm{Q}_{2}$ form the current switch, while $\\mathrm{Q}_{3}$ and $\\mathrm{Q}_{4}$ implement the cascode current source."
},
{
    "text": "The architecture of a rapid single-supply positive-output D/A converter, commonly employed in video RAMs known as RAMDACs, is depicted in Fig. 16.18 [Colles, 1988]. In this setup, a matched feedback loop is utilized to establish precise current-source biasing. (Note that the opamp input connections seem reversed but are accurate due to signal inversion by $\\mathrm{Q}_{4}$.) Additionally, to ensure accurate current matching independent of $\\mathrm{V}_{\\text {out }}$, one side of each differential current-steering pair is linked to $\\mathrm{V}_{\\text {bias }}$, instead of the bit signal's inversion. For instance, when the current is directed to the output via $\\mathrm{Q}_{2}$, the drain-source voltage across the current source, $\\mathrm{Q}_{3}$, remains largely constant if $\\mathrm{V}_{\\text {out }}$ stays near zero, keeping $\\mathrm{Q}_{2}$ in the active region. Consequently, $\\mathrm{Q}_{2}$ and $\\mathrm{Q}_{3}$ effectively constitute a cascode current source when driving current to the output.\n\nTo enhance the speed of this converter, the voltage swing at the common connections of the current switches (e.g., $Q_{1}, Q_{2}$, and $Q_{3}$) should be minimal. To maintain this minimal swing, the common connection should be at a voltage level where the output transistors are just deactivated when the current is directed to ground. It is also important to note that when\nimage_name: Fig. 16.18 A single-supply positive-output D/A converter\ndescription:\n[\nname: Q1, type: NMOS, ports: {S: GND, D: d1, G: Vbias}\nname: Q2, type: NMOS, ports: {S: d1, D: d2, G: Vbias}\nname: Q3, type: NMOS, ports: {S: d2, D: Vout, G: Vbias}\nname: Q4, type: NMOS, ports: {S: Vout, D: VDD, G: Vbias}\nname: Rref, type: Resistor, value: Rref, ports: {N1: d1, N2: GND}\nname: 50 Ω, type: Resistor, value: 50 Ω, ports: {N1: Vout, N2: GND}\nname: OpAmp, type: OpAmp, value: Vref, ports: {InP: Vref, InN: d1, OutP: VDD}\n]\nextrainfo: This circuit is a single-supply positive-output digital-to-analog converter (DAC). It employs a cascode current source formed by Q2 and Q3 to drive current to the output. The design optimizes speed by reducing voltage swing at the common connections of the current switches. The circuit does not require dual logic driving signals and can be clocked at the maximum rate without needing precise timing.\n\nFig. 16.18 A single-supply positive-output D/A converter.\na switch is activated or deactivated, the switching feedthrough from the digital input connected to the grounding transistor (e.g., $\\mathbf{Q}_{1}$) actually facilitates the switching process. Lastly, it should be noted that this design does not employ two logic driving signals, $\\mathrm{d}_{\\mathrm{i}}$ and $\\overline{\\mathrm{d}}_{\\mathrm{i}}$, allowing it to be clocked at the maximum rate without the necessity for precisely timed edges."
},
{
    "text": "The architecture of a high-speed single-supply positive-output D/A converter, commonly utilized in video RAMs (referred to as RAMDACs), is depicted in Fig. 16.18 [Colles, 1988]. This design employs a matched feedback loop to establish precise current-source biasing. (It is important to note that the opamp input connections seem reversed but are accurate due to signal inversion by $\\mathrm{Q}_{4}$.) Additionally, to ensure accurate current matching that is unaffected by $\\mathrm{V}_{\\text {out }}$, one side of each differential current-steering pair is linked to $\\mathrm{V}_{\\text {bias }}$ instead of the inverted bit signal. For instance, when the current is directed to the output via $\\mathrm{Q}_{2}$, the drain-source voltage across the current source, $\\mathrm{Q}_{3}$, remains largely constant if $\\mathrm{V}_{\\text {out }}$ is near zero, keeping $\\mathrm{Q}_{2}$ in the active region. Consequently, $\\mathrm{Q}_{2}$ and $\\mathrm{Q}_{3}$ collectively function as a cascode current source when driving current to the output.\n\nTo enhance the speed of this converter, the voltage swing at the common connections of the current switches (e.g., $Q_{1}$, $Q_{2}$, and $Q_{3}$) should be minimized. This is achieved by setting the common connection at a voltage level where the output transistors are just deactivated when the current is steered to ground. It is also worth noting that during the switching process, the feedthrough from the digital input connected to the grounding transistor (e.g., $\\mathbf{Q}_{1}$) actually aids in the switching. Lastly, this design does not rely on two logic driving signals, $\\mathrm{d}_{\\mathrm{i}}$ and $\\overline{\\mathrm{d}}_{\\mathrm{i}}$, enabling it to operate at the maximum clock rate without requiring precisely timed edges.\n\nimage_name: Fig. 16.18 A single-supply positive-output D/A converter\ndescription:\n[\nname: Q1, type: NMOS, ports: {S: GND, D: d1, G: Vbias}\nname: Q2, type: NMOS, ports: {S: d1, D: d2, G: Vbias}\nname: Q3, type: NMOS, ports: {S: d2, D: Vout, G: Vbias}\nname: Q4, type: NMOS, ports: {S: Vout, D: VDD, G: Vbias}\nname: Rref, type: Resistor, value: Rref, ports: {N1: d1, N2: GND}\nname: 50 Ω, type: Resistor, value: 50 Ω, ports: {N1: Vout, N2: GND}\nname: OpAmp, type: OpAmp, value: Vref, ports: {InP: Vref, InN: d1, OutP: VDD}\n]\nextrainfo: This circuit is a single-supply positive-output digital-to-analog converter (DAC). It utilizes a cascode current source formed by Q2 and Q3 to drive current to the output. The design optimizes speed by reducing voltage swing at the common connections of the current switches. The circuit eliminates the need for two logic driving signals and can be clocked at the maximum rate without precise timing requirements.\n\nFig. 16.18 A single-supply positive-output D/A converter."
},
{
    "text": "The architecture of a fast single-supply positive-output D/A converter, commonly utilized in video RAMs (referred to as RAMDACs), is illustrated in Fig. 16.18 [Colles, 1988]. In this setup, a matched feedback loop is employed to establish precise current-source biasing. (It is important to note that although the opamp input connections seem reversed, they are indeed correct due to signal inversion by $\\mathrm{Q}_{4}$.) Additionally, to ensure accurate current matching that is unaffected by $\\mathrm{V}_{\\text {out }}$, one side of each differential current-steering pair is linked to $\\mathrm{V}_{\\text {bias }}$, instead of the inverted bit signal. For instance, when the current is directed to the output via $\\mathrm{Q}_{2}$, the drain-source voltage across the current source, $\\mathrm{Q}_{3}$, remains largely stable if $\\mathrm{V}_{\\text {out }}$ stays close to zero, thereby keeping $\\mathrm{Q}_{2}$ in the active region. Consequently, $\\mathrm{Q}_{2}$ and $\\mathrm{Q}_{3}$ collectively function as a cascode current source when driving current to the output.\n\nTo enhance the speed of this converter, the voltage swing at the shared connections of the current switches (e.g., $Q_{1}, Q_{2}$, and $Q_{3}$) should be minimized. Achieving this requires setting the common connection at a voltage level where the output transistors are just deactivated when the current is steered to ground. It is also worth noting that during the switching process, the feedthrough from the digital input linked to the grounding transistor (such as $\\mathbf{Q}_{1}$) actually aids in the switching. Lastly, this design does not rely on two logic driving signals, $\\mathrm{d}_{\\mathrm{i}}$ and $\\overline{\\mathrm{d}}_{\\mathrm{i}}$, enabling it to be clocked at the maximum rate without the necessity for precisely timed edges.\n\nimage_name: Fig. 16.18 A single-supply positive-output D/A converter\ndescription:\n[\nname: Q1, type: NMOS, ports: {S: GND, D: d1, G: Vbias}\nname: Q2, type: NMOS, ports: {S: d1, D: d2, G: Vbias}\nname: Q3, type: NMOS, ports: {S: d2, D: Vout, G: Vbias}\nname: Q4, type: NMOS, ports: {S: Vout, D: VDD, G: Vbias}\nname: Rref, type: Resistor, value: Rref, ports: {N1: d1, N2: GND}\nname: 50 Ω, type: Resistor, value: 50 Ω, ports: {N1: Vout, N2: GND}\nname: OpAmp, type: OpAmp, value: Vref, ports: {InP: Vref, InN: d1, OutP: VDD}\n]\nextrainfo: This circuit represents a single-supply positive-output digital-to-analog converter (DAC). It incorporates a cascode current source formed by Q2 and Q3 to drive current to the output. The design prioritizes speed by reducing the voltage swing at the common connections of the current switches. The circuit operates without requiring two logic driving signals and can be clocked at the highest rate without the need for precise timing.\n\nFig. 16.18 A single-supply positive-output D/A converter."
},
{
    "text": "The architecture of a high-speed single-supply positive-output D/A converter, commonly used in video RAMs known as RAMDACs, is depicted in Fig. 16.18 [Colles, 1988]. This design employs a matched feedback loop to establish precise current-source biasing. (It's important to note that the opamp input connections seem reversed but are accurate due to signal inversion by $\\mathrm{Q}_{4}$.) Additionally, to ensure accurate current matching independent of $\\mathrm{V}_{\\text{out}}$, one side of each differential current-steering pair is linked to $\\mathrm{V}_{\\text{bias}}$, instead of the inverted bit signal. For instance, when current is directed to the output via $\\mathrm{Q}_{2}$, the drain-source voltage across the current source, $\\mathrm{Q}_{3}$, remains largely constant if $\\mathrm{V}_{\\text{out}}$ is near zero, keeping $\\mathrm{Q}_{2}$ in the active region. Consequently, $\\mathrm{Q}_{2}$ and $\\mathrm{Q}_{3}$ effectively create a cascode current source when driving current to the output.\n\nTo enhance the speed of this converter, the voltage swing at the common connections of the current switches (e.g., $Q_{1}$, $Q_{2}$, and $Q_{3}$) should be minimized. Achieving this requires setting the common connection at a voltage level where the output transistors are just turning off when the current is directed to ground. It is also noteworthy that during the switching on or off of a switch, the switching feedthrough from the digital input connected to the grounding transistor (e.g., $\\mathbf{Q}_{1}$) actually aids the switching process. Lastly, this design does not necessitate two logic driving signals, $\\mathrm{d}_{\\mathrm{i}}$ and $\\overline{\\mathrm{d}}_{\\mathrm{i}}$, enabling it to be clocked at the maximum rate without requiring precisely timed edges.\n\nimage_name: Fig. 16.18 A single-supply positive-output D/A converter\ndescription:\n[\nname: Q1, type: NMOS, ports: {S: GND, D: d1, G: Vbias}\nname: Q2, type: NMOS, ports: {S: d1, D: d2, G: Vbias}\nname: Q3, type: NMOS, ports: {S: d2, D: Vout, G: Vbias}\nname: Q4, type: NMOS, ports: {S: Vout, D: VDD, G: Vbias}\nname: Rref, type: Resistor, value: Rref, ports: {N1: d1, N2: GND}\nname: 50 Ω, type: Resistor, value: 50 Ω, ports: {N1: Vout, N2: GND}\nname: OpAmp, type: OpAmp, value: Vref, ports: {InP: Vref, InN: d1, OutP: VDD}\n]\nextrainfo: This circuit represents a single-supply positive-output digital-to-analog converter (DAC). It utilizes a cascode current source formed by Q2 and Q3 to drive current to the output. The design optimizes speed by reducing the voltage swing at the common connections of the current switches. The circuit operates without requiring two logic driving signals and can be clocked at the maximum rate without precise timing.\n\nFig. 16.18 A single-supply positive-output D/A converter."
},
{
    "text": "The architecture for a high-speed single-supply positive-output D/A, commonly utilized in video RAMs known as RAMDACs, is illustrated in Fig. 16.18 [Colles, 1988]. In this setup, a matched feedback loop is employed to establish precise current-source biasing. (It's important to note that although the opamp input connections seem reversed, they are accurate due to signal inversion by $\\mathrm{Q}_{4}$.) Additionally, to ensure accurate current matching that is unaffected by $\\mathrm{V}_{\\text {out }}$, one side of each differential current-steering pair is linked to $\\mathrm{V}_{\\text {bias }}$, instead of the inverted bit signal. For instance, when current is directed to the output via $\\mathrm{Q}_{2}$, the drain-source voltage across the current source, $\\mathrm{Q}_{3}$, remains largely constant if $\\mathrm{V}_{\\text {out }}$ stays near zero, keeping $\\mathrm{Q}_{2}$ in the active region. Consequently, $\\mathrm{Q}_{2}$ and $\\mathrm{Q}_{3}$ effectively constitute a cascode current source when driving current to the output.\n\nTo enhance the speed of this converter, the voltage swing at the common connections of the current switches (e.g., $Q_{1}$, $Q_{2}$, and $Q_{3}$) should be minimized. This is achieved by maintaining the common connection at a voltage level where the output transistors are just turned off when the current is directed to ground. It is also noteworthy that when\nimage_name:Fig. 16.18 A single-supply positive-output D/A converter\ndescription:\n[\nname: Q1, type: NMOS, ports: {S: GND, D: d1, G: Vbias}\nname: Q2, type: NMOS, ports: {S: d1, D: d2, G: Vbias}\nname: Q3, type: NMOS, ports: {S: d2, D: Vout, G: Vbias}\nname: Q4, type: NMOS, ports: {S: Vout, D: VDD, G: Vbias}\nname: Rref, type: Resistor, value: Rref, ports: {N1: d1, N2: GND}\nname: 50 Ω, type: Resistor, value: 50 Ω, ports: {N1: Vout, N2: GND}\nname: OpAmp, type: OpAmp, value: Vref, ports: {InP: Vref, InN: d1, OutP: VDD}\n]\nextrainfo:This circuit is a single-supply positive-output digital-to-analog converter (DAC). It employs a cascode current source formed by Q2 and Q3 to drive current to the output. The design optimizes speed by reducing voltage swing at the common connections of the current switches. The circuit does not necessitate two logic driving signals and can operate at maximum clock rate without requiring precise timing.\n\nFig. 16.18 A single-supply positive-output D/A converter.\na switch is activated or deactivated, the switching feedthrough from the digital input connected to the grounding transistor (e.g., $\\mathbf{Q}_{1}$) actually facilitates the switching process. Lastly, it should be noted that this design eliminates the need for two logic driving signals, $\\mathrm{d}_{\\mathrm{i}}$ and $\\overline{\\mathrm{d}}_{\\mathrm{i}}$, enabling it to be clocked at the highest rate without the necessity for precisely timed edges."
},
{
    "text": "The architecture for a rapid single-supply positive-output D/A, commonly employed in video RAMs (referred to as RAMDACs), is depicted in Fig. 16.18 [Colles, 1988]. In this setup, a matched feedback loop is utilized to establish precise known current-source biasing. (It's important to note that the opamp input connections seem reversed but are accurate due to signal inversion by $\\mathrm{Q}_{4}$.) Additionally, to ensure accurate current matching that is unaffected by $\\mathrm{V}_{\\text {out }}$, one side of each differential current-steering pair is linked to $\\mathrm{V}_{\\text {bias }}$, instead of the inverted bit signal. For instance, when the current is directed to the output via $\\mathrm{Q}_{2}$, the drain-source voltage across the current source, $\\mathrm{Q}_{3}$, remains largely constant if $\\mathrm{V}_{\\text {out }}$ is near zero, keeping $\\mathrm{Q}_{2}$ in the active region. Consequently, $\\mathrm{Q}_{2}$ and $\\mathrm{Q}_{3}$ effectively create a cascode current source when driving current to the output.\n\nTo enhance the speed of this converter, the voltage swing at the common connections of the current switches (such as $Q_{1}$, $Q_{2}$, and $Q_{3}$) should be minimal. To achieve this, the common connection should be at a voltage level where the output transistors are just deactivated when the current is steered to ground. It's also noteworthy that when\nimage_name:Fig. 16.18 A single-supply positive-output D/A converter\ndescription:\n[\nname: Q1, type: NMOS, ports: {S: GND, D: d1, G: Vbias}\nname: Q2, type: NMOS, ports: {S: d1, D: d2, G: Vbias}\nname: Q3, type: NMOS, ports: {S: d2, D: Vout, G: Vbias}\nname: Q4, type: NMOS, ports: {S: Vout, D: VDD, G: Vbias}\nname: Rref, type: Resistor, value: Rref, ports: {N1: d1, N2: GND}\nname: 50 Ω, type: Resistor, value: 50 Ω, ports: {N1: Vout, N2: GND}\nname: OpAmp, type: OpAmp, value: Vref, ports: {InP: Vref, InN: d1, OutP: VDD}\n]\nextrainfo:This circuit is a single-supply positive-output digital-to-analog converter (DAC). It employs a cascode current source formed by Q2 and Q3 to drive current to the output. The design optimizes speed by reducing voltage swing at the common connections of the current switches. The circuit eliminates the need for two logic driving signals and can be clocked at maximum rate without requiring precise timing.\n\nFig. 16.18 A single-supply positive-output D/A converter.\na switch is activated or deactivated, the switching feedthrough from the digital input linked to the grounding transistor (e.g., $\\mathbf{Q}_{1}$) actually aids the switching process. Lastly, it's worth noting that this design does not rely on two logic driving signals, $\\mathrm{d}_{\\mathrm{i}}$ and $\\overline{\\mathrm{d}}_{\\mathrm{i}}$, allowing it to be clocked at the highest rate without the necessity for precisely timed edges."
},
{
    "text": "The architecture of a high-speed single-supply positive-output D/A converter, commonly utilized in video RAMs (referred to as RAMDACs), is depicted in Fig. 16.18 [Colles, 1988]. In this setup, a matched feedback loop is employed to establish precise current-source biasing. (It is important to note that the opamp input connections seem reversed but are accurate due to signal inversion by $\\mathrm{Q}_{4}$.) Additionally, to ensure accurate current matching independent of $\\mathrm{V}_{\\text{out}}$, one side of each differential current-steering pair is linked to $\\mathrm{V}_{\\text{bias}}$, instead of the inverted bit signal. For instance, when the current is directed to the output via $\\mathrm{Q}_{2}$, the drain-source voltage across the current source, $\\mathrm{Q}_{3}$, remains largely constant if $\\mathrm{V}_{\\text{out}}$ stays near zero, keeping $\\mathrm{Q}_{2}$ in the active region. Consequently, $\\mathrm{Q}_{2}$ and $\\mathrm{Q}_{3}$ collectively function as a cascode current source when driving current to the output.\n\nTo enhance the speed of this converter, the voltage swing at the common connections of the current switches (e.g., $Q_{1}$, $Q_{2}$, and $Q_{3}$) should be minimized. To achieve this, the common connection should be at a voltage level where the output transistors are just deactivated when the current is steered to ground. It is also noteworthy that when\nimage_name: Fig. 16.18 A single-supply positive-output D/A converter\ndescription:\n[\nname: Q1, type: NMOS, ports: {S: GND, D: d1, G: Vbias}\nname: Q2, type: NMOS, ports: {S: d1, D: d2, G: Vbias}\nname: Q3, type: NMOS, ports: {S: d2, D: Vout, G: Vbias}\nname: Q4, type: NMOS, ports: {S: Vout, D: VDD, G: Vbias}\nname: Rref, type: Resistor, value: Rref, ports: {N1: d1, N2: GND}\nname: 50 Ω, type: Resistor, value: 50 Ω, ports: {N1: Vout, N2: GND}\nname: OpAmp, type: OpAmp, value: Vref, ports: {InP: Vref, InN: d1, OutP: VDD}\n]\nextrainfo: This circuit is a single-supply positive-output digital-to-analog converter (DAC). It employs a cascode current source formed by Q2 and Q3 to drive current to the output. The design optimizes speed by reducing voltage swing at the common connections of the current switches. The circuit does not necessitate two logic driving signals and can operate at maximum clock rate without precise timing.\n\nFig. 16.18 A single-supply positive-output D/A converter.\na switch is being activated or deactivated, the switching feedthrough from the digital input connected to the grounding transistor (e.g., $\\mathbf{Q}_{1}$) actually aids in the switching process. Lastly, it should be noted that this design eliminates the need for two logic driving signals, $\\mathrm{d}_{\\mathrm{i}}$ and $\\overline{\\mathrm{d}}_{\\mathrm{i}}$, enabling it to be clocked at the maximum rate without requiring precisely timed edges."
},
{
    "text": "The architecture of a rapid single-supply positive-output D/A, commonly employed in video RAMs (referred to as RAMDACs), is depicted in Fig. 16.18 [Colles, 1988]. In this setup, a matched feedback loop is utilized to establish precise known current-source biasing. (It is important to note that the opamp input connections seem reversed but are indeed correct due to signal inversion by $\\mathrm{Q}_{4}$.) Additionally, to ensure accurate current matching that remains unaffected by $\\mathrm{V}_{\\text {out }}$, one side of each differential current-steering pair is linked to $\\mathrm{V}_{\\text {bias }}$, instead of being connected to the inversion of the bit signal. For instance, when the current is directed to the output via $\\mathrm{Q}_{2}$, the drain-source voltage across the current source, $\\mathrm{Q}_{3}$, stays largely constant if $\\mathrm{V}_{\\text {out }}$ remains close to zero, thereby keeping $\\mathrm{Q}_{2}$ in the active region. Consequently, $\\mathrm{Q}_{2}$ and $\\mathrm{Q}_{3}$ effectively constitute a cascode current source when driving current to the output.\n\nTo enhance the speed of this converter, the voltage swing at the common connections of the current switches (such as $Q_{1}$, $Q_{2}$, and $Q_{3}$) should be minimized. To achieve this minimal swing, the common connection should be at a voltage level where the output transistors are just deactivated when the current is directed to ground. It is also noteworthy that during the activation or deactivation of a switch, the switching feedthrough from the digital input connected to the grounding transistor (e.g., $\\mathbf{Q}_{1}$) actually aids the switching process. Lastly, it should be observed that this design does not employ two logic driving signals, $\\mathrm{d}_{\\mathrm{i}}$ and $\\overline{\\mathrm{d}}_{\\mathrm{i}}$, and can thus be clocked at the maximum rate without the necessity for precisely timed edges.\n\nimage_name: Fig. 16.18 A single-supply positive-output D/A converter\ndescription:\n[\nname: Q1, type: NMOS, ports: {S: GND, D: d1, G: Vbias}\nname: Q2, type: NMOS, ports: {S: d1, D: d2, G: Vbias}\nname: Q3, type: NMOS, ports: {S: d2, D: Vout, G: Vbias}\nname: Q4, type: NMOS, ports: {S: Vout, D: VDD, G: Vbias}\nname: Rref, type: Resistor, value: Rref, ports: {N1: d1, N2: GND}\nname: 50 Ω, type: Resistor, value: 50 Ω, ports: {N1: Vout, N2: GND}\nname: OpAmp, type: OpAmp, value: Vref, ports: {InP: Vref, InN: d1, OutP: VDD}\n]\nextrainfo: This circuit represents a single-supply positive-output digital-to-analog converter (DAC). It incorporates a cascode current source formed by Q2 and Q3 to drive current to the output. The design prioritizes speed by reducing the voltage swing at the common connections of the current switches. The circuit operates without requiring two logic driving signals and can be clocked at the highest rate without the need for precise timing.\n\nFig. 16.18 A single-supply positive-output D/A converter."
},
{
    "text": "The employment of dynamic techniques alongside current switching serves as a method for achieving highly precise current sources (up to 16-bit accuracy) in audio-frequency D/A converters [Schouwenaars, 1988].\n\nThis technique was employed in the design of a 16-bit audio-frequency D/A converter, where the 6 most significant bits (MSBs) were implemented using a thermometer code. Given the reduced accuracy requirements for the remaining bits, a binary array was utilized for their realization. The fundamental concept for creating 63 accurately matched current sources for the 6 MSBs is depicted in Fig. 16.19. Here, the objective is to set all currents $\\mathrm{I}_{\\mathrm{di}}$ to an identical precise value, irrespective of transistor mismatches and charge injection. To achieve this high level of matching, each current source $\\mathrm{I}_{\\mathrm{di}}$ is periodically calibrated using a single reference current source, $\\mathrm{I}_{\\mathrm{ref}}$, via the shift register. In other words, once $\\mathrm{I}_{\\mathrm{d} 1}$ is calibrated, the same reference current, $\\mathrm{I}_{\\mathrm{ref}}$, is used to set the next current source, $\\mathrm{I}_{\\mathrm{d} 2}$, to the same value as $\\mathrm{I}_{\\mathrm{d} 1}$, and this process continues. Before delving into the calibration process, it is important to note that the values of $\\mathrm{I}_{\\mathrm{di}}$ do not need to exactly match $\\mathrm{I}_{\\mathrm{ref}}$, but they must accurately match each other. Consequently, any common errors during calibration are insignificant. Additionally, it should be noted that 64 current sources are calibrated, even though only 63 are needed for the 6 MSBs. This additional current source ensures the D/A converter can operate continuously, even during the calibration of one of the current sources.\n\nThe process for calibrating and utilizing one of the current sources is illustrated in Fig. 16.20, specifically for $\\mathrm{I}_{\\mathrm{dl}}$. During calibration, the current source is connected to the reference current $I_{r e f}$, with $Q_{1}$ configured in a diode-connected mode. This configuration applies the necessary voltage across the parasitic $C_{g s}$ to ensure $I_{d 1}$ equals $I_{r e f}$. When $S_{1}$ is opened, $I_{d 1}$ remains nearly equal to $I_{r e f}$, assuming the drain-source voltage of $Q_{1}$ remains stable and the clock feedthrough and charge injection of $S_{1}$ are minimal. During normal system operation, the gate voltage (and thus the current) is determined by the voltage stored on the parasitic capacitance, $C_{g s}$.\n\nimage_name:Fig. 16.19 Dynamically matching current sources for 6 MSB\ndescription:\n[\nname: I_ref, type: CurrentSource, ports: {Np: VDD, Nn: Shift_register}\nname: I_d1, type: CurrentSource, ports: {Np: Switch_network, Nn: GND}\nname: I_d2, type: CurrentSource, ports: {Np: Switch_network, Nn: GND}\nname: I_d3, type: CurrentSource, ports: {Np: Switch_network, Nn: GND}\nname: I_d4, type: CurrentSource, ports: {Np: Switch_network, Nn: GND}\nname: I_d5, type: CurrentSource, ports: {Np: Switch_network, Nn: GND}\nname: I_64, type: CurrentSource, ports: {Np: Switch_network, Nn: GND}\n]\nextrainfo:The circuit diagram illustrates a dynamically matching current source system for a 6 MSB DAC. It uses a shift register to control switches that route current from multiple current sources (I_d1 to I_64) to a switch network, which then interfaces with a D/A converter. The reference current I_ref is used to calibrate the system.\n\nFig. 16.19 Dynamically matching current sources for 6 MSB.\nimage_name:Fig. 16.20\ndescription:The circuit diagram illustrates a dynamically setting current source system for a 6 MSB DAC. It uses a shift register to control switches that route current from multiple current sources to a switch network, interfacing with a D/A converter. The reference current I_ref is used for calibration. The NMOS transistor Q1 is used to control the flow of current, and the capacitor C_gs is likely used for stability or filtering purposes.\n\nCalibration\nimage_name:Fig. 16.20 Dynamically setting a current source, I_{d1}\ndescription:The circuit diagram illustrates a dynamically setting current source system for a 6 MSB DAC. It uses a shift register to control switches that route current from multiple current sources to a switch network, interfacing with a D/A converter. The reference current I_ref is used for calibration. The NMOS transistor Q1 is used to control the flow of current, and the capacitor C_gs is likely used for stability or filtering purposes. Selecting and summing current signals can provide high-speed D/A conversion. Output-impedance enhancement techniques may be needed to ensure the currents remain constant with respect to variations in output voltage. Calibration may also be used to ensure matching. A major limitation in matching the 64 current sources is due to the differences in clock feedthrough and charge injection.\n\nRegular usage\n\nFig. 16.20 Dynamically setting a current source, $\\mathrm{I}_{\\mathrm{d} 1}$.\n\nKey Point: Selecting and summing current signals can provide high-speed $D / A$ conversion. Output-impedance enhancement techniques may be needed to ensure the currents remain constant with respect to variations in output voltage. Calibration may also be used to ensure matching.\n\nA significant challenge in matching the 64 current sources arises from the differences in clock feedthrough and charge injection of the switches $\\mathrm{S}_{\\mathrm{i}}$. Since mismatches between different switches are inevitable, the most effective approach to maintain equal current sources is to minimize the overall clock feedthrough and charge injection. These nonideal effects can be reduced by using a large capacitance $\\mathrm{C}_{\\mathrm{gs}}$ and a high bias voltage $\\mathrm{V}_{\\mathrm{GS}}$ (a larger $\\mathrm{V}_{\\mathrm{Gs}}$ implies that any voltage difference will result in a smaller percentage current deviation). To meet these requirements, a current source of $0.9 \\mathrm{I}_{\\text {ref }}$ was added in parallel to $\\mathrm{Q}_{1}$, so that $\\mathrm{Q}_{1}$ only needs to source a current close to $0.1 \\mathrm{I}_{\\mathrm{ref}}$. With this setup, a large, low-transconductance device can be employed (a $\\mathrm{W} / \\mathrm{L}=1 / 8 \\mathrm{might}$ be used).\n\nUltimately, each current source must be recalibrated before leakage currents (on the order of $10 \\mathrm{pA} / \\mu \\mathrm{m}^{2}$ of junction area) on $\\mathrm{C}_{\\mathrm{gs}}$ cause the current source to deviate by 0.5 LSB. Fortunately, having a large $\\mathrm{C}_{\\mathrm{GS}}$ and $\\mathrm{V}_{\\mathrm{GS}}$ extends this calibration interval (every 1.7 ms in [Schouwenaars, 1988]).\n\nFurther details are provided in [Schouwenaars, 1988]. For instance, during calibration, a p-channel-input common-gate amplifier is added to the diode-connected loop. This is commonly done in dynamic switched-current circuits to control the drain-source voltage of $Q_{1}$ (i.e., to keep it constant regardless of the actual current and to match its value during regular use) and to accelerate the circuit by reducing the impact of parasitic capacitances on the large $I_{\\text {ref }}$ bus. Additionally, dummy switches are connected to $S_{1}$ to help minimize clock feedthrough by partially canceling the injected charge."
},
{
    "text": "The application of dynamic techniques combined with current switching serves as a method to achieve highly matched current sources (up to 16-bit precision) for audio-frequency D/A converters [Schouwenaars, 1988].\n\nThis technique was employed in the design of a 16-bit audio-frequency D/A converter, where the 6 MSB were implemented using a thermometer code. Given that the accuracy demands are lower for the remaining bits, a binary array was utilized for their realization. The fundamental concept for creating 63 precisely matched current sources for the 6 MSBs is depicted in Fig. 16.19. Here, the objective is to set all currents $\\mathrm{I}_{\\mathrm{di}}$ to an identical exact value, irrespective of transistor mismatches and charge injection. To achieve this high level of matching, each current source $\\mathrm{I}_{\\mathrm{di}}$ is periodically calibrated using a single reference current source, $\\mathrm{I}_{\\mathrm{ref}}$, facilitated by the shift register. In other words, once $\\mathrm{I}_{\\mathrm{d} 1}$ is calibrated, the same reference current, $\\mathrm{I}_{\\mathrm{ref}}$, is used to set the subsequent current source, $\\mathrm{I}_{\\mathrm{d} 2}$, to the same value as $\\mathrm{I}_{\\mathrm{d} 1}$, and this process continues. Before delving into the calibration process, it is important to note that the values of $\\mathrm{I}_{\\mathrm{di}}$ do not need to exactly match $\\mathrm{I}_{\\mathrm{ref}}$, but they must accurately match each other. Consequently, any common errors during calibration are insignificant. Additionally, note that 64 current sources are calibrated, even though only 63 are needed for the 6 MSB. This additional current source ensures the D/A converter can operate continuously, even when one source is being calibrated.\n\nThe process for calibrating and utilizing one of the current sources is illustrated in Fig. 16.20, specifically for $\\mathrm{I}_{\\mathrm{dl}}$. During calibration, the current source is connected to the reference current $I_{\\mathrm{ref}}$, with $Q_{1}$ configured in a diode-connected mode. This arrangement imposes the necessary voltage across the parasitic $C_{\\mathrm{gs}}$ to make $I_{\\mathrm{d} 1}$ equal to $I_{\\mathrm{ref}}$. When $S_{1}$ is opened, $I_{\\mathrm{d} 1}$ remains nearly equal to $I_{\\mathrm{ref}}$, assuming the drain-source voltage of $Q_{1}$ remains stable and the clock feedthrough and charge injection of $S_{1}$ are minimal. During normal system operation, the gate voltage (and thus the current) is determined by the voltage stored on the parasitic capacitance, $C_{\\mathrm{gs}}$.\n\nFig. 16.19 illustrates a dynamically matching current source system for a 6 MSB DAC. It employs a shift register to control switches that route current from multiple current sources (I_d1 to I_64) to a switch network, which interfaces with a D/A converter. The reference current I_ref is used for system calibration.\n\nFig. 16.20 depicts a dynamically setting current source system for a 6 MSB DAC. It uses a shift register to control switches that route current from multiple sources to a switch network, interfacing with a D/A converter. The reference current I_ref is utilized for calibration. The NMOS transistor Q1 controls the current flow, and the capacitor C_gs likely serves stability or filtering functions.\n\nKey Point: Selecting and summing current signals can enable high-speed D/A conversion. Output-impedance enhancement techniques may be necessary to ensure current stability despite output voltage variations. Calibration also aids in ensuring matching.\n\nA significant challenge in matching the 64 current sources arises from differences in clock feedthrough and charge injection of the switches $\\mathrm{S}_{\\mathrm{i}}$. Since mismatches between switches are inevitable, minimizing the total clock feedthrough and charge injection is crucial. These nonideal effects can be reduced by using a large capacitance $\\mathrm{C}_{\\mathrm{gs}}$ and a high bias voltage $\\mathrm{V}_{\\mathrm{GS}}$ (a large $\\mathrm{V}_{\\mathrm{GS}}$ means smaller percentage current deviations for any voltage difference). To meet these requirements, a current source of $0.9 \\mathrm{I}_{\\text{ref}}$ was added in parallel to $\\mathrm{Q}_{1}$, so $\\mathrm{Q}_{1}$ only needs to source a current near $0.1 \\mathrm{I}_{\\mathrm{ref}}$. This setup allows for the use of a large, low-transconductance device (e.g., $\\mathrm{W} / \\mathrm{L}=1 / 8$).\n\nUltimately, each current source must be recalibrated before leakage currents (approximately $10 \\mathrm{pA} / \\mu \\mathrm{m}^{2}$ of junction area) on $\\mathrm{C}_{\\mathrm{gs}}$ cause a deviation of 0.5 LSB. Fortunately, a large $\\mathrm{C}_{\\mathrm{GS}}$ and $\\mathrm{V}_{\\mathrm{GS}}$ extend this calibration interval (every 1.7 ms in [Schouwenaars, 1988]).\n\nAdditional details are provided in [Schouwenaars, 1988]. For instance, during calibration, a p-channel-input common-gate amplifier is added to the diode-connected loop. This is common in dynamic switched-current circuits to control the drain-source voltage of $Q_{1}$ (keeping it constant regardless of the actual current and matching its regular use value) and to enhance circuit speed by reducing the impact of parasitic capacitances on the large $I_{\\text{ref}}$ bus. Dummy switches are also connected to $S_{1}$ to help minimize clock feedthrough by partially offsetting the injected charge."
},
{
    "text": "The application of dynamic techniques with current switching serves as a method for achieving highly matched current sources (up to 16-bit precision) for audio-frequency D/A converters [Schouwenaars, 1988].\n\nThis technique was employed in the design of a 16-bit audio-frequency D/A converter, where the 6 MSB were implemented using a thermometer code. Given that the accuracy demands are lower for the remaining bits, a binary array was utilized for their realization. The fundamental concept for creating 63 precisely matched current sources for the 6 MSBs is depicted in Fig. 16.19. Here, the goal is to set all currents $\\mathrm{I}_{\\mathrm{di}}$ to an identical exact value, irrespective of transistor mismatches and charge injection. To achieve this high level of matching, each current source $\\mathrm{I}_{\\mathrm{di}}$ is periodically calibrated using a single reference current source, $\\mathrm{I}_{\\mathrm{ref}}$, via the shift register. In other words, once $\\mathrm{I}_{\\mathrm{d} 1}$ is calibrated, the same reference current, $\\mathrm{I}_{\\mathrm{ref}}$, is used to set the next current source, $\\mathrm{I}_{\\mathrm{d} 2}$, to the same value as $\\mathrm{I}_{\\mathrm{d} 1}$, and this process continues. Before delving into the calibration process, it is important to note that the values of $\\mathrm{I}_{\\mathrm{di}}$ do not need to exactly match $\\mathrm{I}_{\\mathrm{ref}}$, but they must accurately match each other. Thus, any common errors in the calibration phase are insignificant. Additionally, note that 64 current sources are calibrated, even though only 63 are needed for the 6 MSB. This extra current source is necessary to ensure the D/A converter can operate continuously, even during the calibration of one of the current sources.\n\nThe process for calibrating and utilizing one of the current sources is illustrated in Fig. 16.20, specifically for $\\mathrm{I}_{\\mathrm{dl}}$. During calibration, the current source is connected to the reference current $I_{r e f}$, with $Q_{1}$ configured in a diode-connected mode. This ensures the necessary voltage is applied across the parasitic $C_{g s}$, making $I_{d 1}$ equal to $I_{r e f}$. When $S_{1}$ is opened, $I_{d 1}$ remains nearly equal to $I_{r e f}$, assuming the drain-source voltage of $Q_{1}$ remains constant and the clock feedthrough and charge injection of $S_{1}$ are minimal. During normal system operation, the gate voltage (and thus the current) is determined by the voltage stored on the parasitic capacitance, $C_{g s}$.\n\nFig. 16.19 illustrates a dynamically matching current source system for a 6 MSB DAC. It employs a shift register to control switches that route current from multiple current sources (I_d1 to I_64) to a switch network, which then interfaces with a D/A converter. The reference current I_ref is used for system calibration.\n\nFig. 16.20 shows a dynamically setting current source system for a 6 MSB DAC. It uses a shift register to control switches that route current from multiple current sources to a switch network, interfacing with a D/A converter. The reference current I_ref is utilized for calibration. The NMOS transistor Q1 controls the current flow, and the capacitor C_gs likely serves stability or filtering purposes.\n\nKey Point: Selecting and summing current signals can enable high-speed D/A conversion. Output-impedance enhancement techniques may be necessary to ensure current stability despite output voltage variations. Calibration also helps ensure matching.\n\nA significant limitation in matching the 64 current sources arises from differences in clock feedthrough and charge injection of the switches $\\mathrm{S}_{\\mathrm{i}}$. Since mismatches between different switches are inevitable, minimizing the total clock feedthrough and charge injection is crucial. These nonideal effects can be reduced by using a large capacitance $\\mathrm{C}_{\\mathrm{gs}}$ and a high bias voltage $\\mathrm{V}_{\\mathrm{GS}}$ (a large $\\mathrm{V}_{\\mathrm{Gs}}$ implies smaller percentage current deviations for any voltage difference). To meet these requirements, a current source of $0.9 \\mathrm{I}_{\\text {ref }}$ was added in parallel to $\\mathrm{Q}_{1}$, so $\\mathrm{Q}_{1}$ only needs to source a current near $0.1 \\mathrm{I}_{\\mathrm{ref}}$. This setup allows for the use of a large, low-transconductance device (e.g., $\\mathrm{W} / \\mathrm{L}=1 / 8$).\n\nFinally, each current source must be recalibrated before leakage currents (approximately $10 \\mathrm{pA} / \\mu \\mathrm{m}^{2}$ of junction area) on $\\mathrm{C}_{\\mathrm{gs}}$ cause a deviation of 0.5 LSB. Fortunately, a large $\\mathrm{C}_{\\mathrm{GS}}$ and $\\mathrm{V}_{\\mathrm{GS}}$ extend this calibration interval (every 1.7 ms in [Schouwenaars, 1988]).\n\nAdditional details are provided in [Schouwenaars, 1988]. For instance, during calibration, a p-channel-input common-gate amplifier is added to the diode-connected loop. This is common in dynamic switched-current circuits to control the drain-source voltage of $Q_{1}$ (keeping it constant and matched to its value during regular use) and to speed up the circuit by reducing the impact of parasitic capacitances on the large $I_{\\text {ref }}$ bus. Dummy switches are also connected to $S_{1}$ to help minimize clock feedthrough by partially canceling the injected charge."
},
{
    "text": "The application of dynamic techniques with current switching serves as a method to achieve highly matched current sources (up to 16-bit precision) for audio-frequency D/A converters [Schouwenaars, 1988].\n\nThis technique was employed in the design of a 16-bit audio-frequency D/A converter, where the 6 MSB were implemented using a thermometer code. Due to the reduced accuracy requirements for the remaining bits, a binary array was utilized in their realization. The fundamental concept for creating 63 precisely matched current sources for the 6 MSBs is depicted in Fig. 16.19. The goal is to set all currents $\\mathrm{I}_{\\mathrm{di}}$ to an identical precise value, irrespective of transistor mismatches and charge injection. To achieve this high level of matching, each current source $\\mathrm{I}_{\\mathrm{di}}$ is periodically calibrated using a single reference current source, $\\mathrm{I}_{\\mathrm{ref}}$, via the shift register. In essence, once $\\mathrm{I}_{\\mathrm{d} 1}$ is calibrated, the same reference current, $\\mathrm{I}_{\\mathrm{ref}}$, is used to set the next current source, $\\mathrm{I}_{\\mathrm{d} 2}$, to the same value as $\\mathrm{I}_{\\mathrm{d} 1}$, and this process continues. Before delving into the calibration process, it's important to note that the values of $\\mathrm{I}_{\\mathrm{di}}$ do not need to exactly match $\\mathrm{I}_{\\mathrm{ref}}$, but must accurately match each other. Consequently, any common errors in the calibration phase are insignificant. Additionally, 64 current sources are calibrated, even though only 63 are needed for the 6 MSB, to ensure the D/A converter can operate continuously, even during the calibration of one current source.\n\nThe calibration and usage method for one of the current sources, $\\mathrm{I}_{\\mathrm{dl}}$, is illustrated in Fig. 16.20. During calibration, the current source is connected to the reference current $I_{r e f}$, with $Q_{1}$ configured in diode-connected mode. This setup ensures the necessary voltage is applied across the parasitic $C_{g s}$, making $I_{d 1}$ equal to $I_{r e f}$. When $S_{1}$ is opened, $I_{d 1}$ remains nearly equal to $I_{r e f}$, assuming the drain-source voltage of $Q_{1}$ remains stable and the clock feedthrough and charge injection of $S_{1}$ are minimal. During normal system operation, the gate voltage (and thus the current) is determined by the voltage stored on the parasitic capacitance, $C_{g s}$.\n\nFig. 16.19 illustrates a dynamically matching current source system for a 6 MSB DAC, utilizing a shift register to control switches that route current from multiple sources (I_d1 to I_64) to a switch network, which interfaces with a D/A converter. The reference current I_ref is used for system calibration.\n\nFig. 16.20 shows a dynamically setting current source system for a 6 MSB DAC, where a shift register controls switches to route current from various sources to a switch network, interfacing with a D/A converter. The reference current I_ref is employed for calibration, with the NMOS transistor Q1 controlling current flow and the capacitor C_gs likely used for stability or filtering.\n\nKey Point: Selecting and summing current signals can enable high-speed D/A conversion. Output-impedance enhancement techniques may be necessary to ensure current stability despite output voltage variations. Calibration also aids in ensuring matching.\n\nA significant limitation in matching the 64 current sources arises from differences in clock feedthrough and charge injection of the switches $\\mathrm{S}_{\\mathrm{i}}$. Since mismatches between switches are inevitable, minimizing total clock feedthrough and charge injection is crucial. These nonideal effects can be reduced by increasing the capacitance $\\mathrm{C}_{\\mathrm{gs}}$ and bias voltage $\\mathrm{V}_{\\mathrm{GS}}$ (a larger $\\mathrm{V}_{\\mathrm{Gs}}$ results in smaller percentage current deviations). To meet these requirements, a current source $0.9 \\mathrm{I}_{\\text {ref }}$ was added in parallel to $\\mathrm{Q}_{1}$, allowing $\\mathrm{Q}_{1}$ to source a current close to $0.1 \\mathrm{I}_{\\mathrm{ref}}$. This setup permits the use of a large, low-transconductance device (e.g., $\\mathrm{W} / \\mathrm{L}=1 / 8$).\n\nEach current source must be recalibrated before leakage currents (approximately $10 \\mathrm{pA} / \\mu \\mathrm{m}^{2}$ of junction area) on $\\mathrm{C}_{\\mathrm{gs}}$ cause a deviation of 0.5 LSB. Fortunately, larger $\\mathrm{C}_{\\mathrm{GS}}$ and $\\mathrm{V}_{\\mathrm{GS}}$ values extend this calibration interval (every 1.7 ms in [Schouwenaars, 1988]).\n\nAdditional details are provided in [Schouwenaars, 1988], such as the inclusion of a p-channel-input common-gate amplifier in the diode-connected loop during calibration. This is standard in dynamic switched-current circuits to control the drain-source voltage of $Q_{1}$ (keeping it constant and matched to its regular use value) and to enhance circuit speed by reducing the impact of parasitic capacitances on the large $I_{\\text {ref }}$ bus. Dummy switches are also connected to $S_{1}$ to help minimize clock feedthrough by partially offsetting the injected charge."
},
{
    "text": "Utilizing dynamic techniques with current switching is a method for achieving highly matched current sources (up to 16-bit precision) for audio-frequency D/A converters [Schouwenaars, 1988].\n\nThis technique was employed in designing a 16-bit audio-frequency D/A converter, where the 6 MSBs were implemented using a thermometer code. Due to reduced accuracy requirements for the remaining bits, a binary array was utilized in their design. The concept for creating 63 precisely matched current sources for the 6 MSBs is depicted in Fig. 16.19. Here, the goal is to set all currents $\\mathrm{I}_{\\mathrm{di}}$ to an identical precise value, regardless of transistor mismatches and charge injection. To achieve this high level of matching, each current source $\\mathrm{I}_{\\mathrm{di}}$ is periodically calibrated using a single reference current source, $\\mathrm{I}_{\\mathrm{ref}}$, via the shift register. In other words, after calibrating $\\mathrm{I}_{\\mathrm{d} 1}$, the same reference current, $\\mathrm{I}_{\\mathrm{ref}}$, is used to set the next current source, $\\mathrm{I}_{\\mathrm{d} 2}$, to the same value as $\\mathrm{I}_{\\mathrm{d} 1}$, and so on. It's important to note that the values of $\\mathrm{I}_{\\mathrm{di}}$ do not need to exactly match $\\mathrm{I}_{\\mathrm{ref}}$, but must accurately match each other. Thus, any common errors in the calibration stage are insignificant. Additionally, 64 current sources are calibrated, even though only 63 are needed for the 6 MSBs. This extra source ensures continuous operation of the D/A converter, even during the calibration of one source.\n\nThe process for calibrating and utilizing one of the current sources is shown in Fig. 16.20, specifically for $\\mathrm{I}_{\\mathrm{dl}}$. During calibration, the current source is connected to the reference current $I_{r e f}$, with $Q_{1}$ configured in a diode-connected mode. This ensures the necessary voltage is applied across the parasitic $C_{g s}$ to make $I_{d 1}$ equal to $I_{r e f}$. When $S_{1}$ is opened, $I_{d 1}$ remains nearly equal to $I_{r e f}$, assuming the drain-source voltage of $Q_{1}$ remains stable and the clock feedthrough and charge injection of $S_{1}$ are minimal. During normal operation, the gate voltage (and thus the current) is determined by the voltage stored on the parasitic capacitance, $C_{g s}$.\n\nFig. 16.19 illustrates a dynamically matching current source system for a 6 MSB DAC. It employs a shift register to control switches that route current from multiple sources (I_d1 to I_64) to a switch network, interfacing with a D/A converter. The reference current I_ref is used for calibration.\n\nFig. 16.20 shows a dynamically setting current source system for a 6 MSB DAC. It also uses a shift register to control switches for routing current from multiple sources to a switch network, interfacing with a D/A converter. The reference current I_ref is used for calibration, with the NMOS transistor Q1 controlling current flow and the capacitor C_gs likely used for stability or filtering.\n\nKey Point: Selecting and summing current signals can enable high-speed D/A conversion. Output-impedance enhancement techniques may be necessary to ensure current stability despite output voltage variations. Calibration also ensures matching.\n\nA significant limitation in matching the 64 current sources arises from differences in clock feedthrough and charge injection of the switches $\\mathrm{S}_{\\mathrm{i}}$. Since mismatches between switches are inevitable, minimizing total clock feedthrough and charge injection is crucial. These nonideal effects can be reduced by using a large capacitance $\\mathrm{C}_{\\mathrm{gs}}$ and bias voltage $\\mathrm{V}_{\\mathrm{GS}}$ (a large $\\mathrm{V}_{\\mathrm{Gs}}$ means smaller percentage current deviation for any voltage difference). To meet these requirements, a current source $0.9 \\mathrm{I}_{\\text {ref }}$ was added in parallel to $\\mathrm{Q}_{1}$, so $\\mathrm{Q}_{1}$ only needs to source a current near $0.1 \\mathrm{I}_{\\mathrm{ref}}$. This allows the use of a large, low-transconductance device (e.g., $\\mathrm{W} / \\mathrm{L}=1 / 8$).\n\nFinally, each current source must be recalibrated before leakage currents (approximately $10 \\mathrm{pA} / \\mu \\mathrm{m}^{2}$ of junction area) on $\\mathrm{C}_{\\mathrm{gs}}$ cause a deviation of 0.5 LSB. Fortunately, a large $\\mathrm{C}_{\\mathrm{GS}}$ and $\\mathrm{V}_{\\mathrm{GS}}$ extend this calibration interval (every 1.7 ms in [Schouwenaars, 1988]).\n\nAdditional details are provided in [Schouwenaars, 1988]. For instance, during calibration, a p-channel-input common-gate amplifier is added to the diode-connected loop. This is common in dynamic switched-current circuits to control the drain-source voltage of $Q_{1}$ (keeping it constant regardless of the actual current and matching it to its regular use value) and to enhance speed by reducing the impact of parasitic capacitances on the large $I_{\\text {ref }}$ bus. Dummy switches are also connected to $S_{1}$ to help minimize clock feedthrough by partially canceling the injected charge."
},
{
    "text": "The application of dynamic techniques with current switching serves as a method for achieving highly precise current sources (up to 16-bit accuracy) for audio-frequency D/A converters [Schouwenaars, 1988].\n\nThis technique was employed in the design of a 16-bit audio-frequency D/A converter, where the 6 MSB were implemented using a thermometer code. Due to the reduced accuracy requirements for the remaining bits, a binary array was utilized in their realization. The fundamental concept for creating 63 accurately matched current sources for the 6 MSBs is depicted in Fig. 16.19. Here, the goal is to set all currents $\\mathrm{I}_{\\mathrm{di}}$ to an identical precise value, regardless of transistor mismatches and charge injection. To achieve this high level of matching, each current source $\\mathrm{I}_{\\mathrm{di}}$ is periodically calibrated using a single reference current source, $\\mathrm{I}_{\\mathrm{ref}}$, via the shift register. In other words, once $\\mathrm{I}_{\\mathrm{d} 1}$ is calibrated, the same reference current, $\\mathrm{I}_{\\mathrm{ref}}$, is used to set the next current source, $\\mathrm{I}_{\\mathrm{d} 2}$, to the same value as $\\mathrm{I}_{\\mathrm{d} 1}$, and so on. Before delving into the calibration process, it's important to note that the values of $\\mathrm{I}_{\\mathrm{di}}$ do not need to exactly match $\\mathrm{I}_{\\mathrm{ref}}$ but must accurately match each other. Thus, any common errors during calibration are not problematic. Additionally, 64 current sources are calibrated, even though only 63 are needed for the 6 MSB, to ensure continuous operation of the D/A converter when one source is being calibrated.\n\nThe process for calibrating and utilizing one of the current sources is illustrated in Fig. 16.20, specifically for $\\mathrm{I}_{\\mathrm{dl}}$. During calibration, the current source is connected to the reference current $I_{r e f}$, with $Q_{1}$ configured in a diode-connected mode. This ensures the necessary voltage is applied across the parasitic $C_{g s}$ to make $I_{d 1}$ equal to $I_{r e f}$. When $S_{1}$ is opened, $I_{d 1}$ remains nearly equal to $I_{r e f}$, assuming the drain-source voltage of $Q_{1}$ remains constant and the clock feedthrough and charge injection of $S_{1}$ are minimal. During normal system operation, the gate voltage (and thus the current) is determined by the voltage stored on the parasitic capacitance, $C_{g s}$.\n\nFig. 16.19 illustrates a dynamically matching current source system for a 6 MSB DAC. It employs a shift register to control switches that route current from multiple sources (I_d1 to I_64) to a switch network, which interfaces with a D/A converter. The reference current I_ref is used for system calibration.\n\nFig. 16.20 depicts a dynamically setting current source system for a 6 MSB DAC. It uses a shift register to control switches routing current from various sources to a switch network, interfacing with a D/A converter. The reference current I_ref is utilized for calibration. The NMOS transistor Q1 controls current flow, and the capacitor C_gs likely serves stability or filtering functions.\n\nKey Point: Selecting and summing current signals can enable high-speed D/A conversion. Output-impedance enhancement techniques may be necessary to ensure current stability despite output voltage variations. Calibration also ensures matching.\n\nA significant limitation in matching the 64 current sources arises from differences in clock feedthrough and charge injection of the switches $\\mathrm{S}_{\\mathrm{i}}$. Since mismatches between switches are inevitable, minimizing total clock feedthrough and charge injection is crucial. These nonideal effects can be reduced by using a large capacitance $\\mathrm{C}_{\\mathrm{gs}}$ and bias voltage $\\mathrm{V}_{\\mathrm{GS}}$ (a large $\\mathrm{V}_{\\mathrm{GS}}$ results in smaller percentage current deviations for any voltage difference). To meet these requirements, a current source of $0.9 \\mathrm{I}_{\\text {ref }}$ was added in parallel to $\\mathrm{Q}_{1}$, so $\\mathrm{Q}_{1}$ only needs to source a current near $0.1 \\mathrm{I}_{\\mathrm{ref}}$. This setup allows for a large, low-transconductance device (e.g., $\\mathrm{W} / \\mathrm{L}=1 / 8$).\n\nEach current source must be recalibrated before leakage currents (approximately $10 \\mathrm{pA} / \\mu \\mathrm{m}^{2}$ of junction area) on $\\mathrm{C}_{\\mathrm{gs}}$ cause a deviation of 0.5 LSB. Fortunately, a large $\\mathrm{C}_{\\mathrm{GS}}$ and $\\mathrm{V}_{\\mathrm{GS}}$ extend this calibration interval (every 1.7 ms in [Schouwenaars, 1988]).\n\nAdditional details are provided in [Schouwenaars, 1988]. For instance, during calibration, a p-channel-input common-gate amplifier is added to the diode-connected loop. This is common in dynamic switched-current circuits to control the drain-source voltage of $Q_{1}$ (keeping it constant regardless of the actual current and matching its regular use value) and to reduce the impact of parasitic capacitances on the large $I_{\\text {ref }}$ bus. Dummy switches are also connected to $S_{1}$ to help minimize clock feedthrough by partially canceling the injected charge."
},
{
    "text": "The application of dynamic techniques alongside current switching serves as a method to achieve highly matched current sources (up to 16-bit precision) for audio-frequency D/A converters [Schouwenaars, 1988].\n\nThis technique was employed in the design of a 16-bit audio-frequency D/A converter, where the 6 most significant bits (MSBs) were implemented using a thermometer code. Given that the accuracy demands are less stringent for the remaining bits, a binary array was utilized for their realization. The fundamental concept for creating 63 precisely matched current sources for the 6 MSBs is depicted in Fig. 16.19. Here, the objective is to set all currents $\\mathrm{I}_{\\mathrm{di}}$ to an identical precise value, regardless of transistor mismatches and charge injection. To achieve this high level of matching, each current source $\\mathrm{I}_{\\mathrm{di}}$ is periodically calibrated using a single reference current source, $\\mathrm{I}_{\\mathrm{ref}}$, via the shift register. In other words, once $\\mathrm{I}_{\\mathrm{d} 1}$ is calibrated, the same reference current, $\\mathrm{I}_{\\mathrm{ref}}$, is used to set the next current source, $\\mathrm{I}_{\\mathrm{d} 2}$, to the same value as $\\mathrm{I}_{\\mathrm{d} 1}$, and this process continues. Before delving into the calibration process, it is important to note that the values of $\\mathrm{I}_{\\mathrm{di}}$ do not need to exactly match $\\mathrm{I}_{\\mathrm{ref}}$, but they must accurately match each other. Consequently, any common errors during calibration are not problematic. Additionally, it should be noted that 64 current sources are calibrated, even though only 63 are necessary for the 6 MSBs. This extra current source is essential to ensure the D/A converter can operate continuously, even when one of the current sources is being calibrated.\n\nThe procedure for calibrating and utilizing one of the current sources is illustrated in Fig. 16.20, specifically for $\\mathrm{I}_{\\mathrm{dl}}$. During calibration, the current source is connected to the reference current $I_{\\mathrm{ref}}$, with $Q_{1}$ configured in a diode-connected mode. This arrangement applies the necessary voltage across the parasitic $C_{\\mathrm{gs}}$ to make $I_{\\mathrm{d} 1}$ equal to $I_{\\mathrm{ref}}$. When $S_{1}$ is opened, $I_{\\mathrm{d} 1}$ remains nearly equal to $I_{\\mathrm{ref}}$, assuming the drain-source voltage of $Q_{1}$ remains constant and the clock feedthrough and charge injection of $S_{1}$ are minimal. During normal system operation, the gate voltage (and thus the current) is determined by the voltage stored on the parasitic capacitance, $C_{\\mathrm{gs}}$.\n\n**Image Description: Fig. 16.19 Dynamically matching current sources for 6 MSB**\n- The circuit diagram shows a dynamically matching current source system for a 6 MSB DAC. It employs a shift register to control switches that route current from multiple current sources (I_d1 to I_64) to a switch network, which then interfaces with a D/A converter. The reference current I_ref is used for system calibration.\n\n**Fig. 16.19 Dynamically matching current sources for 6 MSB.**\n\n**Image Description: Fig. 16.20**\n- The circuit diagram illustrates a dynamically setting current source system for a 6 MSB DAC. It uses a shift register to control switches that route current from multiple current sources to a switch network, interfacing with a D/A converter. The reference current I_ref is used for calibration. The NMOS transistor Q1 controls the current flow, and the capacitor C_gs is likely used for stability or filtering purposes.\n\n**Calibration**\n\n**Image Description: Fig. 16.20 Dynamically setting a current source, I_{d1}**\n- The circuit diagram illustrates a dynamically setting current source system for a 6 MSB DAC. It uses a shift register to control switches that route current from multiple current sources to a switch network, interfacing with a D/A converter. The reference current I_ref is used for calibration. The NMOS transistor Q1 controls the current flow, and the capacitor C_gs is likely used for stability or filtering purposes. Selecting and summing current signals can enable high-speed D/A conversion. Output-impedance enhancement techniques may be necessary to ensure the currents remain constant despite variations in output voltage. Calibration is also used to ensure matching. A significant limitation in matching the 64 current sources arises from differences in clock feedthrough and charge injection.\n\n**Regular Usage**\n\n**Fig. 16.20 Dynamically setting a current source, $\\mathrm{I}_{\\mathrm{d} 1}$.**\n\n**Key Point:** Selecting and summing current signals can facilitate high-speed D/A conversion. Output-impedance enhancement techniques may be required to ensure the currents remain constant despite output voltage variations. Calibration is also employed to ensure matching.\n\nA major challenge in matching the 64 current sources is due to differences in clock feedthrough and charge injection of the switches $\\mathrm{S}_{\\mathrm{i}}$. Since mismatches between different switches are inevitable, the most effective approach to maintaining equal current sources is to minimize the overall clock feedthrough and charge injection. These non-ideal effects can be reduced by using a large capacitance $\\mathrm{C}_{\\mathrm{gs}}$ and a high bias voltage $\\mathrm{V}_{\\mathrm{GS}}$ (a large $\\mathrm{V}_{\\mathrm{GS}}$ implies that any voltage difference will result in a smaller percentage current deviation). To meet these requirements, a current source of $0.9 \\mathrm{I}_{\\text{ref}}$ was added in parallel to $\\mathrm{Q}_{1}$, so that $\\mathrm{Q}_{1}$ only needs to source a current near $0.1 \\mathrm{I}_{\\mathrm{ref}}$. With this setup, a large, low-transconductance device can be used (e.g., a $\\mathrm{W} / \\mathrm{L} = 1 / 8$ device).\n\nFinally, each current source must be recalibrated before leakage currents (on the order of $10 \\mathrm{pA} / \\mu \\mathrm{m}^{2}$ of junction area) on $\\mathrm{C}_{\\mathrm{gs}}$ cause the current source to deviate by 0.5 LSB. Fortunately, having a large $\\mathrm{C}_{\\mathrm{GS}}$ and $\\mathrm{V}_{\\mathrm{GS}}$ also extends the calibration interval (every 1.7 ms in [Schouwenaars, 1988]).\n\nMany additional details are provided in [Schouwenaars, 1988]. For instance, during calibration, a p-channel-input common-gate amplifier is added to the diode-connected loop. This is commonly done in dynamic switched-current circuits to control the drain-source voltage of $Q_{1}$ (i.e., to keep it constant regardless of the actual current and to match it to its value during regular use) and to accelerate the circuit by reducing the impact of parasitic capacitances on the large $I_{\\text{ref}}$ bus. Additionally, dummy switches are connected to $S_{1}$ to help minimize clock feedthrough by partially canceling the injected charge."
},
{
    "text": "The application of dynamic techniques alongside current switching serves as a method to achieve highly precise current sources (up to 16-bit accuracy) for audio-frequency D/A converters [Schouwenaars, 1988].\n\nThis technique was employed in the design of a 16-bit audio-frequency D/A converter, where the 6 most significant bits (MSBs) were implemented using a thermometer code. Given the reduced accuracy requirements for the remaining bits, a binary array was utilized for their realization. The fundamental concept for creating 63 precisely matched current sources for the 6 MSBs is depicted in Fig. 16.19. Here, the goal is to set all currents $\\mathrm{I}_{\\mathrm{di}}$ to an identical exact value, irrespective of transistor mismatches and charge injection. To achieve this high level of matching, each current source $\\mathrm{I}_{\\mathrm{di}}$ is periodically calibrated using a single reference current source, $\\mathrm{I}_{\\mathrm{ref}}$, via the shift register. In other words, once $\\mathrm{I}_{\\mathrm{d} 1}$ is calibrated, the same reference current, $\\mathrm{I}_{\\mathrm{ref}}$, is used to set the next current source, $\\mathrm{I}_{\\mathrm{d} 2}$, to the same value as $\\mathrm{I}_{\\mathrm{d} 1}$, and this process continues. Before delving into the calibration process, it's important to note that the values of $\\mathrm{I}_{\\mathrm{di}}$ do not need to exactly match $\\mathrm{I}_{\\mathrm{ref}}$, but they must accurately match each other. Thus, any common errors in the calibration phase are not problematic. Additionally, 64 current sources are calibrated, even though only 63 are needed for the 6 MSBs. This extra current source ensures continuous operation of the D/A converter, even during the calibration of one of the current sources.\n\nThe process for calibrating and utilizing one of the current sources is shown in Fig. 16.20, specifically for $\\mathrm{I}_{\\mathrm{dl}}$. During calibration, the current source is connected to the reference current $I_{r e f}$, with $Q_{1}$ configured in a diode-connected mode. This arrangement applies the necessary voltage across the parasitic $C_{g s}$ to make $I_{d 1}$ equal to $I_{r e f}$. When $S_{1}$ is opened, $I_{d 1}$ remains nearly equal to $I_{r e f}$, assuming the drain-source voltage of $Q_{1}$ remains constant and the clock feedthrough and charge injection of $S_{1}$ are minimal. During normal system operation, the gate voltage (and thus the current) is determined by the voltage stored on the parasitic capacitance, $C_{g s}$.\n\nFig. 16.19 illustrates a dynamically matching current source system for a 6 MSB DAC. It employs a shift register to control switches that route current from multiple current sources (I_d1 to I_64) to a switch network, which then interfaces with a D/A converter. The reference current I_ref is used for system calibration.\n\nFig. 16.20 depicts a dynamically setting current source system for a 6 MSB DAC. It uses a shift register to control switches that route current from multiple current sources to a switch network, interfacing with a D/A converter. The reference current I_ref is utilized for calibration. The NMOS transistor Q1 controls the current flow, and the capacitor C_gs is likely used for stability or filtering purposes.\n\nKey Point: Selecting and summing current signals can enable high-speed D/A conversion. Output-impedance enhancement techniques may be necessary to ensure the currents remain constant despite variations in output voltage. Calibration also helps ensure matching.\n\nA significant limitation in matching the 64 current sources arises from differences in clock feedthrough and charge injection of the switches $\\mathrm{S}_{\\mathrm{i}}$. Since mismatches between different switches are inevitable, minimizing the total clock feedthrough and charge injection is crucial. These nonideal effects can be reduced by having a large capacitance $\\mathrm{C}_{\\mathrm{gs}}$ and bias voltage $\\mathrm{V}_{\\mathrm{GS}}$ (a large $\\mathrm{V}_{\\mathrm{Gs}}$ implies smaller percentage current deviation for any voltage difference). To meet these requirements, a current source of $0.9 \\mathrm{I}_{\\text {ref }}$ was added in parallel to $\\mathrm{Q}_{1}$, so $\\mathrm{Q}_{1}$ only needs to source a current near $0.1 \\mathrm{I}_{\\mathrm{ref}}$. This setup allows the use of a large, low-transconductance device (e.g., $\\mathrm{W} / \\mathrm{L}=1 / 8$).\n\nEach current source must be recalibrated before leakage currents (approximately $10 \\mathrm{pA} / \\mu \\mathrm{m}^{2}$ of junction area) on $\\mathrm{C}_{\\mathrm{gs}}$ cause a deviation of 0.5 LSB. Fortunately, a large $\\mathrm{C}_{\\mathrm{GS}}$ and $\\mathrm{V}_{\\mathrm{GS}}$ extend this calibration interval (every 1.7 ms in [Schouwenaars, 1988]).\n\nAdditional details are provided in [Schouwenaars, 1988]. For instance, during calibration, a p-channel-input common-gate amplifier is added to the diode-connected loop. This is common in dynamic switched-current circuits to control the drain-source voltage of $Q_{1}$ (keeping it constant and matched to its value during regular use) and to speed up the circuit by reducing the impact of parasitic capacitances on the large $I_{\\text {ref }}$ bus. Dummy switches are also connected to $S_{1}$ to help minimize clock feedthrough by partially canceling the injected charge."
},
{
    "text": "The application of dynamic techniques with current switching serves as a method to achieve highly matched current sources (up to 16-bit precision) for audio-frequency D/A converters [Schouwenaars, 1988].\n\nThis technique was employed in the design of a 16-bit audio-frequency D/A converter, where the 6 most significant bits (MSBs) were implemented using a thermometer code. Due to the reduced accuracy requirements for the remaining bits, a binary array was utilized in their realization. The fundamental concept for creating 63 precisely matched current sources for the 6 MSBs is depicted in Fig. 16.19. The goal is to set all currents $\\mathrm{I}_{\\mathrm{di}}$ to an identical precise value, regardless of transistor mismatches and charge injection. To achieve this high level of matching, each current source $\\mathrm{I}_{\\mathrm{di}}$ is periodically calibrated using a single reference current source, $\\mathrm{I}_{\\mathrm{ref}}$, via the shift register. In essence, once $\\mathrm{I}_{\\mathrm{d} 1}$ is calibrated, the same reference current, $\\mathrm{I}_{\\mathrm{ref}}$, is used to set the next current source, $\\mathrm{I}_{\\mathrm{d} 2}$, to the same value as $\\mathrm{I}_{\\mathrm{d} 1}$, and this process continues. It is important to note that the values of $\\mathrm{I}_{\\mathrm{di}}$ do not need to exactly match $\\mathrm{I}_{\\mathrm{ref}}$, but they must accurately match each other. Thus, any common errors in the calibration stage are insignificant. Additionally, 64 current sources are calibrated, even though only 63 are needed for the 6 MSBs. This extra current source ensures continuous operation of the D/A converter, even during the calibration of one of the current sources.\n\nThe calibration process for one of the current sources, illustrated in Fig. 16.20 for $\\mathrm{I}_{\\mathrm{dl}}$, involves connecting the current source to the reference current $I_{\\mathrm{ref}}$ while configuring $Q_{1}$ in a diode-connected mode. This setup ensures the necessary voltage is applied across the parasitic $C_{\\mathrm{gs}}$ to make $I_{\\mathrm{d} 1}$ equal to $I_{\\mathrm{ref}}$. When $S_{1}$ is opened, $I_{\\mathrm{d} 1}$ remains nearly equal to $I_{\\mathrm{ref}}$, assuming the drain-source voltage of $Q_{1}$ remains stable and the clock feedthrough and charge injection of $S_{1}$ are minimal. During normal operation, the gate voltage (and thus the current) is determined by the voltage stored on the parasitic capacitance, $C_{\\mathrm{gs}}$.\n\n**Image Description: Fig. 16.19 Dynamically matching current sources for 6 MSB**\n- The circuit diagram illustrates a dynamically matching current source system for a 6 MSB DAC. It employs a shift register to control switches that route current from multiple current sources (I_d1 to I_64) to a switch network, which interfaces with a D/A converter. The reference current I_ref is used for system calibration.\n\n**Image Description: Fig. 16.20 Dynamically setting a current source, $\\mathrm{I}_{\\mathrm{d} 1}$**\n- The circuit diagram depicts a dynamically setting current source system for a 6 MSB DAC. It uses a shift register to control switches that route current from multiple current sources to a switch network, interfacing with a D/A converter. The reference current I_ref is utilized for calibration. The NMOS transistor Q1 controls the current flow, and the capacitor C_gs is likely used for stability or filtering purposes.\n\n**Key Point:** Selecting and summing current signals can enable high-speed D/A conversion. Output-impedance enhancement techniques may be necessary to ensure current stability despite variations in output voltage. Calibration also helps ensure matching.\n\nA significant challenge in matching the 64 current sources arises from differences in clock feedthrough and charge injection of the switches $\\mathrm{S}_{\\mathrm{i}}$. Since mismatches between switches are inevitable, minimizing the total clock feedthrough and charge injection is crucial. These nonideal effects can be reduced by using a large capacitance $\\mathrm{C}_{\\mathrm{gs}}$ and a high bias voltage $\\mathrm{V}_{\\mathrm{GS}}$ (a large $\\mathrm{V}_{\\mathrm{GS}}$ means any voltage difference results in a smaller percentage current deviation). To meet these requirements, a current source of $0.9 \\mathrm{I}_{\\text{ref}}$ was added in parallel to $\\mathrm{Q}_{1}$, so $\\mathrm{Q}_{1}$ only needs to source a current near $0.1 \\mathrm{I}_{\\mathrm{ref}}$. This setup allows for the use of a large, low-transconductance device (e.g., $\\mathrm{W} / \\mathrm{L}=1 / 8$).\n\nUltimately, each current source must be recalibrated before leakage currents (approximately $10 \\mathrm{pA} / \\mu \\mathrm{m}^{2}$ of junction area) on $\\mathrm{C}_{\\mathrm{gs}}$ cause the current source to deviate by 0.5 LSB. Fortunately, a large $\\mathrm{C}_{\\mathrm{GS}}$ and $\\mathrm{V}_{\\mathrm{GS}}$ extend this calibration interval (every 1.7 ms in [Schouwenaars, 1988]).\n\nAdditional details are provided in [Schouwenaars, 1988]. For instance, during calibration, a p-channel-input common-gate amplifier is added to the diode-connected loop. This is common in dynamic switched-current circuits to control the drain-source voltage of $Q_{1}$ (keeping it constant and matched to its value during regular use) and to enhance circuit speed by reducing the impact of parasitic capacitances on the large $I_{\\text{ref}}$ bus. Dummy switches are also connected to $S_{1}$ to help minimize clock feedthrough by partially canceling the injected charge."
},
{
    "text": "The application of dynamic techniques with current switching serves as a method to achieve highly matched current sources (up to 16-bit precision) for audio-frequency D/A converters [Schouwenaars, 1988].\n\nThis technique was employed in the design of a 16-bit audio-frequency D/A converter, where the 6 most significant bits (MSBs) were implemented using a thermometer code. Given that the accuracy demands are lower for the remaining bits, a binary array was utilized for their realization. The fundamental concept for creating 63 precisely matched current sources for the 6 MSBs is depicted in Fig. 16.19. The goal is to set all currents $\\mathrm{I}_{\\mathrm{di}}$ to an identical exact value, irrespective of transistor mismatches and charge injection. To achieve this high level of matching, each current source $\\mathrm{I}_{\\mathrm{di}}$ is periodically calibrated using a single reference current source, $\\mathrm{I}_{\\mathrm{ref}}$, via the shift register. In essence, once $\\mathrm{I}_{\\mathrm{d} 1}$ is calibrated, the same reference current, $\\mathrm{I}_{\\mathrm{ref}}$, is used to set the next current source, $\\mathrm{I}_{\\mathrm{d} 2}$, to the same value as $\\mathrm{I}_{\\mathrm{d} 1}$, and this process continues. Before delving into the calibration process, it's important to note that the values of $\\mathrm{I}_{\\mathrm{di}}$ do not need to exactly match $\\mathrm{I}_{\\mathrm{ref}}$, but they must accurately match each other. Consequently, any common errors in the calibration phase are inconsequential. Additionally, it should be noted that 64 current sources are calibrated, even though only 63 are necessary for the 6 MSBs. This extra current source is essential to ensure the D/A converter can operate continuously, even when one of the current sources is being calibrated.\n\nThe process for calibrating and utilizing one of the current sources is illustrated in Fig. 16.20, specifically for $\\mathrm{I}_{\\mathrm{dl}}$. During calibration, the current source is connected to the reference current $I_{r e f}$, with $Q_{1}$ configured in a diode-connected mode. This setup applies the necessary voltage across the parasitic $C_{g s}$ to make $I_{d 1}$ equal to $I_{r e f}$. When $S_{1}$ is opened, $I_{d 1}$ remains nearly equal to $I_{r e f}$, assuming the drain-source voltage of $Q_{1}$ remains constant and the clock feedthrough and charge injection of $S_{1}$ are minimal. During normal system operation, the gate voltage (and thus the current) is determined by the voltage stored on the parasitic capacitance, $C_{g s}$.\n\nFig. 16.19 illustrates a dynamically matching current source system for a 6 MSB DAC. It employs a shift register to control switches that route current from multiple current sources (I_d1 to I_64) to a switch network, which then interfaces with a D/A converter. The reference current I_ref is used for system calibration.\n\nFig. 16.20 shows a dynamically setting current source system for a 6 MSB DAC. It uses a shift register to control switches that route current from multiple current sources to a switch network, interfacing with a D/A converter. The reference current I_ref is utilized for calibration. The NMOS transistor Q1 controls the current flow, and the capacitor C_gs is likely used for stability or filtering purposes.\n\nKey Point: Selecting and summing current signals can enable high-speed D/A conversion. Output-impedance enhancement techniques may be necessary to ensure the currents remain constant despite variations in output voltage. Calibration is also employed to ensure matching.\n\nA significant limitation in matching the 64 current sources arises from differences in clock feedthrough and charge injection of the switches $\\mathrm{S}_{\\mathrm{i}}$. Since mismatches will always exist between different switches, the most effective approach to maintain equal current sources is to minimize the overall clock feedthrough and charge injection. These nonideal effects can be reduced by using a large capacitance $\\mathrm{C}_{\\mathrm{gs}}$ and a high bias voltage $\\mathrm{V}_{\\mathrm{GS}}$ (a large $\\mathrm{V}_{\\mathrm{GS}}$ implies that any voltage difference will result in a smaller percentage current deviation). To meet these requirements, a current source of $0.9 \\mathrm{I}_{\\text {ref }}$ was added in parallel to $\\mathrm{Q}_{1}$, so that $\\mathrm{Q}_{1}$ only needs to source a current close to $0.1 \\mathrm{I}_{\\mathrm{ref}}$. With this configuration, a large, low-transconductance device can be used (e.g., a $\\mathrm{W} / \\mathrm{L}=1 / 8$ device).\n\nFinally, each current source must be recalibrated before leakage currents (on the order of $10 \\mathrm{pA} / \\mu \\mathrm{m}^{2}$ of junction area) on $\\mathrm{C}_{\\mathrm{gs}}$ cause the current source to deviate by 0.5 LSB. Fortunately, having a large $\\mathrm{C}_{\\mathrm{GS}}$ and $\\mathrm{V}_{\\mathrm{GS}}$ extends this calibration interval (every 1.7 ms in [Schouwenaars, 1988]).\n\nAdditional details are provided in [Schouwenaars, 1988]. For instance, during calibration, a p-channel-input common-gate amplifier is added to the diode-connected loop. This is commonly done in dynamic switched-current circuits to control the drain-source voltage of $Q_{1}$ (keeping it constant regardless of the actual current and matching it to its value during regular use) and to accelerate the circuit by reducing the impact of parasitic capacitances on the large $I_{\\text {ref }}$ bus. Furthermore, dummy switches are connected to $S_{1}$ to help minimize clock feedthrough by partially canceling the injected charge."
},
{
    "text": "There are various methods to integrate tapped resistor strings with switched-capacitor techniques. In one method, an SC binary-weighted D/A converter links its capacitors to neighboring nodes of a resistor-string D/A converter, as depicted in Fig. 16.21 [Yang, 1989]. In this setup, the top 7 bits select which voltage pair across a single resistor is routed to the 8-bit capacitor array. For instance, if the top 7 bits are 0000001, switches $S_{1}$ and $S_{2}$ close, while the remaining $S_{i}$ switches stay open. The capacitor array then executes an 8-bit interpolation between the voltage pair by attaching capacitors linked to a 1 to the higher voltage and those linked to a 0 to the lower voltage. This technique ensures monotonicity, provided the capacitor array's accuracy is at least 8 bits. The converter described in [Yang, 1989] achieves 15-bit monotonicity without trimming and supports 100-kHz sampling frequencies for a low-power consumption of $10-\\mathrm{mW}$."
},
{
    "text": "It is feasible to merge tapped resistor strings with switched-capacitor methods in various configurations. One method involves an SC binary-weighted D/A converter, where its capacitors are linked to neighboring nodes of a resistor-string D/A converter, as depicted in Fig. 16.21 [Yang, 1989]. In this setup, the top 7 bits dictate which voltage pair across a single resistor is transmitted to the 8-bit capacitor array. For instance, if the top 7 bits are 0000001, switches $S_{1}$ and $S_{2}$ close, while the remaining $S_{i}$ switches stay open. The capacitor array then executes an 8-bit interpolation between the voltage pair by attaching capacitors corresponding to a 1 to the higher voltage and those corresponding to a 0 to the lower voltage. This technique ensures monotonicity, provided the capacitor array is precise to at least 8 bits. The converter described in [Yang, 1989] achieves 15-bit monotonicity without trimming and supports 100-kHz sampling frequencies for a low-power consumption of $10-\\mathrm{mW}$."
},
{
    "text": "It is feasible to integrate tapped resistor strings with switched-capacitor methods in various configurations. One method involves an SC binary-weighted D/A converter, where the capacitors are linked to neighboring nodes of a resistor-string D/A converter, as depicted in Fig. 16.21 [Yang, 1989]. In this setup, the top 7 bits select which voltage pair across a single resistor is transmitted to the 8-bit capacitor array. For instance, if the top 7 bits are 0000001, switches $S_{1}$ and $S_{2}$ close, while the remaining $S_{i}$ switches stay open. The capacitor array then executes an 8-bit interpolation between the voltage pair by connecting capacitors corresponding to a 1 to the higher voltage and those corresponding to a 0 to the lower voltage. This method ensures monotonicity, provided the capacitor array is precise to 8 bits. The converter described in [Yang, 1989] achieves 15-bit monotonicity without trimming and supports 100-kHz sampling frequencies, enabling a low-power consumption of $10-\\mathrm{mW}$."
},
{
    "text": "There are multiple methods to integrate tapped resistor strings with switched-capacitor techniques. In one method, an SC binary-weighted D/A converter links its capacitors to neighboring nodes of a resistor-string D/A converter, as depicted in Fig. 16.21 [Yang, 1989]. In this setup, the top 7 bits select which voltage pair across a single resistor is routed to the 8-bit capacitor array. For instance, if the top 7 bits are 0000001, switches $S_{1}$ and $S_{2}$ close, while the remaining $S_{i}$ switches stay open. The capacitor array then executes an 8-bit interpolation between the voltage pair by attaching capacitors corresponding to a 1 to the higher voltage and those corresponding to a 0 to the lower voltage. This method ensures monotonicity, provided the capacitor array is precise to 8 bits. The converter in [Yang, 1989] achieves 15-bit monotonicity without trimming and supports 100-kHz sampling frequencies for a low-power 10-mW implementation."
},
{
    "text": "Various methods exist for integrating tapped resistor strings with switched-capacitor techniques. One such method involves an SC binary-weighted D/A converter, where the capacitors are linked to neighboring nodes of a resistor-string D/A converter, as depicted in Fig. 16.21 [Yang, 1989]. In this setup, the upper 7 bits select which voltage pair across a single resistor is transmitted to the 8-bit capacitor array. For instance, if the top 7 bits are 0000001, switches $S_{1}$ and $S_{2}$ close, while the remaining $S_{i}$ switches stay open. The capacitor array then executes an 8-bit interpolation between the voltage pair by attaching capacitors corresponding to a 1 to the higher voltage and those corresponding to a 0 to the lower voltage. This method ensures monotonicity, provided the capacitor array's accuracy is at least 8 bits. The converter described in [Yang, 1989] achieves 15-bit monotonicity without trimming and supports 100-kHz sampling frequencies, enabling a low-power consumption of $10-\\mathrm{mW}$."
},
{
    "text": "It is feasible to integrate tapped resistor strings with switched-capacitor methods in various configurations. One method involves an SC binary-weighted D/A converter, where its capacitors are linked to neighboring nodes of a resistor-string D/A converter, as depicted in Fig. 16.21 [Yang, 1989]. In this setup, the top 7 bits dictate which voltage pair across a single resistor is transmitted to the 8-bit capacitor array. For instance, if the top 7 bits are 0000001, switches $S_{1}$ and $S_{2}$ close, while the remaining $S_{i}$ switches stay open. The capacitor array then executes an 8-bit interpolation between the voltage pair by connecting capacitors corresponding to a 1 to the higher voltage and those corresponding to a 0 to the lower voltage. This method ensures monotonicity, provided the capacitor array is precise to at least 8 bits. The converter described in [Yang, 1989] achieves 15-bit monotonicity without trimming and operates at 100-kHz sampling frequencies, enabling a low-power consumption of $10-\\mathrm{mW}$."
},
{
    "text": "It is feasible to merge tapped resistor strings with switched-capacitor methods in various configurations. One method involves an SC binary-weighted D/A converter, where the capacitors are linked to neighboring nodes of a resistor-string D/A converter, as depicted in Fig. 16.21 [Yang, 1989]. In this setup, the upper 7 bits select which voltage pair across a single resistor is transmitted to the 8-bit capacitor array. For instance, if the top 7 bits are 0000001, switches $S_{1}$ and $S_{2}$ close, while the remaining $S_{i}$ switches stay open. The capacitor array then executes an 8-bit interpolation between the voltage pair by attaching capacitors corresponding to a 1 to the higher voltage and those corresponding to a 0 to the lower voltage. This method ensures monotonicity, provided the capacitor array is precise to 8 bits. The converter in [Yang, 1989] achieves 15-bit monotonicity without trimming and supports 100-kHz sampling frequencies for a low-power 10-mW implementation."
},
{
    "text": "It is feasible to merge tapped resistor strings with switched-capacitor methods in various configurations. One method involves an SC binary-weighted D/A converter, where the capacitors are linked to neighboring nodes of a resistor-string D/A converter, as depicted in Fig. 16.21 [Yang, 1989]. In this setup, the top 7 bits dictate which voltage pair across a single resistor is transmitted to the 8-bit capacitor array. For instance, if the top 7 bits are 0000001, switches $S_{1}$ and $S_{2}$ close, while the remaining $S_{i}$ switches stay open. The capacitor array then executes an 8-bit interpolation between the voltage pair by attaching capacitors corresponding to a 1 to the higher voltage and those corresponding to a 0 to the lower voltage. This method ensures monotonicity, provided the capacitor array is precise to at least 8 bits. The converter described in [Yang, 1989] achieves 15-bit monotonicity without trimming and supports 100-kHz sampling frequencies for a low-power consumption of $10-\\mathrm{mW}$."
},
{
    "text": "The segmented D/A converter stands as a widely recognized hybrid converter [Schoeff, 1979; Grebene, 1984; Schouwenaars, 1988]. Figure 16.22 illustrates a 6-bit segmented D/A converter. In this methodology, the two most significant bit (MSB) currents are\nimage_name:Fig. 16.21\ndescription:This circuit represents a 15-bit resistor-capacitor hybrid D/A converter. It incorporates resistors, capacitors, and switches to transform digital signals into analog outputs. The diagram also depicts the timing signals \\( \\phi_1 \\) and \\( \\phi_2 \\) for switch control.\nimage_name:\ndescription:The schematic portrays a resistor-capacitor hybrid D/A converter. It includes resistors, capacitors, switches, and an operational amplifier for digital-to-analog conversion.\n\n**Type of Diagram:**\n- Schematic of a digital-to-analog converter (DAC).\n\n**Components and Connections:**\n- **Resistors (R1 to R128):** These are arranged in series, with switches (S0 to S128) connected across them to manage the current path.\n- **Capacitors (CAO, CA7, CAB, CB, CC):** These are utilized for charge storage and transfer. Capacitor values are expressed as multiples of a unit capacitance C (e.g., CAO = C, CA7 = 64C, CAB = 128C, CB = 256C, CC = 256C).\n- **Switches (S0 to S128):** These are regulated by clock phases (φ1, φ2, φA0, φA7, φA8, φB0, φB7, φB8) to direct current and charge.\n- **Operational Amplifier:** The output from the capacitive network is fed into an op-amp to generate the analog output voltage (V_out).\n\n**Clock Phases:**\n- The diagram incorporates timing signals (φ1, φ2) that manage the switches, ensuring accurate sequencing of charge transfer.\n- Additional clock phases (φAi, φBi) are depicted, which likely govern specific sections of the conversion process.\n\n**Bit Segmentation:**\n- The converter is divided into two segments: a 7-bit segment and an 8-bit segment, as indicated by the arrows at the diagram's bottom. This segmentation aids in reducing glitches and enhancing monotonicity.\n\n**Overall Functionality:**\n- The converter employs a combination of a resistor ladder network and capacitive charge redistribution for digital-to-analog conversion.\n- The segmentation and application of thermometer coding for MSB currents help reduce glitches, thereby improving the converter's performance.\n\n**Key Features:**\n- The utilization of multiple clock phases suggests a pipelined or sequential operation, essential for precise timing of the conversion process.\n- The schematic highlights the necessity of precise control over switching and charge redistribution for accurate conversion.\n\nFig. 16.21 An example of a 15-bit resistor-capacitor hybrid D/A converter.\nderived from a single segment comprising three equal current sources using thermometer coding. The high bits are directed to the output, while the low bits are connected to ground. As detailed in Section 16.3, employing a thermometer code for the MSB currents significantly reduces glitches. For the four least significant bits (LSBs), an additional current source from the MSB segment is rerouted, where it is split into binary-weighted currents, which are then switched to either ground or the output. Although this four-LSB segment is not guaranteed to be monotonic, its precision requirements are minimal, as it is solely used for the LSBs.\nimage_name:Fig. 16.22 A 6-bit segmented D/A converter\ndescription:The circuit depicts a 6-bit segmented D/A converter. It employs thermometer code for the 2 MSBs and a binary-weighted current divider for the 4 LSBs. OpAmp1 supplies a reference voltage Vref, and OpAmp2 buffers the output voltage Vout. The resistors form a ladder network to appropriately divide the current for digital-to-analog conversion.\n\nFig. 16.22 A 6-bit segmented D/A converter."
},
{
    "text": "The segmented D/A converter stands as a widely-used example of a hybrid converter [Schoeff, 1979; Grebene, 1984; Schouwenaars, 1988]. Figure 16.22 illustrates a 6-bit segmented D/A converter. In this method, the two MSB currents are\nimage_name:Fig. 16.21\ndescription:This circuit represents a 15-bit resistor-capacitor hybrid D/A converter, employing resistors, capacitors, and switches to convert digital signals into analog outputs. The diagram also displays timing signals \\( \\phi_1 \\) and \\( \\phi_2 \\) for switch control.\nimage_name:\ndescription:The schematic depicts a resistor-capacitor hybrid D/A converter, incorporating resistors, capacitors, switches, and an operational amplifier for digital-to-analog conversion.\n\n**Type of Diagram:**\n- Schematic of a digital-to-analog converter (DAC).\n\n**Components and Connections:**\n- **Resistors (R1 to R128):** These are arranged in series, with switches (S0 to S128) connected across them to manage the current path.\n- **Capacitors (CAO, CA7, CAB, CB, CC):** These are utilized for charge storage and transfer. Capacitor values are specified as multiples of a unit capacitance C (e.g., CAO = C, CA7 = 64C, CAB = 128C, CB = 256C, CC = 256C).\n- **Switches (S0 to S128):** These are governed by clock phases (φ1, φ2, φA0, φA7, φA8, φB0, φB7, φB8) to direct current and charge.\n- **Operational Amplifier:** The output from the capacitive network is fed into an op-amp to generate the analog output voltage (V_out).\n\n**Clock Phases:**\n- The diagram includes timing signals (φ1, φ2) that manage the switches, ensuring accurate sequencing of charge transfer.\n- Additional clock phases (φAi, φBi) are depicted, likely controlling specific parts of the conversion process.\n\n**Bit Segmentation:**\n- The converter is divided into two sections: a 7-bit segment and an 8-bit segment, as indicated by the arrows at the diagram's bottom. This segmentation aids in reducing glitches and improving monotonicity.\n\n**Overall Functionality:**\n- The converter employs a combination of a resistor ladder network and capacitive charge redistribution for digital-to-analog conversion.\n- The segmentation and use of thermometer coding for MSB currents help minimize glitches, enhancing the converter's performance.\n\n**Key Features:**\n- The employment of multiple clock phases suggests a pipelined or sequential operation, essential for precise timing of the conversion process.\n- The schematic highlights the necessity of precise control over switching and charge redistribution for accurate conversion.\n\nFig. 16.21 An example of a 15-bit resistor-capacitor hybrid D/A converter.\nderived from one segment using three equal current sources with thermometer coding. High bits are directed to the output, while low bits are connected to ground. As detailed in Section 16.3, employing a thermometer code for the MSB currents significantly reduces glitches. For the four LSBs, an additional current source from the MSB segment is rerouted, where it is split into binary-weighted currents, which are then switched to either ground or the output. Although this four-LSB segment is not assured to be monotonic, its accuracy requirements are relatively lenient, as it is solely used for the LSBs.\nimage_name:Fig. 16.22 A 6-bit segmented D/A converter\ndescription:The circuit illustrates a 6-bit segmented D/A converter. It utilizes a combination of thermometer code for the 2 MSBs and a binary-weighted current divider for the 4 LSBs. OpAmp1 supplies a reference voltage Vref, and OpAmp2 buffers the output voltage Vout. The resistors form a ladder network to appropriately divide the current for digital-to-analog conversion.\n\nFig. 16.22 A 6-bit segmented D/A converter."
},
{
    "text": "The segmented D/A converter is a widely recognized hybrid converter [Schoeff, 1979; Grebene, 1984; Schouwenaars, 1988]. A 6-bit segmented D/A converter is illustrated in Fig. 16.22. In this methodology, the two MSB currents are\nimage_name:Fig. 16.21\ndescription:This circuit represents a 15-bit resistor-capacitor hybrid D/A converter. It employs a mix of resistors, capacitors, and switches to transform digital signals into analog outputs. The diagram also depicts the timing signals \\( \\phi_1 \\) and \\( \\phi_2 \\) for switch control.\nimage_name:\ndescription:The diagram is a schematic of a resistor-capacitor hybrid D/A converter. It includes resistors, capacitors, switches, and an operational amplifier to facilitate digital-to-analog conversion.\n\n**Type of Diagram:**\n- Schematic of a digital-to-analog converter (DAC).\n\n**Components and Connections:**\n- **Resistors (R1 to R128):** These are arranged in series, with switches (S0 to S128) connected across them to manage the current path.\n- **Capacitors (CAO, CA7, CAB, CB, CC):** These are utilized for charge storage and transfer. Capacitor values are specified as multiples of a unit capacitance C (e.g., CAO = C, CA7 = 64C, CAB = 128C, CB = 256C, CC = 256C).\n- **Switches (S0 to S128):** These are regulated by clock phases (φ1, φ2, φA0, φA7, φA8, φB0, φB7, φB8) to direct current and charge.\n- **Operational Amplifier:** The output from the capacitive network is fed into an op-amp to generate the analog output voltage (V_out).\n\n**Clock Phases:**\n- The diagram incorporates timing signals (φ1, φ2) that manage the switches, ensuring correct sequencing of charge transfer.\n- Additional clock phases (φAi, φBi) are depicted, which likely control specific sections of the conversion process.\n\n**Bit Segmentation:**\n- The converter is divided into two sections: a 7-bit segment and an 8-bit segment, as indicated by the arrows at the bottom of the diagram. This division aids in reducing glitches and improving monotonicity.\n\n**Overall Functionality:**\n- The converter leverages a combination of a resistor ladder network and capacitive charge redistribution to execute digital-to-analog conversion.\n- The segmentation and application of thermometer coding for MSB currents help reduce glitches, thereby enhancing converter performance.\n\n**Key Features:**\n- The utilization of multiple clock phases suggests a pipelined or sequential operation, essential for precise timing of the conversion process.\n- The schematic highlights the necessity of accurate control over switching and charge redistribution to achieve precise conversion.\n\nFig. 16.21 An example of a 15-bit resistor-capacitor hybrid D/A converter.\nderived from one segment using three equal current sources with thermometer coding. High bits are directed to the output, while low bits are sent to ground. As detailed in Section 16.3, employing a thermometer code for the MSB currents significantly reduces glitches. For the four LSBs, an additional current source from the MSB segment is rerouted, where it is split into binary-weighted currents, which are also switched to either ground or the output. Although this four-LSB segment is not guaranteed to be monotonic, its accuracy requirements are less stringent, as it is used solely for the LSBs.\nimage_name:Fig. 16.22 A 6-bit segmented D/A converter\ndescription:The circuit depicts a 6-bit segmented D/A converter. It utilizes thermometer code for the 2 MSBs and a binary-weighted current divider for the 4 LSBs. OpAmp1 supplies a reference voltage Vref, and OpAmp2 buffers the output voltage Vout. The resistors form a ladder network to appropriately divide the current for digital-to-analog conversion.\n\nFig. 16.22 A 6-bit segmented D/A converter."
},
{
    "text": "The segmented D/A converter is a widely recognized example of a hybrid converter [Schoeff, 1979; Grebene, 1984; Schouwenaars, 1988]. A 6-bit segmented D/A converter is illustrated in Fig. 16.22. In this method, the two MSB currents are\nimage_name:Fig. 16.21\ndescription:This circuit represents a 15-bit resistor-capacitor hybrid D/A converter. It employs a mix of resistors, capacitors, and switches to convert digital signals into analog outputs. The diagram also depicts the timing signals \\( \\phi_1 \\) and \\( \\phi_2 \\) for switch control.\nimage_name:\ndescription:The diagram presents a schematic of a resistor-capacitor hybrid D/A converter. It includes resistors, capacitors, switches, and an operational amplifier for digital-to-analog conversion.\n\n**Type of Diagram:**\n- Schematic of a digital-to-analog converter (DAC).\n\n**Components and Connections:**\n- **Resistors (R1 to R128):** These are arranged in series, with switches (S0 to S128) connected across them to manage the current path.\n- **Capacitors (CAO, CA7, CAB, CB, CC):** These are utilized for charge storage and transfer. Capacitor values are specified as multiples of a unit capacitance C (e.g., CAO = C, CA7 = 64C, CAB = 128C, CB = 256C, CC = 256C).\n- **Switches (S0 to S128):** These are regulated by clock phases (φ1, φ2, φA0, φA7, φA8, φB0, φB7, φB8) to direct current and charge.\n- **Operational Amplifier:** The output from the capacitive network is fed into an op-amp to generate the analog output voltage (V_out).\n\n**Clock Phases:**\n- The diagram incorporates timing signals (φ1, φ2) that manage the switches, ensuring correct sequencing of charge transfer.\n- Additional clock phases (φAi, φBi) are displayed, which likely control specific sections of the conversion process.\n\n**Bit Segmentation:**\n- The converter is divided into two sections: a 7-bit segment and an 8-bit segment, as indicated by the arrows at the diagram's bottom. This division aids in reducing glitches and improving monotonicity.\n\n**Overall Functionality:**\n- The converter employs a combination of a resistor ladder network and capacitive charge redistribution for digital-to-analog conversion.\n- The segmentation and application of thermometer coding for MSB currents help minimize glitches, enhancing converter performance.\n\n**Key Features:**\n- The use of multiple clock phases suggests a pipelined or sequential operation, essential for accurate timing of the conversion process.\n- The schematic highlights the necessity of precise control over switching and charge redistribution for accurate conversion.\n\nFig. 16.21 An example of a 15-bit resistor-capacitor hybrid D/A converter.\nderived from one segment using three equal current sources with thermometer coding. High bits are directed to the output, while low bits are routed to ground. As detailed in Section 16.3, employing a thermometer code for the MSB currents significantly reduces glitches. For the four LSBs, an additional current source from the MSB segment is diverted, where it is split into binary-weighted currents, which are also switched to either ground or the output. Although this four-LSB segment is not guaranteed to be monotonic, its accuracy requirements are less stringent, as it is used solely for the LSBs.\nimage_name:Fig. 16.22 A 6-bit segmented D/A converter\ndescription:The circuit depicts a 6-bit segmented D/A converter. It utilizes thermometer code for the 2 MSBs and a binary-weighted current divider for the 4 LSBs. OpAmp1 supplies a reference voltage Vref, and OpAmp2 buffers the output voltage Vout. The resistors form a ladder network to appropriately divide the current for digital-to-analog conversion.\n\nFig. 16.22 A 6-bit segmented D/A converter."
},
{
    "text": "The segmented D/A converter is a widely recognized example of a hybrid converter [Schoeff, 1979; Grebene, 1984; Schouwenaars, 1988]. A 6-bit segmented D/A converter is illustrated in Fig. 16.22. In this method, the two MSB currents are\nimage_name:Fig. 16.21\ndescription:This circuit represents a 15-bit resistor-capacitor hybrid D/A converter, utilizing a mix of resistors, capacitors, and switches to convert digital signals into analog outputs. The diagram also depicts the timing signals \\( \\phi_1 \\) and \\( \\phi_2 \\) for switch control.\nimage_name:\ndescription:The schematic depicts a resistor-capacitor hybrid D/A converter, incorporating resistors, capacitors, switches, and an operational amplifier for digital-to-analog conversion.\n\n**Type of Diagram:**\n- Schematic of a digital-to-analog converter (DAC).\n\n**Components and Connections:**\n- **Resistors (R1 to R128):** These are arranged in series, with switches (S0 to S128) connected across them to manage the current path.\n- **Capacitors (CAO, CA7, CAB, CB, CC):** These are used for charge storage and transfer. Capacitor values are specified as multiples of a unit capacitance C (e.g., CAO = C, CA7 = 64C, CAB = 128C, CB = 256C, CC = 256C).\n- **Switches (S0 to S128):** These are governed by clock phases (φ1, φ2, φA0, φA7, φA8, φB0, φB7, φB8) to route current and charge.\n- **Operational Amplifier:** The output from the capacitive network is fed into an op-amp to generate the analog output voltage (V_out).\n\n**Clock Phases:**\n- The diagram includes timing signals (φ1, φ2) that manage the switches, ensuring proper sequence of charge transfer.\n- Additional clock phases (φAi, φBi) are depicted, likely controlling specific parts of the conversion process.\n\n**Bit Segmentation:**\n- The converter is divided into two sections: a 7-bit segment and an 8-bit segment, as indicated by arrows at the diagram's bottom. This division helps reduce glitches and improve monotonicity.\n\n**Overall Functionality:**\n- The converter employs a combination of a resistor ladder network and capacitive charge redistribution for digital-to-analog conversion.\n- The segmentation and use of thermometer coding for MSB currents help minimize glitches, enhancing performance.\n\n**Key Features:**\n- The utilization of multiple clock phases suggests a pipelined or sequential operation, essential for accurate timing of the conversion process.\n- The schematic highlights the importance of precise control over switching and charge redistribution for accurate conversion.\n\nFig. 16.21 An example of a 15-bit resistor-capacitor hybrid D/A converter.\nderived from three equal current sources in one segment using thermometer coding. High bits are directed to the output, while low bits are switched to ground. As discussed in Section 16.3, employing a thermometer code for the MSB currents significantly reduces glitches. For the four LSBs, an additional current source from the MSB segment is diverted and divided into binary-weighted currents, which are then switched to either ground or the output. Although this four-LSB segment is not guaranteed to be monotonic, its accuracy requirements are minimal, as it is used solely for the LSBs.\nimage_name:Fig. 16.22 A 6-bit segmented D/A converter\ndescription:The circuit is a 6-bit segmented D/A converter. It employs a combination of thermometer code for the 2 MSBs and a binary-weighted current divider for the 4 LSBs. OpAmp1 provides a reference voltage Vref, and OpAmp2 buffers the output voltage Vout. The resistors form a ladder network to appropriately divide the current for digital-to-analog conversion.\n\nFig. 16.22 A 6-bit segmented D/A converter."
},
{
    "text": "The segmented D/A converter is a widely-used example of a hybrid converter [Schoeff, 1979; Grebene, 1984; Schouwenaars, 1988]. A 6-bit segmented D/A converter is illustrated in Fig. 16.22. In this method, the two MSB currents are\nimage_name:Fig. 16.21\ndescription:This circuit represents a 15-bit resistor-capacitor hybrid D/A converter. It employs a mix of resistors, capacitors, and switches to transform digital signals into analog outputs. The diagram also displays the timing signals \\( \\phi_1 \\) and \\( \\phi_2 \\) for switch control.\nimage_name:\ndescription:The diagram is a schematic of a resistor-capacitor hybrid D/A converter. It includes resistors, capacitors, switches, and an operational amplifier for digital-to-analog conversion.\n\n**Type of Diagram:**\n- Schematic of a digital-to-analog converter (DAC).\n\n**Components and Connections:**\n- **Resistors (R1 to R128):** These are arranged in series, with switches (S0 to S128) connected across them to manage the current path.\n- **Capacitors (CAO, CA7, CAB, CB, CC):** These are utilized for charge storage and transfer. Capacitor values are specified as multiples of a unit capacitance C (e.g., CAO = C, CA7 = 64C, CAB = 128C, CB = 256C, CC = 256C).\n- **Switches (S0 to S128):** These are governed by clock phases (φ1, φ2, φA0, φA7, φA8, φB0, φB7, φB8) to route current and charge.\n- **Operational Amplifier:** The output from the capacitive network is fed into an op-amp to generate the analog output voltage (V_out).\n\n**Clock Phases:**\n- The diagram incorporates timing signals (φ1, φ2) that manage the switches, ensuring proper sequence of charge transfer.\n- Additional clock phases (φAi, φBi) are depicted, which likely control specific parts of the conversion process.\n\n**Bit Segmentation:**\n- The converter is divided into two sections: a 7-bit segment and an 8-bit segment, as indicated by the arrows at the diagram's bottom. This division aids in reducing glitches and improving monotonicity.\n\n**Overall Functionality:**\n- The converter employs a combination of a resistor ladder network and capacitive charge redistribution for digital-to-analog conversion.\n- The segmentation and use of thermometer coding for MSB currents help reduce glitches, enhancing the converter's performance.\n\n**Key Features:**\n- The utilization of multiple clock phases suggests a pipelined or sequential operation, essential for accurate timing of the conversion process.\n- The schematic highlights the importance of precise control over switching and charge redistribution for accurate conversion.\n\nFig. 16.21 An example of a 15-bit resistor-capacitor hybrid D/A converter.\nderived from one segment via three equal current sources using thermometer coding. High bits are directed to the output, while low bits are connected to ground. As detailed in Section 16.3, employing a thermometer code for the MSB currents significantly reduces glitches. For the four LSBs, an additional current source from the MSB segment is rerouted, where it is split into binary-weighted currents, which are also switched to either ground or the output. Although this four-LSB segment is not assured to be monotonic, its accuracy requirements are quite lenient, as it is used solely for the LSBs.\nimage_name:Fig. 16.22 A 6-bit segmented D/A converter\ndescription:The circuit depicts a 6-bit segmented D/A converter. It utilizes a combination of thermometer code for the 2 MSBs and a binary-weighted current divider for the 4 LSBs. OpAmp1 supplies a reference voltage Vref, and OpAmp2 buffers the output voltage Vout. The resistors form a ladder network to appropriately divide the current for digital-to-analog conversion.\n\nFig. 16.22 A 6-bit segmented D/A converter."
},
{
    "text": "The segmented D/A converter is a widely recognized hybrid converter [Schoeff, 1979; Grebene, 1984; Schouwenaars, 1988]. A 6-bit segmented D/A converter is depicted in Fig. 16.22. In this method, the two MSB currents are\nimage_name:Fig. 16.21\ndescription:This circuit represents a 15-bit resistor-capacitor hybrid D/A converter. It employs a mix of resistors, capacitors, and switches to transform digital signals into analog outputs. The illustration also displays the timing signals \\( \\phi_1 \\) and \\( \\phi_2 \\) for switch control.\nimage_name:\ndescription:The diagram illustrates a resistor-capacitor hybrid D/A converter schematic. It incorporates resistors, capacitors, switches, and an operational amplifier for digital-to-analog conversion.\n\n**Type of Diagram:**\n- Schematic of a digital-to-analog converter (DAC).\n\n**Components and Connections:**\n- **Resistors (R1 to R128):** These are arranged in series, with switches (S0 to S128) connected across them to manage the current path.\n- **Capacitors (CAO, CA7, CAB, CB, CC):** These are utilized for charge storage and transfer. Capacitor values are expressed as multiples of a unit capacitance C (e.g., CAO = C, CA7 = 64C, CAB = 128C, CB = 256C, CC = 256C).\n- **Switches (S0 to S128):** These are governed by clock phases (φ1, φ2, φA0, φA7, φA8, φB0, φB7, φB8) to direct current and charge.\n- **Operational Amplifier:** The output from the capacitive network is fed into an op-amp to generate the analog output voltage (V_out).\n\n**Clock Phases:**\n- The diagram includes timing signals (φ1, φ2) that manage the switches, ensuring proper charge transfer sequencing.\n- Additional clock phases (φAi, φBi) are depicted, likely controlling specific parts of the conversion process.\n\n**Bit Segmentation:**\n- The converter is divided into two sections: a 7-bit segment and an 8-bit segment, as indicated by the arrows at the diagram's bottom. This division helps reduce glitches and improve monotonicity.\n\n**Overall Functionality:**\n- The converter employs a resistor ladder network and capacitive charge redistribution for digital-to-analog conversion.\n- Segmentation and thermometer coding for MSB currents minimize glitches, enhancing performance.\n\n**Key Features:**\n- The use of multiple clock phases suggests pipelined or sequential operation, essential for accurate conversion timing.\n- The schematic highlights the need for precise control over switching and charge redistribution for accurate conversion.\n\nFig. 16.21 An example of a 15-bit resistor-capacitor hybrid D/A converter.\nderived from three equal current sources in one segment using thermometer coding. High bits are directed to the output, while low bits are sent to ground. As discussed in Section 16.3, employing a thermometer code for the MSB currents significantly reduces glitches. For the four LSBs, an additional current source from the MSB segment is rerouted and divided into binary-weighted currents, which are also switched to either ground or the output. Although this four-LSB segment is not assured to be monotonic, its accuracy requirements are minimal, as it is used solely for the LSBs.\nimage_name:Fig. 16.22 A 6-bit segmented D/A converter\ndescription:The circuit is a 6-bit segmented D/A converter. It combines thermometer code for the 2 MSBs with a binary-weighted current divider for the 4 LSBs. OpAmp1 supplies a reference voltage Vref, and OpAmp2 buffers the output voltage Vout. The resistors form a ladder network to appropriately divide the current for digital-to-analog conversion.\n\nFig. 16.22 A 6-bit segmented D/A converter."
},
{
    "text": "The segmented D/A converter is a widely-used hybrid converter [Schoeff, 1979; Grebene, 1984; Schouwenaars, 1988]. A 6-bit segmented D/A converter is depicted in Fig. 16.22. In this method, the two MSB currents are\nimage_name:Fig. 16.21\ndescription:This circuit represents a 15-bit resistor-capacitor hybrid D/A converter. It employs a mix of resistors, capacitors, and switches to transform digital signals into analog outputs. The diagram also illustrates the timing signals \\( \\phi_1 \\) and \\( \\phi_2 \\) for switch control.\nimage_name:\ndescription:The diagram presents a schematic of a resistor-capacitor hybrid D/A converter. It includes resistors, capacitors, switches, and an operational amplifier for digital-to-analog conversion.\n\n**Type of Diagram:**\n- Schematic of a digital-to-analog converter (DAC).\n\n**Components and Connections:**\n- **Resistors (R1 to R128):** These are arranged in series, with switches (S0 to S128) connected across them to manage the current path.\n- **Capacitors (CAO, CA7, CAB, CB, CC):** These are utilized for charge storage and transfer. Capacitor values are expressed as multiples of a unit capacitance C (e.g., CAO = C, CA7 = 64C, CAB = 128C, CB = 256C, CC = 256C).\n- **Switches (S0 to S128):** These are governed by clock phases (φ1, φ2, φA0, φA7, φA8, φB0, φB7, φB8) to direct current and charge.\n- **Operational Amplifier:** The output from the capacitive network is fed into an op-amp to generate the analog output voltage (V_out).\n\n**Clock Phases:**\n- The diagram incorporates timing signals (φ1, φ2) that regulate the switches, ensuring proper sequence of charge transfer.\n- Additional clock phases (φAi, φBi) are depicted, which likely manage specific parts of the conversion process.\n\n**Bit Segmentation:**\n- The converter is divided into two sections: a 7-bit segment and an 8-bit segment, as indicated by the arrows at the bottom of the diagram. This division aids in reducing glitches and improving monotonicity.\n\n**Overall Functionality:**\n- The converter employs a combination of resistor ladder network and capacitive charge redistribution for digital-to-analog conversion.\n- The segmentation and application of thermometer coding for MSB currents help reduce glitches, thereby enhancing converter performance.\n\n**Key Features:**\n- The utilization of multiple clock phases suggests a pipelined or sequential operation, essential for accurate timing of the conversion process.\n- The schematic highlights the necessity of precise control over switching and charge redistribution for accurate conversion.\n\nFig. 16.21 An example of a 15-bit resistor-capacitor hybrid D/A converter.\nderived from three equal current sources using thermometer coding in one segment. High bits are directed to the output, while low bits are routed to ground. As detailed in Section 16.3, employing a thermometer code for the MSB currents significantly reduces glitches. For the four LSBs, an additional current source from the MSB segment is diverted and split into binary-weighted currents, which are then switched to either ground or the output. Although this four-LSB segment is not assured to be monotonic, its accuracy requirements are minimal, as it is only used for the LSBs.\nimage_name:Fig. 16.22 A 6-bit segmented D/A converter\ndescription:The circuit illustrates a 6-bit segmented D/A converter. It combines thermometer code for the 2 MSBs and a binary-weighted current divider for the 4 LSBs. OpAmp1 supplies a reference voltage Vref, and OpAmp2 buffers the output voltage Vout. The resistors form a ladder network to appropriately divide the current for digital-to-analog conversion.\n\nFig. 16.22 A 6-bit segmented D/A converter."
},
{
    "text": "- Decoder-based D/A converters function by generating a series of analog reference levels and choosing one via the activation of specific switches dictated by an input digital code. [p. 623]\n- Binary-scaled D/A converters integrate binary-weighted circuit elements (such as currents, resistors, capacitors, etc.) under digital control to produce an analog value. These methods are typically hardware-efficient but can experience notable nonlinearities. [p. 628]\n- R-2R ladder D/A converters generate binary-weighted currents without requiring a full set of binary-weighted resistors. Instead, they need only 2:1 component ratios, which significantly reduces costs for high-resolution converters. [p. 631]\n- Charge-redistribution switched-capacitor D/A converters sample a fixed reference voltage onto a binary-weighted capacitor array, with the effective capacitance determined by the input digital code. The captured charge is then transferred to a switched-capacitor gain stage to create the analog output voltage. [p. 632]\n- Thermometer-code converters use an array of $2 \\mathrm{~N}-1$ identical unitary signal elements. A digital thermometer code selects the requisite number of these unitary signals, summing them to yield an analog output that ensures monotonicity and offers superior static linearity compared to binary-weighted converters. [p. 634]\n- The process of selecting and summing current signals can facilitate high-speed D/A conversion. Techniques to enhance output impedance may be necessary to maintain constant currents despite variations in output voltage. Calibration can also be employed to ensure proper matching. [p. 640]\n- A hybrid converter merges various D/A architectures to implement different segments of the converter design. [p. 640]"
},
{
    "text": "- Decoder-driven D/A converters function by establishing a range of analog reference levels and choosing one via the activation of specific switches dictated by an input digital code. [p. 623]\n- Binary-scaled D/A converters integrate circuit elements with binary-weighted values (such as currents, resistors, capacitors, etc.) under digital supervision to generate an analog output. These methods are typically hardware-efficient but can experience notable nonlinearities. [p. 628]\n- R-2R ladder D/A converters generate binary-weighted currents without requiring a full set of binary-weighted resistors. Instead, they necessitate only 2:1 component ratios, offering substantial savings for high-resolution devices. [p. 631]\n- Charge-redistribution switched-capacitor D/A converters capture a fixed reference voltage on a binary-weighted capacitor array, with the effective capacitance governed by the input digital code. The captured charge is then utilized in a switched-capacitor gain stage to produce the analog output voltage. [p. 632]\n- Thermometer-code converters utilize an array of $2 \\mathrm{~N}-1$ uniform, equally-sized signal elements. A digital thermometer code picks the correct number of these elements, summing them to create the analog output, ensuring monotonic behavior and superior static linearity compared to binary-weighted converters. [p. 634]\n- The process of selecting and summing current signals can facilitate high-speed D/A conversion. Techniques to enhance output impedance may be necessary to maintain constant currents despite output voltage variations. Calibration can also be employed to ensure precise matching. [p. 640]\n- A hybrid converter merges various D/A architectures to implement different sections of the converter design. [p. 640]"
},
{
    "text": "- Decoder-based D/A converters function by generating a series of analog reference levels and choosing one via the activation of specific switches dictated by an input digital code. [p. 623]\n- Binary-scaled D/A converters integrate binary-weighted circuit elements (such as currents, resistors, capacitors, etc.) under digital control to produce an analog value. These methods are typically hardware-efficient but can exhibit notable nonlinearities. [p. 628]\n- R-2R ladder D/A converters generate binary-weighted currents without requiring a full set of binary-weighted resistors. Instead, they necessitate only 2:1 component ratios, which significantly reduces costs for high-resolution converters. [p. 631]\n- Charge-redistribution switched-capacitor D/A converters sample a fixed reference voltage onto a binary-weighted capacitor array, with the effective capacitance governed by the input digital code. The captured charge is then transferred to a switched-capacitor gain stage to yield the analog output voltage. [p. 632]\n- Thermometer-code converters utilize an array of $2 \\mathrm{~N}-1$ identical, equally-sized signal units. A digital thermometer code selects the requisite number of these units, summing them to create the analog output, ensuring monotonicity and superior static linearity compared to binary-weighted converters. [p. 634]\n- The process of selecting and summing current signals can facilitate high-speed D/A conversion. Techniques to enhance output impedance may be necessary to maintain constant currents despite variations in output voltage. Calibration can also be employed to ensure precise matching. [p. 640]\n- A hybrid converter merges various D/A architectures to implement different segments of the converter design. [p. 640]"
},
{
    "text": "- Decoder-based D/A converters function by generating a series of analog reference levels and choosing one by activating specific switches dictated by an input digital code. [p. 623]\n- Binary-scaled D/A converters integrate binary-weighted circuit elements (such as currents, resistors, capacitors, etc.) under digital control to produce an analog value. These methods are typically hardware-efficient but can exhibit notable nonlinearities. [p. 628]\n- R-2R ladder D/A converters generate binary-weighted currents without requiring a full array of binary-weighted resistors. Instead, they necessitate only 2:1 component ratios, which significantly reduces costs for high-resolution converters. [p. 631]\n- Charge-redistribution switched-capacitor D/A converters sample a fixed reference voltage onto a binary-weighted capacitor array, with the effective capacitance determined by the input digital code. The captured charge is then transferred to a switched-capacitor gain stage to generate the analog output voltage. [p. 632]\n- Thermometer-code converters utilize an array of $2 \\mathrm{~N}-1$ identical unitary signal quantities. A digital thermometer code selects the requisite number of these unitary signal quantities, summing them to create the analog output, ensuring monotonicity and superior static linearity compared to binary-weighted converters. [p. 634]\n- The process of selecting and summing current signals can facilitate high-speed D/A conversion. Techniques to enhance output impedance may be necessary to maintain constant currents despite variations in output voltage. Calibration can also be employed to ensure precise matching. [p. 640]\n- A hybrid converter merges various D/A architectures to implement different sections of the converter design. [p. 640]"
},
{
    "text": "- Decoder-based D/A converters function by generating a series of analog reference levels and choosing one by activating specific switches determined by the input digital code. [p. 623]\n- Binary-scaled D/A converters integrate binary-weighted circuit elements (such as currents, resistors, capacitors, etc.) under digital control to produce an analog value. These methods are typically hardware-efficient but can experience notable nonlinearities. [p. 628]\n- R-2R ladder D/A converters generate binary-weighted currents without requiring a full set of binary-weighted resistors. Instead, only 2:1 component ratios are necessary, offering substantial savings for high-resolution converters. [p. 631]\n- Charge-redistribution switched-capacitor D/A converters sample a fixed reference voltage onto a binary-weighted capacitor array, whose effective capacitance is dictated by the input digital code. The captured charge is then transferred to a switched-capacitor gain stage to create the analog output voltage. [p. 632]\n- Thermometer-code converters utilize an array of $2 \\mathrm{~N}-1$ identical unitary signal elements. A digital thermometer code selects the requisite number of these unitary signal elements, summing them to yield the analog output with assured monotonicity and superior static linearity compared to binary-weighted converters. [p. 634]\n- The process of selecting and summing current signals can facilitate high-speed D/A conversion. Techniques to enhance output impedance may be necessary to maintain constant currents despite variations in output voltage. Calibration can also be employed to ensure precise matching. [p. 640]\n- A hybrid converter merges various D/A architectures to implement different segments of the converter design. [p. 640]"
},
{
    "text": "- Decoder-based D/A converters function by generating a series of analog reference levels and choosing one by activating the corresponding switches determined by an input digital code. [p. 623]\n- Binary-scaled D/A converters integrate binary-weighted circuit elements (such as currents, resistors, capacitors, etc.) under digital control to produce an analog value. These methods are typically hardware-efficient but can experience notable nonlinearities. [p. 628]\n- R-2R ladder D/A converters generate binary-weighted currents without requiring a full set of binary-weighted resistors. Instead, only 2:1 component ratios are necessary, which significantly reduces costs for high-resolution converters. [p. 631]\n- Charge-redistribution switched-capacitor D/A converters sample a fixed reference voltage onto a binary-weighted capacitor array, with the effective capacitance governed by the input digital code. The captured charge is then transferred to a switched-capacitor gain stage to generate the analog output voltage. [p. 632]\n- Thermometer-code converters utilize an array of $2 \\mathrm{~N}-1$ identical unitary signal elements. A digital thermometer code selects the requisite number of these unitary signal elements, summing them to create the analog output, ensuring monotonicity and superior static linearity compared to binary-weighted converters. [p. 634]\n- The process of selecting and summing current signals can facilitate high-speed D/A conversion. Techniques to enhance output impedance may be necessary to maintain constant currents despite variations in output voltage. Calibration can also be employed to ensure proper matching. [p. 640]\n- A hybrid converter merges various D/A architectures to implement different segments of the converter design. [p. 640]"
},
{
    "text": "- Decoder-based D/A converters function by generating a series of analog reference levels and choosing one by activating the corresponding switches determined by an input digital code. [p. 623]\n- Binary-scaled D/A converters integrate binary-weighted circuit elements (such as currents, resistors, capacitors, etc.) under digital control to produce an analog value. These methods are typically hardware-efficient but can exhibit notable nonlinearities. [p. 628]\n- R-2R ladder D/A converters generate binary-weighted currents without requiring a full array of binary-weighted resistors. Instead, they need only 2:1 component ratios, which significantly reduces costs for high-resolution converters. [p. 631]\n- Charge-redistribution switched-capacitor D/A converters sample a fixed reference voltage onto a binary-weighted capacitor array, with the effective capacitance governed by the input digital code. The captured charge is then transferred to a switched-capacitor gain stage to generate the analog output voltage. [p. 632]\n- Thermometer-code converters utilize an array of $2 \\mathrm{~N}-1$ unitary, equally-sized signal elements. A digital thermometer code selects the required number of these unitary signal elements, summing them to create the analog output, ensuring monotonicity and superior static linearity compared to binary-weighted converters. [p. 634]\n- The process of selecting and summing current signals can facilitate high-speed D/A conversion. Techniques to enhance output impedance may be necessary to maintain constant currents despite variations in output voltage. Calibration can also be employed to ensure precise matching. [p. 640]\n- A hybrid converter merges various D/A architectures to implement different sections of the converter design. [p. 640]"
},
{
    "text": "- Decoder-based D/A converters function by generating a series of analog reference levels and selecting one via the activation of corresponding switches dictated by an input digital code. [p. 623]\n- Binary-scaled D/A converters integrate binary-weighted circuit elements (such as currents, resistors, capacitors, etc.) under digital supervision to achieve an analog value. These methods are typically hardware-efficient but can exhibit substantial nonlinearities. [p. 628]\n- R-2R ladder D/A converters generate binary-weighted currents without requiring a full set of binary-weighted resistors. They necessitate only 2:1 component ratios, offering considerable savings for high-resolution converters. [p. 631]\n- Charge-redistribution switched-capacitor D/A converters sample a fixed reference voltage onto a binary-weighted capacitor array, whose effective capacitance is governed by the input digital code. The captured charge is then utilized in a switched-capacitor gain stage to produce the analog output voltage. [p. 632]\n- Thermometer-code converters utilize an array of $2 \\mathrm{~N}-1$ unitary, equally-sized signal elements. A digital thermometer code selects the requisite number of these unitary signal elements, summing them to generate the analog output with assured monotonicity and superior static linearity compared to binary-weighted converters. [p. 634]\n- The process of selecting and summing current signals can facilitate high-speed D/A conversion. Techniques to enhance output impedance may be necessary to maintain constant currents despite variations in output voltage. Calibration can also be employed to ensure precise matching. [p. 640]\n- A hybrid converter merges various D/A architectures to implement different segments of the converter design. [p. 640]"
}
]